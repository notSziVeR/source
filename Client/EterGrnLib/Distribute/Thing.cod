; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Distribute\Thing.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_Fake_alloc@std@@3U_Fake_allocator@1@B		; std::_Fake_alloc
;	COMDAT ?_Fake_alloc@std@@3U_Fake_allocator@1@B
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??_ECGrannyModel@@UAEPAXI@Z			; CGrannyModel::`vector deleting destructor'
PUBLIC	??_ECGrannyMotion@@UAEPAXI@Z			; CGrannyMotion::`vector deleting destructor'
PUBLIC	?Type@CGraphicThing@@SAKXZ			; CGraphicThing::Type
PUBLIC	??0CGraphicThing@@QAE@PBD@Z			; CGraphicThing::CGraphicThing
PUBLIC	??1CGraphicThing@@UAE@XZ			; CGraphicThing::~CGraphicThing
PUBLIC	?CreateDeviceObjects@CGraphicThing@@UAE_NXZ	; CGraphicThing::CreateDeviceObjects
PUBLIC	?DestroyDeviceObjects@CGraphicThing@@UAEXXZ	; CGraphicThing::DestroyDeviceObjects
PUBLIC	?CheckModelIndex@CGraphicThing@@QBE_NH@Z	; CGraphicThing::CheckModelIndex
PUBLIC	?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z ; CGraphicThing::GetModelPointer
PUBLIC	?GetModelCount@CGraphicThing@@QBEHXZ		; CGraphicThing::GetModelCount
PUBLIC	?CheckMotionIndex@CGraphicThing@@QBE_NH@Z	; CGraphicThing::CheckMotionIndex
PUBLIC	?GetMotionPointer@CGraphicThing@@QAEPAVCGrannyMotion@@H@Z ; CGraphicThing::GetMotionPointer
PUBLIC	?GetMotionCount@CGraphicThing@@QBEHXZ		; CGraphicThing::GetMotionCount
PUBLIC	?GetTextureCount@CGraphicThing@@QBEHXZ		; CGraphicThing::GetTextureCount
PUBLIC	?GetTexturePath@CGraphicThing@@QAEPBDH@Z	; CGraphicThing::GetTexturePath
PUBLIC	?Initialize@CGraphicThing@@IAEXXZ		; CGraphicThing::Initialize
PUBLIC	?LoadModels@CGraphicThing@@IAE_NXZ		; CGraphicThing::LoadModels
PUBLIC	?LoadMotions@CGraphicThing@@IAE_NXZ		; CGraphicThing::LoadMotions
PUBLIC	?OnLoad@CGraphicThing@@MAE_NHPBX@Z		; CGraphicThing::OnLoad
PUBLIC	?OnClear@CGraphicThing@@MAEXXZ			; CGraphicThing::OnClear
PUBLIC	?OnIsEmpty@CGraphicThing@@MBE_NXZ		; CGraphicThing::OnIsEmpty
PUBLIC	?OnIsType@CGraphicThing@@MAE_NK@Z		; CGraphicThing::OnIsType
PUBLIC	??_GCGraphicThing@@UAEPAXI@Z			; CGraphicThing::`scalar deleting destructor'
PUBLIC	?GetModelLocalPath@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; GetModelLocalPath
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CGraphicThing@@6B@				; CGraphicThing::`vftable'
PUBLIC	??_C@_0O@POMHALBA@CGraphicThing@		; `string'
PUBLIC	??_C@_0BM@CNDJBDNK@m_pgrnFileInfo?5?$DN?$DN?5NULL?3?5?$CFs?6@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGraphicThing@@6B@				; CGraphicThing::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicThing@@@8			; CGraphicThing `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicThing@@8				; CGraphicThing::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicThing@@8				; CGraphicThing::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicThing@@8			; CGraphicThing::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CResource@@8			; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCResource@@@8				; CResource `RTTI Type Descriptor'
PUBLIC	??_R3CResource@@8				; CResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CResource@@8				; CResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CReferenceObject@@8		; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCReferenceObject@@@8			; CReferenceObject `RTTI Type Descriptor'
PUBLIC	??_R3CReferenceObject@@8			; CReferenceObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CReferenceObject@@8			; CReferenceObject::`RTTI Base Class Array'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__imp__GrannyReadEntireFileFromMemory@8:PROC
EXTRN	__imp__GrannyFreeFileSection@8:PROC
EXTRN	__imp__GrannyFreeFile@4:PROC
EXTRN	__imp__GrannyGetFileInfo@4:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	?Clear@CResource@@QAEXXZ:PROC			; CResource::Clear
EXTRN	?StringToType@CResource@@SAKPBD@Z:PROC		; CResource::StringToType
EXTRN	??0CResource@@QAE@PBD@Z:PROC			; CResource::CResource
EXTRN	??1CResource@@UAE@XZ:PROC			; CResource::~CResource
EXTRN	?OnIsType@CResource@@MAE_NK@Z:PROC		; CResource::OnIsType
EXTRN	?OnConstruct@CResource@@MAEXXZ:PROC		; CResource::OnConstruct
EXTRN	?OnSelfDestruct@CResource@@MAEXXZ:PROC		; CResource::OnSelfDestruct
EXTRN	??0CGrannyModel@@QAE@XZ:PROC			; CGrannyModel::CGrannyModel
EXTRN	??1CGrannyModel@@UAE@XZ:PROC			; CGrannyModel::~CGrannyModel
EXTRN	?CreateFromGrannyModelPointer@CGrannyModel@@QAE_NPAUgranny_model@@@Z:PROC ; CGrannyModel::CreateFromGrannyModelPointer
EXTRN	?CreateDeviceObjects@CGrannyModel@@QAE_NXZ:PROC	; CGrannyModel::CreateDeviceObjects
EXTRN	?DestroyDeviceObjects@CGrannyModel@@QAEXXZ:PROC	; CGrannyModel::DestroyDeviceObjects
EXTRN	??0CGrannyMotion@@QAE@XZ:PROC			; CGrannyMotion::CGrannyMotion
EXTRN	??1CGrannyMotion@@UAE@XZ:PROC			; CGrannyMotion::~CGrannyMotion
EXTRN	?BindGrannyAnimation@CGrannyMotion@@QAE_NPAUgranny_animation@@@Z:PROC ; CGrannyMotion::BindGrannyAnimation
EXTRN	??_ECGraphicThing@@UAEPAXI@Z:PROC		; CGraphicThing::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?s_type@?1??Type@CGraphicThing@@SAKXZ@4KA
_BSS	SEGMENT
?s_type@?1??Type@CGraphicThing@@SAKXZ@4KA DD 01H DUP (?) ; `CGraphicThing::Type'::`2'::s_type
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CGraphicThing@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CGraphicThing@@SAKXZ@4HA DD 01H DUP (?)	; `CGraphicThing::Type'::`2'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
?gs_modelLocalPath$initializer$@@3P6AXXZA DD FLAT:??__Egs_modelLocalPath@@YAXXZ ; gs_modelLocalPath$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R2CReferenceObject@@8
rdata$r	SEGMENT
??_R2CReferenceObject@@8 DD FLAT:??_R1A@?0A@EA@CReferenceObject@@8 ; CReferenceObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CReferenceObject@@8
rdata$r	SEGMENT
??_R3CReferenceObject@@8 DD 00H				; CReferenceObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCReferenceObject@@@8
data$rs	SEGMENT
??_R0?AVCReferenceObject@@@8 DD FLAT:??_7type_info@@6B@	; CReferenceObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCReferenceObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CReferenceObject@@8 DD FLAT:??_R0?AVCReferenceObject@@@8 ; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CResource@@8
rdata$r	SEGMENT
??_R2CResource@@8 DD FLAT:??_R1A@?0A@EA@CResource@@8	; CResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CResource@@8
rdata$r	SEGMENT
??_R3CResource@@8 DD 00H				; CResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCResource@@@8
data$rs	SEGMENT
??_R0?AVCResource@@@8 DD FLAT:??_7type_info@@6B@	; CResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCResource@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CResource@@8 DD FLAT:??_R0?AVCResource@@@8 ; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CResource@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicThing@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicThing@@8 DD FLAT:??_R0?AVCGraphicThing@@@8 ; CGraphicThing::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicThing@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicThing@@8
rdata$r	SEGMENT
??_R2CGraphicThing@@8 DD FLAT:??_R1A@?0A@EA@CGraphicThing@@8 ; CGraphicThing::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CResource@@8
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicThing@@8
rdata$r	SEGMENT
??_R3CGraphicThing@@8 DD 00H				; CGraphicThing::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGraphicThing@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicThing@@@8
data$rs	SEGMENT
??_R0?AVCGraphicThing@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicThing `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicThing@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGraphicThing@@6B@
rdata$r	SEGMENT
??_R4CGraphicThing@@6B@ DD 00H				; CGraphicThing::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicThing@@@8
	DD	FLAT:??_R3CGraphicThing@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
_DATA	SEGMENT
?gs_modelLocalPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; gs_modelLocalPath
	DB	19 DUP(00H)
	DD	0fH
_DATA	ENDS
;	COMDAT ??_C@_0BM@CNDJBDNK@m_pgrnFileInfo?5?$DN?$DN?5NULL?3?5?$CFs?6@
CONST	SEGMENT
??_C@_0BM@CNDJBDNK@m_pgrnFileInfo?5?$DN?$DN?5NULL?3?5?$CFs?6@ DB 'm_pgrnF'
	DB	'ileInfo == NULL: %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@POMHALBA@CGraphicThing@
CONST	SEGMENT
??_C@_0O@POMHALBA@CGraphicThing@ DB 'CGraphicThing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicThing@@6B@
CONST	SEGMENT
??_7CGraphicThing@@6B@ DD FLAT:??_R4CGraphicThing@@6B@	; CGraphicThing::`vftable'
	DD	FLAT:??_ECGraphicThing@@UAEPAXI@Z
	DD	FLAT:?OnConstruct@CResource@@MAEXXZ
	DD	FLAT:?OnSelfDestruct@CResource@@MAEXXZ
	DD	FLAT:?CreateDeviceObjects@CGraphicThing@@UAE_NXZ
	DD	FLAT:?DestroyDeviceObjects@CGraphicThing@@UAEXXZ
	DD	FLAT:?OnLoad@CGraphicThing@@MAE_NHPBX@Z
	DD	FLAT:?OnClear@CGraphicThing@@MAEXXZ
	DD	FLAT:?OnIsEmpty@CGraphicThing@@MBE_NXZ
	DD	FLAT:?OnIsType@CGraphicThing@@MAE_NK@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadMotions@CGraphicThing@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotions@CGraphicThing@@IAE_NXZ$0
__ehfuncinfo$?LoadMotions@CGraphicThing@@IAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadMotions@CGraphicThing@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadModels@CGraphicThing@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadModels@CGraphicThing@@IAE_NXZ$0
__ehfuncinfo$?LoadModels@CGraphicThing@@IAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadModels@CGraphicThing@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGraphicThing@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CGraphicThing@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CGraphicThing@@SAKXZ$0
__ehfuncinfo$?Type@CGraphicThing@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CGraphicThing@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECGrannyMotion@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECGrannyModel@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?GetModelLocalPath@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?GetModelLocalPath@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; GetModelLocalPath, COMDAT

; 243  : 	return gs_modelLocalPath;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?gs_modelLocalPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A

; 244  : }

  00005	c3		 ret	 0
?GetModelLocalPath@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; GetModelLocalPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??__Fgs_modelLocalPath@@YAXXZ
text$yd	SEGMENT
??__Fgs_modelLocalPath@@YAXXZ PROC			; `dynamic atexit destructor for 'gs_modelLocalPath'', COMDAT

; 2301 :         return _BUF_SIZE <= _Myres;

  00000	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?gs_modelLocalPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+20
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  00009	72 2f		 jb	 SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gs_modelLocalPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00011	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 14		 jb	 SHORT $LN25@dynamic

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H
  00022	2b c2		 sub	 eax, edx

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	0f 87 00 00 00
	00		 ja	 __invalid_parameter_noinfo_noreturn
$LN25@dynamic:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00030	51		 push	 ecx
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00037	83 c4 08	 add	 esp, 8
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  0003a	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gs_modelLocalPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00044	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?gs_modelLocalPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+20, 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0004e	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?gs_modelLocalPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
  00055	c3		 ret	 0
??__Fgs_modelLocalPath@@YAXXZ ENDP			; `dynamic atexit destructor for 'gs_modelLocalPath''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ??__Egs_modelLocalPath@@YAXXZ
text$di	SEGMENT
??__Egs_modelLocalPath@@YAXXZ PROC			; `dynamic initializer for 'gs_modelLocalPath'', COMDAT

; 239  : static std::string gs_modelLocalPath;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fgs_modelLocalPath@@YAXXZ ; `dynamic atexit destructor for 'gs_modelLocalPath''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Egs_modelLocalPath@@YAXXZ ENDP			; `dynamic initializer for 'gs_modelLocalPath''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicThing@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicThing@@UAEPAXI@Z PROC			; CGraphicThing::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicThing@@UAE@XZ ; CGraphicThing::~CGraphicThing
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 40		 push	 64			; 00000040H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCGraphicThing@@UAEPAXI@Z ENDP			; CGraphicThing::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?OnIsType@CGraphicThing@@MAE_NK@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?OnIsType@CGraphicThing@@MAE_NK@Z PROC			; CGraphicThing::OnIsType, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 60   : 	if (CGraphicThing::Type() == type)

  00006	e8 00 00 00 00	 call	 ?Type@CGraphicThing@@SAKXZ ; CGraphicThing::Type
  0000b	8b 55 08	 mov	 edx, DWORD PTR _type$[ebp]
  0000e	3b c2		 cmp	 eax, edx
  00010	75 07		 jne	 SHORT $LN2@OnIsType

; 61   : 	{
; 62   : 		return true;

  00012	b0 01		 mov	 al, 1
  00014	5e		 pop	 esi

; 66   : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN2@OnIsType:

; 63   : 	}
; 64   : 
; 65   : 	return CResource::OnIsType(type);

  00019	52		 push	 edx
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?OnIsType@CResource@@MAE_NK@Z ; CResource::OnIsType
  00021	5e		 pop	 esi

; 66   : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?OnIsType@CGraphicThing@@MAE_NK@Z ENDP			; CGraphicThing::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?OnIsEmpty@CGraphicThing@@MBE_NXZ
_TEXT	SEGMENT
?OnIsEmpty@CGraphicThing@@MBE_NXZ PROC			; CGraphicThing::OnIsEmpty, COMDAT
; _this$ = ecx

; 55   : 	return m_pgrnFile ? false : true;

  00000	83 79 2c 00	 cmp	 DWORD PTR [ecx+44], 0
  00004	0f 94 c0	 sete	 al

; 56   : }

  00007	c3		 ret	 0
?OnIsEmpty@CGraphicThing@@MBE_NXZ ENDP			; CGraphicThing::OnIsEmpty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?OnClear@CGraphicThing@@MAEXXZ
_TEXT	SEGMENT
?OnClear@CGraphicThing@@MAEXXZ PROC			; CGraphicThing::OnClear, COMDAT
; _this$ = ecx

; 28   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 29   : 	if (m_motions)

  00003	8b 4e 3c	 mov	 ecx, DWORD PTR [esi+60]
  00006	85 c9		 test	 ecx, ecx
  00008	74 1c		 je	 SHORT $LN7@OnClear

; 30   : 	{
; 31   : 		delete [] m_motions;

  0000a	83 79 fc 00	 cmp	 DWORD PTR [ecx-4], 0
  0000e	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00011	74 08		 je	 SHORT $LN6@OnClear
  00013	8b 01		 mov	 eax, DWORD PTR [ecx]
  00015	6a 03		 push	 3
  00017	ff 10		 call	 DWORD PTR [eax]
  00019	eb 0b		 jmp	 SHORT $LN7@OnClear
$LN6@OnClear:
  0001b	6a 04		 push	 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00023	83 c4 08	 add	 esp, 8
$LN7@OnClear:

; 32   : 	}
; 33   : 
; 34   : 	if (m_models)

  00026	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  00029	85 c9		 test	 ecx, ecx
  0002b	74 1c		 je	 SHORT $LN11@OnClear

; 35   : 	{
; 36   : 		delete [] m_models;

  0002d	83 79 fc 00	 cmp	 DWORD PTR [ecx-4], 0
  00031	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00034	74 08		 je	 SHORT $LN10@OnClear
  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	6a 03		 push	 3
  0003a	ff 10		 call	 DWORD PTR [eax]
  0003c	eb 0b		 jmp	 SHORT $LN11@OnClear
$LN10@OnClear:
  0003e	6a 04		 push	 4
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00046	83 c4 08	 add	 esp, 8
$LN11@OnClear:

; 37   : 	}
; 38   : 
; 39   : 	if (m_pgrnFile)

  00049	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0004c	85 c0		 test	 eax, eax
  0004e	74 07		 je	 SHORT $LN4@OnClear

; 40   : 	{
; 41   : 		GrannyFreeFile(m_pgrnFile);

  00050	50		 push	 eax
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyFreeFile@4
$LN4@OnClear:

; 42   : 	}
; 43   : 
; 44   : 	Initialize();

  00057	8b ce		 mov	 ecx, esi
  00059	5e		 pop	 esi
  0005a	e9 00 00 00 00	 jmp	 ?Initialize@CGraphicThing@@IAEXXZ ; CGraphicThing::Initialize
?OnClear@CGraphicThing@@MAEXXZ ENDP			; CGraphicThing::OnClear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?OnLoad@CGraphicThing@@MAE_NHPBX@Z
_TEXT	SEGMENT
_iSize$ = 8						; size = 4
_c_pvBuf$ = 12						; size = 4
?OnLoad@CGraphicThing@@MAE_NHPBX@Z PROC			; CGraphicThing::OnLoad, COMDAT
; _this$ = ecx

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  : 	if (!c_pvBuf)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _c_pvBuf$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	85 c0		 test	 eax, eax
  0000b	74 34		 je	 SHORT $LN6@OnLoad

; 215  : 	{
; 216  : 		return false;
; 217  : 	}
; 218  : 
; 219  : 	m_pgrnFile = GrannyReadEntireFileFromMemory(iSize, (void *) c_pvBuf);

  0000d	50		 push	 eax
  0000e	ff 75 08	 push	 DWORD PTR _iSize$[ebp]
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyReadEntireFileFromMemory@8
  00017	89 46 2c	 mov	 DWORD PTR [esi+44], eax

; 220  : 
; 221  : 	if (!m_pgrnFile)

  0001a	85 c0		 test	 eax, eax
  0001c	74 23		 je	 SHORT $LN6@OnLoad

; 222  : 	{
; 223  : 		return false;
; 224  : 	}
; 225  : 
; 226  : 	m_pgrnFileInfo = GrannyGetFileInfo(m_pgrnFile);

  0001e	50		 push	 eax
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetFileInfo@4
  00025	89 46 30	 mov	 DWORD PTR [esi+48], eax

; 227  : 
; 228  : 	if (!m_pgrnFileInfo)

  00028	85 c0		 test	 eax, eax
  0002a	74 15		 je	 SHORT $LN6@OnLoad

; 231  : 	}
; 232  : 
; 233  : 	LoadModels();

  0002c	8b ce		 mov	 ecx, esi
  0002e	e8 00 00 00 00	 call	 ?LoadModels@CGraphicThing@@IAE_NXZ ; CGraphicThing::LoadModels

; 234  : 	LoadMotions();

  00033	8b ce		 mov	 ecx, esi
  00035	e8 00 00 00 00	 call	 ?LoadMotions@CGraphicThing@@IAE_NXZ ; CGraphicThing::LoadMotions

; 235  : 	return true;

  0003a	b0 01		 mov	 al, 1
  0003c	5e		 pop	 esi

; 236  : }

  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
$LN6@OnLoad:

; 229  : 	{
; 230  : 		return false;

  00041	32 c0		 xor	 al, al
  00043	5e		 pop	 esi

; 236  : }

  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?OnLoad@CGraphicThing@@MAE_NHPBX@Z ENDP			; CGraphicThing::OnLoad
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?LoadMotions@CGraphicThing@@IAE_NXZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?LoadMotions@CGraphicThing@@IAE_NXZ PROC		; CGraphicThing::LoadMotions, COMDAT
; _this$ = ecx

; 291  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadMotions@CGraphicThing@@IAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 292  : 	assert(m_pgrnFile != NULL);
; 293  : 	assert(m_motions == NULL);
; 294  : 
; 295  : 	if (m_pgrnFileInfo->AnimationCount <= 0)

  0002a	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  0002d	8b 78 4c	 mov	 edi, DWORD PTR [eax+76]
  00030	85 ff		 test	 edi, edi
  00032	0f 8e 99 00 00
	00		 jle	 $LN12@LoadMotion

; 296  : 	{
; 297  : 		return false;
; 298  : 	}
; 299  : 
; 300  : 	int motionCount = m_pgrnFileInfo->AnimationCount;
; 301  : 
; 302  : 	m_motions = new CGrannyMotion[motionCount];

  00038	33 c9		 xor	 ecx, ecx
  0003a	89 7d f0	 mov	 DWORD PTR $T3[ebp], edi
  0003d	8b c7		 mov	 eax, edi
  0003f	ba 08 00 00 00	 mov	 edx, 8
  00044	f7 e2		 mul	 edx
  00046	0f 90 c1	 seto	 cl
  00049	f7 d9		 neg	 ecx
  0004b	0b c8		 or	 ecx, eax
  0004d	33 c0		 xor	 eax, eax
  0004f	83 c1 04	 add	 ecx, 4
  00052	0f 92 c0	 setb	 al
  00055	f7 d8		 neg	 eax
  00057	0b c1		 or	 eax, ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0005f	83 c4 04	 add	 esp, 4
  00062	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00065	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006c	85 c0		 test	 eax, eax
  0006e	74 1a		 je	 SHORT $LN8@LoadMotion
  00070	68 00 00 00 00	 push	 OFFSET ??1CGrannyMotion@@UAE@XZ ; CGrannyMotion::~CGrannyMotion
  00075	68 00 00 00 00	 push	 OFFSET ??0CGrannyMotion@@QAE@XZ ; CGrannyMotion::CGrannyMotion
  0007a	57		 push	 edi
  0007b	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
  0007e	89 38		 mov	 DWORD PTR [eax], edi
  00080	6a 08		 push	 8
  00082	56		 push	 esi
  00083	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  00088	eb 02		 jmp	 SHORT $LN9@LoadMotion
$LN8@LoadMotion:
  0008a	33 f6		 xor	 esi, esi
$LN9@LoadMotion:
  0008c	89 73 3c	 mov	 DWORD PTR [ebx+60], esi

; 303  : 
; 304  : 	for (int m = 0; m < motionCount; ++m)

  0008f	33 f6		 xor	 esi, esi
  00091	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00098	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@LoadMotion:

; 305  : 		if (!m_motions[m].BindGrannyAnimation(m_pgrnFileInfo->Animations[m]))

  000a0	8b 43 3c	 mov	 eax, DWORD PTR [ebx+60]
  000a3	8d 0c f0	 lea	 ecx, DWORD PTR [eax+esi*8]
  000a6	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  000a9	8b 40 50	 mov	 eax, DWORD PTR [eax+80]
  000ac	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  000af	e8 00 00 00 00	 call	 ?BindGrannyAnimation@CGrannyMotion@@QAE_NPAUgranny_animation@@@Z ; CGrannyMotion::BindGrannyAnimation
  000b4	84 c0		 test	 al, al
  000b6	74 19		 je	 SHORT $LN12@LoadMotion

; 303  : 
; 304  : 	for (int m = 0; m < motionCount; ++m)

  000b8	46		 inc	 esi
  000b9	3b f7		 cmp	 esi, edi
  000bb	7c e3		 jl	 SHORT $LL4@LoadMotion

; 308  : 		}
; 309  : 
; 310  : 	return true;

  000bd	b0 01		 mov	 al, 1

; 311  : }

  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
$LN12@LoadMotion:

; 306  : 		{
; 307  : 			return false;

  000d1	32 c0		 xor	 al, al

; 311  : }

  000d3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dd	59		 pop	 ecx
  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadMotions@CGraphicThing@@IAE_NXZ$0:
  00000	33 db		 xor	 ebx, ebx
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  00005	b9 08 00 00 00	 mov	 ecx, 8
  0000a	f7 e1		 mul	 ecx
  0000c	0f 90 c3	 seto	 bl
  0000f	f7 db		 neg	 ebx
  00011	0b d8		 or	 ebx, eax
  00013	33 c0		 xor	 eax, eax
  00015	83 c3 04	 add	 ebx, 4
  00018	0f 92 c0	 setb	 al
  0001b	f7 d8		 neg	 eax
  0001d	0b c3		 or	 eax, ebx
  0001f	50		 push	 eax
  00020	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00029	83 c4 08	 add	 esp, 8
  0002c	c3		 ret	 0
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
__ehhandler$?LoadMotions@CGraphicThing@@IAE_NXZ:
  00032	90		 npad	 1
  00033	90		 npad	 1
  00034	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00038	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003b	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0003e	33 c8		 xor	 ecx, eax
  00040	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00045	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadMotions@CGraphicThing@@IAE_NXZ
  0004a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadMotions@CGraphicThing@@IAE_NXZ ENDP		; CGraphicThing::LoadMotions
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?LoadModels@CGraphicThing@@IAE_NXZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?LoadModels@CGraphicThing@@IAE_NXZ PROC			; CGraphicThing::LoadModels, COMDAT
; _this$ = ecx

; 248  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadModels@CGraphicThing@@IAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 249  : 	assert(m_pgrnFile != NULL);
; 250  : 	assert(m_models == NULL);
; 251  : 
; 252  : 	if (m_pgrnFileInfo->ModelCount <= 0)

  0002a	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  0002d	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  00031	0f 8e 23 01 00
	00		 jle	 $LN42@LoadModels

; 261  : 	if (fileName.length() > 2 && fileName[1] != ':')

  00037	8b 7b 1c	 mov	 edi, DWORD PTR [ebx+28]
  0003a	8d 73 0c	 lea	 esi, DWORD PTR [ebx+12]
  0003d	83 ff 02	 cmp	 edi, 2
  00040	76 4b		 jbe	 SHORT $LN6@LoadModels
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  00042	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 2292 :         const value_type* _Result = _Bx._Buf;

  00045	8b c6		 mov	 eax, esi

; 2293 :         if (_Large_string_engaged()) {

  00047	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0004a	72 02		 jb	 SHORT $LN50@LoadModels

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  0004c	8b 06		 mov	 eax, DWORD PTR [esi]
$LN50@LoadModels:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp

; 261  : 	if (fileName.length() > 2 && fileName[1] != ':')

  0004e	80 78 01 3a	 cmp	 BYTE PTR [eax+1], 58	; 0000003aH
  00052	74 39		 je	 SHORT $LN6@LoadModels
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2292 :         const value_type* _Result = _Bx._Buf;

  00054	8b d6		 mov	 edx, esi

; 2293 :         if (_Large_string_engaged()) {

  00056	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00059	72 02		 jb	 SHORT $LN51@LoadModels

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  0005b	8b 16		 mov	 edx, DWORD PTR [esi]
$LN51@LoadModels:

; 696  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

  0005d	83 c9 ff	 or	 ecx, -1
  00060	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  00063	3b c1		 cmp	 eax, ecx
  00065	0f 42 c8	 cmovb	 ecx, eax
  00068	03 ca		 add	 ecx, edx

; 697  :             if (_Traits::eq(*_Match_try, _Ch)) {

  0006a	80 39 5c	 cmp	 BYTE PTR [ecx], 92	; 0000005cH
  0006d	74 0b		 je	 SHORT $LN40@LoadModels
  0006f	90		 npad	 1
$LL29@LoadModels:

; 699  :             }
; 700  : 
; 701  :             if (_Match_try == _Haystack) {

  00070	3b ca		 cmp	 ecx, edx
  00072	74 74		 je	 SHORT $LN41@LoadModels

; 697  :             if (_Traits::eq(*_Match_try, _Ch)) {

  00074	49		 dec	 ecx
  00075	80 39 5c	 cmp	 BYTE PTR [ecx], 92	; 0000005cH
  00078	75 f6		 jne	 SHORT $LL29@LoadModels
$LN40@LoadModels:

; 698  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  0007a	2b ca		 sub	 ecx, edx
$LN26@LoadModels:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp

; 264  : 		gs_modelLocalPath.assign(fileName, 0, sepPos + 1);

  0007c	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0007f	b9 00 00 00 00	 mov	 ecx, OFFSET ?gs_modelLocalPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  00084	50		 push	 eax
  00085	6a 00		 push	 0
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN6@LoadModels:

; 265  : 	}
; 266  : 	// END_OF_SUPPORT_LOCAL_TEXTURE
; 267  : 
; 268  : 	int modelCount = m_pgrnFileInfo->ModelCount;

  0008d	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]

; 270  : 	m_models = new CGrannyModel[modelCount];

  00090	33 c9		 xor	 ecx, ecx
  00092	ba 90 00 00 00	 mov	 edx, 144		; 00000090H
  00097	8b 78 3c	 mov	 edi, DWORD PTR [eax+60]
  0009a	8b c7		 mov	 eax, edi
  0009c	f7 e2		 mul	 edx
  0009e	89 7d f0	 mov	 DWORD PTR $T3[ebp], edi
  000a1	0f 90 c1	 seto	 cl
  000a4	f7 d9		 neg	 ecx
  000a6	0b c8		 or	 ecx, eax
  000a8	33 c0		 xor	 eax, eax
  000aa	83 c1 04	 add	 ecx, 4
  000ad	0f 92 c0	 setb	 al
  000b0	f7 d8		 neg	 eax
  000b2	0b c1		 or	 eax, ecx
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  000ba	83 c4 04	 add	 esp, 4
  000bd	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  000c0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000c7	85 c0		 test	 eax, eax
  000c9	74 22		 je	 SHORT $LN9@LoadModels
  000cb	68 00 00 00 00	 push	 OFFSET ??1CGrannyModel@@UAE@XZ ; CGrannyModel::~CGrannyModel
  000d0	68 00 00 00 00	 push	 OFFSET ??0CGrannyModel@@QAE@XZ ; CGrannyModel::CGrannyModel
  000d5	57		 push	 edi
  000d6	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
  000d9	89 38		 mov	 DWORD PTR [eax], edi
  000db	68 90 00 00 00	 push	 144			; 00000090H
  000e0	56		 push	 esi
  000e1	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  000e6	eb 07		 jmp	 SHORT $LN10@LoadModels
$LN41@LoadModels:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 707  :     return static_cast<size_t>(-1); // no match

  000e8	83 c9 ff	 or	 ecx, -1
  000eb	eb 8f		 jmp	 SHORT $LN26@LoadModels
$LN9@LoadModels:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp

; 270  : 	m_models = new CGrannyModel[modelCount];

  000ed	33 f6		 xor	 esi, esi
$LN10@LoadModels:
  000ef	89 73 38	 mov	 DWORD PTR [ebx+56], esi

; 271  : 
; 272  : 	for (int m = 0; m < modelCount; ++m)

  000f2	33 f6		 xor	 esi, esi
  000f4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fb	85 ff		 test	 edi, edi
  000fd	7e 25		 jle	 SHORT $LN3@LoadModels

; 270  : 	m_models = new CGrannyModel[modelCount];

  000ff	33 ff		 xor	 edi, edi
$LL4@LoadModels:

; 273  : 	{
; 274  : 		CGrannyModel & rModel = m_models[m];
; 275  : 		granny_model * pgrnModel = m_pgrnFileInfo->Models[m];

  00101	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  00104	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  00107	03 cf		 add	 ecx, edi
  00109	8b 40 40	 mov	 eax, DWORD PTR [eax+64]

; 276  : 
; 277  : 		if (!rModel.CreateFromGrannyModelPointer(pgrnModel))

  0010c	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  0010f	e8 00 00 00 00	 call	 ?CreateFromGrannyModelPointer@CGrannyModel@@QAE_NPAUgranny_model@@@Z ; CGrannyModel::CreateFromGrannyModelPointer
  00114	84 c0		 test	 al, al
  00116	74 42		 je	 SHORT $LN42@LoadModels

; 271  : 
; 272  : 	for (int m = 0; m < modelCount; ++m)

  00118	46		 inc	 esi
  00119	81 c7 90 00 00
	00		 add	 edi, 144		; 00000090H
  0011f	3b 75 f0	 cmp	 esi, DWORD PTR $T3[ebp]
  00122	7c dd		 jl	 SHORT $LL4@LoadModels
$LN3@LoadModels:

; 280  : 		}
; 281  : 	}
; 282  : 
; 283  : 	GrannyFreeFileSection(m_pgrnFile, GrannyStandardRigidVertexSection);

  00124	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GrannyFreeFileSection@8
  0012a	6a 01		 push	 1
  0012c	ff 73 2c	 push	 DWORD PTR [ebx+44]
  0012f	ff d6		 call	 esi

; 284  : 	GrannyFreeFileSection(m_pgrnFile, GrannyStandardRigidIndexSection);

  00131	6a 02		 push	 2
  00133	ff 73 2c	 push	 DWORD PTR [ebx+44]
  00136	ff d6		 call	 esi

; 285  : 	GrannyFreeFileSection(m_pgrnFile, GrannyStandardDeformableIndexSection);

  00138	6a 04		 push	 4
  0013a	ff 73 2c	 push	 DWORD PTR [ebx+44]
  0013d	ff d6		 call	 esi

; 286  : 	GrannyFreeFileSection(m_pgrnFile, GrannyStandardTextureSection);

  0013f	6a 05		 push	 5
  00141	ff 73 2c	 push	 DWORD PTR [ebx+44]
  00144	ff d6		 call	 esi

; 287  : 	return true;

  00146	b0 01		 mov	 al, 1

; 288  : }

  00148	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00152	59		 pop	 ecx
  00153	5f		 pop	 edi
  00154	5e		 pop	 esi
  00155	5b		 pop	 ebx
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c3		 ret	 0
$LN42@LoadModels:

; 278  : 		{
; 279  : 			return false;

  0015a	32 c0		 xor	 al, al

; 288  : }

  0015c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0015f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00166	59		 pop	 ecx
  00167	5f		 pop	 edi
  00168	5e		 pop	 esi
  00169	5b		 pop	 ebx
  0016a	8b e5		 mov	 esp, ebp
  0016c	5d		 pop	 ebp
  0016d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadModels@CGraphicThing@@IAE_NXZ$0:
  00000	33 db		 xor	 ebx, ebx
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  00005	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  0000a	f7 e1		 mul	 ecx
  0000c	0f 90 c3	 seto	 bl
  0000f	f7 db		 neg	 ebx
  00011	0b d8		 or	 ebx, eax
  00013	33 c0		 xor	 eax, eax
  00015	83 c3 04	 add	 ebx, 4
  00018	0f 92 c0	 setb	 al
  0001b	f7 d8		 neg	 eax
  0001d	0b c3		 or	 eax, ebx
  0001f	50		 push	 eax
  00020	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00029	83 c4 08	 add	 esp, 8
  0002c	c3		 ret	 0
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
__ehhandler$?LoadModels@CGraphicThing@@IAE_NXZ:
  00032	90		 npad	 1
  00033	90		 npad	 1
  00034	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00038	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003b	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0003e	33 c8		 xor	 ecx, eax
  00040	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00045	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadModels@CGraphicThing@@IAE_NXZ
  0004a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadModels@CGraphicThing@@IAE_NXZ ENDP			; CGraphicThing::LoadModels
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?Initialize@CGraphicThing@@IAEXXZ
_TEXT	SEGMENT
?Initialize@CGraphicThing@@IAEXXZ PROC			; CGraphicThing::Initialize, COMDAT
; _this$ = ecx

; 19   : 	m_pgrnFile = NULL;

  00000	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], 0

; 20   : 	m_pgrnFileInfo = NULL;

  00007	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0

; 21   : 	m_pgrnAni = NULL;

  0000e	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0

; 22   : 
; 23   : 	m_models = NULL;

  00015	c7 41 38 00 00
	00 00		 mov	 DWORD PTR [ecx+56], 0

; 24   : 	m_motions = NULL;

  0001c	c7 41 3c 00 00
	00 00		 mov	 DWORD PTR [ecx+60], 0

; 25   : }

  00023	c3		 ret	 0
?Initialize@CGraphicThing@@IAEXXZ ENDP			; CGraphicThing::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?GetTexturePath@CGraphicThing@@QAEPBDH@Z
_TEXT	SEGMENT
_iTexture$ = 8						; size = 4
?GetTexturePath@CGraphicThing@@QAEPBDH@Z PROC		; CGraphicThing::GetTexturePath, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 203  : 	if (iTexture >= GetTextureCount())

  00006	e8 00 00 00 00	 call	 ?GetTextureCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetTextureCount
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _iTexture$[ebp]
  0000e	3b c8		 cmp	 ecx, eax
  00010	7c 0a		 jl	 SHORT $LN2@GetTexture

; 204  : 	{
; 205  : 		return "";

  00012	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_00CNPNBAHC@@
  00017	5e		 pop	 esi

; 209  : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@GetTexture:

; 206  : 	}
; 207  : 
; 208  : 	return m_pgrnFileInfo->Textures[iTexture]->FromFileName;

  0001c	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  0001f	5e		 pop	 esi
  00020	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00023	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]

; 209  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?GetTexturePath@CGraphicThing@@QAEPBDH@Z ENDP		; CGraphicThing::GetTexturePath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?GetTextureCount@CGraphicThing@@QBEHXZ
_TEXT	SEGMENT
?GetTextureCount@CGraphicThing@@QBEHXZ PROC		; CGraphicThing::GetTextureCount, COMDAT
; _this$ = ecx

; 188  : 	if (!m_pgrnFileInfo)

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN5@GetTexture

; 189  : 	{
; 190  : 		return 0;
; 191  : 	}
; 192  : 
; 193  : 	if (m_pgrnFileInfo->TextureCount <= 0)

  00007	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000a	33 c9		 xor	 ecx, ecx
  0000c	85 c0		 test	 eax, eax
  0000e	0f 4e c1	 cmovle	 eax, ecx

; 196  : 	}
; 197  : 
; 198  : 	return (m_pgrnFileInfo->TextureCount);
; 199  : }

  00011	c3		 ret	 0
$LN5@GetTexture:

; 194  : 	{
; 195  : 		return 0;

  00012	33 c0		 xor	 eax, eax

; 196  : 	}
; 197  : 
; 198  : 	return (m_pgrnFileInfo->TextureCount);
; 199  : }

  00014	c3		 ret	 0
?GetTextureCount@CGraphicThing@@QBEHXZ ENDP		; CGraphicThing::GetTextureCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?GetMotionCount@CGraphicThing@@QBEHXZ
_TEXT	SEGMENT
?GetMotionCount@CGraphicThing@@QBEHXZ PROC		; CGraphicThing::GetMotionCount, COMDAT
; _this$ = ecx

; 177  : 	if (!m_pgrnFileInfo)

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $LN2@GetMotionC

; 183  : }

  00007	c3		 ret	 0
$LN2@GetMotionC:

; 178  : 	{
; 179  : 		return 0;
; 180  : 	}
; 181  : 
; 182  : 	return (m_pgrnFileInfo->AnimationCount);

  00008	8b 40 4c	 mov	 eax, DWORD PTR [eax+76]

; 183  : }

  0000b	c3		 ret	 0
?GetMotionCount@CGraphicThing@@QBEHXZ ENDP		; CGraphicThing::GetMotionCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?GetMotionPointer@CGraphicThing@@QAEPAVCGrannyMotion@@H@Z
_TEXT	SEGMENT
_iMotion$ = 8						; size = 4
?GetMotionPointer@CGraphicThing@@QAEPAVCGrannyMotion@@H@Z PROC ; CGraphicThing::GetMotionPointer, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 154  : 	assert(CheckMotionIndex(iMotion));
; 155  : 
; 156  : 	if (iMotion >= m_pgrnFileInfo->AnimationCount)

  00003	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00006	8b 55 08	 mov	 edx, DWORD PTR _iMotion$[ebp]
  00009	3b 50 4c	 cmp	 edx, DWORD PTR [eax+76]
  0000c	7c 06		 jl	 SHORT $LN2@GetMotionP

; 157  : 	{
; 158  : 		return NULL;

  0000e	33 c0		 xor	 eax, eax

; 163  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
$LN2@GetMotionP:

; 159  : 	}
; 160  : 
; 161  : 	assert(m_motions != NULL);
; 162  : 	return (m_motions + iMotion);

  00014	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  00017	8d 04 d0	 lea	 eax, DWORD PTR [eax+edx*8]

; 163  : }

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetMotionPointer@CGraphicThing@@QAEPAVCGrannyMotion@@H@Z ENDP ; CGraphicThing::GetMotionPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?CheckMotionIndex@CGraphicThing@@QBE_NH@Z
_TEXT	SEGMENT
_iMotion$ = 8						; size = 4
?CheckMotionIndex@CGraphicThing@@QBE_NH@Z PROC		; CGraphicThing::CheckMotionIndex, COMDAT
; _this$ = ecx

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 123  : 	// Temporary
; 124  : 	if (!m_pgrnFileInfo)

  00003	8b 49 30	 mov	 ecx, DWORD PTR [ecx+48]
  00006	85 c9		 test	 ecx, ecx
  00008	74 11		 je	 SHORT $LN6@CheckMotio

; 125  : 	{
; 126  : 		return false;
; 127  : 	}
; 128  : 	// Temporary
; 129  : 
; 130  : 	assert(m_pgrnFileInfo != NULL);
; 131  : 
; 132  : 	if (iMotion < 0)

  0000a	8b 45 08	 mov	 eax, DWORD PTR _iMotion$[ebp]
  0000d	85 c0		 test	 eax, eax
  0000f	78 0a		 js	 SHORT $LN6@CheckMotio

; 133  : 	{
; 134  : 		return false;
; 135  : 	}
; 136  : 
; 137  : 	if (iMotion >= m_pgrnFileInfo->AnimationCount)

  00011	3b 41 4c	 cmp	 eax, DWORD PTR [ecx+76]
  00014	0f 9c c0	 setl	 al

; 140  : 	}
; 141  : 
; 142  : 	return true;
; 143  : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
$LN6@CheckMotio:

; 138  : 	{
; 139  : 		return false;

  0001b	32 c0		 xor	 al, al

; 140  : 	}
; 141  : 
; 142  : 	return true;
; 143  : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?CheckMotionIndex@CGraphicThing@@QBE_NH@Z ENDP		; CGraphicThing::CheckMotionIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?GetModelCount@CGraphicThing@@QBEHXZ
_TEXT	SEGMENT
?GetModelCount@CGraphicThing@@QBEHXZ PROC		; CGraphicThing::GetModelCount, COMDAT
; _this$ = ecx

; 167  : 	if (!m_pgrnFileInfo)

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $LN2@GetModelCo

; 173  : }

  00007	c3		 ret	 0
$LN2@GetModelCo:

; 168  : 	{
; 169  : 		return 0;
; 170  : 	}
; 171  : 
; 172  : 	return (m_pgrnFileInfo->ModelCount);

  00008	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]

; 173  : }

  0000b	c3		 ret	 0
?GetModelCount@CGraphicThing@@QBEHXZ ENDP		; CGraphicThing::GetModelCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z
_TEXT	SEGMENT
_iModel$ = 8						; size = 4
?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z PROC ; CGraphicThing::GetModelPointer, COMDAT
; _this$ = ecx

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 147  : 	assert(CheckModelIndex(iModel));
; 148  : 	assert(m_models != NULL);
; 149  : 	return m_models + iModel;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iModel$[ebp]
  00006	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  00009	c1 e0 04	 shl	 eax, 4
  0000c	03 41 38	 add	 eax, DWORD PTR [ecx+56]

; 150  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z ENDP ; CGraphicThing::GetModelPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?CheckModelIndex@CGraphicThing@@QBE_NH@Z
_TEXT	SEGMENT
_iModel$ = 8						; size = 4
?CheckModelIndex@CGraphicThing@@QBE_NH@Z PROC		; CGraphicThing::CheckModelIndex, COMDAT
; _this$ = ecx

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 	if (!m_pgrnFileInfo)

  00003	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00006	85 d2		 test	 edx, edx
  00008	75 1f		 jne	 SHORT $LN2@CheckModel
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  0000a	83 79 20 10	 cmp	 DWORD PTR [ecx+32], 16	; 00000010H

; 4259 :         return _Mypair._Myval2._Myptr();

  0000e	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]

; 2293 :         if (_Large_string_engaged()) {

  00011	72 02		 jb	 SHORT $LN11@CheckModel

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00013	8b 00		 mov	 eax, DWORD PTR [eax]
$LN11@CheckModel:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp

; 102  : 		Tracef("m_pgrnFileInfo == NULL: %s\n", GetFileName());

  00015	50		 push	 eax
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@CNDJBDNK@m_pgrnFileInfo?5?$DN?$DN?5NULL?3?5?$CFs?6@
  0001b	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00020	83 c4 08	 add	 esp, 8
$LN15@CheckModel:

; 114  : 	{
; 115  : 		return false;
; 116  : 	}
; 117  : 
; 118  : 	return true;
; 119  : }

  00023	32 c0		 xor	 al, al
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
$LN2@CheckModel:

; 103  : 		return false;
; 104  : 	}
; 105  : 
; 106  : 	assert(m_pgrnFileInfo != NULL);
; 107  : 
; 108  : 	if (iModel < 0)

  00029	8b 45 08	 mov	 eax, DWORD PTR _iModel$[ebp]
  0002c	85 c0		 test	 eax, eax
  0002e	78 f3		 js	 SHORT $LN15@CheckModel

; 109  : 	{
; 110  : 		return false;
; 111  : 	}
; 112  : 
; 113  : 	if (iModel >= m_pgrnFileInfo->ModelCount)

  00030	3b 42 3c	 cmp	 eax, DWORD PTR [edx+60]
  00033	0f 9c c0	 setl	 al

; 114  : 	{
; 115  : 		return false;
; 116  : 	}
; 117  : 
; 118  : 	return true;
; 119  : }

  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?CheckModelIndex@CGraphicThing@@QBE_NH@Z ENDP		; CGraphicThing::CheckModelIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?DestroyDeviceObjects@CGraphicThing@@UAEXXZ
_TEXT	SEGMENT
?DestroyDeviceObjects@CGraphicThing@@UAEXXZ PROC	; CGraphicThing::DestroyDeviceObjects, COMDAT
; _this$ = ecx

; 85   : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 86   : 	if (!m_pgrnFileInfo)

  00003	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  00006	85 c0		 test	 eax, eax
  00008	74 26		 je	 SHORT $LN3@DestroyDev

; 87   : 	{
; 88   : 		return;
; 89   : 	}
; 90   : 
; 91   : 	for (int m = 0; m < m_pgrnFileInfo->ModelCount; ++m)

  0000a	56		 push	 esi
  0000b	33 f6		 xor	 esi, esi
  0000d	39 70 3c	 cmp	 DWORD PTR [eax+60], esi
  00010	7e 1d		 jle	 SHORT $LN11@DestroyDev
  00012	57		 push	 edi
  00013	33 ff		 xor	 edi, edi
$LL4@DestroyDev:

; 92   : 	{
; 93   : 		CGrannyModel & rModel = m_models[m];

  00015	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  00018	03 cf		 add	 ecx, edi

; 94   : 		rModel.DestroyDeviceObjects();

  0001a	e8 00 00 00 00	 call	 ?DestroyDeviceObjects@CGrannyModel@@QAEXXZ ; CGrannyModel::DestroyDeviceObjects
  0001f	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  00022	46		 inc	 esi
  00023	81 c7 90 00 00
	00		 add	 edi, 144		; 00000090H
  00029	3b 70 3c	 cmp	 esi, DWORD PTR [eax+60]
  0002c	7c e7		 jl	 SHORT $LL4@DestroyDev
  0002e	5f		 pop	 edi
$LN11@DestroyDev:
  0002f	5e		 pop	 esi
$LN3@DestroyDev:
  00030	5b		 pop	 ebx

; 95   : 	}
; 96   : }

  00031	c3		 ret	 0
?DestroyDeviceObjects@CGraphicThing@@UAEXXZ ENDP	; CGraphicThing::DestroyDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?CreateDeviceObjects@CGraphicThing@@UAE_NXZ
_TEXT	SEGMENT
?CreateDeviceObjects@CGraphicThing@@UAE_NXZ PROC	; CGraphicThing::CreateDeviceObjects, COMDAT
; _this$ = ecx

; 69   : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 70   : 	if (!m_pgrnFileInfo)

  00003	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  00006	85 c0		 test	 eax, eax
  00008	74 2f		 je	 SHORT $LN13@CreateDevi

; 71   : 	{
; 72   : 		return true;
; 73   : 	}
; 74   : 
; 75   : 	for (int m = 0; m < m_pgrnFileInfo->ModelCount; ++m)

  0000a	56		 push	 esi
  0000b	33 f6		 xor	 esi, esi
  0000d	39 70 3c	 cmp	 DWORD PTR [eax+60], esi
  00010	7e 22		 jle	 SHORT $LN12@CreateDevi
  00012	57		 push	 edi
  00013	33 ff		 xor	 edi, edi
$LL4@CreateDevi:

; 76   : 	{
; 77   : 		CGrannyModel & rModel = m_models[m];

  00015	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  00018	03 cf		 add	 ecx, edi

; 78   : 		rModel.CreateDeviceObjects();

  0001a	e8 00 00 00 00	 call	 ?CreateDeviceObjects@CGrannyModel@@QAE_NXZ ; CGrannyModel::CreateDeviceObjects
  0001f	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  00022	46		 inc	 esi
  00023	81 c7 90 00 00
	00		 add	 edi, 144		; 00000090H
  00029	3b 70 3c	 cmp	 esi, DWORD PTR [eax+60]
  0002c	7c e7		 jl	 SHORT $LL4@CreateDevi

; 79   : 	}
; 80   : 
; 81   : 	return true;

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	b0 01		 mov	 al, 1
  00032	5b		 pop	 ebx

; 82   : }

  00033	c3		 ret	 0
$LN12@CreateDevi:
  00034	5e		 pop	 esi

; 79   : 	}
; 80   : 
; 81   : 	return true;

  00035	b0 01		 mov	 al, 1
  00037	5b		 pop	 ebx

; 82   : }

  00038	c3		 ret	 0
$LN13@CreateDevi:

; 79   : 	}
; 80   : 
; 81   : 	return true;

  00039	b0 01		 mov	 al, 1
  0003b	5b		 pop	 ebx

; 82   : }

  0003c	c3		 ret	 0
?CreateDeviceObjects@CGraphicThing@@UAE_NXZ ENDP	; CGraphicThing::CreateDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ??1CGraphicThing@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGraphicThing@@UAE@XZ PROC				; CGraphicThing::~CGraphicThing, COMDAT
; _this$ = ecx

; 12   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGraphicThing@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicThing@@6B@

; 13   : 	//OnClear();
; 14   : 	Clear();

  0002b	e8 00 00 00 00	 call	 ?Clear@CResource@@QAEXXZ ; CResource::Clear

; 15   : }

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CResource@@UAE@XZ	; CResource::~CResource
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGraphicThing@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGraphicThing@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGraphicThing@@UAE@XZ ENDP				; CGraphicThing::~CGraphicThing
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ??0CGraphicThing@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c_szFileName$ = 8					; size = 4
??0CGraphicThing@@QAE@PBD@Z PROC			; CGraphicThing::CGraphicThing, COMDAT
; _this$ = ecx

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CResource@@QAE@PBD@Z	; CResource::CResource

; 8    : 	Initialize();

  00012	8b ce		 mov	 ecx, esi
  00014	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicThing@@6B@
  0001a	e8 00 00 00 00	 call	 ?Initialize@CGraphicThing@@IAEXXZ ; CGraphicThing::Initialize

; 9    : }

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CGraphicThing@@QAE@PBD@Z ENDP			; CGraphicThing::CGraphicThing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Thing.cpp
;	COMDAT ?Type@CGraphicThing@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CGraphicThing@@SAKXZ PROC				; CGraphicThing::Type, COMDAT

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CGraphicThing@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 49   : 	static TType s_type = StringToType("CGraphicThing");

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CGraphicThing@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 50   : 	return s_type;
; 51   : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_type@?1??Type@CGraphicThing@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 49   : 	static TType s_type = StringToType("CGraphicThing");

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicThing@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CGraphicThing@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0O@POMHALBA@CGraphicThing@
  0006d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00074	e8 00 00 00 00	 call	 ?StringToType@CResource@@SAKPBD@Z ; CResource::StringToType
  00079	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicThing@@SAKXZ@4HA
  0007e	a3 00 00 00 00	 mov	 DWORD PTR ?s_type@?1??Type@CGraphicThing@@SAKXZ@4KA, eax
  00083	e8 00 00 00 00	 call	 __Init_thread_footer
  00088	83 c4 08	 add	 esp, 8
  0008b	eb b1		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CGraphicThing@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicThing@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CGraphicThing@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CGraphicThing@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CGraphicThing@@SAKXZ ENDP				; CGraphicThing::Type
; Function compile flags: /Ogtp
;	COMDAT ??_ECGrannyMotion@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECGrannyMotion@@UAEPAXI@Z PROC			; CGrannyMotion::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECGrannyMotion@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b f8		 mov	 edi, eax
  0002c	83 e7 01	 and	 edi, 1
  0002f	a8 02		 test	 al, 2
  00031	74 40		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CGrannyMotion@@UAE@XZ ; CGrannyMotion::~CGrannyMotion
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 5e fc	 lea	 ebx, DWORD PTR [esi-4]
  0003e	6a 08		 push	 8
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 ff		 test	 edi, edi
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0004c	8d 0c cd 04 00
	00 00		 lea	 ecx, DWORD PTR [ecx*8+4]
  00053	51		 push	 ecx
  00054	53		 push	 ebx
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c3		 mov	 eax, ebx
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	e8 00 00 00 00	 call	 ??1CGrannyMotion@@UAE@XZ ; CGrannyMotion::~CGrannyMotion
  00078	85 ff		 test	 edi, edi
  0007a	74 0b		 je	 SHORT $LN4@vector
  0007c	6a 08		 push	 8
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00084	83 c4 08	 add	 esp, 8
$LN4@vector:
  00087	8b c6		 mov	 eax, esi
  00089	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00093	59		 pop	 ecx
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
  0009d	cc		 int	 3
  0009e	cc		 int	 3
  0009f	cc		 int	 3
  000a0	cc		 int	 3
  000a1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECGrannyMotion@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECGrannyMotion@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECGrannyMotion@@UAEPAXI@Z ENDP			; CGrannyMotion::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_ECGrannyModel@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECGrannyModel@@UAEPAXI@Z PROC			; CGrannyModel::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECGrannyModel@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b f8		 mov	 edi, eax
  0002c	83 e7 01	 and	 edi, 1
  0002f	a8 02		 test	 al, 2
  00031	74 45		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CGrannyModel@@UAE@XZ ; CGrannyModel::~CGrannyModel
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 5e fc	 lea	 ebx, DWORD PTR [esi-4]
  0003e	68 90 00 00 00	 push	 144			; 00000090H
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00049	85 ff		 test	 edi, edi
  0004b	74 15		 je	 SHORT $LN3@vector
  0004d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0004f	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  00052	c1 e1 04	 shl	 ecx, 4
  00055	83 c1 04	 add	 ecx, 4
  00058	51		 push	 ecx
  00059	53		 push	 ebx
  0005a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00062	8b c3		 mov	 eax, ebx
  00064	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00067	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006e	59		 pop	 ecx
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
$LN2@vector:
  00078	e8 00 00 00 00	 call	 ??1CGrannyModel@@UAE@XZ	; CGrannyModel::~CGrannyModel
  0007d	85 ff		 test	 edi, edi
  0007f	74 0e		 je	 SHORT $LN4@vector
  00081	68 90 00 00 00	 push	 144			; 00000090H
  00086	56		 push	 esi
  00087	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008c	83 c4 08	 add	 esp, 8
$LN4@vector:
  0008f	8b c6		 mov	 eax, esi
  00091	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009b	59		 pop	 ecx
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c2 04 00	 ret	 4
  000a5	cc		 int	 3
  000a6	cc		 int	 3
  000a7	cc		 int	 3
  000a8	cc		 int	 3
  000a9	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECGrannyModel@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECGrannyModel@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECGrannyModel@@UAEPAXI@Z ENDP			; CGrannyModel::`vector deleting destructor'
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Ptr$1$ = 8						; size = 4
__Right$ = 8						; size = 4
$T1 = 12						; size = 4
__Roff$ = 12						; size = 4
$T2 = 16						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3504 :     _CONSTEXPR20 basic_string& assign(const basic_string& _Right, const size_type _Roff, size_type _Count = npos) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2317 :         if (_Mysize < _Off) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR __Roff$[ebp]

; 3504 :     _CONSTEXPR20 basic_string& assign(const basic_string& _Right, const size_type _Roff, size_type _Count = npos) {

  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b 75 10	 mov	 esi, DWORD PTR __Count$[ebp]
  0000e	8b d9		 mov	 ebx, ecx

; 2317 :         if (_Mysize < _Off) {

  00010	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]

; 3504 :     _CONSTEXPR20 basic_string& assign(const basic_string& _Right, const size_type _Roff, size_type _Count = npos) {

  00013	57		 push	 edi

; 2317 :         if (_Mysize < _Off) {

  00014	3b ca		 cmp	 ecx, edx
  00016	0f 82 20 01 00
	00		 jb	 $LN74@assign

; 2335 :         return (_STD min)(_Size, _Mysize - _Off);

  0001c	2b ca		 sub	 ecx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 66   :     return _Right < _Left ? _Right : _Left;

  0001e	3b ce		 cmp	 ecx, esi
  00020	0f 42 f1	 cmovb	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  00023	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  00027	72 02		 jb	 SHORT $LN12@assign

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00029	8b 00		 mov	 eax, DWORD PTR [eax]
$LN12@assign:

; 3530 :         if (_Count <= _Mypair._Myval2._Myres) {

  0002b	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]

; 3505 :         // assign _Right [_Roff, _Roff + _Count)
; 3506 :         _Right._Mypair._Myval2._Check_offset(_Roff);
; 3507 :         _Count = _Right._Mypair._Myval2._Clamp_suffix_size(_Roff, _Count);
; 3508 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  0002e	03 c2		 add	 eax, edx
  00030	89 45 08	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 3530 :         if (_Count <= _Mypair._Myval2._Myres) {

  00033	89 4d 0c	 mov	 DWORD PTR $T1[ebp], ecx
  00036	3b f1		 cmp	 esi, ecx
  00038	77 24		 ja	 SHORT $LN17@assign

; 2283 :         value_type* _Result = _Bx._Buf;

  0003a	8b fb		 mov	 edi, ebx

; 2301 :         return _BUF_SIZE <= _Myres;

  0003c	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2284 :         if (_Large_string_engaged()) {

  0003f	72 02		 jb	 SHORT $LN20@assign

; 2285 :             _Result = _Unfancy(_Bx._Ptr);

  00041	8b 3b		 mov	 edi, DWORD PTR [ebx]
$LN20@assign:

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00043	56		 push	 esi
  00044	50		 push	 eax
  00045	57		 push	 edi

; 3533 :             _Mypair._Myval2._Mysize = _Count;

  00046	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00049	e8 00 00 00 00	 call	 _memmove
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3535 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00051	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0

; 3505 :         // assign _Right [_Roff, _Roff + _Count)
; 3506 :         _Right._Mypair._Myval2._Check_offset(_Roff);
; 3507 :         _Count = _Right._Mypair._Myval2._Clamp_suffix_size(_Roff, _Count);
; 3508 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  00055	8b c3		 mov	 eax, ebx
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx

; 3509 :     }

  0005a	5d		 pop	 ebp
  0005b	c2 0c 00	 ret	 12			; 0000000cH
$LN17@assign:

; 4903 :         if (_New_size > max_size()) {

  0005e	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00064	0f 87 d7 00 00
	00		 ja	 $LN75@assign

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0006a	8b fe		 mov	 edi, esi
  0006c	83 cf 0f	 or	 edi, 15			; 0000000fH
  0006f	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00075	76 15		 jbe	 SHORT $LN34@assign

; 4885 :             return _Max;

  00077	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0007c	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	eb 52		 jmp	 SHORT $LN72@assign
$LN34@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4888 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0008c	8b d1		 mov	 edx, ecx
  0008e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00093	d1 ea		 shr	 edx, 1
  00095	2b c2		 sub	 eax, edx
  00097	3b c8		 cmp	 ecx, eax
  00099	76 15		 jbe	 SHORT $LN35@assign

; 4889 :             return _Max;

  0009b	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  000a0	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000ab	83 c4 04	 add	 esp, 4
  000ae	eb 2e		 jmp	 SHORT $LN72@assign
$LN35@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4892 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000b0	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  000b3	3b f8		 cmp	 edi, eax
  000b5	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4910 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000b8	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000bb	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000c0	72 0b		 jb	 SHORT $LN42@assign

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000c8	83 c4 04	 add	 esp, 4
  000cb	eb 11		 jmp	 SHORT $LN72@assign
$LN42@assign:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000cd	85 c0		 test	 eax, eax
  000cf	74 0b		 je	 SHORT $LN43@assign

; 77   :         return ::operator new(_Bytes);

  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000d7	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000da	eb 02		 jmp	 SHORT $LN72@assign
$LN43@assign:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000dc	33 c0		 xor	 eax, eax
$LN72@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000de	56		 push	 esi
  000df	ff 75 08	 push	 DWORD PTR __Ptr$1$[ebp]

; 4919 :         _Mypair._Myval2._Mysize = _New_size;

  000e2	89 45 10	 mov	 DWORD PTR $T2[ebp], eax

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e5	50		 push	 eax

; 4919 :         _Mypair._Myval2._Mysize = _New_size;

  000e6	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 4920 :         _Mypair._Myval2._Myres  = _New_capacity;

  000e9	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000ec	e8 00 00 00 00	 call	 _memcpy

; 3543 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000f1	8b 7d 10	 mov	 edi, DWORD PTR $T2[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000f4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4922 :         if (_BUF_SIZE <= _Old_capacity) {

  000f7	8b 45 0c	 mov	 eax, DWORD PTR $T1[ebp]

; 3543 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000fa	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0

; 4922 :         if (_BUF_SIZE <= _Old_capacity) {

  000fe	83 f8 10	 cmp	 eax, 16			; 00000010H
  00101	72 29		 jb	 SHORT $LN28@assign

; 4923 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  00103	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00106	8b 03		 mov	 eax, DWORD PTR [ebx]

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00108	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0010e	72 12		 jb	 SHORT $LN65@assign

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00110	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00113	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00116	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00118	83 c0 fc	 add	 eax, -4			; fffffffcH
  0011b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0011e	77 17		 ja	 SHORT $LN62@assign

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00120	8b c2		 mov	 eax, edx
$LN65@assign:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00122	51		 push	 ecx
  00123	50		 push	 eax
  00124	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00129	83 c4 08	 add	 esp, 8
$LN28@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3539 :         return _Reallocate_for(

  0012c	89 3b		 mov	 DWORD PTR [ebx], edi

; 3505 :         // assign _Right [_Roff, _Roff + _Count)
; 3506 :         _Right._Mypair._Myval2._Check_offset(_Roff);
; 3507 :         _Count = _Right._Mypair._Myval2._Clamp_suffix_size(_Roff, _Count);
; 3508 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  0012e	8b c3		 mov	 eax, ebx
  00130	5f		 pop	 edi
  00131	5e		 pop	 esi
  00132	5b		 pop	 ebx

; 3509 :     }

  00133	5d		 pop	 ebp
  00134	c2 0c 00	 ret	 12			; 0000000cH
$LN62@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00137	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN74@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2318 :             _Xran();

  0013c	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN75@assign:

; 4904 :             _Xlen_string(); // result too long

  00141	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN71@assign:
  00146	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2330 :         _Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xran:
  0000a	cc		 int	 3
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2368 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 324  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
