; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Distribute\ModelInstanceModel.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	?Clear@CGrannyModelInstance@@QAEXXZ		; CGrannyModelInstance::Clear
PUBLIC	?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z ; CGrannyModelInstance::SetMainModelPointer
PUBLIC	?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z ; CGrannyModelInstance::SetLinkedModelPointer
PUBLIC	?GetDeformableVertexCount@CGrannyModelInstance@@QAEKXZ ; CGrannyModelInstance::GetDeformableVertexCount
PUBLIC	?GetVertexCount@CGrannyModelInstance@@QAEKXZ	; CGrannyModelInstance::GetVertexCount
PUBLIC	?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ; CGrannyModelInstance::GetBoneMatrixPointer
PUBLIC	?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ; CGrannyModelInstance::GetCompositeBoneMatrixPointer
PUBLIC	?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z ; CGrannyModelInstance::GetBoneIndexByName
PUBLIC	?ReloadTexture@CGrannyModelInstance@@QAEXXZ	; CGrannyModelInstance::ReloadTexture
PUBLIC	?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyModelInstance
PUBLIC	?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyMeshMatrices
PUBLIC	?__DestroyDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyDynamicVertexBuffer
PUBLIC	?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateModelInstance
PUBLIC	?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateMeshMatrices
PUBLIC	?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateDynamicVertexBuffer
PUBLIC	?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyWorldPose
PUBLIC	?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z ; CGrannyModelInstance::__CreateWorldPose
PUBLIC	?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z ; CGrannyModelInstance::__CreateMeshBindingVector
PUBLIC	?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyMeshBindingVector
PUBLIC	?__GetMeshBoneIndices@CGrannyModelInstance@@IBEPBHI@Z ; CGrannyModelInstance::__GetMeshBoneIndices
PUBLIC	?__IsDeformableVertexBuffer@CGrannyModelInstance@@IAE_NXZ ; CGrannyModelInstance::__IsDeformableVertexBuffer
PUBLIC	?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z ; CGrannyModelInstance::__SetSharedDeformableVertexBuffer
PUBLIC	?__GetDeformableD3DVertexBufferPtr@CGrannyModelInstance@@IAEPAUIDirect3DVertexBuffer9@@XZ ; CGrannyModelInstance::__GetDeformableD3DVertexBufferPtr
PUBLIC	?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ ; CGrannyModelInstance::__GetDeformableVertexBufferRef
PUBLIC	?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUgranny_world_pose@@XZ ; CGrannyModelInstance::__GetWorldPosePtr
PUBLIC	?_Reallocate_exactly@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXI@Z ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Reallocate_exactly
PUBLIC	?_Change_array@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXQAPAUgranny_mesh_binding@@II@Z ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@CAXXZ ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Xlength
PUBLIC	??$_Emplace_reallocate@PAUgranny_mesh_binding@@@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEPAPAUgranny_mesh_binding@@QAPAU2@$$QAPAU2@@Z ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Emplace_reallocate<granny_mesh_binding *>
PUBLIC	??$_Copy_memmove@PAPAUgranny_mesh_binding@@PAPAU1@@std@@YAPAPAUgranny_mesh_binding@@PAPAU1@00@Z ; std::_Copy_memmove<granny_mesh_binding * *,granny_mesh_binding * *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp__GrannyInstantiateModel@4:PROC
EXTRN	__imp__GrannyFreeModelInstance@4:PROC
EXTRN	__imp__GrannyGetSourceSkeleton@4:PROC
EXTRN	__imp__GrannyNewMeshBinding@12:PROC
EXTRN	__imp__GrannyFreeMeshBinding@4:PROC
EXTRN	__imp__GrannyGetMeshBindingToBoneIndices@4:PROC
EXTRN	__imp__GrannyFindBoneByName@12:PROC
EXTRN	__imp__GrannyNewWorldPose@4:PROC
EXTRN	__imp__GrannyFreeWorldPose@4:PROC
EXTRN	__imp__GrannyGetWorldPose4x4@8:PROC
EXTRN	__imp__GrannyGetWorldPoseComposite4x4@8:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?Destroy@CGraphicVertexBuffer@@QAEXXZ:PROC	; CGraphicVertexBuffer::Destroy
EXTRN	?IsEmpty@CGraphicVertexBuffer@@QBE_NXZ:PROC	; CGraphicVertexBuffer::IsEmpty
EXTRN	?Clear@CGrannyMaterialPalette@@QAEXXZ:PROC	; CGrannyMaterialPalette::Clear
EXTRN	?Copy@CGrannyMaterialPalette@@QAEXABV1@@Z:PROC	; CGrannyMaterialPalette::Copy
EXTRN	?GetDeformVertexCount@CGrannyModel@@QBEHXZ:PROC	; CGrannyModel::GetDeformVertexCount
EXTRN	?GetVertexCount@CGrannyModel@@QBEHXZ:PROC	; CGrannyModel::GetVertexCount
EXTRN	?GetMeshCount@CGrannyModel@@QBEHXZ:PROC		; CGrannyModel::GetMeshCount
EXTRN	?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ:PROC ; CGrannyModel::GetGrannyModelPointer
EXTRN	?GetMaterialPalette@CGrannyModel@@QBEABVCGrannyMaterialPalette@@XZ:PROC ; CGrannyModel::GetMaterialPalette
EXTRN	?DestroyDeviceObjects@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::DestroyDeviceObjects
EXTRN	?ResetLocalTime@CGrannyModelInstance@@QAEHXZ:PROC ; CGrannyModelInstance::ResetLocalTime
EXTRN	?__Initialize@CGrannyModelInstance@@IAEXXZ:PROC	; CGrannyModelInstance::__Initialize
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memmove:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ$0
__ehfuncinfo$?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUgranny_mesh_binding@@PAPAU1@@std@@YAPAPAUgranny_mesh_binding@@PAPAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUgranny_mesh_binding@@PAPAU1@@std@@YAPAPAUgranny_mesh_binding@@PAPAU1@00@Z PROC ; std::_Copy_memmove<granny_mesh_binding * *,granny_mesh_binding * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUgranny_mesh_binding@@PAPAU1@@std@@YAPAPAUgranny_mesh_binding@@PAPAU1@00@Z ENDP ; std::_Copy_memmove<granny_mesh_binding * *,granny_mesh_binding * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@PAUgranny_mesh_binding@@@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEPAPAUgranny_mesh_binding@@QAPAU2@$$QAPAU2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv495 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@PAUgranny_mesh_binding@@@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEPAPAUgranny_mesh_binding@@QAPAU2@$$QAPAU2@@Z PROC ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Emplace_reallocate<granny_mesh_binding *>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	2b c2		 sub	 eax, edx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	2b c2		 sub	 eax, edx
  0001d	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 d2 00 00
	00		 je	 $LN66@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b ca		 sub	 ecx, edx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 f9 02	 sar	 ecx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b d1		 mov	 edx, ecx
  00040	d1 ea		 shr	 edx, 1
  00042	2b c2		 sub	 eax, edx
  00044	3b c8		 cmp	 ecx, eax
  00046	76 17		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00048	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  0004d	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00058	83 c4 04	 add	 esp, 4
  0005b	8b f8		 mov	 edi, eax
  0005d	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00062	8b f7		 mov	 esi, edi
  00064	3b c7		 cmp	 eax, edi
  00066	0f 43 f0	 cmovae	 esi, eax
  00069	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0006f	0f 87 8d 00 00
	00		 ja	 $LN67@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00075	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b f8		 mov	 edi, eax
  0008e	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  00090	85 c0		 test	 eax, eax
  00092	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009a	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009d	8b f8		 mov	 edi, eax
  0009f	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000a1	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000a6	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000ac	89 4d fc	 mov	 DWORD PTR tv495[ebp], ecx
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	89 01		 mov	 DWORD PTR [ecx], eax

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b6	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000bb	3b c1		 cmp	 eax, ecx
  000bd	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bf	8b c7		 mov	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000c1	eb 17		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c3	57		 push	 edi
  000c4	50		 push	 eax
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUgranny_mesh_binding@@PAPAU1@@std@@YAPAPAUgranny_mesh_binding@@PAPAU1@00@Z ; std::_Copy_memmove<granny_mesh_binding * *,granny_mesh_binding * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	83 c0 04	 add	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d7	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUgranny_mesh_binding@@PAPAU1@@std@@YAPAPAUgranny_mesh_binding@@PAPAU1@00@Z ; std::_Copy_memmove<granny_mesh_binding * *,granny_mesh_binding * *>
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000e5	8b cb		 mov	 ecx, ebx
  000e7	56		 push	 esi
  000e8	ff 75 f8	 push	 DWORD PTR __Newsize$1$[ebp]
  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXQAPAUgranny_mesh_binding@@II@Z ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Change_array

; 920  :         return _Newvec + _Whereoff;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx

; 921  :     }

  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
$LN66@Emplace_re:

; 888  :             _Xlength();

  000fd	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@CAXXZ ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Xlength
$LN67@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00102	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN64@Emplace_re:
  00107	cc		 int	 3
??$_Emplace_reallocate@PAUgranny_mesh_binding@@@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEPAPAUgranny_mesh_binding@@QAPAU2@$$QAPAU2@@Z ENDP ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Emplace_reallocate<granny_mesh_binding *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@CAXXZ PROC ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@CAXXZ ENDP ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Change_array@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXQAPAUgranny_mesh_binding@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXQAPAUgranny_mesh_binding@@II@Z PROC ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Change_array, COMDAT
; _this$ = ecx

; 2076 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2077 :         // orphan all iterators, discard old array, acquire new array
; 2078 :         auto& _Al         = _Getal();
; 2079 :         auto& _My_data    = _Mypair._Myval2;
; 2080 :         pointer& _Myfirst = _My_data._Myfirst;
; 2081 :         pointer& _Mylast  = _My_data._Mylast;
; 2082 :         pointer& _Myend   = _My_data._Myend;
; 2083 : 
; 2084 :         _My_data._Orphan_all();
; 2085 : 
; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN8@Change_arr

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN18@Change_arr

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN15@Change_arr

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN18@Change_arr:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2092 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 2096 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXQAPAUgranny_mesh_binding@@II@Z ENDP ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Size$1$ = -4						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXI@Z PROC ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 1665 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1666 :         auto& _Al         = _Getal();
; 1667 :         auto& _My_data    = _Mypair._Myval2;
; 1668 :         pointer& _Myfirst = _My_data._Myfirst;
; 1669 :         pointer& _Mylast  = _My_data._Mylast;
; 1670 : 
; 1671 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000f	2b 06		 sub	 eax, DWORD PTR [esi]
  00011	c1 f8 02	 sar	 eax, 2
  00014	89 45 fc	 mov	 DWORD PTR __Size$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00017	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0001d	0f 87 8a 00 00
	00		 ja	 $LN55@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00023	c1 e3 02	 shl	 ebx, 2

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  0002c	72 0d		 jb	 SHORT $LN15@Reallocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00034	83 c4 04	 add	 esp, 4
  00037	8b f8		 mov	 edi, eax
  00039	eb 13		 jmp	 SHORT $LN14@Reallocate
$LN15@Reallocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0003b	85 db		 test	 ebx, ebx
  0003d	74 0d		 je	 SHORT $LN16@Reallocate

; 77   :         return ::operator new(_Bytes);

  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00045	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00048	8b f8		 mov	 edi, eax
  0004a	eb 02		 jmp	 SHORT $LN14@Reallocate
$LN16@Reallocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0004c	33 ff		 xor	 edi, edi
$LN14@Reallocate:

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004e	57		 push	 edi
  0004f	ff 76 04	 push	 DWORD PTR [esi+4]
  00052	ff 36		 push	 DWORD PTR [esi]
  00054	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUgranny_mesh_binding@@PAPAU1@@std@@YAPAPAUgranny_mesh_binding@@PAPAU1@00@Z ; std::_Copy_memmove<granny_mesh_binding * *,granny_mesh_binding * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00059	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 2c		 je	 SHORT $LN39@Reallocate

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN49@Reallocate

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 26		 ja	 SHORT $LN46@Reallocate

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN49@Reallocate:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008b	83 c4 08	 add	 esp, 8
$LN39@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR __Size$1$[ebp]
  00091	89 3e		 mov	 DWORD PTR [esi], edi
  00093	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00099	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  0009c	5f		 pop	 edi
  0009d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 1687 :     }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
$LN46@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN55@Reallocate:

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000ad	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN53@Reallocate:
  000b2	cc		 int	 3
?_Reallocate_exactly@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXI@Z ENDP ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUgranny_world_pose@@XZ
_TEXT	SEGMENT
?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUgranny_world_pose@@XZ PROC ; CGrannyModelInstance::__GetWorldPosePtr, COMDAT
; _this$ = ecx

; 73   : 	if (m_pgrnWorldPoseReal)

  00000	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  00003	85 c0		 test	 eax, eax
  00005	75 13		 jne	 SHORT $LN1@GetWorldPo

; 74   : 	{
; 75   : 		return m_pgrnWorldPoseReal;
; 76   : 	}
; 77   : 
; 78   : 	if (m_ppkSkeletonInst && *m_ppkSkeletonInst)

  00007	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]
  0000a	85 c0		 test	 eax, eax
  0000c	74 0a		 je	 SHORT $LN3@GetWorldPo
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	85 c0		 test	 eax, eax
  00012	74 04		 je	 SHORT $LN3@GetWorldPo

; 79   : 	{
; 80   : 		return (*m_ppkSkeletonInst)->m_pgrnWorldPoseReal;

  00014	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]

; 85   : }

  00017	c3		 ret	 0
$LN3@GetWorldPo:

; 81   : 	}
; 82   : 
; 83   : 	assert(m_ppkSkeletonInst != NULL && "__GetWorldPosePtr - NO HAVE SKELETON");
; 84   : 	return NULL;

  00018	33 c0		 xor	 eax, eax
$LN1@GetWorldPo:

; 85   : }

  0001a	c3		 ret	 0
?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUgranny_world_pose@@XZ ENDP ; CGrannyModelInstance::__GetWorldPosePtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ
_TEXT	SEGMENT
?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ PROC ; CGrannyModelInstance::__GetDeformableVertexBufferRef, COMDAT
; _this$ = ecx

; 258  : 	if (m_pkSharedDeformableVertexBuffer)

  00000	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]
  00003	85 c0		 test	 eax, eax
  00005	75 03		 jne	 SHORT $LN1@GetDeforma

; 259  : 	{
; 260  : 		return *m_pkSharedDeformableVertexBuffer;
; 261  : 	}
; 262  : 
; 263  : 	return m_kLocalDeformableVertexBuffer;

  00007	8d 41 50	 lea	 eax, DWORD PTR [ecx+80]
$LN1@GetDeforma:

; 264  : }

  0000a	c3		 ret	 0
?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ ENDP ; CGrannyModelInstance::__GetDeformableVertexBufferRef
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__GetDeformableD3DVertexBufferPtr@CGrannyModelInstance@@IAEPAUIDirect3DVertexBuffer9@@XZ
_TEXT	SEGMENT
?__GetDeformableD3DVertexBufferPtr@CGrannyModelInstance@@IAEPAUIDirect3DVertexBuffer9@@XZ PROC ; CGrannyModelInstance::__GetDeformableD3DVertexBufferPtr, COMDAT
; _this$ = ecx

; 253  : 	return __GetDeformableVertexBufferRef().GetD3DVertexBuffer();

  00000	e8 00 00 00 00	 call	 ?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ ; CGrannyModelInstance::__GetDeformableVertexBufferRef
  00005	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 254  : }

  00008	c3		 ret	 0
?__GetDeformableD3DVertexBufferPtr@CGrannyModelInstance@@IAEPAUIDirect3DVertexBuffer9@@XZ ENDP ; CGrannyModelInstance::__GetDeformableD3DVertexBufferPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z
_TEXT	SEGMENT
_pkSharedDeformableVertexBuffer$ = 8			; size = 4
?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z PROC ; CGrannyModelInstance::__SetSharedDeformableVertexBuffer, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 238  : 	m_pkSharedDeformableVertexBuffer = pkSharedDeformableVertexBuffer;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pkSharedDeformableVertexBuffer$[ebp]
  00006	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 239  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z ENDP ; CGrannyModelInstance::__SetSharedDeformableVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__IsDeformableVertexBuffer@CGrannyModelInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsDeformableVertexBuffer@CGrannyModelInstance@@IAE_NXZ PROC ; CGrannyModelInstance::__IsDeformableVertexBuffer, COMDAT
; _this$ = ecx

; 243  : 	if (m_pkSharedDeformableVertexBuffer)

  00000	83 79 4c 00	 cmp	 DWORD PTR [ecx+76], 0
  00004	74 03		 je	 SHORT $LN2@IsDeformab

; 244  : 	{
; 245  : 		return true;

  00006	b0 01		 mov	 al, 1

; 249  : }

  00008	c3		 ret	 0
$LN2@IsDeformab:

; 246  : 	}
; 247  : 
; 248  : 	return m_kLocalDeformableVertexBuffer.IsEmpty();

  00009	83 c1 50	 add	 ecx, 80			; 00000050H
  0000c	e9 00 00 00 00	 jmp	 ?IsEmpty@CGraphicVertexBuffer@@QBE_NXZ ; CGraphicVertexBuffer::IsEmpty
?__IsDeformableVertexBuffer@CGrannyModelInstance@@IAE_NXZ ENDP ; CGrannyModelInstance::__IsDeformableVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__GetMeshBoneIndices@CGrannyModelInstance@@IBEPBHI@Z
_TEXT	SEGMENT
_iMeshBinding$ = 8					; size = 4
?__GetMeshBoneIndices@CGrannyModelInstance@@IBEPBHI@Z PROC ; CGrannyModelInstance::__GetMeshBoneIndices, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1962 :         return _My_data._Myfirst[_Pos];

  00003	8b 49 40	 mov	 ecx, DWORD PTR [ecx+64]
  00006	8b 45 08	 mov	 eax, DWORD PTR _iMeshBinding$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp

; 96   : 	return GrannyGetMeshBindingToBoneIndices(m_vct_pgrnMeshBinding[iMeshBinding]);

  00009	ff 34 81	 push	 DWORD PTR [ecx+eax*4]
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetMeshBindingToBoneIndices@4

; 97   : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?__GetMeshBoneIndices@CGrannyModelInstance@@IBEPBHI@Z ENDP ; CGrannyModelInstance::__GetMeshBoneIndices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__DestroyMeshBindingVector, COMDAT
; _this$ = ecx

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b c1		 mov	 eax, ecx
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	8b 70 40	 mov	 esi, DWORD PTR [eax+64]
  00011	3b f7		 cmp	 esi, edi
  00013	74 1a		 je	 SHORT $LN17@DestroyMes
  00015	53		 push	 ebx
  00016	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GrannyFreeMeshBinding@4
  0001c	0f 1f 40 00	 npad	 4
$LL18@DestroyMes:

; 266  :         _Func(*_UFirst);

  00020	ff 36		 push	 DWORD PTR [esi]
  00022	ff d3		 call	 ebx
  00024	83 c6 04	 add	 esi, 4
  00027	3b f7		 cmp	 esi, edi
  00029	75 f5		 jne	 SHORT $LL18@DestroyMes
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  0002e	5b		 pop	 ebx
$LN17@DestroyMes:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  0002f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	3b 48 44	 cmp	 ecx, DWORD PTR [eax+68]
  00037	74 03		 je	 SHORT $LN20@DestroyMes

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00039	89 48 44	 mov	 DWORD PTR [eax+68], ecx
$LN20@DestroyMes:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp

; 135  : }

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__DestroyMeshBindingVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z
_TEXT	SEGMENT
_pgrnDstSkeleton$1$ = -4				; size = 4
$T1 = 8							; size = 4
_pkDstModelInst$ = 8					; size = 4
?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z PROC ; CGrannyModelInstance::__CreateMeshBindingVector, COMDAT
; _this$ = ecx

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 101  : 	assert(m_vct_pgrnMeshBinding.empty());
; 102  : 
; 103  : 	if (!m_pModel)

  00008	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000b	85 c9		 test	 ecx, ecx
  0000d	0f 84 a6 00 00
	00		 je	 $LN27@CreateMesh

; 104  : 	{
; 105  : 		return false;
; 106  : 	}
; 107  : 
; 108  : 	granny_model* pgrnModel = m_pModel->GetGrannyModelPointer();

  00013	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer
  00018	8b d8		 mov	 ebx, eax

; 109  : 	if (!pgrnModel)

  0001a	85 db		 test	 ebx, ebx
  0001c	0f 84 97 00 00
	00		 je	 $LN27@CreateMesh

; 112  : 	}
; 113  : 
; 114  : 	granny_skeleton* pgrnDstSkeleton = pgrnModel->Skeleton;

  00022	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00025	56		 push	 esi

; 115  : 	if (pkDstModelInst && pkDstModelInst->m_pModel && pkDstModelInst->m_pModel->GetGrannyModelPointer())

  00026	8b 75 08	 mov	 esi, DWORD PTR _pkDstModelInst$[ebp]
  00029	89 55 fc	 mov	 DWORD PTR _pgrnDstSkeleton$1$[ebp], edx
  0002c	85 f6		 test	 esi, esi
  0002e	74 1e		 je	 SHORT $LN7@CreateMesh
  00030	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00033	85 c9		 test	 ecx, ecx
  00035	74 17		 je	 SHORT $LN7@CreateMesh
  00037	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer
  0003c	85 c0		 test	 eax, eax
  0003e	74 0e		 je	 SHORT $LN7@CreateMesh

; 116  : 	{
; 117  : 		pgrnDstSkeleton = pkDstModelInst->m_pModel->GetGrannyModelPointer()->Skeleton;

  00040	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00043	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	89 45 fc	 mov	 DWORD PTR _pgrnDstSkeleton$1$[ebp], eax
$LN7@CreateMesh:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004e	8b 47 48	 mov	 eax, DWORD PTR [edi+72]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp

; 120  : 	m_vct_pgrnMeshBinding.reserve(pgrnModel->MeshBindingCount);

  00051	8d 77 40	 lea	 esi, DWORD PTR [edi+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00054	2b 06		 sub	 eax, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp

; 120  : 	m_vct_pgrnMeshBinding.reserve(pgrnModel->MeshBindingCount);

  00056	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00059	c1 f8 02	 sar	 eax, 2

; 1743 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  0005c	3b c8		 cmp	 ecx, eax
  0005e	76 10		 jbe	 SHORT $LN17@CreateMesh

; 1744 :             if (_Newcapacity > max_size()) {

  00060	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00066	77 5b		 ja	 SHORT $LN31@CreateMesh

; 1746 :             }
; 1747 : 
; 1748 :             _Reallocate_exactly(_Newcapacity);

  00068	51		 push	 ecx
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEXI@Z ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Reallocate_exactly
$LN17@CreateMesh:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp

; 123  : 	for (iMeshBinding = 0; iMeshBinding != pgrnModel->MeshBindingCount; ++iMeshBinding)

  00070	33 ff		 xor	 edi, edi
  00072	39 7b 4c	 cmp	 DWORD PTR [ebx+76], edi
  00075	74 37		 je	 SHORT $LN3@CreateMesh
$LL4@CreateMesh:

; 125  : 		m_vct_pgrnMeshBinding.push_back(GrannyNewMeshBinding(pgrnModel->MeshBindings[iMeshBinding].Mesh, pgrnModel->Skeleton, pgrnDstSkeleton));

  00077	ff 75 fc	 push	 DWORD PTR _pgrnDstSkeleton$1$[ebp]
  0007a	8b 43 50	 mov	 eax, DWORD PTR [ebx+80]
  0007d	ff 73 04	 push	 DWORD PTR [ebx+4]
  00080	ff 34 b8	 push	 DWORD PTR [eax+edi*4]
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyNewMeshBinding@12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00089	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp

; 125  : 		m_vct_pgrnMeshBinding.push_back(GrannyNewMeshBinding(pgrnModel->MeshBindings[iMeshBinding].Mesh, pgrnModel->Skeleton, pgrnDstSkeleton));

  0008c	89 45 08	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0008f	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  00092	74 08		 je	 SHORT $LN12@CreateMesh

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00094	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00096	83 46 04 04	 add	 DWORD PTR [esi+4], 4

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0009a	eb 0c		 jmp	 SHORT $LN2@CreateMesh
$LN12@CreateMesh:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0009c	8d 45 08	 lea	 eax, DWORD PTR $T1[ebp]
  0009f	50		 push	 eax
  000a0	51		 push	 ecx
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@PAUgranny_mesh_binding@@@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@AAEPAPAUgranny_mesh_binding@@QAPAU2@$$QAPAU2@@Z ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Emplace_reallocate<granny_mesh_binding *>
$LN2@CreateMesh:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp

; 123  : 	for (iMeshBinding = 0; iMeshBinding != pgrnModel->MeshBindingCount; ++iMeshBinding)

  000a8	47		 inc	 edi
  000a9	3b 7b 4c	 cmp	 edi, DWORD PTR [ebx+76]
  000ac	75 c9		 jne	 SHORT $LL4@CreateMesh
$LN3@CreateMesh:

; 126  : 	}
; 127  : 
; 128  : 	return true;

  000ae	5e		 pop	 esi
  000af	5f		 pop	 edi
  000b0	b0 01		 mov	 al, 1

; 129  : }

  000b2	5b		 pop	 ebx
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 04 00	 ret	 4
$LN27@CreateMesh:
  000b9	5f		 pop	 edi

; 110  : 	{
; 111  : 		return false;

  000ba	32 c0		 xor	 al, al

; 129  : }

  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
$LN31@CreateMesh:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1745 :                 _Xlength();

  000c3	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUgranny_mesh_binding@@V?$allocator@PAUgranny_mesh_binding@@@std@@@std@@CAXXZ ; std::vector<granny_mesh_binding *,std::allocator<granny_mesh_binding *> >::_Xlength
$LN29@CreateMesh:
  000c8	cc		 int	 3
?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z ENDP ; CGrannyModelInstance::__CreateMeshBindingVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z
_TEXT	SEGMENT
_pkSkeletonInst$ = 8					; size = 4
?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z PROC ; CGrannyModelInstance::__CreateWorldPose, COMDAT
; _this$ = ecx

; 141  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 142  : 	assert(m_pgrnModelInstance != NULL);
; 143  : 	assert(m_pgrnWorldPoseReal == NULL);
; 144  : 
; 145  : 	// WORK
; 146  : 	if (pkSkeletonInst)

  00003	83 7d 08 00	 cmp	 DWORD PTR _pkSkeletonInst$[ebp], 0
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	75 15		 jne	 SHORT $LN1@CreateWorl

; 147  : 	{
; 148  : 		return;
; 149  : 	}
; 150  : 	// END_OF_WORK
; 151  : 
; 152  : 	granny_skeleton * pgrnSkeleton = GrannyGetSourceSkeleton(m_pgrnModelInstance);

  0000c	ff 76 08	 push	 DWORD PTR [esi+8]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetSourceSkeleton@4

; 153  : 
; 154  : 	// WORK
; 155  : 	m_pgrnWorldPoseReal = GrannyNewWorldPose(pgrnSkeleton->BoneCount);

  00015	ff 70 04	 push	 DWORD PTR [eax+4]
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyNewWorldPose@4
  0001e	89 46 3c	 mov	 DWORD PTR [esi+60], eax
$LN1@CreateWorl:
  00021	5e		 pop	 esi

; 156  : 	// END_OF_WORK
; 157  : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z ENDP ; CGrannyModelInstance::__CreateWorldPose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ PROC	; CGrannyModelInstance::__DestroyWorldPose, COMDAT
; _this$ = ecx

; 160  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 161  : 	if (!m_pgrnWorldPoseReal)

  00003	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00006	85 c0		 test	 eax, eax
  00008	74 0e		 je	 SHORT $LN1@DestroyWor

; 162  : 	{
; 163  : 		return;
; 164  : 	}
; 165  : 
; 166  : 	GrannyFreeWorldPose(m_pgrnWorldPoseReal);

  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyFreeWorldPose@4

; 167  : 	m_pgrnWorldPoseReal = NULL;

  00011	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
$LN1@DestroyWor:

; 168  : }

  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ ENDP	; CGrannyModelInstance::__DestroyWorldPose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__CreateDynamicVertexBuffer, COMDAT
; _this$ = ecx

; 267  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 268  : 	assert(m_pModel != NULL);
; 269  : 	assert(m_kLocalDeformableVertexBuffer.IsEmpty());
; 270  : 
; 271  : 	int vtxCount = m_pModel->GetDeformVertexCount();

  00003	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00006	e8 00 00 00 00	 call	 ?GetDeformVertexCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetDeformVertexCount

; 272  : 
; 273  : 	if (0 != vtxCount)

  0000b	85 c0		 test	 eax, eax
  0000d	74 13		 je	 SHORT $LN3@CreateDyna

; 274  : 	{
; 275  : 		if (!m_kLocalDeformableVertexBuffer.Create(vtxCount,

  0000f	8b 56 50	 mov	 edx, DWORD PTR [esi+80]
  00012	8d 4e 50	 lea	 ecx, DWORD PTR [esi+80]
  00015	6a 01		 push	 1
  00017	6a 08		 push	 8
  00019	68 12 01 00 00	 push	 274			; 00000112H
  0001e	50		 push	 eax
  0001f	ff 52 04	 call	 DWORD PTR [edx+4]
$LN3@CreateDyna:

; 276  : 				D3DFVF_XYZ | D3DFVF_NORMAL | D3DFVF_TEX1,
; 277  : 				//D3DUSAGE_DYNAMIC, D3DPOOL_SYSTEMMEM
; 278  : 
; 279  : 				D3DUSAGE_WRITEONLY, D3DPOOL_MANAGED
; 280  : 												  ))
; 281  : 		{
; 282  : 			return;
; 283  : 		}
; 284  : 	}
; 285  : }

  00022	5e		 pop	 esi
  00023	c3		 ret	 0
?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__CreateDynamicVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ PROC	; CGrannyModelInstance::__CreateMeshMatrices, COMDAT
; _this$ = ecx

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx

; 192  : 	assert(m_pModel != NULL);
; 193  : 
; 194  : 	if (m_pModel->GetMeshCount() <= 0)

  00027	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002a	e8 00 00 00 00	 call	 ?GetMeshCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetMeshCount
  0002f	85 c0		 test	 eax, eax
  00031	7e 2a		 jle	 SHORT $LN1@CreateMesh

; 195  : 	{
; 196  : 		return;
; 197  : 	}
; 198  : 
; 199  : 	int meshCount = m_pModel->GetMeshCount();

  00033	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00036	e8 00 00 00 00	 call	 ?GetMeshCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetMeshCount

; 200  : 	m_meshMatrices = new D3DXMATRIX[meshCount];

  0003b	33 c9		 xor	 ecx, ecx
  0003d	89 45 f0	 mov	 DWORD PTR $T3[ebp], eax
  00040	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00045	f7 e2		 mul	 edx
  00047	0f 90 c1	 seto	 cl
  0004a	f7 d9		 neg	 ecx
  0004c	0b c8		 or	 ecx, eax
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00054	83 c4 04	 add	 esp, 4
  00057	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0005a	89 46 14	 mov	 DWORD PTR [esi+20], eax
$LN1@CreateMesh:

; 201  : }

  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ$0:
  00000	33 db		 xor	 ebx, ebx
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  00005	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0000a	f7 e1		 mul	 ecx
  0000c	0f 90 c3	 seto	 bl
  0000f	f7 db		 neg	 ebx
  00011	0b d8		 or	 ebx, eax
  00013	53		 push	 ebx
  00014	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0001d	83 c4 08	 add	 esp, 8
  00020	c3		 ret	 0
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
__ehhandler$?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ:
  00026	90		 npad	 1
  00027	90		 npad	 1
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00032	33 c8		 xor	 ecx, eax
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ
  0003e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ ENDP	; CGrannyModelInstance::__CreateMeshMatrices
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__CreateModelInstance, COMDAT
; _this$ = ecx

; 171  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 172  : 	assert(m_pModel != NULL);
; 173  : 	assert(m_pgrnModelInstance == NULL);
; 174  : 
; 175  : 	const granny_model * pgrnModel = m_pModel->GetGrannyModelPointer();

  00003	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00006	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer

; 176  : 	m_pgrnModelInstance = GrannyInstantiateModel(pgrnModel);

  0000b	50		 push	 eax
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyInstantiateModel@4
  00012	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00015	5e		 pop	 esi

; 177  : }

  00016	c3		 ret	 0
?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__CreateModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__DestroyDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__DestroyDynamicVertexBuffer, COMDAT
; _this$ = ecx

; 288  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 289  : 	m_kLocalDeformableVertexBuffer.Destroy();

  00003	8d 4e 50	 lea	 ecx, DWORD PTR [esi+80]
  00006	e8 00 00 00 00	 call	 ?Destroy@CGraphicVertexBuffer@@QAEXXZ ; CGraphicVertexBuffer::Destroy

; 290  : 	m_pkSharedDeformableVertexBuffer = NULL;

  0000b	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
  00012	5e		 pop	 esi

; 291  : }

  00013	c3		 ret	 0
?__DestroyDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__DestroyDynamicVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__DestroyMeshMatrices, COMDAT
; _this$ = ecx

; 204  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 205  : 	if (!m_meshMatrices)

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN1@DestroyMes

; 206  : 	{
; 207  : 		return;
; 208  : 	}
; 209  : 
; 210  : 	delete [] m_meshMatrices;

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00010	83 c4 04	 add	 esp, 4

; 211  : 	m_meshMatrices = NULL;

  00013	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN1@DestroyMes:

; 212  : }

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__DestroyMeshMatrices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__DestroyModelInstance, COMDAT
; _this$ = ecx

; 180  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 181  : 	if (!m_pgrnModelInstance)

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	85 c0		 test	 eax, eax
  00008	74 0e		 je	 SHORT $LN1@DestroyMod

; 182  : 	{
; 183  : 		return;
; 184  : 	}
; 185  : 
; 186  : 	GrannyFreeModelInstance(m_pgrnModelInstance);

  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyFreeModelInstance@4

; 187  : 	m_pgrnModelInstance = NULL;

  00011	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN1@DestroyMod:

; 188  : }

  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__DestroyModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?ReloadTexture@CGrannyModelInstance@@QAEXXZ
_TEXT	SEGMENT
?ReloadTexture@CGrannyModelInstance@@QAEXXZ PROC	; CGrannyModelInstance::ReloadTexture, COMDAT
; _this$ = ecx

; 328  : 	assert("Not currently used - CGrannyModelInstance::ReloadTexture()");
; 329  : 	/*
; 330  : 		assert(m_pModel != NULL);
; 331  : 		const CGrannyMaterialPalette & c_rGrannyMaterialPalette = m_pModel->GetMaterialPalette();
; 332  : 		DWORD dwMaterialCount = c_rGrannyMaterialPalette.GetMaterialCount();
; 333  : 		for (DWORD dwMtrIndex = 0; dwMtrIndex < dwMaterialCount; ++dwMtrIndex)
; 334  : 		{
; 335  : 			const CGrannyMaterial & c_rGrannyMaterial = c_rGrannyMaterialPalette.GetMaterialRef(dwMtrIndex);
; 336  : 			CGraphicImage * pImageStage0 = c_rGrannyMaterial.GetImagePointer(0);
; 337  : 			if (pImageStage0)
; 338  : 				pImageStage0->Reload();
; 339  : 			CGraphicImage * pImageStage1 = c_rGrannyMaterial.GetImagePointer(1);
; 340  : 			if (pImageStage1)
; 341  : 				pImageStage1->Reload();
; 342  : 		}
; 343  : 	*/
; 344  : }

  00000	c2 00 00	 ret	 0
?ReloadTexture@CGrannyModelInstance@@QAEXXZ ENDP	; CGrannyModelInstance::ReloadTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z
_TEXT	SEGMENT
_c_szBoneName$ = 8					; size = 4
_pBoneIndex$ = 12					; size = 4
?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z PROC ; CGrannyModelInstance::GetBoneIndexByName, COMDAT
; _this$ = ecx

; 296  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 297  : 	assert(m_pgrnModelInstance != NULL);
; 298  : 
; 299  : 	granny_skeleton * pgrnSkeleton = GrannyGetSourceSkeleton(m_pgrnModelInstance);

  00003	ff 71 08	 push	 DWORD PTR [ecx+8]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetSourceSkeleton@4

; 300  : 
; 301  : 	if (!GrannyFindBoneByName(pgrnSkeleton, c_szBoneName, pBoneIndex))

  0000c	ff 75 0c	 push	 DWORD PTR _pBoneIndex$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR _c_szBoneName$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyFindBoneByName@12
  00019	84 c0		 test	 al, al
  0001b	0f 95 c0	 setne	 al

; 302  : 	{
; 303  : 		return false;
; 304  : 	}
; 305  : 
; 306  : 	return true;
; 307  : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z ENDP ; CGrannyModelInstance::GetBoneIndexByName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z
_TEXT	SEGMENT
_iBone$ = 8						; size = 4
?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z PROC ; CGrannyModelInstance::GetCompositeBoneMatrixPointer, COMDAT
; _this$ = ecx

; 322  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 323  : 	return GrannyGetWorldPoseComposite4x4(__GetWorldPosePtr(), iBone);

  00003	ff 75 08	 push	 DWORD PTR _iBone$[ebp]
  00006	e8 00 00 00 00	 call	 ?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUgranny_world_pose@@XZ ; CGrannyModelInstance::__GetWorldPosePtr
  0000b	50		 push	 eax
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetWorldPoseComposite4x4@8

; 324  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ENDP ; CGrannyModelInstance::GetCompositeBoneMatrixPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z
_TEXT	SEGMENT
_iBone$ = 8						; size = 4
?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z PROC ; CGrannyModelInstance::GetBoneMatrixPointer, COMDAT
; _this$ = ecx

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 311  : 	const float* bones = GrannyGetWorldPose4x4(__GetWorldPosePtr(), iBone);

  00004	ff 75 08	 push	 DWORD PTR _iBone$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUgranny_world_pose@@XZ ; CGrannyModelInstance::__GetWorldPosePtr
  0000e	50		 push	 eax
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetWorldPose4x4@8

; 312  : 	if (!bones)

  00015	85 c0		 test	 eax, eax
  00017	75 0a		 jne	 SHORT $LN1@GetBoneMat

; 313  : 	{
; 314  : 		granny_model* pModel = m_pModel->GetGrannyModelPointer();

  00019	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001c	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer

; 315  : 		//TraceError("GrannyModelInstance(%s).GetBoneMatrixPointer(boneIndex(%d)).NOT_FOUND_BONE", pModel->Name, iBone);
; 316  : 		return NULL;

  00021	33 c0		 xor	 eax, eax
$LN1@GetBoneMat:
  00023	5e		 pop	 esi

; 317  : 	}
; 318  : 	return bones;
; 319  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ENDP ; CGrannyModelInstance::GetBoneMatrixPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetVertexCount@CGrannyModelInstance@@QAEKXZ
_TEXT	SEGMENT
?GetVertexCount@CGrannyModelInstance@@QAEKXZ PROC	; CGrannyModelInstance::GetVertexCount, COMDAT
; _this$ = ecx

; 226  : 	if (!m_pModel)

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetVertexC

; 227  : 	{
; 228  : 		return 0;

  00007	33 c0		 xor	 eax, eax

; 232  : }

  00009	c3		 ret	 0
$LN2@GetVertexC:

; 229  : 	}
; 230  : 
; 231  : 	return m_pModel->GetVertexCount();

  0000a	e9 00 00 00 00	 jmp	 ?GetVertexCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetVertexCount
?GetVertexCount@CGrannyModelInstance@@QAEKXZ ENDP	; CGrannyModelInstance::GetVertexCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetDeformableVertexCount@CGrannyModelInstance@@QAEKXZ
_TEXT	SEGMENT
?GetDeformableVertexCount@CGrannyModelInstance@@QAEKXZ PROC ; CGrannyModelInstance::GetDeformableVertexCount, COMDAT
; _this$ = ecx

; 216  : 	if (!m_pModel)

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetDeforma

; 217  : 	{
; 218  : 		return 0;

  00007	33 c0		 xor	 eax, eax

; 222  : }

  00009	c3		 ret	 0
$LN2@GetDeforma:

; 219  : 	}
; 220  : 
; 221  : 	return m_pModel->GetDeformVertexCount();

  0000a	e9 00 00 00 00	 jmp	 ?GetDeformVertexCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetDeformVertexCount
?GetDeformableVertexCount@CGrannyModelInstance@@QAEKXZ ENDP ; CGrannyModelInstance::GetDeformableVertexCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z
_TEXT	SEGMENT
_pkModel$ = 8						; size = 4
_pkSharedDeformableVertexBuffer$ = 12			; size = 4
_ppkSkeletonInst$ = 16					; size = 4
?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z PROC ; CGrannyModelInstance::SetLinkedModelPointer, COMDAT
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 27   : 	Clear();

  00008	e8 00 00 00 00	 call	 ?Clear@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::Clear

; 28   : 
; 29   : 	if (m_pModel)

  0000d	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00010	85 c9		 test	 ecx, ecx
  00012	74 05		 je	 SHORT $LN2@SetLinkedM

; 30   : 	{
; 31   : 		m_pModel->Release();

  00014	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN2@SetLinkedM:

; 32   : 	}
; 33   : 
; 34   : 	m_pModel = pkModel;

  00019	8b 5d 08	 mov	 ebx, DWORD PTR _pkModel$[ebp]

; 35   : 
; 36   : 	m_pModel->AddReference();

  0001c	8b cb		 mov	 ecx, ebx
  0001e	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00021	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 37   : 
; 38   : 	if (pkSharedDeformableVertexBuffer)

  00026	8b 45 0c	 mov	 eax, DWORD PTR _pkSharedDeformableVertexBuffer$[ebp]
  00029	8b ce		 mov	 ecx, esi
  0002b	85 c0		 test	 eax, eax
  0002d	74 08		 je	 SHORT $LN3@SetLinkedM

; 39   : 	{
; 40   : 		__SetSharedDeformableVertexBuffer(pkSharedDeformableVertexBuffer);

  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z ; CGrannyModelInstance::__SetSharedDeformableVertexBuffer

; 41   : 	}

  00035	eb 05		 jmp	 SHORT $LN4@SetLinkedM
$LN3@SetLinkedM:

; 42   : 	else
; 43   : 	{
; 44   : 		__CreateDynamicVertexBuffer();

  00037	e8 00 00 00 00	 call	 ?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateDynamicVertexBuffer
$LN4@SetLinkedM:

; 45   : 	}
; 46   : 
; 47   : 	__CreateModelInstance();

  0003c	8b ce		 mov	 ecx, esi
  0003e	e8 00 00 00 00	 call	 ?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateModelInstance

; 48   : 
; 49   : 	// WORK
; 50   : 	if (ppkSkeletonInst && *ppkSkeletonInst)

  00043	8b 7d 10	 mov	 edi, DWORD PTR _ppkSkeletonInst$[ebp]
  00046	85 ff		 test	 edi, edi
  00048	74 15		 je	 SHORT $LN5@SetLinkedM
  0004a	83 3f 00	 cmp	 DWORD PTR [edi], 0
  0004d	74 10		 je	 SHORT $LN5@SetLinkedM

; 51   : 	{
; 52   : 		m_ppkSkeletonInst = ppkSkeletonInst;

  0004f	89 7e 74	 mov	 DWORD PTR [esi+116], edi

; 53   : 		__CreateWorldPose(*ppkSkeletonInst);

  00052	8b ce		 mov	 ecx, esi
  00054	ff 37		 push	 DWORD PTR [edi]
  00056	e8 00 00 00 00	 call	 ?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z ; CGrannyModelInstance::__CreateWorldPose

; 54   : 		__CreateMeshBindingVector(*ppkSkeletonInst);

  0005b	8b 07		 mov	 eax, DWORD PTR [edi]

; 55   : 	}

  0005d	eb 0b		 jmp	 SHORT $LN6@SetLinkedM
$LN5@SetLinkedM:

; 56   : 	else
; 57   : 	{
; 58   : 		__CreateWorldPose(NULL);

  0005f	6a 00		 push	 0
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z ; CGrannyModelInstance::__CreateWorldPose

; 59   : 		__CreateMeshBindingVector(NULL);

  00068	33 c0		 xor	 eax, eax
$LN6@SetLinkedM:

; 60   : 	}
; 61   : 	// END_OF_WORK
; 62   : 
; 63   : 	__CreateMeshMatrices();

  0006a	50		 push	 eax
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z ; CGrannyModelInstance::__CreateMeshBindingVector
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateMeshMatrices

; 64   : 
; 65   : 	ResetLocalTime();

  00079	8b ce		 mov	 ecx, esi
  0007b	e8 00 00 00 00	 call	 ?ResetLocalTime@CGrannyModelInstance@@QAEHXZ ; CGrannyModelInstance::ResetLocalTime

; 66   : 
; 67   : 	m_kMtrlPal.Copy(pkModel->GetMaterialPalette());

  00080	8b cb		 mov	 ecx, ebx
  00082	e8 00 00 00 00	 call	 ?GetMaterialPalette@CGrannyModel@@QBEABVCGrannyMaterialPalette@@XZ ; CGrannyModel::GetMaterialPalette
  00087	50		 push	 eax
  00088	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0008b	e8 00 00 00 00	 call	 ?Copy@CGrannyMaterialPalette@@QAEXABV1@@Z ; CGrannyMaterialPalette::Copy
  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx

; 68   : }

  00093	5d		 pop	 ebp
  00094	c2 0c 00	 ret	 12			; 0000000cH
?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z ENDP ; CGrannyModelInstance::SetLinkedModelPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z
_TEXT	SEGMENT
_pModel$ = 8						; size = 4
_pkSharedDeformableVertexBuffer$ = 12			; size = 4
?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z PROC ; CGrannyModelInstance::SetMainModelPointer, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 22   : 	SetLinkedModelPointer(pModel, pkSharedDeformableVertexBuffer, NULL);

  00003	6a 00		 push	 0
  00005	ff 75 0c	 push	 DWORD PTR _pkSharedDeformableVertexBuffer$[ebp]
  00008	ff 75 08	 push	 DWORD PTR _pModel$[ebp]
  0000b	e8 00 00 00 00	 call	 ?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z ; CGrannyModelInstance::SetLinkedModelPointer

; 23   : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z ENDP ; CGrannyModelInstance::SetMainModelPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?Clear@CGrannyModelInstance@@QAEXXZ
_TEXT	SEGMENT
?Clear@CGrannyModelInstance@@QAEXXZ PROC		; CGrannyModelInstance::Clear, COMDAT
; _this$ = ecx

; 6    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 7    : 	m_kMtrlPal.Clear();

  00003	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00006	e8 00 00 00 00	 call	 ?Clear@CGrannyMaterialPalette@@QAEXXZ ; CGrannyMaterialPalette::Clear

; 8    : 
; 9    : 	DestroyDeviceObjects();

  0000b	8b ce		 mov	 ecx, esi
  0000d	e8 00 00 00 00	 call	 ?DestroyDeviceObjects@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::DestroyDeviceObjects

; 10   : 	// WORK
; 11   : 	__DestroyMeshBindingVector();

  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyMeshBindingVector

; 12   : 	// END_OF_WORK
; 13   : 	__DestroyMeshMatrices();

  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyMeshMatrices

; 14   : 	__DestroyModelInstance();

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyModelInstance

; 15   : 	__DestroyWorldPose();

  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyWorldPose

; 16   : 
; 17   : 	__Initialize();

  0002e	8b ce		 mov	 ecx, esi
  00030	5e		 pop	 esi
  00031	e9 00 00 00 00	 jmp	 ?__Initialize@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__Initialize
?Clear@CGrannyModelInstance@@QAEXXZ ENDP		; CGrannyModelInstance::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 315  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 324  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
