; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\Distribute\ThingInstance.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_Fake_alloc@std@@3U_Fake_allocator@1@B		; std::_Fake_alloc
PUBLIC	??_7?$CDynamicPool@VCGraphicThingInstance@@@@6B@ ; CDynamicPool<CGraphicThingInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCGraphicThingInstance@@@@UAEPAXI@Z ; CDynamicPool<CGraphicThingInstance>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCGraphicThingInstance@@@@6B@ ; CDynamicPool<CGraphicThingInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCGraphicThingInstance@@@@@8 ; CDynamicPool<CGraphicThingInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCGraphicThingInstance@@@@8	; CDynamicPool<CGraphicThingInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCGraphicThingInstance@@@@8	; CDynamicPool<CGraphicThingInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCGraphicThingInstance@@@@8 ; CDynamicPool<CGraphicThingInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_E?$CDynamicPool@VCGraphicThingInstance@@@@UAEPAXI@Z:PROC ; CDynamicPool<CGraphicThingInstance>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCGraphicThingInstance@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCGraphicThingInstance@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCGraphicThingInstance@@@@@8 ; CDynamicPool<CGraphicThingInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCGraphicThingInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCGraphicThingInstance@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCGraphicThingInstance@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCGraphicThingInstance@@@@8 ; CDynamicPool<CGraphicThingInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCGraphicThingInstance@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCGraphicThingInstance@@@@8 DD 00H	; CDynamicPool<CGraphicThingInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCGraphicThingInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCGraphicThingInstance@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@VCGraphicThingInstance@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CGraphicThingInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCGraphicThingInstance@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCGraphicThingInstance@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCGraphicThingInstance@@@@6B@ DD 00H ; CDynamicPool<CGraphicThingInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCGraphicThingInstance@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCGraphicThingInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@VCGraphicThingInstance@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCGraphicThingInstance@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCGraphicThingInstance@@@@6B@ ; CDynamicPool<CGraphicThingInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCGraphicThingInstance@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?_Fake_alloc@std@@3U_Fake_allocator@1@B
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::SModelThingSet::Clear
PUBLIC	?_Xlength@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@CAXXZ ; std::vector<CRef<CGraphicThing> *,std::allocator<CRef<CGraphicThing> *> >::_Xlength
PUBLIC	?GetType@CGraphicThingInstance@@UBEHXZ		; CGraphicThingInstance::GetType
PUBLIC	??0CGraphicThingInstance@@QAE@XZ		; CGraphicThingInstance::CGraphicThingInstance
PUBLIC	??1CGraphicThingInstance@@UAE@XZ		; CGraphicThingInstance::~CGraphicThingInstance
PUBLIC	?DeformNoSkin@CGraphicThingInstance@@QAEXXZ	; CGraphicThingInstance::DeformNoSkin
PUBLIC	?UpdateLODLevel@CGraphicThingInstance@@QAEXXZ	; CGraphicThingInstance::UpdateLODLevel
PUBLIC	?UpdateTime@CGraphicThingInstance@@QAEXXZ	; CGraphicThingInstance::UpdateTime
PUBLIC	?DeformAll@CGraphicThingInstance@@QAEXXZ	; CGraphicThingInstance::DeformAll
PUBLIC	?LessRenderOrder@CGraphicThingInstance@@QAE_NPAV1@@Z ; CGraphicThingInstance::LessRenderOrder
PUBLIC	?Picking@CGraphicThingInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z ; CGraphicThingInstance::Picking
PUBLIC	?OnInitialize@CGraphicThingInstance@@UAEXXZ	; CGraphicThingInstance::OnInitialize
PUBLIC	?CreateDeviceObjects@CGraphicThingInstance@@QAE_NXZ ; CGraphicThingInstance::CreateDeviceObjects
PUBLIC	?DestroyDeviceObjects@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::DestroyDeviceObjects
PUBLIC	?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z ; CGraphicThingInstance::ReserveModelInstance
PUBLIC	?ReserveModelThing@CGraphicThingInstance@@QAEXH@Z ; CGraphicThingInstance::ReserveModelThing
PUBLIC	?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
PUBLIC	?CheckModelThingIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelThingIndex
PUBLIC	?CheckMotionThingIndex@CGraphicThingInstance@@QAE_NK@Z ; CGraphicThingInstance::CheckMotionThingIndex
PUBLIC	?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z ; CGraphicThingInstance::GetMotionThingPointer
PUBLIC	?IsMotionThing@CGraphicThingInstance@@QAE_NXZ	; CGraphicThingInstance::IsMotionThing
PUBLIC	?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterModelThing
PUBLIC	?RegisterLODThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterLODThing
PUBLIC	?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterMotionThing
PUBLIC	?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z ; CGraphicThingInstance::SetModelInstance
PUBLIC	?SetEndStopMotion@CGraphicThingInstance@@QAEXXZ	; CGraphicThingInstance::SetEndStopMotion
PUBLIC	?SetMotionAtEnd@CGraphicThingInstance@@QAEXXZ	; CGraphicThingInstance::SetMotionAtEnd
PUBLIC	?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDH@Z ; CGraphicThingInstance::AttachModelInstance
PUBLIC	?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDAAV1@H@Z ; CGraphicThingInstance::AttachModelInstance
PUBLIC	?DetachModelInstance@CGraphicThingInstance@@QAEXHAAV1@H@Z ; CGraphicThingInstance::DetachModelInstance
PUBLIC	?FindBoneIndex@CGraphicThingInstance@@QAE_NHPBDPAH@Z ; CGraphicThingInstance::FindBoneIndex
PUBLIC	?GetBonePosition@CGraphicThingInstance@@QAE_NHHPAM00@Z ; CGraphicThingInstance::GetBonePosition
PUBLIC	?ResetLocalTime@CGraphicThingInstance@@QAEXXZ	; CGraphicThingInstance::ResetLocalTime
PUBLIC	?InsertDelay@CGraphicThingInstance@@QAEXM@Z	; CGraphicThingInstance::InsertDelay
PUBLIC	?SetMaterialImagePointer@CGraphicThingInstance@@QAEXIPBDPAVCGraphicImage@@@Z ; CGraphicThingInstance::SetMaterialImagePointer
PUBLIC	?SetMaterialData@CGraphicThingInstance@@QAEXIPBDUSMaterialData@@@Z ; CGraphicThingInstance::SetMaterialData
PUBLIC	?SetSpecularInfo@CGraphicThingInstance@@QAEXIPBDHM@Z ; CGraphicThingInstance::SetSpecularInfo
PUBLIC	?__SetLocalTime@CGraphicThingInstance@@QAEXM@Z	; CGraphicThingInstance::__SetLocalTime
PUBLIC	?GetLastLocalTime@CGraphicThingInstance@@QAEMXZ	; CGraphicThingInstance::GetLastLocalTime
PUBLIC	?GetLocalTime@CGraphicThingInstance@@QAEMXZ	; CGraphicThingInstance::GetLocalTime
PUBLIC	?GetSecondElapsed@CGraphicThingInstance@@QAEMXZ	; CGraphicThingInstance::GetSecondElapsed
PUBLIC	?GetAverageSecondElapsed@CGraphicThingInstance@@QAEMXZ ; CGraphicThingInstance::GetAverageSecondElapsed
PUBLIC	?GetLODLevel@CGraphicThingInstance@@QAEEK@Z	; CGraphicThingInstance::GetLODLevel
PUBLIC	?GetHeight@CGraphicThingInstance@@QAEMXZ	; CGraphicThingInstance::GetHeight
PUBLIC	?RenderWithOneTexture@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::RenderWithOneTexture
PUBLIC	?RenderWithTwoTexture@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::RenderWithTwoTexture
PUBLIC	?BlendRenderWithOneTexture@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::BlendRenderWithOneTexture
PUBLIC	?BlendRenderWithTwoTexture@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::BlendRenderWithTwoTexture
PUBLIC	?GetLODControllerCount@CGraphicThingInstance@@QBEKXZ ; CGraphicThingInstance::GetLODControllerCount
PUBLIC	?GetLODControllerPointer@CGraphicThingInstance@@QBEPAVCGrannyLODController@@K@Z ; CGraphicThingInstance::GetLODControllerPointer
PUBLIC	?GetLODControllerPointer@CGraphicThingInstance@@QAEPAVCGrannyLODController@@K@Z ; CGraphicThingInstance::GetLODControllerPointer
PUBLIC	?ReloadTexture@CGraphicThingInstance@@QAEXXZ	; CGraphicThingInstance::ReloadTexture
PUBLIC	?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ ; CGraphicThingInstance::GetBaseThingPtr
PUBLIC	?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z	; CGraphicThingInstance::SetMotion
PUBLIC	?ChangeMotion@CGraphicThingInstance@@QAE_NKHM@Z	; CGraphicThingInstance::ChangeMotion
PUBLIC	?Intersect@CGraphicThingInstance@@QAE_NPAM00@Z	; CGraphicThingInstance::Intersect
PUBLIC	?GetBoundBox@CGraphicThingInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGraphicThingInstance::GetBoundBox
PUBLIC	?GetBoundBox@CGraphicThingInstance@@QAEHKPAUD3DXVECTOR3@@0@Z ; CGraphicThingInstance::GetBoundBox
PUBLIC	?GetBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z ; CGraphicThingInstance::GetBoneMatrix
PUBLIC	?GetCompositeBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z ; CGraphicThingInstance::GetCompositeBoneMatrix
PUBLIC	?UpdateTransform@CGraphicThingInstance@@QAEXPAUD3DXMATRIX@@MH@Z ; CGraphicThingInstance::UpdateTransform
PUBLIC	?BuildBoundingSphere@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::BuildBoundingSphere
PUBLIC	?BuildBoundingAABB@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::BuildBoundingAABB
PUBLIC	?CalculateBBox@CGraphicThingInstance@@UAEXXZ	; CGraphicThingInstance::CalculateBBox
PUBLIC	?GetBoundingSphere@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@AAM@Z ; CGraphicThingInstance::GetBoundingSphere
PUBLIC	?GetBoundingAABB@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@0@Z ; CGraphicThingInstance::GetBoundingAABB
PUBLIC	?OnClear@CGraphicThingInstance@@MAEXXZ		; CGraphicThingInstance::OnClear
PUBLIC	?OnDeform@CGraphicThingInstance@@MAEXXZ		; CGraphicThingInstance::OnDeform
PUBLIC	?OnUpdate@CGraphicThingInstance@@MAEXXZ		; CGraphicThingInstance::OnUpdate
PUBLIC	?OnRender@CGraphicThingInstance@@MAEXXZ		; CGraphicThingInstance::OnRender
PUBLIC	?OnBlendRender@CGraphicThingInstance@@MAEXXZ	; CGraphicThingInstance::OnBlendRender
PUBLIC	?OnRenderToShadowMap@CGraphicThingInstance@@MAEXXZ ; CGraphicThingInstance::OnRenderToShadowMap
PUBLIC	?OnRenderShadow@CGraphicThingInstance@@MAEXXZ	; CGraphicThingInstance::OnRenderShadow
PUBLIC	?OnRenderPCBlocker@CGraphicThingInstance@@MAEXXZ ; CGraphicThingInstance::OnRenderPCBlocker
PUBLIC	??1?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@QAE@XZ ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::~vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >
PUBLIC	?_Xlength@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@CAXXZ ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::_Xlength
PUBLIC	??1?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::~vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >
PUBLIC	?_Xlength@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::_Xlength
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Insert_node
PUBLIC	??1?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::~map<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >
PUBLIC	?OnUpdateCollisionData@CGraphicThingInstance@@MAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ; CGraphicThingInstance::OnUpdateCollisionData
PUBLIC	?OnUpdateHeighInstance@CGraphicThingInstance@@MAEXPAVCAttributeInstance@@@Z ; CGraphicThingInstance::OnUpdateHeighInstance
PUBLIC	?OnGetObjectHeight@CGraphicThingInstance@@MAE_NMMPAM@Z ; CGraphicThingInstance::OnGetObjectHeight
PUBLIC	?CreateSystem@CGraphicThingInstance@@SAXI@Z	; CGraphicThingInstance::CreateSystem
PUBLIC	?DestroySystem@CGraphicThingInstance@@SAXXZ	; CGraphicThingInstance::DestroySystem
PUBLIC	?New@CGraphicThingInstance@@SAPAV1@XZ		; CGraphicThingInstance::New
PUBLIC	?Delete@CGraphicThingInstance@@SAXPAV1@@Z	; CGraphicThingInstance::Delete
PUBLIC	?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ	; CGraphicThingInstance::HaveBlendThing
PUBLIC	?RecalcAccePositionMatrixFromBoneMatrix@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::RecalcAccePositionMatrixFromBoneMatrix
PUBLIC	??_GCGraphicThingInstance@@UAEPAXI@Z		; CGraphicThingInstance::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCGraphicThingInstance@@@@UAE@XZ ; CDynamicPool<CGraphicThingInstance>::~CDynamicPool<CGraphicThingInstance>
PUBLIC	?Delete@?$CDynamicPool@VCGraphicThingInstance@@@@KAXPAVCGraphicThingInstance@@@Z ; CDynamicPool<CGraphicThingInstance>::Delete
PUBLIC	?_Reallocate_exactly@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Reallocate_exactly
PUBLIC	?_Change_array@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXQAPAVCGraphicThingInstance@@II@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Xlength
PUBLIC	??$_Destroy_range@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAXPAUSModelThingSet@CGraphicThingInstance@@QAU12@AAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicThingInstance::SModelThingSet> >
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAPAUSModelThingSet@CGraphicThingInstance@@PAU12@IAAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThingInstance::SModelThingSet> >
PUBLIC	??$_Emplace_reallocate@ABQAVCGrannyLODController@@@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@AAEPAPAVCGrannyLODController@@QAPAV2@ABQAV2@@Z ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::_Emplace_reallocate<CGrannyLODController * const &>
PUBLIC	??$_Emplace_reallocate@ABQAV?$CRef@VCGraphicThing@@@@@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@AAEPAPAV?$CRef@VCGraphicThing@@@@QAPAV2@ABQAV2@@Z ; std::vector<CRef<CGraphicThing> *,std::allocator<CRef<CGraphicThing> *> >::_Emplace_reallocate<CRef<CGraphicThing> * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Copy_memmove@PAPAVCGrannyLODController@@PAPAV1@@std@@YAPAPAVCGrannyLODController@@PAPAV1@00@Z ; std::_Copy_memmove<CGrannyLODController * *,CGrannyLODController * *>
PUBLIC	??$_Copy_memmove@PAPAV?$CRef@VCGraphicThing@@@@PAPAV1@@std@@YAPAPAV?$CRef@VCGraphicThing@@@@PAPAV1@00@Z ; std::_Copy_memmove<CRef<CGraphicThing> * *,CRef<CGraphicThing> * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A ; CGraphicThingInstance::ms_kPool
PUBLIC	??_7CGraphicThingInstance@@6B@			; CGraphicThingInstance::`vftable'
PUBLIC	??_C@_0GI@OAKDPIDM@CGraphicThingInstance?3?3AttachMo@ ; `string'
PUBLIC	??_C@_0FH@FOLHJMIP@CGraphicThingInstance?3?3AttachMo@ ; `string'
PUBLIC	??_C@_0FN@FDKPIIBK@CGraphicThingInstance?3?3SetModel@ ; `string'
PUBLIC	??_C@_0IG@CNBHAOPI@CGraphicThingInstance?3?3SetModel@ ; `string'
PUBLIC	??_C@_0HL@PNAAKLOK@CGraphicThingInstance?3?3SetMater@ ; `string'
PUBLIC	??_C@_0GM@CIGLBIHL@CGraphicThingInstance?3?3SetMater@ ; `string'
PUBLIC	??_C@_0FG@DKLHHMAO@CGraphicThingInstance?3?3SetMater@ ; `string'
PUBLIC	??_C@_0EH@ILONCBFP@CGraphicThingInstance?3?3SetMater@ ; `string'
PUBLIC	??_C@_0FG@IDFCAGB@CGraphicThingInstance?3?3SetSpecu@ ; `string'
PUBLIC	??_C@_0EH@ILOLFLHJ@CGraphicThingInstance?3?3SetSpecu@ ; `string'
PUBLIC	??_C@_0EL@BCFDDCFO@CGraphicThingInstance?3?3Register@ ; `string'
PUBLIC	??_C@_0N@DLOEJLFF@Bip01?5Spine2@		; `string'
PUBLIC	??_C@_0ED@LMOOEEKB@CGraphicThingInstance?3?3UpdateLO@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGraphicThingInstance@@6B@			; CGraphicThingInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicThingInstance@@@8		; CGraphicThingInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicThingInstance@@8			; CGraphicThingInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicThingInstance@@8			; CGraphicThingInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicThingInstance@@8		; CGraphicThingInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicObjectInstance@@8		; CGraphicObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicObjectInstance@@@8		; CGraphicObjectInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicObjectInstance@@8			; CGraphicObjectInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicObjectInstance@@8			; CGraphicObjectInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@00000000
PUBLIC	__real@3e800000
PUBLIC	__real@3f000000
PUBLIC	__real@41900000
PUBLIC	__real@42480000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	_D3DXVec4Transform@12:PROC
EXTRN	_D3DXMatrixMultiply@12:PROC
EXTRN	_D3DXMatrixTransformation@28:PROC
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	?GetElapsedSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetElapsedSecond
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?Picking@CAttributeInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z:PROC ; CAttributeInstance::Picking
EXTRN	?GetHeight@CAttributeInstance@@QAEHMMPAM@Z:PROC	; CAttributeInstance::GetHeight
EXTRN	??0CGraphicObjectInstance@@QAE@XZ:PROC		; CGraphicObjectInstance::CGraphicObjectInstance
EXTRN	??1CGraphicObjectInstance@@UAE@XZ:PROC		; CGraphicObjectInstance::~CGraphicObjectInstance
EXTRN	?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ:PROC ; CGraphicObjectInstance::GetPosition
EXTRN	?Clear@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Clear
EXTRN	?isShow@CGraphicObjectInstance@@QAE_NXZ:PROC	; CGraphicObjectInstance::isShow
EXTRN	?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ:PROC ; CGraphicObjectInstance::GetTransform
EXTRN	?Initialize@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Initialize
EXTRN	?AddCollision@CGraphicObjectInstance@@QAEXPBVCStaticCollisionData@@PBUD3DXMATRIX@@@Z:PROC ; CGraphicObjectInstance::AddCollision
EXTRN	?SetHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z:PROC ; CGraphicObjectInstance::SetHeightInstance
EXTRN	?CheckMotionIndex@CGraphicThing@@QBE_NH@Z:PROC	; CGraphicThing::CheckMotionIndex
EXTRN	?GetMotionPointer@CGraphicThing@@QAEPAVCGrannyMotion@@H@Z:PROC ; CGraphicThing::GetMotionPointer
EXTRN	?UpdateTransform@CGrannyModelInstance@@QAEXPAUD3DXMATRIX@@M@Z:PROC ; CGrannyModelInstance::UpdateTransform
EXTRN	?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z:PROC ; CGrannyModelInstance::GetBoneMatrixPointer
EXTRN	?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z:PROC ; CGrannyModelInstance::GetCompositeBoneMatrixPointer
EXTRN	?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z:PROC ; CGrannyModelInstance::GetBoneIndexByName
EXTRN	?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z:PROC ; CGrannyModelInstance::GetBoundBox
EXTRN	??0CGrannyLODController@@QAE@XZ:PROC		; CGrannyLODController::CGrannyLODController
EXTRN	?Clear@CGrannyLODController@@QAEXXZ:PROC	; CGrannyLODController::Clear
EXTRN	?CreateDeviceObjects@CGrannyLODController@@QAEXXZ:PROC ; CGrannyLODController::CreateDeviceObjects
EXTRN	?DestroyDeviceObjects@CGrannyLODController@@QAEXXZ:PROC ; CGrannyLODController::DestroyDeviceObjects
EXTRN	?AddModel@CGrannyLODController@@QAEXPAVCGraphicThing@@HPAV1@@Z:PROC ; CGrannyLODController::AddModel
EXTRN	?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z:PROC ; CGrannyLODController::AttachModelInstance
EXTRN	?DetachModelInstance@CGrannyLODController@@QAEXPAV1@@Z:PROC ; CGrannyLODController::DetachModelInstance
EXTRN	?SetMaterialImagePointer@CGrannyLODController@@QAEXPBDPAVCGraphicImage@@@Z:PROC ; CGrannyLODController::SetMaterialImagePointer
EXTRN	?SetMaterialData@CGrannyLODController@@QAEXPBDABUSMaterialData@@@Z:PROC ; CGrannyLODController::SetMaterialData
EXTRN	?SetSpecularInfo@CGrannyLODController@@QAEXPBDHM@Z:PROC ; CGrannyLODController::SetSpecularInfo
EXTRN	?RenderWithOneTexture@CGrannyLODController@@QAEXXZ:PROC ; CGrannyLODController::RenderWithOneTexture
EXTRN	?RenderWithTwoTexture@CGrannyLODController@@QAEXXZ:PROC ; CGrannyLODController::RenderWithTwoTexture
EXTRN	?BlendRenderWithOneTexture@CGrannyLODController@@QAEXXZ:PROC ; CGrannyLODController::BlendRenderWithOneTexture
EXTRN	?UpdateLODLevel@CGrannyLODController@@QAEXMM@Z:PROC ; CGrannyLODController::UpdateLODLevel
EXTRN	?UpdateTime@CGrannyLODController@@QAEXM@Z:PROC	; CGrannyLODController::UpdateTime
EXTRN	?Deform@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z:PROC ; CGrannyLODController::Deform
EXTRN	?DeformNoSkin@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z:PROC ; CGrannyLODController::DeformNoSkin
EXTRN	?DeformAll@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z:PROC ; CGrannyLODController::DeformAll
EXTRN	?RenderToShadowMap@CGrannyLODController@@QAEXXZ:PROC ; CGrannyLODController::RenderToShadowMap
EXTRN	?RenderShadow@CGrannyLODController@@QAEXXZ:PROC	; CGrannyLODController::RenderShadow
EXTRN	?ReloadTexture@CGrannyLODController@@QAEXXZ:PROC ; CGrannyLODController::ReloadTexture
EXTRN	?GetBoundBox@CGrannyLODController@@QAEXPAUD3DXVECTOR3@@0@Z:PROC ; CGrannyLODController::GetBoundBox
EXTRN	?Intersect@CGrannyLODController@@QAE_NPBUD3DXMATRIX@@PAM11@Z:PROC ; CGrannyLODController::Intersect
EXTRN	?SetLocalTime@CGrannyLODController@@QAEXM@Z:PROC ; CGrannyLODController::SetLocalTime
EXTRN	?ResetLocalTime@CGrannyLODController@@QAEXXZ:PROC ; CGrannyLODController::ResetLocalTime
EXTRN	?SetMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@MHM@Z:PROC ; CGrannyLODController::SetMotionPointer
EXTRN	?ChangeMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@HM@Z:PROC ; CGrannyLODController::ChangeMotionPointer
EXTRN	?SetMotionAtEnd@CGrannyLODController@@QAEXXZ:PROC ; CGrannyLODController::SetMotionAtEnd
EXTRN	?isModelInstance@CGrannyLODController@@QAEHXZ:PROC ; CGrannyLODController::isModelInstance
EXTRN	?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ:PROC ; CGrannyLODController::GetModelInstance
EXTRN	??_ECGraphicThingInstance@@UAEPAXI@Z:PROC	; CGraphicThingInstance::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CGraphicThingInstance@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CGraphicThingInstance@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@41900000
CONST	SEGMENT
__real@41900000 DD 041900000r			; 18
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$rs	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$rs	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R2CGraphicObjectInstance@@8 DD FLAT:??_R1A@?0A@EA@CGraphicObjectInstance@@8 ; CGraphicObjectInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R3CGraphicObjectInstance@@8 DD 00H			; CGraphicObjectInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGraphicObjectInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicObjectInstance@@@8
data$rs	SEGMENT
??_R0?AVCGraphicObjectInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicObjectInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicObjectInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicObjectInstance@@8 DD FLAT:??_R0?AVCGraphicObjectInstance@@@8 ; CGraphicObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicObjectInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicThingInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicThingInstance@@8 DD FLAT:??_R0?AVCGraphicThingInstance@@@8 ; CGraphicThingInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicThingInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicThingInstance@@8
rdata$r	SEGMENT
??_R2CGraphicThingInstance@@8 DD FLAT:??_R1A@?0A@EA@CGraphicThingInstance@@8 ; CGraphicThingInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicObjectInstance@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicThingInstance@@8
rdata$r	SEGMENT
??_R3CGraphicThingInstance@@8 DD 00H			; CGraphicThingInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CGraphicThingInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicThingInstance@@@8
data$rs	SEGMENT
??_R0?AVCGraphicThingInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicThingInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicThingInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGraphicThingInstance@@6B@
rdata$r	SEGMENT
??_R4CGraphicThingInstance@@6B@ DD 00H			; CGraphicThingInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicThingInstance@@@8
	DD	FLAT:??_R3CGraphicThingInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@LMOOEEKB@CGraphicThingInstance?3?3UpdateLO@
CONST	SEGMENT
??_C@_0ED@LMOOEEKB@CGraphicThingInstance?3?3UpdateLO@ DB 'CGraphicThingIn'
	DB	'stance::UpdateLODLevel - GetCurrentCamera() == NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DLOEJLFF@Bip01?5Spine2@
CONST	SEGMENT
??_C@_0N@DLOEJLFF@Bip01?5Spine2@ DB 'Bip01 Spine2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@BCFDDCFO@CGraphicThingInstance?3?3Register@
CONST	SEGMENT
??_C@_0EL@BCFDDCFO@CGraphicThingInstance?3?3Register@ DB 'CGraphicThingIn'
	DB	'stance::RegisterModelThing(iModelThing=%d, pModelThing=%s)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@ILOLFLHJ@CGraphicThingInstance?3?3SetSpecu@
CONST	SEGMENT
??_C@_0EH@ILOLFLHJ@CGraphicThingInstance?3?3SetSpecu@ DB 'CGraphicThingIn'
	DB	'stance::SetSpecularInfo(ePart(%d)) - ePart Data is NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@IDFCAGB@CGraphicThingInstance?3?3SetSpecu@
CONST	SEGMENT
??_C@_0FG@IDFCAGB@CGraphicThingInstance?3?3SetSpecu@ DB 'CGraphicThingIns'
	DB	'tance::SetSpecularInfo(ePart(%d)<uPartCount(%d)) - ePart OUT '
	DB	'OF RANGE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@ILONCBFP@CGraphicThingInstance?3?3SetMater@
CONST	SEGMENT
??_C@_0EH@ILONCBFP@CGraphicThingInstance?3?3SetMater@ DB 'CGraphicThingIn'
	DB	'stance::SetMaterialData(ePart(%d)) - ePart Data is NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@DKLHHMAO@CGraphicThingInstance?3?3SetMater@
CONST	SEGMENT
??_C@_0FG@DKLHHMAO@CGraphicThingInstance?3?3SetMater@ DB 'CGraphicThingIn'
	DB	'stance::SetMaterialData(ePart(%d)<uPartCount(%d)) - ePart OUT'
	DB	' OF RANGE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@CIGLBIHL@CGraphicThingInstance?3?3SetMater@
CONST	SEGMENT
??_C@_0GM@CIGLBIHL@CGraphicThingInstance?3?3SetMater@ DB 'CGraphicThingIn'
	DB	'stance::SetMaterialImagePointer(ePart(%d), c_szImageName=%s, '
	DB	'pImage=%s) - ePart Data is NULL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0HL@PNAAKLOK@CGraphicThingInstance?3?3SetMater@
CONST	SEGMENT
??_C@_0HL@PNAAKLOK@CGraphicThingInstance?3?3SetMater@ DB 'CGraphicThingIn'
	DB	'stance::SetMaterialImagePointer(ePart(%d)<uPartCount(%d), c_s'
	DB	'zImageName=%s, pImage=%s) - ePart OUT OF RANGE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0IG@CNBHAOPI@CGraphicThingInstance?3?3SetModel@
CONST	SEGMENT
??_C@_0IG@CNBHAOPI@CGraphicThingInstance?3?3SetModel@ DB 'CGraphicThingIn'
	DB	'stance::SetModelInstanceByOtherSkeletonInstance(iSkelInstance'
	DB	'=%d, iDstModelInstance=%d, pModelThing=%d, iSrcModel=%d)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0FN@FDKPIIBK@CGraphicThingInstance?3?3SetModel@
CONST	SEGMENT
??_C@_0FN@FDKPIIBK@CGraphicThingInstance?3?3SetModel@ DB 'CGraphicThingIn'
	DB	'stance::SetModelInstance(iDstModelInstance=%d, pModelThing=%d'
	DB	', iSrcModel=%d)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@FOLHJMIP@CGraphicThingInstance?3?3AttachMo@
CONST	SEGMENT
??_C@_0FH@FOLHJMIP@CGraphicThingInstance?3?3AttachMo@ DB 'CGraphicThingIn'
	DB	'stance::AttachModelInstance(iDstModelInstance=%d, iSrcModelIn'
	DB	'stance=%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@OAKDPIDM@CGraphicThingInstance?3?3AttachMo@
CONST	SEGMENT
??_C@_0GI@OAKDPIDM@CGraphicThingInstance?3?3AttachMo@ DB 'CGraphicThingIn'
	DB	'stance::AttachModelInstance(iDstModelInstance=%d, c_szBoneNam'
	DB	'e=%s, iSrcModelInstance=%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicThingInstance@@6B@
CONST	SEGMENT
??_7CGraphicThingInstance@@6B@ DD FLAT:??_R4CGraphicThingInstance@@6B@ ; CGraphicThingInstance::`vftable'
	DD	FLAT:??_ECGraphicThingInstance@@UAEPAXI@Z
	DD	FLAT:?GetType@CGraphicThingInstance@@UBEHXZ
	DD	FLAT:?OnInitialize@CGraphicThingInstance@@UAEXXZ
	DD	FLAT:?GetBoundingSphere@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@AAM@Z
	DD	FLAT:?OnRender@CGraphicThingInstance@@MAEXXZ
	DD	FLAT:?OnBlendRender@CGraphicThingInstance@@MAEXXZ
	DD	FLAT:?OnRenderToShadowMap@CGraphicThingInstance@@MAEXXZ
	DD	FLAT:?OnRenderShadow@CGraphicThingInstance@@MAEXXZ
	DD	FLAT:?OnRenderPCBlocker@CGraphicThingInstance@@MAEXXZ
	DD	FLAT:?OnClear@CGraphicThingInstance@@MAEXXZ
	DD	FLAT:?OnUpdate@CGraphicThingInstance@@MAEXXZ
	DD	FLAT:?OnDeform@CGraphicThingInstance@@MAEXXZ
	DD	FLAT:?OnUpdateCollisionData@CGraphicThingInstance@@MAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z
	DD	FLAT:?OnUpdateHeighInstance@CGraphicThingInstance@@MAEXPAVCAttributeInstance@@@Z
	DD	FLAT:?OnGetObjectHeight@CGraphicThingInstance@@MAE_NMMPAM@Z
	DD	FLAT:?CalculateBBox@CGraphicThingInstance@@UAEXXZ
	DD	FLAT:?GetBoundingAABB@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@0@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A DD FLAT:??_7?$CDynamicPool@VCGraphicThingInstance@@@@6B@ ; CGraphicThingInstance::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABK@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABK@1@$$QAV?$tuple@$$V@1@@Z$1
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABK@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABK@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABK@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABK$$V@?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@_N@1@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABK$$V@?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@_N@1@ABK@Z$2
__ehfuncinfo$??$_Try_emplace@ABK$$V@?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@_N@1@ABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABK$$V@?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@_N@1@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$stl_wipe_second@V?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@@@YAXAAV?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??$stl_wipe_second@V?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@@@YAXAAV?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$stl_wipe_second@V?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@@@YAXAAV?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCGraphicThingInstance@@@@QAEPAVCGraphicThingInstance@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCGraphicThingInstance@@@@QAEPAVCGraphicThingInstance@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCGraphicThingInstance@@@@QAEPAVCGraphicThingInstance@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCGraphicThingInstance@@@@QAEPAVCGraphicThingInstance@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$stl_wipe@V?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@@@YAXAAV?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??$stl_wipe@V?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@@@YAXAAV?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$stl_wipe@V?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@@@YAXAAV?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CRef@VCGraphicThing@@@@QAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CRef@VCGraphicThing@@@@QAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CRef@VCGraphicThing@@@@QAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CRef@VCGraphicThing@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CGraphicThingInstance@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CGraphicThingInstance@@SAPAV1@XZ$0
__ehfuncinfo$?New@CGraphicThingInstance@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CGraphicThingInstance@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@QAEAAPAV?$CRef@VCGraphicThing@@@@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@QAEAAPAV?$CRef@VCGraphicThing@@@@ABK@Z$2
__ehfuncinfo$??A?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@QAEAAPAV?$CRef@VCGraphicThing@@@@ABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@QAEAAPAV?$CRef@VCGraphicThing@@@@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnClear@CGraphicThingInstance@@MAEXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?OnClear@CGraphicThingInstance@@MAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnClear@CGraphicThingInstance@@MAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z$3
__ehfuncinfo$?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z$2
__ehfuncinfo$?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z$0
__ehfuncinfo$?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGraphicThingInstance@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGraphicThingInstance@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CGraphicThingInstance@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CGraphicThingInstance@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CGraphicThingInstance@@QAE@XZ$3
__ehfuncinfo$??0CGraphicThingInstance@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CGraphicThingInstance@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAV?$CRef@VCGraphicThing@@@@PAPAV1@@std@@YAPAPAV?$CRef@VCGraphicThing@@@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAV?$CRef@VCGraphicThing@@@@PAPAV1@@std@@YAPAPAV?$CRef@VCGraphicThing@@@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CRef<CGraphicThing> * *,CRef<CGraphicThing> * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAV?$CRef@VCGraphicThing@@@@PAPAV1@@std@@YAPAPAV?$CRef@VCGraphicThing@@@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CRef<CGraphicThing> * *,CRef<CGraphicThing> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGrannyLODController@@PAPAV1@@std@@YAPAPAVCGrannyLODController@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGrannyLODController@@PAPAV1@@std@@YAPAPAVCGrannyLODController@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGrannyLODController * *,CGrannyLODController * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGrannyLODController@@PAPAV1@@std@@YAPAPAVCGrannyLODController@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGrannyLODController * *,CGrannyLODController * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv495 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	2b c2		 sub	 eax, edx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	2b c2		 sub	 eax, edx
  0001d	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 d2 00 00
	00		 je	 $LN66@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b ca		 sub	 ecx, edx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 f9 02	 sar	 ecx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b d1		 mov	 edx, ecx
  00040	d1 ea		 shr	 edx, 1
  00042	2b c2		 sub	 eax, edx
  00044	3b c8		 cmp	 ecx, eax
  00046	76 17		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00048	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  0004d	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00058	83 c4 04	 add	 esp, 4
  0005b	8b f8		 mov	 edi, eax
  0005d	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00062	8b f7		 mov	 esi, edi
  00064	3b c7		 cmp	 eax, edi
  00066	0f 43 f0	 cmovae	 esi, eax
  00069	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0006f	0f 87 8d 00 00
	00		 ja	 $LN67@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00075	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b f8		 mov	 edi, eax
  0008e	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  00090	85 c0		 test	 eax, eax
  00092	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009a	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009d	8b f8		 mov	 edi, eax
  0009f	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000a1	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000a6	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000ac	89 4d fc	 mov	 DWORD PTR tv495[ebp], ecx
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	89 01		 mov	 DWORD PTR [ecx], eax

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b6	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000bb	3b c1		 cmp	 eax, ecx
  000bd	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bf	8b c7		 mov	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000c1	eb 17		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c3	57		 push	 edi
  000c4	50		 push	 eax
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	83 c0 04	 add	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d7	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000e5	8b cb		 mov	 ecx, ebx
  000e7	56		 push	 esi
  000e8	ff 75 f8	 push	 DWORD PTR __Newsize$1$[ebp]
  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXQAPAVCGraphicThingInstance@@II@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Change_array

; 920  :         return _Newvec + _Whereoff;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx

; 921  :     }

  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
$LN66@Emplace_re:

; 888  :             _Xlength();

  000fd	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Xlength
$LN67@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00102	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN64@Emplace_re:
  00107	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAV?$CRef@VCGraphicThing@@@@@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@AAEPAPAV?$CRef@VCGraphicThing@@@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAV?$CRef@VCGraphicThing@@@@@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@AAEPAPAV?$CRef@VCGraphicThing@@@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CRef<CGraphicThing> *,std::allocator<CRef<CGraphicThing> *> >::_Emplace_reallocate<CRef<CGraphicThing> * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CRef@VCGraphicThing@@@@PAPAV1@@std@@YAPAPAV?$CRef@VCGraphicThing@@@@PAPAV1@00@Z ; std::_Copy_memmove<CRef<CGraphicThing> * *,CRef<CGraphicThing> * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CRef@VCGraphicThing@@@@PAPAV1@@std@@YAPAPAV?$CRef@VCGraphicThing@@@@PAPAV1@00@Z ; std::_Copy_memmove<CRef<CGraphicThing> * *,CRef<CGraphicThing> * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@CAXXZ ; std::vector<CRef<CGraphicThing> *,std::allocator<CRef<CGraphicThing> *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAV?$CRef@VCGraphicThing@@@@@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@AAEPAPAV?$CRef@VCGraphicThing@@@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CRef<CGraphicThing> *,std::allocator<CRef<CGraphicThing> *> >::_Emplace_reallocate<CRef<CGraphicThing> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGrannyLODController@@@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@AAEPAPAVCGrannyLODController@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGrannyLODController@@@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@AAEPAPAVCGrannyLODController@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::_Emplace_reallocate<CGrannyLODController * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGrannyLODController@@PAPAV1@@std@@YAPAPAVCGrannyLODController@@PAPAV1@00@Z ; std::_Copy_memmove<CGrannyLODController * *,CGrannyLODController * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGrannyLODController@@PAPAV1@@std@@YAPAPAVCGrannyLODController@@PAPAV1@00@Z ; std::_Copy_memmove<CGrannyLODController * *,CGrannyLODController * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@CAXXZ ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGrannyLODController@@@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@AAEPAPAVCGrannyLODController@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::_Emplace_reallocate<CGrannyLODController * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAPAUSModelThingSet@CGraphicThingInstance@@PAU12@IAAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAPAUSModelThingSet@CGraphicThingInstance@@PAU12@IAAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThingInstance::SModelThingSet> >, COMDAT

; 1887 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1888 :     // value-initialize _Count objects to raw _First, using _Al
; 1889 :     using _Ptrty = typename _Alloc::value_type*;
; 1890 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1891 : #if _HAS_CXX20
; 1892 :         if (!_STD is_constant_evaluated())
; 1893 : #endif // _HAS_CXX20
; 1894 :         {
; 1895 :             auto _PFirst = _Unfancy(_First);
; 1896 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1897 :             return _First + _Count;
; 1898 :         }
; 1899 :     }
; 1900 : 
; 1901 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1902 :     for (; 0 < _Count; --_Count) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	56		 push	 esi

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1888 :     // value-initialize _Count objects to raw _First, using _Al
; 1889 :     using _Ptrty = typename _Alloc::value_type*;
; 1890 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1891 : #if _HAS_CXX20
; 1892 :         if (!_STD is_constant_evaluated())
; 1893 : #endif // _HAS_CXX20
; 1894 :         {
; 1895 :             auto _PFirst = _Unfancy(_First);
; 1896 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1897 :             return _First + _Count;
; 1898 :         }
; 1899 :     }
; 1900 : 
; 1901 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1902 :     for (; 0 < _Count; --_Count) {

  0000a	85 c0		 test	 eax, eax
  0000c	74 25		 je	 SHORT $LN3@Uninitiali
  0000e	66 90		 npad	 2
$LL4@Uninitiali:

; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00010	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00017	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0001d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00024	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1664 :         ++_Last;

  0002b	83 c6 0c	 add	 esi, 12			; 0000000cH

; 1888 :     // value-initialize _Count objects to raw _First, using _Al
; 1889 :     using _Ptrty = typename _Alloc::value_type*;
; 1890 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1891 : #if _HAS_CXX20
; 1892 :         if (!_STD is_constant_evaluated())
; 1893 : #endif // _HAS_CXX20
; 1894 :         {
; 1895 :             auto _PFirst = _Unfancy(_First);
; 1896 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1897 :             return _First + _Count;
; 1898 :         }
; 1899 :     }
; 1900 : 
; 1901 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1902 :     for (; 0 < _Count; --_Count) {

  0002e	83 e8 01	 sub	 eax, 1
  00031	75 dd		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1658 :         _Destroy_range(_First, _Last, _Al);

  00033	ff 75 10	 push	 DWORD PTR __Al$[ebp]
  00036	56		 push	 esi
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAXPAUSModelThingSet@CGraphicThingInstance@@QAU12@AAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicThingInstance::SModelThingSet> >
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1903 :         _Backout._Emplace_back();
; 1904 :     }
; 1905 : 
; 1906 :     return _Backout._Release();

  00040	8b c6		 mov	 eax, esi
  00042	5e		 pop	 esi

; 1907 : }

  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAPAUSModelThingSet@CGraphicThingInstance@@PAU12@IAAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThingInstance::SModelThingSet> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_this$1$ = -16						; size = 4
__Oldsize$1$ = -12					; size = 4
tv638 = -8						; size = 4
$T2 = -4						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1574 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1575 :         if (_Newsize > max_size()) {

  00009	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	89 5d f0	 mov	 DWORD PTR _this$1$[ebp], ebx
  00011	81 ff 55 55 55
	15		 cmp	 edi, 357913941		; 15555555H
  00017	0f 87 7a 01 00
	00		 ja	 $LN88@Resize_rea

; 1577 :         }
; 1578 : 
; 1579 :         auto& _Al         = _Getal();
; 1580 :         auto& _My_data    = _Mypair._Myval2;
; 1581 :         pointer& _Myfirst = _My_data._Myfirst;
; 1582 :         pointer& _Mylast  = _My_data._Mylast;
; 1583 : 
; 1584 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0001d	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00020	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00025	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00027	f7 e9		 imul	 ecx

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00029	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0002c	2b 0b		 sub	 ecx, DWORD PTR [ebx]

; 1577 :         }
; 1578 : 
; 1579 :         auto& _Al         = _Getal();
; 1580 :         auto& _My_data    = _Mypair._Myval2;
; 1581 :         pointer& _Myfirst = _My_data._Myfirst;
; 1582 :         pointer& _Mylast  = _My_data._Mylast;
; 1583 : 
; 1584 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002e	d1 fa		 sar	 edx, 1
  00030	8b c2		 mov	 eax, edx
  00032	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00035	03 c2		 add	 eax, edx
  00037	89 45 f4	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0003a	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0003f	f7 e9		 imul	 ecx

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00041	b8 55 55 55 15	 mov	 eax, 357913941		; 15555555H

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00046	d1 fa		 sar	 edx, 1
  00048	8b ca		 mov	 ecx, edx
  0004a	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0004d	03 ca		 add	 ecx, edx

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0004f	8b d1		 mov	 edx, ecx
  00051	d1 ea		 shr	 edx, 1
  00053	2b c2		 sub	 eax, edx
  00055	3b c8		 cmp	 ecx, eax
  00057	76 15		 jbe	 SHORT $LN10@Resize_rea

; 2030 :             return _Max; // geometric growth would overflow

  00059	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0005e	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0005f	89 45 f8	 mov	 DWORD PTR tv638[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00062	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00067	83 c4 04	 add	 esp, 4
  0006a	8b f0		 mov	 esi, eax
  0006c	eb 49		 jmp	 SHORT $LN86@Resize_rea
$LN10@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0006e	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 2034 : 
; 2035 :         if (_Geometric < _Newsize) {

  00071	3b c7		 cmp	 eax, edi
  00073	73 1f		 jae	 SHORT $LN11@Resize_rea

; 2036 :             return _Newsize; // geometric growth would be insufficient

  00075	8b c7		 mov	 eax, edi
$LN83@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 65   :     return _Count * _Ty_size;

  00077	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0007a	c1 e0 02	 shl	 eax, 2
  0007d	89 45 f8	 mov	 DWORD PTR tv638[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00080	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00085	72 1a		 jb	 SHORT $LN22@Resize_rea

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0008d	83 c4 04	 add	 esp, 4
  00090	8b f0		 mov	 esi, eax
  00092	eb 23		 jmp	 SHORT $LN86@Resize_rea
$LN11@Resize_rea:

; 60   :         if (_Count > _Max_possible) {

  00094	3d 55 55 55 15	 cmp	 eax, 357913941		; 15555555H
  00099	0f 87 fd 00 00
	00		 ja	 $LN89@Resize_rea
  0009f	eb d6		 jmp	 SHORT $LN83@Resize_rea
$LN22@Resize_rea:

; 234  :     if (_Bytes != 0) {

  000a1	85 c0		 test	 eax, eax
  000a3	74 10		 je	 SHORT $LN23@Resize_rea

; 77   :         return ::operator new(_Bytes);

  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ab	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000ae	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  000b1	8b f0		 mov	 esi, eax
  000b3	eb 05		 jmp	 SHORT $LN21@Resize_rea
$LN23@Resize_rea:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000b5	33 f6		 xor	 esi, esi
$LN86@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1596 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

  000b7	89 75 fc	 mov	 DWORD PTR $T2[ebp], esi
$LN21@Resize_rea:
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __Oldsize$1$[ebp]
  000bd	8b c7		 mov	 eax, edi
  000bf	2b c1		 sub	 eax, ecx
  000c1	53		 push	 ebx
  000c2	50		 push	 eax
  000c3	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  000c6	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAPAUSModelThingSet@CGraphicThingInstance@@PAU12@IAAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThingInstance::SModelThingSet> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1793 :     const auto _ULast = _Get_unwrapped(_Last);

  000cf	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1596 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

  000d2	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 835  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000d5	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000d7	8b fe		 mov	 edi, esi

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000d9	3b c1		 cmp	 eax, ecx
  000db	74 34		 je	 SHORT $LN30@Resize_rea
  000dd	8b d9		 mov	 ebx, ecx
  000df	90		 npad	 1
$LL31@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  000e0	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  000e3	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]

; 654  :     _Val         = static_cast<_Other&&>(_New_val);

  000e8	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  000ef	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  000f6	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000fc	83 c0 0c	 add	 eax, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 393  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

  000ff	89 0f		 mov	 DWORD PTR [edi], ecx
  00101	89 57 04	 mov	 DWORD PTR [edi+4], edx
  00104	89 77 08	 mov	 DWORD PTR [edi+8], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1664 :         ++_Last;

  00107	83 c7 0c	 add	 edi, 12			; 0000000cH

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  0010a	3b c3		 cmp	 eax, ebx
  0010c	75 d2		 jne	 SHORT $LL31@Resize_rea
  0010e	8b 5d f0	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN30@Resize_rea:

; 1658 :         _Destroy_range(_First, _Last, _Al);

  00111	53		 push	 ebx
  00112	57		 push	 edi
  00113	57		 push	 edi
  00114	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAXPAUSModelThingSet@CGraphicThingInstance@@QAU12@AAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicThingInstance::SModelThingSet> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00119	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1658 :         _Destroy_range(_First, _Last, _Al);

  0011b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  0011e	85 c9		 test	 ecx, ecx
  00120	74 4e		 je	 SHORT $LN65@Resize_rea

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00122	53		 push	 ebx
  00123	ff 73 04	 push	 DWORD PTR [ebx+4]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAXPAUSModelThingSet@CGraphicThingInstance@@QAU12@AAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicThingInstance::SModelThingSet> >

; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0012c	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0012f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00134	8b 33		 mov	 esi, DWORD PTR [ebx]
  00136	83 c4 0c	 add	 esp, 12			; 0000000cH
  00139	2b ce		 sub	 ecx, esi
  0013b	f7 e9		 imul	 ecx
  0013d	d1 fa		 sar	 edx, 1
  0013f	8b c2		 mov	 eax, edx
  00141	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00144	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00146	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00149	c1 e1 02	 shl	 ecx, 2

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0014c	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00152	72 12		 jb	 SHORT $LN75@Resize_rea

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00154	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00157	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0015a	2b f2		 sub	 esi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0015c	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  0015f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00162	77 2e		 ja	 SHORT $LN72@Resize_rea

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00164	8b f2		 mov	 esi, edx
$LN75@Resize_rea:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00166	51		 push	 ecx
  00167	56		 push	 esi
  00168	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0016d	83 c4 08	 add	 esp, 8
$LN65@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2092 :         _Myfirst = _Newvec;

  00170	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00173	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00176	89 0b		 mov	 DWORD PTR [ebx], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00178	5f		 pop	 edi
  00179	5e		 pop	 esi
  0017a	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0017d	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00180	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  00183	8b 45 f8	 mov	 eax, DWORD PTR tv638[ebp]
  00186	03 c1		 add	 eax, ecx
  00188	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  0018b	5b		 pop	 ebx

; 1611 :     }

  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c2 08 00	 ret	 8
$LN72@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00192	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1576 :             _Xlength();

  00197	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::_Xlength
$LN89@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0019c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN85@Resize_rea:
  001a1	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >, COMDAT
; _this$ = ecx

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 654  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 748  :         }
; 749  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >, COMDAT
; _this$ = ecx

; 1017 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 255  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 1018 :             _Al.deallocate(_Ptr, 1);
; 1019 :         }
; 1020 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1609 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1610 :         const auto _Scary = _Get_scary();
; 1611 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1612 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1613 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1614 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1615 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1616 :                 _Result._Location._Child = _Tree_child::_Right;
; 1617 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1618 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1619 :                 _Result._Location._Child = _Tree_child::_Left;
; 1620 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1621 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1612 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1613 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1622 :             }
; 1623 :         }
; 1624 : 
; 1625 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1626 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAXPAUSModelThingSet@CGraphicThingInstance@@QAU12@AAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAXPAUSModelThingSet@CGraphicThingInstance@@QAU12@AAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicThingInstance::SModelThingSet> >, COMDAT

; 943  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 947  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 4e		 je	 SHORT $LN46@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	85 c0		 test	 eax, eax
  00014	74 40		 je	 SHORT $LN17@Destroy_ra

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00016	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00019	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00024	72 12		 jb	 SHORT $LN33@Destroy_ra

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00026	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00029	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0002e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00031	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00034	77 2b		 ja	 SHORT $LN30@Destroy_ra

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00036	8b c2		 mov	 eax, edx
$LN33@Destroy_ra:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00038	51		 push	 ecx
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0003f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00045	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00048	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2114 :             _Myend   = nullptr;

  0004f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN17@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 947  :         for (; _First != _Last; ++_First) {

  00056	83 c6 0c	 add	 esi, 12			; 0000000cH
  00059	3b f7		 cmp	 esi, edi
  0005b	75 b3		 jne	 SHORT $LL4@Destroy_ra
$LN46@Destroy_ra:
  0005d	5f		 pop	 edi

; 948  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 949  :         }
; 950  :     }
; 951  : }

  0005e	5e		 pop	 esi
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN30@Destroy_ra:

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00061	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN47@Destroy_ra:
  00066	cc		 int	 3
??$_Destroy_range@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAXPAUSModelThingSet@CGraphicThingInstance@@QAU12@AAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicThingInstance::SModelThingSet> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CGraphicThingInstance::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A ; CGraphicThingInstance::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCGraphicThingInstance@@@@UAE@XZ ; CDynamicPool<CGraphicThingInstance>::~CDynamicPool<CGraphicThingInstance>
??__F?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CGraphicThingInstance::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ??__E?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CGraphicThingInstance::ms_kPool'', COMDAT

; 9    : CDynamicPool<CGraphicThingInstance>		CGraphicThingInstance::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CGraphicThingInstance::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CGraphicThingInstance::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCGraphicThingInstance@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCGraphicThingInstance@@@@UAEPAXI@Z PROC ; CDynamicPool<CGraphicThingInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCGraphicThingInstance@@@@UAE@XZ ; CDynamicPool<CGraphicThingInstance>::~CDynamicPool<CGraphicThingInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCGraphicThingInstance@@@@UAEPAXI@Z ENDP ; CDynamicPool<CGraphicThingInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXQAPAVCGraphicThingInstance@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXQAPAVCGraphicThingInstance@@II@Z PROC ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Change_array, COMDAT
; _this$ = ecx

; 2076 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2077 :         // orphan all iterators, discard old array, acquire new array
; 2078 :         auto& _Al         = _Getal();
; 2079 :         auto& _My_data    = _Mypair._Myval2;
; 2080 :         pointer& _Myfirst = _My_data._Myfirst;
; 2081 :         pointer& _Mylast  = _My_data._Mylast;
; 2082 :         pointer& _Myend   = _My_data._Myend;
; 2083 : 
; 2084 :         _My_data._Orphan_all();
; 2085 : 
; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN8@Change_arr

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN18@Change_arr

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN15@Change_arr

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN18@Change_arr:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2092 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 2096 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXQAPAVCGraphicThingInstance@@II@Z ENDP ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Size$1$ = -4						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 1665 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1666 :         auto& _Al         = _Getal();
; 1667 :         auto& _My_data    = _Mypair._Myval2;
; 1668 :         pointer& _Myfirst = _My_data._Myfirst;
; 1669 :         pointer& _Mylast  = _My_data._Mylast;
; 1670 : 
; 1671 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000f	2b 06		 sub	 eax, DWORD PTR [esi]
  00011	c1 f8 02	 sar	 eax, 2
  00014	89 45 fc	 mov	 DWORD PTR __Size$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00017	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0001d	0f 87 8a 00 00
	00		 ja	 $LN55@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00023	c1 e3 02	 shl	 ebx, 2

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  0002c	72 0d		 jb	 SHORT $LN15@Reallocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00034	83 c4 04	 add	 esp, 4
  00037	8b f8		 mov	 edi, eax
  00039	eb 13		 jmp	 SHORT $LN14@Reallocate
$LN15@Reallocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0003b	85 db		 test	 ebx, ebx
  0003d	74 0d		 je	 SHORT $LN16@Reallocate

; 77   :         return ::operator new(_Bytes);

  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00045	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00048	8b f8		 mov	 edi, eax
  0004a	eb 02		 jmp	 SHORT $LN14@Reallocate
$LN16@Reallocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0004c	33 ff		 xor	 edi, edi
$LN14@Reallocate:

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004e	57		 push	 edi
  0004f	ff 76 04	 push	 DWORD PTR [esi+4]
  00052	ff 36		 push	 DWORD PTR [esi]
  00054	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00059	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 2c		 je	 SHORT $LN39@Reallocate

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN49@Reallocate

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 26		 ja	 SHORT $LN46@Reallocate

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN49@Reallocate:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008b	83 c4 08	 add	 esp, 8
$LN39@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR __Size$1$[ebp]
  00091	89 3e		 mov	 DWORD PTR [esi], edi
  00093	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00099	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  0009c	5f		 pop	 edi
  0009d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 1687 :     }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
$LN46@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN55@Reallocate:

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000ad	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN53@Reallocate:
  000b2	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCGraphicThingInstance@@@@KAXPAVCGraphicThingInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCGraphicThingInstance@@@@KAXPAVCGraphicThingInstance@@@Z PROC ; CDynamicPool<CGraphicThingInstance>::Delete, COMDAT

; 113  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  : 		delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 115  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCGraphicThingInstance@@@@KAXPAVCGraphicThingInstance@@@Z ENDP ; CDynamicPool<CGraphicThingInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCGraphicThingInstance@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCGraphicThingInstance@@@@UAE@XZ PROC	; CDynamicPool<CGraphicThingInstance>::~CDynamicPool<CGraphicThingInstance>, COMDAT
; _this$ = ecx

; 18   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCGraphicThingInstance@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 2114 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 2114 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h

; 26   : 	}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@VCGraphicThingInstance@@@@UAE@XZ ENDP	; CDynamicPool<CGraphicThingInstance>::~CDynamicPool<CGraphicThingInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicThingInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicThingInstance@@UAEPAXI@Z PROC		; CGraphicThingInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicThingInstance@@UAE@XZ ; CGraphicThingInstance::~CGraphicThingInstance
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 ec 02 00 00	 push	 748			; 000002ecH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCGraphicThingInstance@@UAEPAXI@Z ENDP		; CGraphicThingInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?RecalcAccePositionMatrixFromBoneMatrix@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
_qRot$1 = -164						; size = 16
_iBoneIndex$ = -148					; size = 4
_matTemp$ = -144					; size = 64
$T2 = -80						; size = 64
_v3ScaleCenter$3 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
?RecalcAccePositionMatrixFromBoneMatrix@CGraphicThingInstance@@QAEXXZ PROC ; CGraphicThingInstance::RecalcAccePositionMatrixFromBoneMatrix, COMDAT
; _this$ = ecx

; 757  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	57		 push	 edi
  00014	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00016	8b 8f cc 02 00
	00		 mov	 ecx, DWORD PTR [edi+716]
  0001c	3b 8f d0 02 00
	00		 cmp	 ecx, DWORD PTR [edi+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 758  : 	if (m_LODControllerVector.empty())

  00022	0f 84 ad 01 00
	00		 je	 $LN1@RecalcAcce

; 759  : 		return;
; 760  : 
; 761  : 	CGrannyModelInstance* pModelInstance = m_LODControllerVector[0]->GetModelInstance();

  00028	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance
  00030	8b f0		 mov	 esi, eax

; 762  : 	if (!pModelInstance)

  00032	85 f6		 test	 esi, esi
  00034	0f 84 9a 01 00
	00		 je	 $LN32@RecalcAcce

; 763  : 		return;
; 764  : 
; 765  : 	int iBoneIndex = 0;
; 766  : 	pModelInstance->GetBoneIndexByName("Bip01 Spine2", &iBoneIndex);

  0003a	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _iBoneIndex$[ebp]
  00040	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _iBoneIndex$[ebp], 0
  0004a	50		 push	 eax
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DLOEJLFF@Bip01?5Spine2@
  00050	8b ce		 mov	 ecx, esi
  00052	e8 00 00 00 00	 call	 ?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z ; CGrannyModelInstance::GetBoneIndexByName

; 767  : 	const D3DXMATRIX* cmatBoneMatrix = (D3DXMATRIX*)pModelInstance->GetBoneMatrixPointer(iBoneIndex);

  00057	ff b5 6c ff ff
	ff		 push	 DWORD PTR _iBoneIndex$[ebp]
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ; CGrannyModelInstance::GetBoneMatrixPointer
  00064	8d b7 0c 02 00
	00		 lea	 esi, DWORD PTR [edi+524]

; 768  : 	if (cmatBoneMatrix)

  0006a	85 c0		 test	 eax, eax
  0006c	0f 84 cf 00 00
	00		 je	 $LN31@RecalcAcce

; 775  : 		if (m_bAttachedAcceRace)

  00072	80 bf bc 01 00
	00 00		 cmp	 BYTE PTR [edi+444], 0
  00079	f3 0f 10 48 30	 movss	 xmm1, DWORD PTR [eax+48]
  0007e	f3 0f 10 50 34	 movss	 xmm2, DWORD PTR [eax+52]
  00083	f3 0f 10 58 38	 movss	 xmm3, DWORD PTR [eax+56]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 2261 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00088	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  0008f	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  00096	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  0009d	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  000a4	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  000ab	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  000b2	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  000b9	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  000c0	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  000c7	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  000ce	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  000d5	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2262 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 2263 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 2264 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 2265 : 
; 2266 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  000dc	c7 46 3c 00 00
	80 3f		 mov	 DWORD PTR [esi+60], 1065353216 ; 3f800000H
  000e3	c7 46 28 00 00
	80 3f		 mov	 DWORD PTR [esi+40], 1065353216 ; 3f800000H
  000ea	c7 46 14 00 00
	80 3f		 mov	 DWORD PTR [esi+20], 1065353216 ; 3f800000H
  000f1	c7 06 00 00 80
	3f		 mov	 DWORD PTR [esi], 1065353216 ; 3f800000H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 775  : 		if (m_bAttachedAcceRace)

  000f7	74 07		 je	 SHORT $LN5@RecalcAcce

; 776  : 		{
; 777  : 			v3ScaleCenter.x = fAccePosX;
; 778  : 			v3ScaleCenter.y = fAccePosY;

  000f9	f3 0f 11 55 f4	 movss	 DWORD PTR _v3ScaleCenter$3[ebp+4], xmm2

; 779  : 		}

  000fe	eb 0f		 jmp	 SHORT $LN33@RecalcAcce
$LN5@RecalcAcce:

; 780  : 		else
; 781  : 		{
; 782  : 			v3ScaleCenter.x = fAccePosX - 18.0f;

  00100	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@41900000

; 783  : 			v3ScaleCenter.y = -40.0f;

  00108	c7 45 f4 00 00
	20 c2		 mov	 DWORD PTR _v3ScaleCenter$3[ebp+4], -1038090240 ; c2200000H
$LN33@RecalcAcce:

; 787  : 		D3DXMatrixTransformation(&m_matScale, &v3ScaleCenter, &qRot, &m_v3ScaleAcce, NULL, NULL, NULL);

  0010f	6a 00		 push	 0
  00111	6a 00		 push	 0
  00113	6a 00		 push	 0
  00115	8d 87 c0 01 00
	00		 lea	 eax, DWORD PTR [edi+448]
  0011b	f3 0f 11 4d f0	 movss	 DWORD PTR _v3ScaleCenter$3[ebp], xmm1
  00120	50		 push	 eax
  00121	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _qRot$1[ebp]
  00127	f3 0f 11 5d f8	 movss	 DWORD PTR _v3ScaleCenter$3[ebp+8], xmm3
  0012c	50		 push	 eax
  0012d	8d 45 f0	 lea	 eax, DWORD PTR _v3ScaleCenter$3[ebp]
  00130	0f 57 c0	 xorps	 xmm0, xmm0
  00133	50		 push	 eax
  00134	56		 push	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 1081 :     x = fx;

  00135	0f 11 85 5c ff
	ff ff		 movups	 XMMWORD PTR _qRot$1[ebp], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 787  : 		D3DXMatrixTransformation(&m_matScale, &v3ScaleCenter, &qRot, &m_v3ScaleAcce, NULL, NULL, NULL);

  0013c	e8 00 00 00 00	 call	 _D3DXMatrixTransformation@28
$LN31@RecalcAcce:

; 788  : 	}
; 789  : 
; 790  : 	D3DXMATRIX matTemp;
; 791  : 	D3DXMatrixMultiply(&matTemp, &m_matScaleWorld, &m_matScale);

  00141	56		 push	 esi
  00142	8d 87 4c 02 00
	00		 lea	 eax, DWORD PTR [edi+588]
  00148	50		 push	 eax
  00149	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _matTemp$[ebp]
  0014f	50		 push	 eax
  00150	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12

; 792  : 	m_matAbsoluteTrans = matTemp * m_mRotation;

  00155	8d 47 28	 lea	 eax, DWORD PTR [edi+40]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 885  :     D3DXMatrixMultiply(&matT, this, &mat);

  00158	50		 push	 eax
  00159	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _matTemp$[ebp]
  0015f	50		 push	 eax
  00160	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 792  : 	m_matAbsoluteTrans = matTemp * m_mRotation;

  00169	0f 10 45 b0	 movups	 xmm0, XMMWORD PTR $T2[ebp]
  0016d	0f 11 87 cc 01
	00 00		 movups	 XMMWORD PTR [edi+460], xmm0
  00174	0f 10 45 c0	 movups	 xmm0, XMMWORD PTR $T2[ebp+16]
  00178	0f 11 87 dc 01
	00 00		 movups	 XMMWORD PTR [edi+476], xmm0
  0017f	0f 10 45 d0	 movups	 xmm0, XMMWORD PTR $T2[ebp+32]
  00183	0f 11 87 ec 01
	00 00		 movups	 XMMWORD PTR [edi+492], xmm0
  0018a	0f 10 45 e0	 movups	 xmm0, XMMWORD PTR $T2[ebp+48]
  0018e	0f 11 87 fc 01
	00 00		 movups	 XMMWORD PTR [edi+508], xmm0

; 793  : 	m_matAbsoluteTrans._41 += m_v3Position.x;

  00195	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  0019a	f3 0f 58 87 fc
	01 00 00	 addss	 xmm0, DWORD PTR [edi+508]
  001a2	f3 0f 11 87 fc
	01 00 00	 movss	 DWORD PTR [edi+508], xmm0

; 794  : 	m_matAbsoluteTrans._42 += m_v3Position.y;

  001aa	f3 0f 10 47 08	 movss	 xmm0, DWORD PTR [edi+8]
  001af	f3 0f 58 87 00
	02 00 00	 addss	 xmm0, DWORD PTR [edi+512]
  001b7	f3 0f 11 87 00
	02 00 00	 movss	 DWORD PTR [edi+512], xmm0

; 795  : 	m_matAbsoluteTrans._43 += m_v3Position.z;

  001bf	f3 0f 10 47 0c	 movss	 xmm0, DWORD PTR [edi+12]
  001c4	f3 0f 58 87 04
	02 00 00	 addss	 xmm0, DWORD PTR [edi+516]
  001cc	f3 0f 11 87 04
	02 00 00	 movss	 DWORD PTR [edi+516], xmm0
$LN32@RecalcAcce:
  001d4	5e		 pop	 esi
$LN1@RecalcAcce:

; 796  : }

  001d5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d8	33 cd		 xor	 ecx, ebp
  001da	5f		 pop	 edi
  001db	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e0	8b e5		 mov	 esp, ebp
  001e2	5d		 pop	 ebp
  001e3	c3		 ret	 0
?RecalcAccePositionMatrixFromBoneMatrix@CGraphicThingInstance@@QAEXXZ ENDP ; CGraphicThingInstance::RecalcAccePositionMatrixFromBoneMatrix
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ
_TEXT	SEGMENT
?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ PROC	; CGraphicThingInstance::HaveBlendThing, COMDAT
; _this$ = ecx

; 1083 : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi

; 1084 : 	for (int i = 0; i < m_LODControllerVector.size(); i++)

  00004	33 f6		 xor	 esi, esi
  00006	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00007	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
  0000d	8b 93 cc 02 00
	00		 mov	 edx, DWORD PTR [ebx+716]
  00013	2b c2		 sub	 eax, edx
  00015	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1084 : 	for (int i = 0; i < m_LODControllerVector.size(); i++)

  00018	85 c0		 test	 eax, eax
  0001a	74 3b		 je	 SHORT $LN23@HaveBlendT
  0001c	0f 1f 40 00	 npad	 4
$LL4@HaveBlendT:

; 1086 : 		if (m_LODControllerVector[i]->HaveBlendThing())

  00020	8b 3c b2	 mov	 edi, DWORD PTR [edx+esi*4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 310  : 	bool	HaveBlendThing() { return 0 != GetModelInstance() ? GetModelInstance()->HaveBlendThing() : false; }

  00023	8b cf		 mov	 ecx, edi
  00025	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance
  0002a	85 c0		 test	 eax, eax
  0002c	74 13		 je	 SHORT $LN22@HaveBlendT
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1086 : 		if (m_LODControllerVector[i]->HaveBlendThing())

  00035	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00038	80 b8 88 00 00
	00 00		 cmp	 BYTE PTR [eax+136], 0
  0003f	75 1c		 jne	 SHORT $LN18@HaveBlendT
$LN22@HaveBlendT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00041	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1084 : 	for (int i = 0; i < m_LODControllerVector.size(); i++)

  00047	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00048	8b 93 cc 02 00
	00		 mov	 edx, DWORD PTR [ebx+716]
  0004e	2b c2		 sub	 eax, edx
  00050	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1084 : 	for (int i = 0; i < m_LODControllerVector.size(); i++)

  00053	3b f0		 cmp	 esi, eax
  00055	72 c9		 jb	 SHORT $LL4@HaveBlendT
$LN23@HaveBlendT:
  00057	5f		 pop	 edi

; 1087 : 		{
; 1088 : 			return true;
; 1089 : 		}
; 1090 : 	}
; 1091 : 	return false;
; 1092 : }

  00058	5e		 pop	 esi
  00059	32 c0		 xor	 al, al
  0005b	5b		 pop	 ebx
  0005c	c3		 ret	 0
$LN18@HaveBlendT:
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	b0 01		 mov	 al, 1
  00061	5b		 pop	 ebx
  00062	c3		 ret	 0
?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ ENDP	; CGraphicThingInstance::HaveBlendThing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?Delete@CGraphicThingInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkThingInst$ = 8					; size = 4
?Delete@CGraphicThingInstance@@SAXPAV1@@Z PROC		; CGraphicThingInstance::Delete, COMDAT

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 56   : 	pkThingInst->Clear();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkThingInst$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 57   : 	ms_kPool.Free(pkThingInst);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 58   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
  00039	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 58   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CGraphicThingInstance@@SAXPAV1@@Z ENDP		; CGraphicThingInstance::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?New@CGraphicThingInstance@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CGraphicThingInstance@@SAPAV1@XZ PROC		; CGraphicThingInstance::New, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CGraphicThingInstance@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00023	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h

; 63   : 		if (m_kVct_pkFree.empty())

  00029	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+16, ecx
  0002f	0f 85 83 00 00
	00		 jne	 $LN4@New

; 65   : 			T* pkNewData = new T;

  00035	68 ec 02 00 00	 push	 748			; 000002ecH
  0003a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003f	83 c4 04	 add	 esp, 4
  00042	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	85 c0		 test	 eax, eax
  0004e	74 09		 je	 SHORT $LN6@New
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ??0CGraphicThingInstance@@QAE@XZ ; CGraphicThingInstance::CGraphicThingInstance
  00057	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00059	33 c0		 xor	 eax, eax
$LN7@New:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0005b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h

; 65   : 			T* pkNewData = new T;

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	89 45 f0	 mov	 DWORD PTR _pkNewData$3[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0006b	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+12
  00071	74 1e		 je	 SHORT $LN14@New

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00073	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00075	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h

; 67   : 			++m_uUsedCapacity;

  0007c	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+32
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 52   : }

  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
$LN14@New:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00091	8d 45 f0	 lea	 eax, DWORD PTR _pkNewData$3[ebp]
  00094	50		 push	 eax
  00095	51		 push	 ecx
  00096	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+4
  0009b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicThingInstance@@@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEPAPAVCGraphicThingInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Emplace_reallocate<CGraphicThingInstance * const &>
  000a0	8b 45 f0	 mov	 eax, DWORD PTR _pkNewData$3[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h

; 67   : 			++m_uUsedCapacity;

  000a3	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+32
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 52   : }

  000a9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b3	59		 pop	 ecx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
$LN4@New:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h

; 71   : 		T* pkFreeData = m_kVct_pkFree.back();

  000b8	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  000bb	83 c1 fc	 add	 ecx, -4			; fffffffcH
  000be	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 52   : }

  000c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ce	59		 pop	 ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CGraphicThingInstance@@SAPAV1@XZ$0:
  00000	68 ec 02 00 00	 push	 748			; 000002ecH
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?New@CGraphicThingInstance@@SAPAV1@XZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CGraphicThingInstance@@SAPAV1@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CGraphicThingInstance@@SAPAV1@XZ ENDP		; CGraphicThingInstance::New
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?DestroySystem@CGraphicThingInstance@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CGraphicThingInstance@@SAXXZ PROC	; CGraphicThingInstance::DestroySystem, COMDAT

; 45   : {

  00000	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 45   : {

  00007	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 21		 je	 SHORT $LN38@DestroySys
$LL20@DestroySys:

; 266  :         _Func(*_UFirst);

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h

; 114  : 		delete pkData;

  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN26@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN26@DestroySys:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
  00025	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+8
  0002b	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	3b f7		 cmp	 esi, edi
$LN38@DestroySys:
  00033	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+20
  00039	0f 45 fe	 cmovne	 edi, esi
  0003c	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+16, ecx
  00042	89 3d 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+8, edi
  00048	0f 45 0d 10 00
	00 00		 cmovne	 ecx, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+16
  0004f	5f		 pop	 edi
  00050	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+20, ecx
  00056	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 47   : }

  00057	c3		 ret	 0
?DestroySystem@CGraphicThingInstance@@SAXXZ ENDP	; CGraphicThingInstance::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?CreateSystem@CGraphicThingInstance@@SAXI@Z
_TEXT	SEGMENT
_uCapacity$ = 8						; size = 4
?CreateSystem@CGraphicThingInstance@@SAXI@Z PROC	; CGraphicThingInstance::CreateSystem, COMDAT

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00003	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+12
  00008	2b 05 04 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 40   : {

  0000e	56		 push	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h

; 57   : 		m_uInitCapacity = uCapacity;

  0000f	8b 75 08	 mov	 esi, DWORD PTR _uCapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00012	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Pool.h

; 57   : 		m_uInitCapacity = uCapacity;

  00015	89 35 1c 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+28, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1743 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  0001b	3b f0		 cmp	 esi, eax
  0001d	76 13		 jbe	 SHORT $LN6@CreateSyst

; 1744 :             if (_Newcapacity > max_size()) {

  0001f	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  00025	77 33		 ja	 SHORT $LN19@CreateSyst

; 1746 :             }
; 1747 : 
; 1748 :             _Reallocate_exactly(_Newcapacity);

  00027	56		 push	 esi
  00028	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+4
  0002d	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Reallocate_exactly
$LN6@CreateSyst:

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00032	a1 18 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+24
  00037	2b 05 10 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+16
  0003d	c1 f8 02	 sar	 eax, 2

; 1743 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00040	3b f0		 cmp	 esi, eax
  00042	76 13		 jbe	 SHORT $LN13@CreateSyst

; 1744 :             if (_Newcapacity > max_size()) {

  00044	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0004a	77 0e		 ja	 SHORT $LN19@CreateSyst

; 1746 :             }
; 1747 : 
; 1748 :             _Reallocate_exactly(_Newcapacity);

  0004c	56		 push	 esi
  0004d	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicThingInstance@@2V?$CDynamicPool@VCGraphicThingInstance@@@@A+16
  00052	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Reallocate_exactly
$LN13@CreateSyst:
  00057	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 42   : }

  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN19@CreateSyst:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1745 :                 _Xlength();

  0005a	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicThingInstance *,std::allocator<CGraphicThingInstance *> >::_Xlength
$LN21@CreateSyst:
  0005f	cc		 int	 3
?CreateSystem@CGraphicThingInstance@@SAXI@Z ENDP	; CGraphicThingInstance::CreateSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnGetObjectHeight@CGraphicThingInstance@@MAE_NMMPAM@Z
_TEXT	SEGMENT
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_pfHeight$ = 16						; size = 4
?OnGetObjectHeight@CGraphicThingInstance@@MAE_NMMPAM@Z PROC ; CGraphicThingInstance::OnGetObjectHeight, COMDAT
; _this$ = ecx

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 93   : 	if (m_pHeightAttributeInstance && m_pHeightAttributeInstance->GetHeight(fX, fY, pfHeight))

  00003	8b 89 b8 01 00
	00		 mov	 ecx, DWORD PTR [ecx+440]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 29		 je	 SHORT $LN2@OnGetObjec
  0000d	ff 75 10	 push	 DWORD PTR _pfHeight$[ebp]
  00010	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$[ebp]
  00015	83 ec 08	 sub	 esp, 8
  00018	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	e8 00 00 00 00	 call	 ?GetHeight@CAttributeInstance@@QAEHMMPAM@Z ; CAttributeInstance::GetHeight
  0002d	85 c0		 test	 eax, eax
  0002f	0f 95 c0	 setne	 al

; 98   : }

  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
$LN2@OnGetObjec:

; 94   : 	{
; 95   : 		return true;
; 96   : 	}
; 97   : 	return false;

  00036	32 c0		 xor	 al, al

; 98   : }

  00038	5d		 pop	 ebp
  00039	c2 0c 00	 ret	 12			; 0000000cH
?OnGetObjectHeight@CGraphicThingInstance@@MAE_NMMPAM@Z ENDP ; CGraphicThingInstance::OnGetObjectHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnUpdateHeighInstance@CGraphicThingInstance@@MAEXPAVCAttributeInstance@@@Z
_TEXT	SEGMENT
_pAttributeInstance$ = 8				; size = 4
?OnUpdateHeighInstance@CGraphicThingInstance@@MAEXPAVCAttributeInstance@@@Z PROC ; CGraphicThingInstance::OnUpdateHeighInstance, COMDAT
; _this$ = ecx

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   : }

  00003	5d		 pop	 ebp

; 87   : 	assert(pAttributeInstance);
; 88   : 	SetHeightInstance(pAttributeInstance);

  00004	e9 00 00 00 00	 jmp	 ?SetHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z ; CGraphicObjectInstance::SetHeightInstance
?OnUpdateHeighInstance@CGraphicThingInstance@@MAEXPAVCAttributeInstance@@@Z ENDP ; CGraphicThingInstance::OnUpdateHeighInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnUpdateCollisionData@CGraphicThingInstance@@MAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z
_TEXT	SEGMENT
_pscdVector$ = 8					; size = 4
?OnUpdateCollisionData@CGraphicThingInstance@@MAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z PROC ; CGraphicThingInstance::OnUpdateCollisionData, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _pscdVector$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 76   : {

  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 33		 mov	 esi, DWORD PTR [ebx]
  0000d	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 79   : 	for (it = pscdVector->begin(); it != pscdVector->end(); ++it)

  00010	74 18		 je	 SHORT $LN3@OnUpdateCo
$LL15@OnUpdateCo:

; 80   : 	{
; 81   : 		AddCollision(&(*it), &GetTransform());

  00012	8b cf		 mov	 ecx, edi
  00014	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	8b cf		 mov	 ecx, edi
  0001d	e8 00 00 00 00	 call	 ?AddCollision@CGraphicObjectInstance@@QAEXPBVCStaticCollisionData@@PBUD3DXMATRIX@@@Z ; CGraphicObjectInstance::AddCollision
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  00022	83 c6 50	 add	 esi, 80			; 00000050H

; 156  :         return _Ptr == _Right._Ptr;

  00025	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 79   : 	for (it = pscdVector->begin(); it != pscdVector->end(); ++it)

  00028	75 e8		 jne	 SHORT $LL15@OnUpdateCo
$LN3@OnUpdateCo:
  0002a	5f		 pop	 edi

; 82   : 	}
; 83   : }

  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?OnUpdateCollisionData@CGraphicThingInstance@@MAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ENDP ; CGraphicThingInstance::OnUpdateCollisionData
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@QAE@XZ PROC ; std::map<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::~map<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >
??1?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::~map<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 646  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 647  :         ++_Mysize;
; 648  :         const auto _Head  = _Myhead;
; 649  :         _Newnode->_Parent = _Loc._Parent;

  00004	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00007	53		 push	 ebx
  00008	8b d9		 mov	 ebx, ecx
  0000a	57		 push	 edi
  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Newnode$[ebp]
  0000e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00010	ff 43 04	 inc	 DWORD PTR [ebx+4]
  00013	89 45 fc	 mov	 DWORD PTR __Head$1$[ebp], eax
  00016	89 57 04	 mov	 DWORD PTR [edi+4], edx

; 650  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  00019	3b d0		 cmp	 edx, eax
  0001b	75 16		 jne	 SHORT $LN5@Insert_nod

; 651  :             _Head->_Left     = _Newnode;

  0001d	89 38		 mov	 DWORD PTR [eax], edi

; 652  :             _Head->_Parent   = _Newnode;

  0001f	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 653  :             _Head->_Right    = _Newnode;

  00022	89 78 08	 mov	 DWORD PTR [eax+8], edi

; 712  :         return _Newnode;
; 713  :     }

  00025	8b c7		 mov	 eax, edi
  00027	c6 47 0c 01	 mov	 BYTE PTR [edi+12], 1
  0002b	5f		 pop	 edi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 654  :             _Newnode->_Color = _Black; // the root is black
; 655  :             return _Newnode;
; 656  :         }
; 657  : 
; 658  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 659  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00033	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00037	75 0d		 jne	 SHORT $LN6@Insert_nod

; 660  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 661  :             _Loc._Parent->_Right = _Newnode;

  00039	89 7a 08	 mov	 DWORD PTR [edx+8], edi

; 662  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003c	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0003f	75 0d		 jne	 SHORT $LN9@Insert_nod

; 663  :                 _Head->_Right = _Newnode;

  00041	89 78 08	 mov	 DWORD PTR [eax+8], edi

; 664  :             }
; 665  :         } else { // add to left of _Loc._Parent

  00044	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 666  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 667  :             _Loc._Parent->_Left = _Newnode;

  00046	89 3a		 mov	 DWORD PTR [edx], edi

; 668  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00048	3b 10		 cmp	 edx, DWORD PTR [eax]
  0004a	75 02		 jne	 SHORT $LN9@Insert_nod

; 669  :                 _Head->_Left = _Newnode;

  0004c	89 38		 mov	 DWORD PTR [eax], edi
$LN9@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00051	8b c7		 mov	 eax, edi
  00053	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  00057	0f 85 7d 01 00
	00		 jne	 $LN3@Insert_nod
  0005d	56		 push	 esi
  0005e	66 90		 npad	 2
$LL2@Insert_nod:

; 674  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00063	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00066	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00068	3b d1		 cmp	 edx, ecx
  0006a	0f 85 aa 00 00
	00		 jne	 $LN10@Insert_nod

; 675  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00070	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 676  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00073	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  00077	0f 84 a3 00 00
	00		 je	 $LN54@Insert_nod

; 677  :                     _Pnode->_Parent->_Color          = _Black;
; 678  :                     _Parent_sibling->_Color          = _Black;
; 679  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 680  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 681  :                 } else { // parent's sibling has red and black children
; 682  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  0007d	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  00080	3b c6		 cmp	 eax, esi
  00082	75 37		 jne	 SHORT $LN51@Insert_nod

; 462  :         _Wherenode->_Right = _Pnode->_Left;

  00084	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 683  :                         _Pnode = _Pnode->_Parent;

  00086	8b c2		 mov	 eax, edx

; 462  :         _Wherenode->_Right = _Pnode->_Left;

  00088	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

  0008b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0008d	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00091	75 03		 jne	 SHORT $LN34@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN34@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

  00096	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00099	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

  0009c	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0009e	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  000a1	75 05		 jne	 SHORT $LN35@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

  000a3	89 71 04	 mov	 DWORD PTR [ecx+4], esi
  000a6	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000a8	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000ab	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000ad	75 04		 jne	 SHORT $LN37@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

  000af	89 31		 mov	 DWORD PTR [ecx], esi

; 474  :         } else {

  000b1	eb 03		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

  000b3	89 71 08	 mov	 DWORD PTR [ecx+8], esi
$LN38@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

  000b6	89 06		 mov	 DWORD PTR [esi], eax

; 479  :         _Wherenode->_Parent = _Pnode;

  000b8	89 72 04	 mov	 DWORD PTR [edx+4], esi
$LN51@Insert_nod:

; 684  :                         _Lrotate(_Pnode);
; 685  :                     }
; 686  : 
; 687  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000bb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000be	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 688  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000c2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c5	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000c8	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 689  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000cc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000cf	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000d2	8b 32		 mov	 esi, DWORD PTR [edx]

; 484  :         _Wherenode->_Left = _Pnode->_Right;

  000d4	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000d7	89 0a		 mov	 DWORD PTR [edx], ecx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

  000d9	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000dc	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  000e0	75 03		 jne	 SHORT $LN20@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

  000e2	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN20@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

  000e5	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000e8	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

  000eb	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000ed	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  000f0	75 0b		 jne	 SHORT $LN21@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

  000f2	89 71 04	 mov	 DWORD PTR [ecx+4], esi

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

  000f5	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

  000f8	e9 cc 00 00 00	 jmp	 $LN53@Insert_nod
$LN21@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  000fd	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00100	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00103	75 0b		 jne	 SHORT $LN23@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

  00105	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

  00108	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

  0010b	e9 b9 00 00 00	 jmp	 $LN53@Insert_nod
$LN23@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

  00110	89 31		 mov	 DWORD PTR [ecx], esi

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

  00112	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

  00115	e9 af 00 00 00	 jmp	 $LN53@Insert_nod
$LN10@Insert_nod:

; 692  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 693  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  0011a	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  0011e	75 1d		 jne	 SHORT $LN15@Insert_nod
$LN54@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00120	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1
  00124	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  00128	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0012b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0012e	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0
  00132	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00135	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00138	e9 8f 00 00 00	 jmp	 $LN32@Insert_nod
$LN15@Insert_nod:

; 694  :                     _Pnode->_Parent->_Color          = _Black;
; 695  :                     _Parent_sibling->_Color          = _Black;
; 696  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 697  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 698  :                 } else { // parent's sibling has red and black children
; 699  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  0013d	8b 32		 mov	 esi, DWORD PTR [edx]
  0013f	3b c6		 cmp	 eax, esi
  00141	75 3a		 jne	 SHORT $LN46@Insert_nod

; 484  :         _Wherenode->_Left = _Pnode->_Right;

  00143	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 700  :                         _Pnode = _Pnode->_Parent;

  00146	8b c2		 mov	 eax, edx

; 484  :         _Wherenode->_Left = _Pnode->_Right;

  00148	89 08		 mov	 DWORD PTR [eax], ecx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

  0014a	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0014d	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00151	75 03		 jne	 SHORT $LN41@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

  00153	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN41@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

  00156	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00159	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

  0015c	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0015e	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00161	75 05		 jne	 SHORT $LN42@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

  00163	89 71 04	 mov	 DWORD PTR [ecx+4], esi
  00166	eb 0f		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00168	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0016b	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0016e	75 05		 jne	 SHORT $LN44@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

  00170	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 496  :         } else {

  00173	eb 02		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

  00175	89 31		 mov	 DWORD PTR [ecx], esi
$LN45@Insert_nod:

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

  00177	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 501  :         _Wherenode->_Parent = _Pnode;

  0017a	89 72 04	 mov	 DWORD PTR [edx+4], esi
$LN46@Insert_nod:

; 701  :                         _Rrotate(_Pnode);
; 702  :                     }
; 703  : 
; 704  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  0017d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00180	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 705  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00184	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00187	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0018a	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 706  :                     _Lrotate(_Pnode->_Parent->_Parent);

  0018e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00191	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00194	8b 72 08	 mov	 esi, DWORD PTR [edx+8]

; 462  :         _Wherenode->_Right = _Pnode->_Left;

  00197	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00199	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

  0019c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0019e	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  001a2	75 03		 jne	 SHORT $LN27@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

  001a4	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN27@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

  001a7	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  001aa	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

  001ad	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  001af	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  001b2	75 05		 jne	 SHORT $LN28@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

  001b4	89 71 04	 mov	 DWORD PTR [ecx+4], esi
  001b7	eb 0e		 jmp	 SHORT $LN31@Insert_nod
$LN28@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001b9	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  001bc	3b 11		 cmp	 edx, DWORD PTR [ecx]
  001be	75 04		 jne	 SHORT $LN30@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

  001c0	89 31		 mov	 DWORD PTR [ecx], esi

; 474  :         } else {

  001c2	eb 03		 jmp	 SHORT $LN31@Insert_nod
$LN30@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

  001c4	89 71 08	 mov	 DWORD PTR [ecx+8], esi
$LN31@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

  001c7	89 16		 mov	 DWORD PTR [esi], edx
$LN53@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001c9	89 72 04	 mov	 DWORD PTR [edx+4], esi
$LN32@Insert_nod:
  001cc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001cf	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  001d3	0f 84 87 fe ff
	ff		 je	 $LL2@Insert_nod
  001d9	5e		 pop	 esi
$LN3@Insert_nod:

; 707  :                 }
; 708  :             }
; 709  :         }
; 710  : 
; 711  :         _Head->_Parent->_Color = _Black; // root is always black

  001da	8b 45 fc	 mov	 eax, DWORD PTR __Head$1$[ebp]
  001dd	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001e0	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 712  :         return _Newnode;
; 713  :     }

  001e4	8b c7		 mov	 eax, edi
  001e6	5f		 pop	 edi
  001e7	5b		 pop	 ebx
  001e8	8b e5		 mov	 esp, ebp
  001ea	5d		 pop	 ebp
  001eb	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >, COMDAT
; _this$ = ecx

; 1079 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 37		 mov	 esi, DWORD PTR [edi]
  00006	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 21		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 654  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
$LN7@Tree:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00030	6a 18		 push	 24			; 00000018H
  00032	ff 37		 push	 DWORD PTR [edi]
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00039	83 c4 08	 add	 esp, 8
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1086 :     }

  0003e	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::~vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 64		 je	 SHORT $LN4@vector

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00009	57		 push	 edi
  0000a	56		 push	 esi
  0000b	ff 76 04	 push	 DWORD PTR [esi+4]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAXPAUSModelThingSet@CGraphicThingInstance@@QAU12@AAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicThingInstance::SModelThingSet> >

; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00014	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00017	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001c	8b 3e		 mov	 edi, DWORD PTR [esi]
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00021	2b cf		 sub	 ecx, edi
  00023	f7 e9		 imul	 ecx
  00025	d1 fa		 sar	 edx, 1
  00027	8b c2		 mov	 eax, edx
  00029	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002c	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002e	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00031	c1 e1 02	 shl	 ecx, 2

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00034	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0003a	72 12		 jb	 SHORT $LN20@vector

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0003c	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  0003f	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00042	2b fa		 sub	 edi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00044	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  00047	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0004a	77 23		 ja	 SHORT $LN17@vector

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0004c	8b fa		 mov	 edi, edx
$LN20@vector:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0004e	51		 push	 ecx
  0004f	57		 push	 edi
  00050	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00055	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 2113 :             _Mylast  = nullptr;

  0005e	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2114 :             _Myend   = nullptr;

  00065	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0006c	5f		 pop	 edi
$LN4@vector:
  0006d	5e		 pop	 esi

; 835  :     }

  0006e	c3		 ret	 0
$LN17@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0006f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00074	cc		 int	 3
??1?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::~vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@CAXXZ PROC ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@CAXXZ ENDP ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@QAE@XZ PROC ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::~vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN4@vector

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN20@vector

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN17@vector

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN20@vector:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2114 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00049	5e		 pop	 esi

; 835  :     }

  0004a	c3		 ret	 0
$LN17@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00050	cc		 int	 3
??1?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::~vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnRenderPCBlocker@CGraphicThingInstance@@MAEXXZ
_TEXT	SEGMENT
?OnRenderPCBlocker@CGraphicThingInstance@@MAEXXZ PROC	; CGraphicThingInstance::OnRenderPCBlocker, COMDAT
; _this$ = ecx

; 1029 : {

  00000	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1029 : {

  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 1d		 je	 SHORT $LN17@OnRenderPC
  00012	57		 push	 edi
$LL18@OnRenderPC:

; 266  :         _Func(*_UFirst);

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 55   : 			if (pController->isModelInstance())

  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0001c	85 c0		 test	 eax, eax
  0001e	74 07		 je	 SHORT $LN16@OnRenderPC

; 56   : 			{
; 57   : 				pController->RenderWithOneTexture();

  00020	8b cf		 mov	 ecx, edi
  00022	e8 00 00 00 00	 call	 ?RenderWithOneTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::RenderWithOneTexture
$LN16@OnRenderPC:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00027	83 c6 04	 add	 esi, 4
  0002a	3b f3		 cmp	 esi, ebx
  0002c	75 e5		 jne	 SHORT $LL18@OnRenderPC
  0002e	5f		 pop	 edi
$LN17@OnRenderPC:
  0002f	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1032 : }

  00030	5b		 pop	 ebx
  00031	c3		 ret	 0
?OnRenderPCBlocker@CGraphicThingInstance@@MAEXXZ ENDP	; CGraphicThingInstance::OnRenderPCBlocker
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnRenderShadow@CGraphicThingInstance@@MAEXXZ
_TEXT	SEGMENT
?OnRenderShadow@CGraphicThingInstance@@MAEXXZ PROC	; CGraphicThingInstance::OnRenderShadow, COMDAT
; _this$ = ecx

; 1023 : {

  00000	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1023 : {

  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 1d		 je	 SHORT $LN17@OnRenderSh
  00012	57		 push	 edi
$LL18@OnRenderSh:

; 266  :         _Func(*_UFirst);

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 110  : 			if (pController->isModelInstance())

  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0001c	85 c0		 test	 eax, eax
  0001e	74 07		 je	 SHORT $LN16@OnRenderSh

; 111  : 			{
; 112  : 				pController->RenderShadow();

  00020	8b cf		 mov	 ecx, edi
  00022	e8 00 00 00 00	 call	 ?RenderShadow@CGrannyLODController@@QAEXXZ ; CGrannyLODController::RenderShadow
$LN16@OnRenderSh:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00027	83 c6 04	 add	 esi, 4
  0002a	3b f3		 cmp	 esi, ebx
  0002c	75 e5		 jne	 SHORT $LL18@OnRenderSh
  0002e	5f		 pop	 edi
$LN17@OnRenderSh:
  0002f	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1026 : }

  00030	5b		 pop	 ebx
  00031	c3		 ret	 0
?OnRenderShadow@CGraphicThingInstance@@MAEXXZ ENDP	; CGraphicThingInstance::OnRenderShadow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnRenderToShadowMap@CGraphicThingInstance@@MAEXXZ
_TEXT	SEGMENT
?OnRenderToShadowMap@CGraphicThingInstance@@MAEXXZ PROC	; CGraphicThingInstance::OnRenderToShadowMap, COMDAT
; _this$ = ecx

; 1013 : 	if (!m_bUpdated)

  00000	80 b9 8c 02 00
	00 00		 cmp	 BYTE PTR [ecx+652], 0
  00007	74 35		 je	 SHORT $LN18@OnRenderTo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00009	53		 push	 ebx
  0000a	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
  00010	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  00017	3b f3		 cmp	 esi, ebx
  00019	74 21		 je	 SHORT $LN28@OnRenderTo
  0001b	57		 push	 edi
  0001c	0f 1f 40 00	 npad	 4
$LL19@OnRenderTo:

; 266  :         _Func(*_UFirst);

  00020	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 99   : 			if (pController->isModelInstance())

  00022	8b cf		 mov	 ecx, edi
  00024	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  00029	85 c0		 test	 eax, eax
  0002b	74 07		 je	 SHORT $LN17@OnRenderTo

; 100  : 			{
; 101  : 				pController->RenderToShadowMap();

  0002d	8b cf		 mov	 ecx, edi
  0002f	e8 00 00 00 00	 call	 ?RenderToShadowMap@CGrannyLODController@@QAEXXZ ; CGrannyLODController::RenderToShadowMap
$LN17@OnRenderTo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00034	83 c6 04	 add	 esi, 4
  00037	3b f3		 cmp	 esi, ebx
  00039	75 e5		 jne	 SHORT $LL19@OnRenderTo
  0003b	5f		 pop	 edi
$LN28@OnRenderTo:
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
$LN18@OnRenderTo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1020 : }

  0003e	c3		 ret	 0
?OnRenderToShadowMap@CGraphicThingInstance@@MAEXXZ ENDP	; CGraphicThingInstance::OnRenderToShadowMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnBlendRender@CGraphicThingInstance@@MAEXXZ
_TEXT	SEGMENT
?OnBlendRender@CGraphicThingInstance@@MAEXXZ PROC	; CGraphicThingInstance::OnBlendRender, COMDAT
; _this$ = ecx

; 960  : 	BlendRenderWithOneTexture();

  00000	e9 00 00 00 00	 jmp	 ?BlendRenderWithOneTexture@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::BlendRenderWithOneTexture
?OnBlendRender@CGraphicThingInstance@@MAEXXZ ENDP	; CGraphicThingInstance::OnBlendRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnRender@CGraphicThingInstance@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CGraphicThingInstance@@MAEXXZ PROC		; CGraphicThingInstance::OnRender, COMDAT
; _this$ = ecx

; 955  : 	RenderWithOneTexture();

  00000	e9 00 00 00 00	 jmp	 ?RenderWithOneTexture@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::RenderWithOneTexture
?OnRender@CGraphicThingInstance@@MAEXXZ ENDP		; CGraphicThingInstance::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnUpdate@CGraphicThingInstance@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CGraphicThingInstance@@MAEXXZ PROC		; CGraphicThingInstance::OnUpdate, COMDAT
; _this$ = ecx

; 922  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 923  : #ifdef __PERFORMANCE_CHECKER__
; 924  : 	DWORD t1 = timeGetTime();
; 925  : #endif
; 926  : 	UpdateLODLevel();

  00003	e8 00 00 00 00	 call	 ?UpdateLODLevel@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::UpdateLODLevel

; 927  : #ifdef __PERFORMANCE_CHECKER__
; 928  : 	DWORD t2 = timeGetTime();
; 929  : #endif
; 930  : 	UpdateTime();

  00008	8b ce		 mov	 ecx, esi
  0000a	5e		 pop	 esi
  0000b	e9 00 00 00 00	 jmp	 ?UpdateTime@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::UpdateTime
?OnUpdate@CGraphicThingInstance@@MAEXXZ ENDP		; CGraphicThingInstance::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnDeform@CGraphicThingInstance@@MAEXXZ
_TEXT	SEGMENT
?OnDeform@CGraphicThingInstance@@MAEXXZ PROC		; CGraphicThingInstance::OnDeform, COMDAT
; _this$ = ecx

; 839  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi

; 842  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  00004	33 f6		 xor	 esi, esi
  00006	c6 83 8c 02 00
	00 01		 mov	 BYTE PTR [ebx+652], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000d	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
  00013	8b 8b cc 02 00
	00		 mov	 ecx, DWORD PTR [ebx+716]
  00019	2b c1		 sub	 eax, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 842  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  0001b	83 f8 04	 cmp	 eax, 4
  0001e	72 49		 jb	 SHORT $LN3@OnDeform
  00020	57		 push	 edi
$LL4@OnDeform:

; 843  : 	{
; 844  : 		CGrannyLODController* pkLOD = m_LODControllerVector[i];

  00021	8b 3c b1	 mov	 edi, DWORD PTR [ecx+esi*4]

; 845  : 		if (pkLOD && pkLOD->isModelInstance())

  00024	85 ff		 test	 edi, edi
  00026	74 2a		 je	 SHORT $LN2@OnDeform
  00028	8b cf		 mov	 ecx, edi
  0002a	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0002f	85 c0		 test	 eax, eax
  00031	74 1f		 je	 SHORT $LN2@OnDeform

; 846  : 		{
; 847  : 			if (i == 5) // This is the number of PART_ACCE

  00033	83 fe 05	 cmp	 esi, 5
  00036	75 0f		 jne	 SHORT $LN6@OnDeform

; 848  : 			{
; 849  : 				RecalcAccePositionMatrixFromBoneMatrix();

  00038	8b cb		 mov	 ecx, ebx
  0003a	e8 00 00 00 00	 call	 ?RecalcAccePositionMatrixFromBoneMatrix@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::RecalcAccePositionMatrixFromBoneMatrix

; 850  : 				pkLOD->Deform(&m_matAbsoluteTrans);

  0003f	8d 83 cc 01 00
	00		 lea	 eax, DWORD PTR [ebx+460]

; 851  : 			}

  00045	eb 03		 jmp	 SHORT $LN17@OnDeform
$LN6@OnDeform:

; 852  : 			else
; 853  : 				pkLOD->Deform(&m_worldMatrix);

  00047	8d 43 6c	 lea	 eax, DWORD PTR [ebx+108]
$LN17@OnDeform:

; 842  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  0004a	50		 push	 eax
  0004b	8b cf		 mov	 ecx, edi
  0004d	e8 00 00 00 00	 call	 ?Deform@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyLODController::Deform
$LN2@OnDeform:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00052	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 842  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  00058	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00059	8b 8b cc 02 00
	00		 mov	 ecx, DWORD PTR [ebx+716]
  0005f	2b c1		 sub	 eax, ecx
  00061	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 842  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  00064	3b f0		 cmp	 esi, eax
  00066	75 b9		 jne	 SHORT $LL4@OnDeform
  00068	5f		 pop	 edi
$LN3@OnDeform:
  00069	5e		 pop	 esi

; 854  : 		}
; 855  : 	}
; 856  : }

  0006a	5b		 pop	 ebx
  0006b	c3		 ret	 0
?OnDeform@CGraphicThingInstance@@MAEXXZ ENDP		; CGraphicThingInstance::OnDeform
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnClear@CGraphicThingInstance@@MAEXXZ
_TEXT	SEGMENT
_d$1$ = -24						; size = 4
_this$1$ = -20						; size = 4
tv1115 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnClear@CGraphicThingInstance@@MAEXXZ PROC		; CGraphicThingInstance::OnClear, COMDAT
; _this$ = ecx

; 1096 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnClear@CGraphicThingInstance@@MAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b b3 cc 02 00
	00		 mov	 esi, DWORD PTR [ebx+716]
  00033	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  00039	3b f0		 cmp	 esi, eax
  0003b	74 22		 je	 SHORT $LN53@OnClear
  0003d	0f 1f 00	 npad	 3
$LL71@OnClear:

; 44   : 	{
; 45   : 		delete* i;

  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00042	85 c9		 test	 ecx, ecx
  00044	74 06		 je	 SHORT $LN56@OnClear
  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
  00048	6a 01		 push	 1
  0004a	ff 10		 call	 DWORD PTR [eax]
$LN56@OnClear:

; 46   : 		*i = NULL;

  0004c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  00052	83 c6 04	 add	 esi, 4

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00055	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  0005b	3b f0		 cmp	 esi, eax
  0005d	75 e1		 jne	 SHORT $LL71@OnClear
$LN53@OnClear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  0005f	8b 8b cc 02 00
	00		 mov	 ecx, DWORD PTR [ebx+716]
  00065	3b c8		 cmp	 ecx, eax
  00067	74 06		 je	 SHORT $LN72@OnClear

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00069	89 8b d0 02 00
	00		 mov	 DWORD PTR [ebx+720], ecx
$LN72@OnClear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1126 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  0006f	8b bb e4 02 00
	00		 mov	 edi, DWORD PTR [ebx+740]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1098 : 	stl_wipe_second(m_roMotionThingMap);

  00075	81 c3 e4 02 00
	00		 add	 ebx, 740		; 000002e4H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0007b	8b 37		 mov	 esi, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 75   : 	for (auto i = container.begin(); i != container.end(); ++i)

  0007d	3b f7		 cmp	 esi, edi
  0007f	74 73		 je	 SHORT $LN83@OnClear
$LL108@OnClear:

; 76   : 	{
; 77   : 		delete i->second;

  00081	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]
  00084	85 ff		 test	 edi, edi
  00086	74 2a		 je	 SHORT $LN82@OnClear
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 53   : 		if (m_pObject)

  00088	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 37   : 	{

  0008a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 		if (m_pObject)

  00091	85 c9		 test	 ecx, ecx
  00093	74 0b		 je	 SHORT $LN161@OnClear

; 54   : 		{
; 55   : 			m_pObject->Release();

  00095	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 			m_pObject = NULL;

  0009a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
$LN161@OnClear:
  000a0	6a 04		 push	 4
  000a2	57		 push	 edi

; 39   : 	}

  000a3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000aa	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000af	83 c4 08	 add	 esp, 8
$LN82@OnClear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  000b2	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b5	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000b9	74 1d		 je	 SHORT $LN107@OnClear

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  000bb	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000be	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000c2	75 10		 jne	 SHORT $LN106@OnClear
$LL105@OnClear:
  000c4	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000c7	75 0b		 jne	 SHORT $LN106@OnClear

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

  000c9	8b f0		 mov	 esi, eax
  000cb	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ce	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000d2	74 f0		 je	 SHORT $LL105@OnClear
$LN106@OnClear:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())

  000d4	8b f0		 mov	 esi, eax

; 58   :         } else {

  000d6	eb 16		 jmp	 SHORT $LN182@OnClear
$LN107@OnClear:

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  000d8	8b f0		 mov	 esi, eax

; 453  :         while (!_Pnode->_Left->_Isnil) {

  000da	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000dc	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  000e0	75 0c		 jne	 SHORT $LN182@OnClear
$LL111@OnClear:
  000e2	8b 01		 mov	 eax, DWORD PTR [ecx]

; 454  :             _Pnode = _Pnode->_Left;

  000e4	8b f1		 mov	 esi, ecx
  000e6	8b c8		 mov	 ecx, eax
  000e8	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000ec	74 f4		 je	 SHORT $LL111@OnClear
$LN182@OnClear:

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  000ee	8b 3b		 mov	 edi, DWORD PTR [ebx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 75   : 	for (auto i = container.begin(); i != container.end(); ++i)

  000f0	3b f7		 cmp	 esi, edi
  000f2	75 8d		 jne	 SHORT $LL108@OnClear
$LN83@OnClear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1357 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  000f4	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  000f7	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  000fb	75 23		 jne	 SHORT $LN124@OnClear
  000fd	0f 1f 00	 npad	 3
$LL123@OnClear:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

  00100	ff 76 08	 push	 DWORD PTR [esi+8]
  00103	8b cb		 mov	 ecx, ebx
  00105	53		 push	 ebx
  00106	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0010b	8b c6		 mov	 eax, esi

; 654  :     _Val         = static_cast<_Other&&>(_New_val);

  0010d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010f	6a 18		 push	 24			; 00000018H
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00117	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0011a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0011e	74 e0		 je	 SHORT $LL123@OnClear
$LN124@OnClear:

; 1358 :         _Head->_Parent  = _Head;

  00120	89 7f 04	 mov	 DWORD PTR [edi+4], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00123	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1359 :         _Head->_Left    = _Head;

  00128	89 3f		 mov	 DWORD PTR [edi], edi

; 1360 :         _Head->_Right   = _Head;

  0012a	89 7f 08	 mov	 DWORD PTR [edi+8], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0012d	8b 7d ec	 mov	 edi, DWORD PTR _this$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1361 :         _Scary->_Mysize = 0;

  00130	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1100 : 	for (DWORD d = 0; d < m_modelThingSetVector.size(); ++d)

  00137	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _d$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0013e	8b 8f dc 02 00
	00		 mov	 ecx, DWORD PTR [edi+732]
  00144	8b 9f d8 02 00
	00		 mov	 ebx, DWORD PTR [edi+728]
  0014a	2b cb		 sub	 ecx, ebx
  0014c	f7 e9		 imul	 ecx
  0014e	d1 fa		 sar	 edx, 1
  00150	8b c2		 mov	 eax, edx
  00152	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00155	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1100 : 	for (DWORD d = 0; d < m_modelThingSetVector.size(); ++d)

  00157	0f 84 9b 00 00
	00		 je	 $LN3@OnClear
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1931 :         auto& _My_data = _Mypair._Myval2;

  0015d	33 d2		 xor	 edx, edx
  0015f	89 55 f0	 mov	 DWORD PTR tv1115[ebp], edx
$LL4@OnClear:

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00162	8b 34 13	 mov	 esi, DWORD PTR [ebx+edx]
  00165	8b 44 13 04	 mov	 eax, DWORD PTR [ebx+edx+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  00169	3b f0		 cmp	 esi, eax
  0016b	74 4a		 je	 SHORT $LN14@OnClear
  0016d	0f 1f 00	 npad	 3
$LL32@OnClear:

; 44   : 	{
; 45   : 		delete* i;

  00170	8b 3e		 mov	 edi, DWORD PTR [esi]
  00172	85 ff		 test	 edi, edi
  00174	74 2d		 je	 SHORT $LN37@OnClear
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 53   : 		if (m_pObject)

  00176	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 37   : 	{

  00178	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 53   : 		if (m_pObject)

  0017f	85 c9		 test	 ecx, ecx
  00181	74 0b		 je	 SHORT $LN43@OnClear

; 54   : 		{
; 55   : 			m_pObject->Release();

  00183	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 			m_pObject = NULL;

  00188	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
$LN43@OnClear:
  0018e	6a 04		 push	 4
  00190	57		 push	 edi

; 39   : 	}

  00191	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00198	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0019d	8b 55 f0	 mov	 edx, DWORD PTR tv1115[ebp]
  001a0	83 c4 08	 add	 esp, 8
$LN37@OnClear:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 46   : 		*i = NULL;

  001a3	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  001a9	83 c6 04	 add	 esi, 4

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001ac	8b 44 13 04	 mov	 eax, DWORD PTR [ebx+edx+4]

; 156  :         return _Ptr == _Right._Ptr;

  001b0	3b f0		 cmp	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  001b2	75 bc		 jne	 SHORT $LL32@OnClear
  001b4	8b 7d ec	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN14@OnClear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  001b7	8b 0c 13	 mov	 ecx, DWORD PTR [ebx+edx]
  001ba	3b c8		 cmp	 ecx, eax
  001bc	74 04		 je	 SHORT $LN2@OnClear

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  001be	89 4c 13 04	 mov	 DWORD PTR [ebx+edx+4], ecx
$LN2@OnClear:

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001c2	8b 8f dc 02 00
	00		 mov	 ecx, DWORD PTR [edi+732]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1100 : 	for (DWORD d = 0; d < m_modelThingSetVector.size(); ++d)

  001c8	83 c2 0c	 add	 edx, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001cb	8b 9f d8 02 00
	00		 mov	 ebx, DWORD PTR [edi+728]
  001d1	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1100 : 	for (DWORD d = 0; d < m_modelThingSetVector.size(); ++d)

  001d6	8b 75 e8	 mov	 esi, DWORD PTR _d$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001d9	2b cb		 sub	 ecx, ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1100 : 	for (DWORD d = 0; d < m_modelThingSetVector.size(); ++d)

  001db	89 55 f0	 mov	 DWORD PTR tv1115[ebp], edx
  001de	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001df	f7 e9		 imul	 ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1100 : 	for (DWORD d = 0; d < m_modelThingSetVector.size(); ++d)

  001e1	89 75 e8	 mov	 DWORD PTR _d$1$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001e4	d1 fa		 sar	 edx, 1
  001e6	8b c2		 mov	 eax, edx
  001e8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001eb	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1100 : 	for (DWORD d = 0; d < m_modelThingSetVector.size(); ++d)

  001ed	8b 55 f0	 mov	 edx, DWORD PTR tv1115[ebp]
  001f0	3b f0		 cmp	 esi, eax
  001f2	0f 82 6a ff ff
	ff		 jb	 $LL4@OnClear
$LN3@OnClear:

; 1101 : 	{
; 1102 : 		m_modelThingSetVector[d].Clear();
; 1103 : 	}
; 1104 : }

  001f8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001fb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00202	59		 pop	 ecx
  00203	5f		 pop	 edi
  00204	5e		 pop	 esi
  00205	5b		 pop	 ebx
  00206	8b e5		 mov	 esp, ebp
  00208	5d		 pop	 ebp
  00209	c3		 ret	 0
  0020a	cc		 int	 3
  0020b	cc		 int	 3
  0020c	cc		 int	 3
  0020d	cc		 int	 3
  0020e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?OnClear@CGraphicThingInstance@@MAEXXZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnClear@CGraphicThingInstance@@MAEXXZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnClear@CGraphicThingInstance@@MAEXXZ ENDP		; CGraphicThingInstance::OnClear
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetBoundingAABB@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_v3Min$ = 8						; size = 4
_v3Max$ = 12						; size = 4
?GetBoundingAABB@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@0@Z PROC ; CGraphicThingInstance::GetBoundingAABB, COMDAT
; _this$ = ecx

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 140  : 	BuildBoundingAABB();

  00007	e8 00 00 00 00	 call	 ?BuildBoundingAABB@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::BuildBoundingAABB

; 141  : 
; 142  : 	v3Min = m_v3Min;

  0000c	f3 0f 7e 87 b4
	02 00 00	 movq	 xmm0, QWORD PTR [edi+692]

; 143  : 	v3Max = m_v3Max;
; 144  : 
; 145  : 	D3DXVec3TransformCoord(&m_v3Center, &m_v3Center, &GetTransform());

  00014	8d b7 a8 02 00
	00		 lea	 esi, DWORD PTR [edi+680]
  0001a	8b 55 08	 mov	 edx, DWORD PTR _v3Min$[ebp]
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _v3Max$[ebp]
  00020	66 0f d6 02	 movq	 QWORD PTR [edx], xmm0
  00024	8b 87 bc 02 00
	00		 mov	 eax, DWORD PTR [edi+700]
  0002a	89 42 08	 mov	 DWORD PTR [edx+8], eax
  0002d	f3 0f 7e 87 c0
	02 00 00	 movq	 xmm0, QWORD PTR [edi+704]
  00035	66 0f d6 01	 movq	 QWORD PTR [ecx], xmm0
  00039	8b 87 c8 02 00
	00		 mov	 eax, DWORD PTR [edi+712]
  0003f	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00042	8b cf		 mov	 ecx, edi
  00044	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  00049	50		 push	 eax
  0004a	56		 push	 esi
  0004b	56		 push	 esi
  0004c	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 146  : 	return true;

  00051	5f		 pop	 edi
  00052	b0 01		 mov	 al, 1
  00054	5e		 pop	 esi

; 147  : }

  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?GetBoundingAABB@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@0@Z ENDP ; CGraphicThingInstance::GetBoundingAABB
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetBoundingSphere@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@AAM@Z
_TEXT	SEGMENT
_v3Center$ = 8						; size = 4
_fRadius$ = 12						; size = 4
?GetBoundingSphere@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@AAM@Z PROC ; CGraphicThingInstance::GetBoundingSphere, COMDAT
; _this$ = ecx

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	57		 push	 edi

; 112  : 	if (m_fRadius <= 0)

  0000a	f3 0f 10 8e a4
	02 00 00	 movss	 xmm1, DWORD PTR [esi+676]
  00012	0f 2f c1	 comiss	 xmm0, xmm1
  00015	72 12		 jb	 SHORT $LN2@GetBoundin

; 113  : 	{
; 114  : 		BuildBoundingSphere();

  00017	e8 00 00 00 00	 call	 ?BuildBoundingSphere@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::BuildBoundingSphere

; 115  : 
; 116  : 		fRadius = m_fRadius;

  0001c	8b 45 0c	 mov	 eax, DWORD PTR _fRadius$[ebp]
  0001f	8b 8e a4 02 00
	00		 mov	 ecx, DWORD PTR [esi+676]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 117  : 		v3Center = m_v3Center;
; 118  : 	}

  00027	eb 07		 jmp	 SHORT $LN5@GetBoundin
$LN2@GetBoundin:

; 119  : 	else
; 120  : 	{
; 121  : 		fRadius = m_fRadius;

  00029	8b 45 0c	 mov	 eax, DWORD PTR _fRadius$[ebp]
  0002c	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1
$LN5@GetBoundin:

; 122  : 		v3Center = m_v3Center;
; 123  : 	}
; 124  : 
; 125  : 	D3DXVec3TransformCoord(&v3Center, &v3Center, &GetTransform());

  00030	8b 7d 08	 mov	 edi, DWORD PTR _v3Center$[ebp]
  00033	8b ce		 mov	 ecx, esi
  00035	f3 0f 7e 86 a8
	02 00 00	 movq	 xmm0, QWORD PTR [esi+680]
  0003d	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
  00041	8b 86 b0 02 00
	00		 mov	 eax, DWORD PTR [esi+688]
  00047	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0004a	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  0004f	50		 push	 eax
  00050	57		 push	 edi
  00051	57		 push	 edi
  00052	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 126  : 	return true;

  00057	5f		 pop	 edi
  00058	b0 01		 mov	 al, 1
  0005a	5e		 pop	 esi

; 127  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
?GetBoundingSphere@CGraphicThingInstance@@UAE_NAAUD3DXVECTOR3@@AAM@Z ENDP ; CGraphicThingInstance::GetBoundingSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?CalculateBBox@CGraphicThingInstance@@UAEXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 16
$T2 = -20						; size = 16
$T3 = -20						; size = 16
$T4 = -20						; size = 16
$T5 = -20						; size = 16
$T6 = -20						; size = 16
$T7 = -20						; size = 16
$T8 = -20						; size = 16
_c_rmatTransform$1$ = -4				; size = 4
?CalculateBBox@CGraphicThingInstance@@UAEXXZ PROC	; CGraphicThingInstance::CalculateBBox, COMDAT
; _this$ = ecx

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b d9		 mov	 ebx, ecx
  0000a	57		 push	 edi

; 151  : 	GetBoundBox(&m_v3BBoxMin, &m_v3BBoxMax);

  0000b	8d bb 54 01 00
	00		 lea	 edi, DWORD PTR [ebx+340]
  00011	57		 push	 edi
  00012	8d b3 48 01 00
	00		 lea	 esi, DWORD PTR [ebx+328]
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 ?GetBoundBox@CGraphicThingInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGraphicThingInstance::GetBoundBox
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 541  :     z = fz;

  0001e	f3 0f 10 8b 50
	01 00 00	 movss	 xmm1, DWORD PTR [ebx+336]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 162  : 	const D3DXMATRIX & c_rmatTransform = GetTransform();

  00026	8b cb		 mov	 ecx, ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 539  :     x = fx;

  00028	f3 0f 10 26	 movss	 xmm4, DWORD PTR [esi]

; 540  :     y = fy;

  0002c	f3 0f 10 ab 4c
	01 00 00	 movss	 xmm5, DWORD PTR [ebx+332]

; 541  :     z = fz;

  00034	f3 0f 11 4d f4	 movss	 DWORD PTR $T8[ebp+8], xmm1
  00039	f3 0f 11 65 ec	 movss	 DWORD PTR $T8[ebp], xmm4
  0003e	f3 0f 11 6d f0	 movss	 DWORD PTR $T8[ebp+4], xmm5

; 542  :     w = fw;

  00043	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR $T8[ebp+12], 1065353216 ; 3f800000H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 153  : 	m_v4TBBox[0] = D3DXVECTOR4(m_v3BBoxMin.x, m_v3BBoxMin.y, m_v3BBoxMin.z, 1.0f);

  0004a	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR $T8[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 542  :     w = fw;

  0004e	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR $T7[ebp+12], 1065353216 ; 3f800000H
  00055	f3 0f 11 4d f4	 movss	 DWORD PTR $T7[ebp+8], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 153  : 	m_v4TBBox[0] = D3DXVECTOR4(m_v3BBoxMin.x, m_v3BBoxMin.y, m_v3BBoxMin.z, 1.0f);

  0005a	0f 11 83 b0 00
	00 00		 movups	 XMMWORD PTR [ebx+176], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 540  :     y = fy;

  00061	f3 0f 10 9b 58
	01 00 00	 movss	 xmm3, DWORD PTR [ebx+344]
  00069	f3 0f 11 65 ec	 movss	 DWORD PTR $T7[ebp], xmm4
  0006e	f3 0f 11 5d f0	 movss	 DWORD PTR $T7[ebp+4], xmm3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 154  : 	m_v4TBBox[1] = D3DXVECTOR4(m_v3BBoxMin.x, m_v3BBoxMax.y, m_v3BBoxMin.z, 1.0f);

  00073	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR $T7[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 542  :     w = fw;

  00077	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR $T6[ebp+12], 1065353216 ; 3f800000H
  0007e	f3 0f 11 4d f4	 movss	 DWORD PTR $T6[ebp+8], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 154  : 	m_v4TBBox[1] = D3DXVECTOR4(m_v3BBoxMin.x, m_v3BBoxMax.y, m_v3BBoxMin.z, 1.0f);

  00083	0f 11 83 c0 00
	00 00		 movups	 XMMWORD PTR [ebx+192], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 539  :     x = fx;

  0008a	f3 0f 10 17	 movss	 xmm2, DWORD PTR [edi]
  0008e	f3 0f 11 55 ec	 movss	 DWORD PTR $T6[ebp], xmm2

; 540  :     y = fy;

  00093	f3 0f 11 6d f0	 movss	 DWORD PTR $T6[ebp+4], xmm5
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 155  : 	m_v4TBBox[2] = D3DXVECTOR4(m_v3BBoxMax.x, m_v3BBoxMin.y, m_v3BBoxMin.z, 1.0f);

  00098	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR $T6[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 542  :     w = fw;

  0009c	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR $T5[ebp+12], 1065353216 ; 3f800000H
  000a3	f3 0f 11 4d f4	 movss	 DWORD PTR $T5[ebp+8], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 155  : 	m_v4TBBox[2] = D3DXVECTOR4(m_v3BBoxMax.x, m_v3BBoxMin.y, m_v3BBoxMin.z, 1.0f);

  000a8	0f 11 83 d0 00
	00 00		 movups	 XMMWORD PTR [ebx+208], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 539  :     x = fx;

  000af	f3 0f 11 55 ec	 movss	 DWORD PTR $T5[ebp], xmm2

; 540  :     y = fy;

  000b4	f3 0f 11 5d f0	 movss	 DWORD PTR $T5[ebp+4], xmm3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 156  : 	m_v4TBBox[3] = D3DXVECTOR4(m_v3BBoxMax.x, m_v3BBoxMax.y, m_v3BBoxMin.z, 1.0f);

  000b9	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR $T5[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 542  :     w = fw;

  000bd	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR $T4[ebp+12], 1065353216 ; 3f800000H
  000c4	f3 0f 11 65 ec	 movss	 DWORD PTR $T4[ebp], xmm4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 156  : 	m_v4TBBox[3] = D3DXVECTOR4(m_v3BBoxMax.x, m_v3BBoxMax.y, m_v3BBoxMin.z, 1.0f);

  000c9	0f 11 83 e0 00
	00 00		 movups	 XMMWORD PTR [ebx+224], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 541  :     z = fz;

  000d0	f3 0f 10 8b 5c
	01 00 00	 movss	 xmm1, DWORD PTR [ebx+348]
  000d8	f3 0f 11 6d f0	 movss	 DWORD PTR $T4[ebp+4], xmm5
  000dd	f3 0f 11 4d f4	 movss	 DWORD PTR $T4[ebp+8], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 157  : 	m_v4TBBox[4] = D3DXVECTOR4(m_v3BBoxMin.x, m_v3BBoxMin.y, m_v3BBoxMax.z, 1.0f);

  000e2	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR $T4[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 542  :     w = fw;

  000e6	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR $T3[ebp+12], 1065353216 ; 3f800000H
  000ed	f3 0f 11 65 ec	 movss	 DWORD PTR $T3[ebp], xmm4
  000f2	f3 0f 11 5d f0	 movss	 DWORD PTR $T3[ebp+4], xmm3
  000f7	f3 0f 11 4d f4	 movss	 DWORD PTR $T3[ebp+8], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 157  : 	m_v4TBBox[4] = D3DXVECTOR4(m_v3BBoxMin.x, m_v3BBoxMin.y, m_v3BBoxMax.z, 1.0f);

  000fc	0f 11 83 f0 00
	00 00		 movups	 XMMWORD PTR [ebx+240], xmm0

; 158  : 	m_v4TBBox[5] = D3DXVECTOR4(m_v3BBoxMin.x, m_v3BBoxMax.y, m_v3BBoxMax.z, 1.0f);

  00103	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR $T3[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 542  :     w = fw;

  00107	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR $T2[ebp+12], 1065353216 ; 3f800000H
  0010e	f3 0f 11 55 ec	 movss	 DWORD PTR $T2[ebp], xmm2
  00113	f3 0f 11 6d f0	 movss	 DWORD PTR $T2[ebp+4], xmm5
  00118	f3 0f 11 4d f4	 movss	 DWORD PTR $T2[ebp+8], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 158  : 	m_v4TBBox[5] = D3DXVECTOR4(m_v3BBoxMin.x, m_v3BBoxMax.y, m_v3BBoxMax.z, 1.0f);

  0011d	0f 11 83 00 01
	00 00		 movups	 XMMWORD PTR [ebx+256], xmm0

; 159  : 	m_v4TBBox[6] = D3DXVECTOR4(m_v3BBoxMax.x, m_v3BBoxMin.y, m_v3BBoxMax.z, 1.0f);

  00124	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR $T2[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 542  :     w = fw;

  00128	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR $T1[ebp+12], 1065353216 ; 3f800000H
  0012f	f3 0f 11 55 ec	 movss	 DWORD PTR $T1[ebp], xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 159  : 	m_v4TBBox[6] = D3DXVECTOR4(m_v3BBoxMax.x, m_v3BBoxMin.y, m_v3BBoxMax.z, 1.0f);

  00134	0f 11 83 10 01
	00 00		 movups	 XMMWORD PTR [ebx+272], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 540  :     y = fy;

  0013b	f3 0f 11 5d f0	 movss	 DWORD PTR $T1[ebp+4], xmm3

; 541  :     z = fz;

  00140	f3 0f 11 4d f4	 movss	 DWORD PTR $T1[ebp+8], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 160  : 	m_v4TBBox[7] = D3DXVECTOR4(m_v3BBoxMax.x, m_v3BBoxMax.y, m_v3BBoxMax.z, 1.0f);

  00145	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR $T1[ebp]
  00149	0f 11 83 20 01
	00 00		 movups	 XMMWORD PTR [ebx+288], xmm0

; 162  : 	const D3DXMATRIX & c_rmatTransform = GetTransform();

  00150	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  00155	8b c8		 mov	 ecx, eax
  00157	33 ff		 xor	 edi, edi
  00159	89 4d fc	 mov	 DWORD PTR _c_rmatTransform$1$[ebp], ecx
  0015c	0f 1f 40 00	 npad	 4
$LL4@CalculateB:

; 165  : 	{
; 166  : 		D3DXVec4Transform(&m_v4TBBox[i], &m_v4TBBox[i], &c_rmatTransform);

  00160	8b f7		 mov	 esi, edi
  00162	8d 83 b0 00 00
	00		 lea	 eax, DWORD PTR [ebx+176]
  00168	c1 e6 04	 shl	 esi, 4
  0016b	03 c6		 add	 eax, esi
  0016d	51		 push	 ecx
  0016e	50		 push	 eax
  0016f	50		 push	 eax
  00170	e8 00 00 00 00	 call	 _D3DXVec4Transform@12
  00175	8d 4f 0b	 lea	 ecx, DWORD PTR [edi+11]
  00178	03 c9		 add	 ecx, ecx

; 167  : 		if (0 == i)

  0017a	85 ff		 test	 edi, edi
  0017c	75 4b		 jne	 SHORT $LN5@CalculateB

; 168  : 		{
; 169  : 			m_v3TBBoxMin.x = m_v4TBBox[i].x;

  0017e	8b 83 b0 00 00
	00		 mov	 eax, DWORD PTR [ebx+176]

; 170  : 			m_v3TBBoxMin.y = m_v4TBBox[i].y;
; 171  : 			m_v3TBBoxMin.z = m_v4TBBox[i].z;
; 172  : 			m_v3TBBoxMax.x = m_v4TBBox[i].x;
; 173  : 			m_v3TBBoxMax.y = m_v4TBBox[i].y;
; 174  : 			m_v3TBBoxMax.z = m_v4TBBox[i].z;

  00184	47		 inc	 edi
  00185	89 83 30 01 00
	00		 mov	 DWORD PTR [ebx+304], eax
  0018b	f3 0f 10 8b b4
	00 00 00	 movss	 xmm1, DWORD PTR [ebx+180]
  00193	f3 0f 11 8b 34
	01 00 00	 movss	 DWORD PTR [ebx+308], xmm1
  0019b	f3 0f 10 83 b8
	00 00 00	 movss	 xmm0, DWORD PTR [ebx+184]
  001a3	f3 0f 11 83 38
	01 00 00	 movss	 DWORD PTR [ebx+312], xmm0
  001ab	8b 04 cb	 mov	 eax, DWORD PTR [ebx+ecx*8]

; 175  : 		}

  001ae	8b 4d fc	 mov	 ecx, DWORD PTR _c_rmatTransform$1$[ebp]
  001b1	89 83 3c 01 00
	00		 mov	 DWORD PTR [ebx+316], eax
  001b7	f3 0f 11 8b 40
	01 00 00	 movss	 DWORD PTR [ebx+320], xmm1
  001bf	f3 0f 11 83 44
	01 00 00	 movss	 DWORD PTR [ebx+324], xmm0
  001c7	eb 97		 jmp	 SHORT $LL4@CalculateB
$LN5@CalculateB:

; 176  : 		else
; 177  : 		{
; 178  : 			if (m_v3TBBoxMin.x > m_v4TBBox[i].x)

  001c9	f3 0f 10 0c cb	 movss	 xmm1, DWORD PTR [ebx+ecx*8]
  001ce	f3 0f 10 83 30
	01 00 00	 movss	 xmm0, DWORD PTR [ebx+304]
  001d6	0f 2f c1	 comiss	 xmm0, xmm1
  001d9	76 08		 jbe	 SHORT $LN7@CalculateB

; 179  : 			{
; 180  : 				m_v3TBBoxMin.x = m_v4TBBox[i].x;

  001db	f3 0f 11 8b 30
	01 00 00	 movss	 DWORD PTR [ebx+304], xmm1
$LN7@CalculateB:

; 181  : 			}
; 182  : 			if (m_v3TBBoxMax.x < m_v4TBBox[i].x)

  001e3	f3 0f 10 04 cb	 movss	 xmm0, DWORD PTR [ebx+ecx*8]
  001e8	0f 2f 83 3c 01
	00 00		 comiss	 xmm0, DWORD PTR [ebx+316]
  001ef	76 08		 jbe	 SHORT $LN8@CalculateB

; 183  : 			{
; 184  : 				m_v3TBBoxMax.x = m_v4TBBox[i].x;

  001f1	f3 0f 11 83 3c
	01 00 00	 movss	 DWORD PTR [ebx+316], xmm0
$LN8@CalculateB:

; 185  : 			}
; 186  : 			if (m_v3TBBoxMin.y > m_v4TBBox[i].y)

  001f9	f3 0f 10 8c 1e
	b4 00 00 00	 movss	 xmm1, DWORD PTR [esi+ebx+180]
  00202	f3 0f 10 83 34
	01 00 00	 movss	 xmm0, DWORD PTR [ebx+308]
  0020a	0f 2f c1	 comiss	 xmm0, xmm1
  0020d	76 08		 jbe	 SHORT $LN9@CalculateB

; 187  : 			{
; 188  : 				m_v3TBBoxMin.y = m_v4TBBox[i].y;

  0020f	f3 0f 11 8b 34
	01 00 00	 movss	 DWORD PTR [ebx+308], xmm1
$LN9@CalculateB:

; 189  : 			}
; 190  : 			if (m_v3TBBoxMax.y < m_v4TBBox[i].y)

  00217	f3 0f 10 84 1e
	b4 00 00 00	 movss	 xmm0, DWORD PTR [esi+ebx+180]
  00220	0f 2f 83 40 01
	00 00		 comiss	 xmm0, DWORD PTR [ebx+320]
  00227	76 08		 jbe	 SHORT $LN10@CalculateB

; 191  : 			{
; 192  : 				m_v3TBBoxMax.y = m_v4TBBox[i].y;

  00229	f3 0f 11 83 40
	01 00 00	 movss	 DWORD PTR [ebx+320], xmm0
$LN10@CalculateB:

; 193  : 			}
; 194  : 			if (m_v3TBBoxMin.z > m_v4TBBox[i].z)

  00231	f3 0f 10 8c 1e
	b8 00 00 00	 movss	 xmm1, DWORD PTR [esi+ebx+184]
  0023a	f3 0f 10 83 38
	01 00 00	 movss	 xmm0, DWORD PTR [ebx+312]
  00242	0f 2f c1	 comiss	 xmm0, xmm1
  00245	76 08		 jbe	 SHORT $LN11@CalculateB

; 195  : 			{
; 196  : 				m_v3TBBoxMin.z = m_v4TBBox[i].z;

  00247	f3 0f 11 8b 38
	01 00 00	 movss	 DWORD PTR [ebx+312], xmm1
$LN11@CalculateB:

; 197  : 			}
; 198  : 			if (m_v3TBBoxMax.z < m_v4TBBox[i].z)

  0024f	f3 0f 10 84 1e
	b8 00 00 00	 movss	 xmm0, DWORD PTR [esi+ebx+184]
  00258	0f 2f 83 44 01
	00 00		 comiss	 xmm0, DWORD PTR [ebx+324]
  0025f	76 08		 jbe	 SHORT $LN2@CalculateB

; 199  : 			{
; 200  : 				m_v3TBBoxMax.z = m_v4TBBox[i].z;

  00261	f3 0f 11 83 44
	01 00 00	 movss	 DWORD PTR [ebx+324], xmm0
$LN2@CalculateB:

; 163  : 
; 164  : 	for (DWORD i = 0; i < 8; ++i)

  00269	8b 4d fc	 mov	 ecx, DWORD PTR _c_rmatTransform$1$[ebp]
  0026c	47		 inc	 edi
  0026d	83 ff 08	 cmp	 edi, 8
  00270	0f 82 ea fe ff
	ff		 jb	 $LL4@CalculateB

; 201  : 			}
; 202  : 		}
; 203  : 	}
; 204  : }

  00276	5f		 pop	 edi
  00277	5e		 pop	 esi
  00278	5b		 pop	 ebx
  00279	8b e5		 mov	 esp, ebp
  0027b	5d		 pop	 ebp
  0027c	c3		 ret	 0
?CalculateBBox@CGraphicThingInstance@@UAEXXZ ENDP	; CGraphicThingInstance::CalculateBBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?BuildBoundingAABB@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
$T1 = -40						; size = 12
_v3Max$ = -28						; size = 12
_v3Min$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?BuildBoundingAABB@CGraphicThingInstance@@QAEXXZ PROC	; CGraphicThingInstance::BuildBoundingAABB, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi

; 131  : 	D3DXVECTOR3 v3Min, v3Max;
; 132  : 	GetBoundBox(0, &v3Min, &v3Max);

  00011	8d 45 e4	 lea	 eax, DWORD PTR _v3Max$[ebp]
  00014	8b f1		 mov	 esi, ecx
  00016	50		 push	 eax
  00017	8d 45 f0	 lea	 eax, DWORD PTR _v3Min$[ebp]
  0001a	50		 push	 eax
  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?GetBoundBox@CGraphicThingInstance@@QAEHKPAUD3DXVECTOR3@@0@Z ; CGraphicThingInstance::GetBoundBox
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00022	f3 0f 10 7d e4	 movss	 xmm7, DWORD PTR _v3Max$[ebp]
  00027	f3 0f 10 5d f4	 movss	 xmm3, DWORD PTR _v3Min$[ebp+4]
  0002c	0f 28 e7	 movaps	 xmm4, xmm7
  0002f	f3 0f 10 75 f0	 movss	 xmm6, DWORD PTR _v3Min$[ebp]
  00034	0f 28 d3	 movaps	 xmm2, xmm3
  00037	f3 0f 10 6d e8	 movss	 xmm5, DWORD PTR _v3Max$[ebp+4]
  0003c	f3 0f 58 e6	 addss	 xmm4, xmm6
  00040	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _v3Min$[ebp+8]
  00045	f3 0f 58 d5	 addss	 xmm2, xmm5
  00049	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _v3Max$[ebp+8]

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0004e	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 136  : }

  00056	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00059	f3 0f 59 e1	 mulss	 xmm4, xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 136  : }

  0005d	33 cd		 xor	 ecx, ebp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0005f	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00063	f3 0f 59 c1	 mulss	 xmm0, xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 133  : 	m_v3Center = (v3Min + v3Max) * 0.5f;

  00067	0f 14 e2	 unpcklps xmm4, xmm2
  0006a	66 0f d6 a6 a8
	02 00 00	 movq	 QWORD PTR [esi+680], xmm4
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 306  :     z = fz;

  00072	f3 0f 11 45 e0	 movss	 DWORD PTR $T1[ebp+8], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 133  : 	m_v3Center = (v3Min + v3Max) * 0.5f;

  00077	8b 45 e0	 mov	 eax, DWORD PTR $T1[ebp+8]
  0007a	89 86 b0 02 00
	00		 mov	 DWORD PTR [esi+688], eax

; 134  : 	m_v3Min = v3Min;

  00080	8b 45 f8	 mov	 eax, DWORD PTR _v3Min$[ebp+8]
  00083	0f 14 f3	 unpcklps xmm6, xmm3
  00086	66 0f d6 b6 b4
	02 00 00	 movq	 QWORD PTR [esi+692], xmm6
  0008e	89 86 bc 02 00
	00		 mov	 DWORD PTR [esi+700], eax

; 135  : 	m_v3Max = v3Max;

  00094	8b 45 ec	 mov	 eax, DWORD PTR _v3Max$[ebp+8]
  00097	0f 14 fd	 unpcklps xmm7, xmm5
  0009a	66 0f d6 be c0
	02 00 00	 movq	 QWORD PTR [esi+704], xmm7
  000a2	89 86 c8 02 00
	00		 mov	 DWORD PTR [esi+712], eax
  000a8	5e		 pop	 esi

; 136  : }

  000a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c3		 ret	 0
?BuildBoundingAABB@CGraphicThingInstance@@QAEXXZ ENDP	; CGraphicThingInstance::BuildBoundingAABB
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?BuildBoundingSphere@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
$T1 = -28						; size = 12
_v3Min$ = -28						; size = 12
_v3Max$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?BuildBoundingSphere@CGraphicThingInstance@@QAEXXZ PROC	; CGraphicThingInstance::BuildBoundingSphere, COMDAT
; _this$ = ecx

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 18	 mov	 DWORD PTR __$ArrayPad$[esp+28], eax
  00014	56		 push	 esi

; 102  : 	D3DXVECTOR3 v3Min, v3Max;
; 103  : 	GetBoundBox(0, &v3Min, &v3Max);

  00015	8d 44 24 10	 lea	 eax, DWORD PTR _v3Max$[esp+32]
  00019	8b f1		 mov	 esi, ecx
  0001b	50		 push	 eax
  0001c	8d 44 24 08	 lea	 eax, DWORD PTR _v3Min$[esp+36]
  00020	50		 push	 eax
  00021	6a 00		 push	 0
  00023	e8 00 00 00 00	 call	 ?GetBoundBox@CGraphicThingInstance@@QAEHKPAUD3DXVECTOR3@@0@Z ; CGraphicThingInstance::GetBoundBox
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00028	f3 0f 10 54 24
	0c		 movss	 xmm2, DWORD PTR _v3Min$[esp+40]
  0002e	f3 0f 10 74 24
	18		 movss	 xmm6, DWORD PTR _v3Max$[esp+40]
  00034	0f 28 c2	 movaps	 xmm0, xmm2
  00037	f3 0f 10 4c 24
	08		 movss	 xmm1, DWORD PTR _v3Min$[esp+36]
  0003d	f3 0f 58 c6	 addss	 xmm0, xmm6
  00041	f3 0f 10 7c 24
	14		 movss	 xmm7, DWORD PTR _v3Max$[esp+36]

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00047	f3 0f 5c f2	 subss	 xmm6, xmm2

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0004b	f3 0f 10 5c 24
	10		 movss	 xmm3, DWORD PTR _v3Max$[esp+32]
  00051	f3 0f 58 cf	 addss	 xmm1, xmm7

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00055	f3 0f 5c 7c 24
	08		 subss	 xmm7, DWORD PTR _v3Min$[esp+36]

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0005b	f3 0f 58 5c 24
	04		 addss	 xmm3, DWORD PTR _v3Min$[esp+32]

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00061	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00069	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  00071	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3f000000

; 306  :     z = fz;

  00079	f3 0f 11 44 24
	0c		 movss	 DWORD PTR $T1[esp+40], xmm0

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007f	f3 0f 10 44 24
	10		 movss	 xmm0, DWORD PTR _v3Max$[esp+32]
  00085	f3 0f 5c 44 24
	04		 subss	 xmm0, DWORD PTR _v3Min$[esp+32]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 104  : 	m_v3Center = (v3Min + v3Max) * 0.5f;

  0008b	8b 44 24 0c	 mov	 eax, DWORD PTR $T1[esp+40]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 306  :     z = fz;

  0008f	f3 0f 59 ff	 mulss	 xmm7, xmm7

; 1859 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  00093	f3 0f 59 f6	 mulss	 xmm6, xmm6
  00097	f3 0f 59 c0	 mulss	 xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 104  : 	m_v3Center = (v3Min + v3Max) * 0.5f;

  0009b	0f 14 d9	 unpcklps xmm3, xmm1
  0009e	0f 57 c9	 xorps	 xmm1, xmm1
  000a1	66 0f d6 9e a8
	02 00 00	 movq	 QWORD PTR [esi+680], xmm3
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 1859 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000a9	f3 0f 58 f8	 addss	 xmm7, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 104  : 	m_v3Center = (v3Min + v3Max) * 0.5f;

  000ad	89 86 b0 02 00
	00		 mov	 DWORD PTR [esi+688], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 1859 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000b3	f3 0f 58 fe	 addss	 xmm7, xmm6
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  000b7	0f 5a c7	 cvtps2pd xmm0, xmm7
  000ba	66 0f 2e c8	 ucomisd xmm1, xmm0
  000be	77 06		 ja	 SHORT $LN19@BuildBound
  000c0	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  000c4	eb 05		 jmp	 SHORT $LN20@BuildBound
$LN19@BuildBound:
  000c6	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN20@BuildBound:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 108  : }

  000cb	8b 4c 24 1c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+32]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  000cf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 107  : 	m_fRadius = D3DXVec3Length(&vDelta) * 0.5f + 50.0f; // extra length for attached objects

  000d3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  000db	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@42480000
  000e3	f3 0f 11 86 a4
	02 00 00	 movss	 DWORD PTR [esi+676], xmm0

; 108  : }

  000eb	5e		 pop	 esi
  000ec	33 cc		 xor	 ecx, esp
  000ee	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c3		 ret	 0
?BuildBoundingSphere@CGraphicThingInstance@@QAEXXZ ENDP	; CGraphicThingInstance::BuildBoundingSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?UpdateTransform@CGraphicThingInstance@@QAEXPAUD3DXMATRIX@@MH@Z
_TEXT	SEGMENT
_pMatrix$ = 8						; size = 4
_fSecondsElapsed$ = 12					; size = 4
_iModelInstanceIndex$ = 16				; size = 4
?UpdateTransform@CGraphicThingInstance@@QAEXPAUD3DXMATRIX@@MH@Z PROC ; CGraphicThingInstance::UpdateTransform, COMDAT
; _this$ = ecx

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 d0 02 00
	00		 mov	 eax, DWORD PTR [ecx+720]
  00009	8b 91 cc 02 00
	00		 mov	 edx, DWORD PTR [ecx+716]
  0000f	2b c2		 sub	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 730  : 	if (iModelInstanceIndex >= nLODCount)

  00011	8b 4d 10	 mov	 ecx, DWORD PTR _iModelInstanceIndex$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 730  : 	if (iModelInstanceIndex >= nLODCount)

  00017	3b c8		 cmp	 ecx, eax
  00019	7d 25		 jge	 SHORT $LN1@UpdateTran

; 731  : 	{
; 732  : 		//TraceError("void CGraphicThingInstance::UpdateTransform(pMatrix, fSecondsElapsed=%f, iModelInstanceIndex=%d/nLODCount=%d)",
; 733  : 		//	fSecondsElapsed, iModelInstanceIndex, nLODCount);
; 734  : 		return;
; 735  : 	}
; 736  : 
; 737  : 	CGrannyLODController* pkLODCtrl = m_LODControllerVector[iModelInstanceIndex];

  0001b	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]

; 738  : 	if (!pkLODCtrl)

  0001e	85 c9		 test	 ecx, ecx
  00020	74 1e		 je	 SHORT $LN1@UpdateTran

; 739  : 	{
; 740  : 		//TraceError("void CGraphicThingInstance::UpdateTransform(pMatrix, fSecondsElapsed=%f, iModelInstanceIndex=%d/nLODCount=%d) - m_LODControllerVector[iModelInstanceIndex] == NULL",
; 741  : 		//	fSecondsElapsed, iModelInstanceIndex, nLODCount);
; 742  : 		return;
; 743  : 	}
; 744  : 
; 745  : 	CGrannyModelInstance * pModelInstance = pkLODCtrl->GetModelInstance();

  00022	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance

; 746  : 	if (!pModelInstance)

  00027	85 c0		 test	 eax, eax
  00029	74 15		 je	 SHORT $LN1@UpdateTran

; 747  : 	{
; 748  : 		/*	TraceError("void CGraphicThingInstance::UpdateTransform(pMatrix, fSecondsElapsed=%f, iModelInstanceIndex=%d/nLODCount=%d) - pkLODCtrl->GetModelInstance() == NULL",
; 749  : 				fSecondsElapsed, iModelInstanceIndex, nLODCount);*/
; 750  : 		return;
; 751  : 	}
; 752  : 
; 753  : 	pModelInstance->UpdateTransform(pMatrix, fSecondsElapsed);

  0002b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fSecondsElapsed$[ebp]
  00030	51		 push	 ecx
  00031	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00036	8b c8		 mov	 ecx, eax
  00038	ff 75 08	 push	 DWORD PTR _pMatrix$[ebp]
  0003b	e8 00 00 00 00	 call	 ?UpdateTransform@CGrannyModelInstance@@QAEXPAUD3DXMATRIX@@M@Z ; CGrannyModelInstance::UpdateTransform
$LN1@UpdateTran:

; 754  : }

  00040	5d		 pop	 ebp
  00041	c2 0c 00	 ret	 12			; 0000000cH
?UpdateTransform@CGraphicThingInstance@@QAEXPAUD3DXMATRIX@@MH@Z ENDP ; CGraphicThingInstance::UpdateTransform
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetCompositeBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z
_TEXT	SEGMENT
_dwModelInstanceIndex$ = 8				; size = 4
_dwBoneIndex$ = 12					; size = 4
_ppMatrix$ = 16						; size = 4
?GetCompositeBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z PROC ; CGraphicThingInstance::GetCompositeBoneMatrix, COMDAT
; _this$ = ecx

; 708  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 709  : 	if (!CheckModelInstanceIndex(dwModelInstanceIndex))

  00005	8b 7d 08	 mov	 edi, DWORD PTR _dwModelInstanceIndex$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00010	84 c0		 test	 al, al
  00012	74 2c		 je	 SHORT $LN7@GetComposi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00014	8b 86 cc 02 00
	00		 mov	 eax, DWORD PTR [esi+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 714  : 	CGrannyModelInstance * pModelInstance = m_LODControllerVector[dwModelInstanceIndex]->GetModelInstance();

  0001a	8b 0c b8	 mov	 ecx, DWORD PTR [eax+edi*4]
  0001d	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance

; 715  : 	if (!pModelInstance)

  00022	85 c0		 test	 eax, eax
  00024	74 1a		 je	 SHORT $LN7@GetComposi

; 719  : 	}
; 720  : 
; 721  : 	*ppMatrix = (D3DXMATRIX *)pModelInstance->GetCompositeBoneMatrixPointer(dwBoneIndex);

  00026	ff 75 0c	 push	 DWORD PTR _dwBoneIndex$[ebp]
  00029	8b c8		 mov	 ecx, eax
  0002b	e8 00 00 00 00	 call	 ?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ; CGrannyModelInstance::GetCompositeBoneMatrixPointer
  00030	8b 4d 10	 mov	 ecx, DWORD PTR _ppMatrix$[ebp]
  00033	5f		 pop	 edi

; 722  : 
; 723  : 	return TRUE;
; 724  : }

  00034	5e		 pop	 esi
  00035	89 01		 mov	 DWORD PTR [ecx], eax
  00037	b8 01 00 00 00	 mov	 eax, 1
  0003c	5d		 pop	 ebp
  0003d	c2 0c 00	 ret	 12			; 0000000cH
$LN7@GetComposi:
  00040	5f		 pop	 edi

; 716  : 	{
; 717  : 		//TraceError("CGraphicThingInstance::GetCompositeBoneMatrix(dwModelInstanceIndex=%d, dwBoneIndex=%d, D3DXMATRIX ** ppMatrix)", dwModelInstanceIndex, dwBoneIndex);
; 718  : 		return FALSE;

  00041	33 c0		 xor	 eax, eax

; 722  : 
; 723  : 	return TRUE;
; 724  : }

  00043	5e		 pop	 esi
  00044	5d		 pop	 ebp
  00045	c2 0c 00	 ret	 12			; 0000000cH
?GetCompositeBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z ENDP ; CGraphicThingInstance::GetCompositeBoneMatrix
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z
_TEXT	SEGMENT
_dwModelInstanceIndex$ = 8				; size = 4
_dwBoneIndex$ = 12					; size = 4
_ppMatrix$ = 16						; size = 4
?GetBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z PROC ; CGraphicThingInstance::GetBoneMatrix, COMDAT
; _this$ = ecx

; 686  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 687  : 	if (!CheckModelInstanceIndex(dwModelInstanceIndex))

  00005	8b 7d 08	 mov	 edi, DWORD PTR _dwModelInstanceIndex$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00010	84 c0		 test	 al, al
  00012	74 30		 je	 SHORT $LN8@GetBoneMat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00014	8b 86 cc 02 00
	00		 mov	 eax, DWORD PTR [esi+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 692  : 	CGrannyModelInstance * pModelInstance = m_LODControllerVector[dwModelInstanceIndex]->GetModelInstance();

  0001a	8b 0c b8	 mov	 ecx, DWORD PTR [eax+edi*4]
  0001d	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance

; 693  : 	if (!pModelInstance)

  00022	85 c0		 test	 eax, eax
  00024	74 1e		 je	 SHORT $LN8@GetBoneMat

; 694  : 	{
; 695  : 		return FALSE;
; 696  : 	}
; 697  : 
; 698  : 	*ppMatrix = (D3DXMATRIX *)pModelInstance->GetBoneMatrixPointer(dwBoneIndex);

  00026	ff 75 0c	 push	 DWORD PTR _dwBoneIndex$[ebp]
  00029	8b c8		 mov	 ecx, eax
  0002b	e8 00 00 00 00	 call	 ?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ; CGrannyModelInstance::GetBoneMatrixPointer
  00030	8b 4d 10	 mov	 ecx, DWORD PTR _ppMatrix$[ebp]
  00033	8b d0		 mov	 edx, eax

; 699  : 	if (!*ppMatrix)

  00035	33 c0		 xor	 eax, eax
  00037	85 d2		 test	 edx, edx
  00039	5f		 pop	 edi
  0003a	0f 95 c0	 setne	 al
  0003d	89 11		 mov	 DWORD PTR [ecx], edx

; 702  : 	}
; 703  : 
; 704  : 	return TRUE;
; 705  : }

  0003f	5e		 pop	 esi
  00040	5d		 pop	 ebp
  00041	c2 0c 00	 ret	 12			; 0000000cH
$LN8@GetBoneMat:
  00044	5f		 pop	 edi

; 700  : 	{
; 701  : 		return FALSE;

  00045	33 c0		 xor	 eax, eax

; 702  : 	}
; 703  : 
; 704  : 	return TRUE;
; 705  : }

  00047	5e		 pop	 esi
  00048	5d		 pop	 ebp
  00049	c2 0c 00	 ret	 12			; 0000000cH
?GetBoneMatrix@CGraphicThingInstance@@QAEHKKPAPAUD3DXMATRIX@@@Z ENDP ; CGraphicThingInstance::GetBoneMatrix
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetBoundBox@CGraphicThingInstance@@QAEHKPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_dwModelInstanceIndex$ = 8				; size = 4
_vtMin$ = 12						; size = 4
_vtMax$ = 16						; size = 4
?GetBoundBox@CGraphicThingInstance@@QAEHKPAUD3DXVECTOR3@@0@Z PROC ; CGraphicThingInstance::GetBoundBox, COMDAT
; _this$ = ecx

; 665  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 666  : 	if (!CheckModelInstanceIndex(dwModelInstanceIndex))

  00006	ff 75 08	 push	 DWORD PTR _dwModelInstanceIndex$[ebp]
  00009	8b d9		 mov	 ebx, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00010	84 c0		 test	 al, al
  00012	74 61		 je	 SHORT $LN7@GetBoundBo

; 667  : 	{
; 668  : 		return FALSE;
; 669  : 	}
; 670  : 
; 671  : 	vtMin->x = vtMin->y = vtMin->z = 100000.0f;

  00014	8b 75 0c	 mov	 esi, DWORD PTR _vtMin$[ebp]

; 672  : 	vtMax->x = vtMax->y = vtMax->z = -100000.0f;
; 673  : 
; 674  : 	CGrannyLODController * pController = m_LODControllerVector[dwModelInstanceIndex];

  00017	8b 83 cc 02 00
	00		 mov	 eax, DWORD PTR [ebx+716]
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _dwModelInstanceIndex$[ebp]
  00020	8b 7d 10	 mov	 edi, DWORD PTR _vtMax$[ebp]
  00023	c7 46 08 00 50
	c3 47		 mov	 DWORD PTR [esi+8], 1203982336 ; 47c35000H
  0002a	c7 46 04 00 50
	c3 47		 mov	 DWORD PTR [esi+4], 1203982336 ; 47c35000H
  00031	8b 1c 88	 mov	 ebx, DWORD PTR [eax+ecx*4]

; 675  : 	if (!pController->isModelInstance())

  00034	8b cb		 mov	 ecx, ebx
  00036	c7 06 00 50 c3
	47		 mov	 DWORD PTR [esi], 1203982336 ; 47c35000H
  0003c	c7 47 08 00 50
	c3 c7		 mov	 DWORD PTR [edi+8], -943501312 ; c7c35000H
  00043	c7 47 04 00 50
	c3 c7		 mov	 DWORD PTR [edi+4], -943501312 ; c7c35000H
  0004a	c7 07 00 50 c3
	c7		 mov	 DWORD PTR [edi], -943501312 ; c7c35000H
  00050	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  00055	85 c0		 test	 eax, eax
  00057	74 1c		 je	 SHORT $LN7@GetBoundBo

; 676  : 	{
; 677  : 		return FALSE;
; 678  : 	}
; 679  : 
; 680  : 	CGrannyModelInstance * pModelInstance = pController->GetModelInstance();

  00059	8b cb		 mov	 ecx, ebx
  0005b	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance

; 681  : 	pModelInstance->GetBoundBox(vtMin, vtMax);

  00060	57		 push	 edi
  00061	56		 push	 esi
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox
  00069	5f		 pop	 edi

; 682  : 	return TRUE;
; 683  : }

  0006a	5e		 pop	 esi
  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	5b		 pop	 ebx
  00071	5d		 pop	 ebp
  00072	c2 0c 00	 ret	 12			; 0000000cH
$LN7@GetBoundBo:
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	33 c0		 xor	 eax, eax
  00079	5b		 pop	 ebx
  0007a	5d		 pop	 ebp
  0007b	c2 0c 00	 ret	 12			; 0000000cH
?GetBoundBox@CGraphicThingInstance@@QAEHKPAUD3DXVECTOR3@@0@Z ENDP ; CGraphicThingInstance::GetBoundBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetBoundBox@CGraphicThingInstance@@QAEXPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
tv268 = -4						; size = 4
_vtMin$ = 8						; size = 4
_vtMax$ = 12						; size = 4
?GetBoundBox@CGraphicThingInstance@@QAEXPAUD3DXVECTOR3@@0@Z PROC ; CGraphicThingInstance::GetBoundBox, COMDAT
; _this$ = ecx

; 658  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 659  : 	vtMin->x = vtMin->y = vtMin->z = 100000.0f;

  00004	8b 45 08	 mov	 eax, DWORD PTR _vtMin$[ebp]
  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 659  : 	vtMin->x = vtMin->y = vtMin->z = 100000.0f;

  0000e	c7 40 08 00 50
	c3 47		 mov	 DWORD PTR [eax+8], 1203982336 ; 47c35000H
  00015	c7 40 04 00 50
	c3 47		 mov	 DWORD PTR [eax+4], 1203982336 ; 47c35000H
  0001c	c7 00 00 50 c3
	47		 mov	 DWORD PTR [eax], 1203982336 ; 47c35000H

; 660  : 	vtMax->x = vtMax->y = vtMax->z = -100000.0f;

  00022	8b 45 0c	 mov	 eax, DWORD PTR _vtMax$[ebp]
  00025	c7 40 08 00 50
	c3 c7		 mov	 DWORD PTR [eax+8], -943501312 ; c7c35000H
  0002c	c7 40 04 00 50
	c3 c7		 mov	 DWORD PTR [eax+4], -943501312 ; c7c35000H
  00033	c7 00 00 50 c3
	c7		 mov	 DWORD PTR [eax], -943501312 ; c7c35000H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00039	8b 81 d0 02 00
	00		 mov	 eax, DWORD PTR [ecx+720]
  0003f	89 45 fc	 mov	 DWORD PTR tv268[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00042	3b f0		 cmp	 esi, eax
  00044	74 24		 je	 SHORT $LN19@GetBoundBo
  00046	57		 push	 edi
$LL20@GetBoundBo:

; 266  :         _Func(*_UFirst);

  00047	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 189  : 			if (pController->isModelInstance())

  00049	8b cf		 mov	 ecx, edi
  0004b	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  00050	85 c0		 test	 eax, eax
  00052	74 0d		 je	 SHORT $LN18@GetBoundBo

; 190  : 			{
; 191  : 				pController->GetBoundBox(m_vtMin, m_vtMax);

  00054	ff 75 0c	 push	 DWORD PTR _vtMax$[ebp]
  00057	8b cf		 mov	 ecx, edi
  00059	ff 75 08	 push	 DWORD PTR _vtMin$[ebp]
  0005c	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyLODController@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyLODController::GetBoundBox
$LN18@GetBoundBo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00061	83 c6 04	 add	 esi, 4
  00064	3b 75 fc	 cmp	 esi, DWORD PTR tv268[ebp]
  00067	75 de		 jne	 SHORT $LL20@GetBoundBo
  00069	5f		 pop	 edi
$LN19@GetBoundBo:
  0006a	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 662  : }

  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 08 00	 ret	 8
?GetBoundBox@CGraphicThingInstance@@QAEXPAUD3DXVECTOR3@@0@Z ENDP ; CGraphicThingInstance::GetBoundBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?Intersect@CGraphicThingInstance@@QAE_NPAM00@Z
_TEXT	SEGMENT
_pu$ = 8						; size = 4
_pv$ = 12						; size = 4
_pt$ = 16						; size = 4
?Intersect@CGraphicThingInstance@@QAE_NPAM00@Z PROC	; CGraphicThingInstance::Intersect, COMDAT
; _this$ = ecx

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 639  : 	if (!CGraphicObjectInstance::isShow())

  00007	e8 00 00 00 00	 call	 ?isShow@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::isShow
  0000c	84 c0		 test	 al, al
  0000e	74 37		 je	 SHORT $LN10@Intersect

; 640  : 	{
; 641  : 		return false;
; 642  : 	}
; 643  : 	if (!m_bUpdated)

  00010	80 bf 8c 02 00
	00 00		 cmp	 BYTE PTR [edi+652], 0
  00017	74 2e		 je	 SHORT $LN10@Intersect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00019	8b b7 cc 02 00
	00		 mov	 esi, DWORD PTR [edi+716]
  0001f	3b b7 d0 02 00
	00		 cmp	 esi, DWORD PTR [edi+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 648  : 	if (m_LODControllerVector.empty())

  00025	74 20		 je	 SHORT $LN10@Intersect

; 652  : 	}
; 653  : 
; 654  : 	return m_LODControllerVector[0]->Intersect(&GetTransform(), pu, pv, pt);

  00027	8b 36		 mov	 esi, DWORD PTR [esi]
  00029	8b cf		 mov	 ecx, edi
  0002b	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  00030	ff 75 10	 push	 DWORD PTR _pt$[ebp]
  00033	8b ce		 mov	 ecx, esi
  00035	ff 75 0c	 push	 DWORD PTR _pv$[ebp]
  00038	ff 75 08	 push	 DWORD PTR _pu$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?Intersect@CGrannyLODController@@QAE_NPBUD3DXMATRIX@@PAM11@Z ; CGrannyLODController::Intersect
  00041	5f		 pop	 edi

; 655  : }

  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c2 0c 00	 ret	 12			; 0000000cH
$LN10@Intersect:
  00047	5f		 pop	 edi

; 649  : 	{
; 650  : 		//TraceError("CGraphicThingInstance::Intersect - m_LODControllerVector is empty");
; 651  : 		return false;

  00048	32 c0		 xor	 al, al

; 655  : }

  0004a	5e		 pop	 esi
  0004b	5d		 pop	 ebp
  0004c	c2 0c 00	 ret	 12			; 0000000cH
?Intersect@CGraphicThingInstance@@QAE_NPAM00@Z ENDP	; CGraphicThingInstance::Intersect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?ChangeMotion@CGraphicThingInstance@@QAE_NKHM@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_ChangeMotionPointer$$sroa$266$1$ = 8			; size = 4
_dwMotionKey$ = 8					; size = 4
_loopCount$ = 12					; size = 4
_speedRatio$ = 16					; size = 4
?ChangeMotion@CGraphicThingInstance@@QAE_NKHM@Z PROC	; CGraphicThingInstance::ChangeMotion, COMDAT
; _this$ = ecx

; 531  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 532  : 	if (!CheckMotionThingIndex(dwMotionKey))

  00008	8b 75 08	 mov	 esi, DWORD PTR _dwMotionKey$[ebp]
  0000b	57		 push	 edi
  0000c	56		 push	 esi
  0000d	8b f9		 mov	 edi, ecx
  0000f	e8 00 00 00 00	 call	 ?CheckMotionThingIndex@CGraphicThingInstance@@QAE_NK@Z ; CGraphicThingInstance::CheckMotionThingIndex
  00014	84 c0		 test	 al, al
  00016	0f 84 90 00 00
	00		 je	 $LN54@ChangeMoti
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1367 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0001c	8d 45 08	 lea	 eax, DWORD PTR _dwMotionKey$[ebp]
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00023	50		 push	 eax
  00024	8d 8f e4 02 00
	00		 lea	 ecx, DWORD PTR [edi+740]
  0002a	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::_Find_lower_bound<unsigned long>

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  00032	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00036	75 05		 jne	 SHORT $LN9@ChangeMoti
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  00038	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0003b	73 06		 jae	 SHORT $LN8@ChangeMoti
$LN9@ChangeMoti:

; 1372 :         return _Get_scary()->_Myhead;

  0003d	8b 87 e4 02 00
	00		 mov	 eax, DWORD PTR [edi+740]
$LN8@ChangeMoti:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 538  : 	CGraphicThing::TRef * proMotionThing = itor->second;

  00043	8b 40 14	 mov	 eax, DWORD PTR [eax+20]

; 539  : 	CGraphicThing * pMotionThing = proMotionThing->GetPointer();

  00046	8b 30		 mov	 esi, DWORD PTR [eax]

; 540  : 
; 541  : 	if (!pMotionThing)

  00048	85 f6		 test	 esi, esi
  0004a	74 60		 je	 SHORT $LN54@ChangeMoti

; 542  : 	{
; 543  : 		return false;
; 544  : 	}
; 545  : 
; 546  : 	if (!pMotionThing->CheckMotionIndex(0))

  0004c	6a 00		 push	 0
  0004e	8b ce		 mov	 ecx, esi
  00050	e8 00 00 00 00	 call	 ?CheckMotionIndex@CGraphicThing@@QBE_NH@Z ; CGraphicThing::CheckMotionIndex
  00055	84 c0		 test	 al, al
  00057	74 53		 je	 SHORT $LN54@ChangeMoti

; 552  : 	ChangeMotionPointer.m_pMotion = pMotionThing->GetMotionPointer(0);

  00059	6a 00		 push	 0
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?GetMotionPointer@CGraphicThing@@QAEPAVCGrannyMotion@@H@Z ; CGraphicThing::GetMotionPointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00062	8b 9f d0 02 00
	00		 mov	 ebx, DWORD PTR [edi+720]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00068	8b b7 cc 02 00
	00		 mov	 esi, DWORD PTR [edi+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 552  : 	ChangeMotionPointer.m_pMotion = pMotionThing->GetMotionPointer(0);

  0006e	89 45 08	 mov	 DWORD PTR _ChangeMotionPointer$$sroa$266$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00071	3b f3		 cmp	 esi, ebx
  00073	74 2c		 je	 SHORT $LN43@ChangeMoti
$LL44@ChangeMoti:

; 266  :         _Func(*_UFirst);

  00075	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 242  : 			if (pController->isModelInstance())

  00077	8b cf		 mov	 ecx, edi
  00079	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0007e	85 c0		 test	 eax, eax
  00080	74 18		 je	 SHORT $LN42@ChangeMoti

; 243  : 			{
; 244  : 				pController->ChangeMotionPointer(m_pMotion, m_loopCount, m_speedRatio);

  00082	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _speedRatio$[ebp]
  00087	51		 push	 ecx
  00088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008d	8b cf		 mov	 ecx, edi
  0008f	ff 75 0c	 push	 DWORD PTR _loopCount$[ebp]
  00092	ff 75 08	 push	 DWORD PTR _ChangeMotionPointer$$sroa$266$1$[ebp]
  00095	e8 00 00 00 00	 call	 ?ChangeMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@HM@Z ; CGrannyLODController::ChangeMotionPointer
$LN42@ChangeMoti:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0009a	83 c6 04	 add	 esi, 4
  0009d	3b f3		 cmp	 esi, ebx
  0009f	75 d4		 jne	 SHORT $LL44@ChangeMoti
$LN43@ChangeMoti:
  000a1	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 558  : }

  000a2	5e		 pop	 esi
  000a3	b0 01		 mov	 al, 1
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 0c 00	 ret	 12			; 0000000cH
$LN54@ChangeMoti:
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	32 c0		 xor	 al, al
  000b0	5b		 pop	 ebx
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 0c 00	 ret	 12			; 0000000cH
?ChangeMotion@CGraphicThingInstance@@QAE_NKHM@Z ENDP	; CGraphicThingInstance::ChangeMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z
_TEXT	SEGMENT
__Func$ = -32						; size = 16
_SetMotionPointer$ = -16				; size = 16
__Loc$1 = -12						; size = 12
_dwMotionKey$ = 8					; size = 4
_blendTime$ = 12					; size = 4
_loopCount$ = 16					; size = 4
_speedRatio$ = 20					; size = 4
?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z PROC	; CGraphicThingInstance::SetMotion, COMDAT
; _this$ = ecx

; 500  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 501  : 	if (!CheckMotionThingIndex(dwMotionKey))

  00008	8b 75 08	 mov	 esi, DWORD PTR _dwMotionKey$[ebp]
  0000b	57		 push	 edi
  0000c	56		 push	 esi
  0000d	8b f9		 mov	 edi, ecx
  0000f	e8 00 00 00 00	 call	 ?CheckMotionThingIndex@CGraphicThingInstance@@QAE_NK@Z ; CGraphicThingInstance::CheckMotionThingIndex
  00014	84 c0		 test	 al, al
  00016	0f 84 b9 00 00
	00		 je	 $LN66@SetMotion
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1367 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0001c	8d 45 08	 lea	 eax, DWORD PTR _dwMotionKey$[ebp]
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00023	50		 push	 eax
  00024	8d 8f e4 02 00
	00		 lea	 ecx, DWORD PTR [edi+740]
  0002a	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::_Find_lower_bound<unsigned long>

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  00032	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00036	75 05		 jne	 SHORT $LN9@SetMotion
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  00038	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0003b	73 06		 jae	 SHORT $LN8@SetMotion
$LN9@SetMotion:

; 1372 :         return _Get_scary()->_Myhead;

  0003d	8b 87 e4 02 00
	00		 mov	 eax, DWORD PTR [edi+740]
$LN8@SetMotion:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 507  : 	CGraphicThing::TRef * proMotionThing = itor->second;

  00043	8b 40 14	 mov	 eax, DWORD PTR [eax+20]

; 508  : 	CGraphicThing * pMotionThing = proMotionThing->GetPointer();

  00046	8b 30		 mov	 esi, DWORD PTR [eax]

; 509  : 
; 510  : 	if (!pMotionThing)

  00048	85 f6		 test	 esi, esi
  0004a	0f 84 85 00 00
	00		 je	 $LN66@SetMotion

; 511  : 	{
; 512  : 		return false;
; 513  : 	}
; 514  : 
; 515  : 	if (!pMotionThing->CheckMotionIndex(0))

  00050	6a 00		 push	 0
  00052	8b ce		 mov	 ecx, esi
  00054	e8 00 00 00 00	 call	 ?CheckMotionIndex@CGraphicThing@@QBE_NH@Z ; CGraphicThing::CheckMotionIndex
  00059	84 c0		 test	 al, al
  0005b	74 78		 je	 SHORT $LN66@SetMotion

; 521  : 	SetMotionPointer.m_pMotion = pMotionThing->GetMotionPointer(0);

  0005d	6a 00		 push	 0
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?GetMotionPointer@CGraphicThing@@QAEPAVCGrannyMotion@@H@Z ; CGraphicThing::GetMotionPointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00066	8b 9f d0 02 00
	00		 mov	 ebx, DWORD PTR [edi+720]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0006c	8b b7 cc 02 00
	00		 mov	 esi, DWORD PTR [edi+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 521  : 	SetMotionPointer.m_pMotion = pMotionThing->GetMotionPointer(0);

  00072	89 45 f0	 mov	 DWORD PTR _SetMotionPointer$[ebp], eax

; 522  : 	SetMotionPointer.m_blendTime = blendTime;
; 523  : 	SetMotionPointer.m_loopCount = loopCount;
; 524  : 	SetMotionPointer.m_speedRatio = speedRatio;
; 525  : 
; 526  : 	std::for_each(m_LODControllerVector.begin(), m_LODControllerVector.end(), SetMotionPointer);

  00075	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _SetMotionPointer$[ebp]
  0007a	8b 45 10	 mov	 eax, DWORD PTR _loopCount$[ebp]
  0007d	89 45 fc	 mov	 DWORD PTR _SetMotionPointer$[ebp+12], eax
  00080	f3 0f 11 45 e0	 movss	 DWORD PTR __Func$[ebp], xmm0
  00085	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _SetMotionPointer$[ebp+12]
  0008a	f3 0f 11 45 ec	 movss	 DWORD PTR __Func$[ebp+12], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0008f	3b f3		 cmp	 esi, ebx
  00091	74 37		 je	 SHORT $LN43@SetMotion
$LL44@SetMotion:

; 266  :         _Func(*_UFirst);

  00093	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 227  : 			if (pController->isModelInstance())

  00095	8b cf		 mov	 ecx, edi
  00097	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0009c	85 c0		 test	 eax, eax
  0009e	74 23		 je	 SHORT $LN42@SetMotion

; 228  : 			{
; 229  : 				pController->SetMotionPointer(m_pMotion, m_blendTime, m_loopCount, m_speedRatio);

  000a0	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _speedRatio$[ebp]
  000a5	51		 push	 ecx
  000a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ab	ff 75 ec	 push	 DWORD PTR __Func$[ebp+12]
  000ae	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _blendTime$[ebp]
  000b3	51		 push	 ecx
  000b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b9	8b cf		 mov	 ecx, edi
  000bb	ff 75 e0	 push	 DWORD PTR __Func$[ebp]
  000be	e8 00 00 00 00	 call	 ?SetMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@MHM@Z ; CGrannyLODController::SetMotionPointer
$LN42@SetMotion:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  000c3	83 c6 04	 add	 esi, 4
  000c6	3b f3		 cmp	 esi, ebx
  000c8	75 c9		 jne	 SHORT $LL44@SetMotion
$LN43@SetMotion:
  000ca	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 528  : }

  000cb	5e		 pop	 esi
  000cc	b0 01		 mov	 al, 1
  000ce	5b		 pop	 ebx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c2 10 00	 ret	 16			; 00000010H
$LN66@SetMotion:
  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	32 c0		 xor	 al, al
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 10 00	 ret	 16			; 00000010H
?SetMotion@CGraphicThingInstance@@QAE_NKMHM@Z ENDP	; CGraphicThingInstance::SetMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ PROC ; CGraphicThingInstance::GetBaseThingPtr, COMDAT
; _this$ = ecx

; 12   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00023	8b 81 d8 02 00
	00		 mov	 eax, DWORD PTR [ecx+728]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 13   : 	if (m_modelThingSetVector.empty())

  00029	3b 81 dc 02 00
	00		 cmp	 eax, DWORD PTR [ecx+732]
  0002f	74 3e		 je	 SHORT $LN26@GetBaseThi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00031	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 19   : 	if (rkModelThingSet.m_pLODThingRefVector.empty())

  00033	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00036	74 37		 je	 SHORT $LN26@GetBaseThi

; 20   : 	{
; 21   : 		return NULL;
; 22   : 	}
; 23   : 
; 24   : 	CGraphicThing::TRef* proThing = rkModelThingSet.m_pLODThingRefVector[0];

  00038	8b 36		 mov	 esi, DWORD PTR [esi]

; 25   : 	if (!proThing)

  0003a	85 f6		 test	 esi, esi
  0003c	74 31		 je	 SHORT $LN26@GetBaseThi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 98   : 		m_pObject = pObject;

  0003e	8b 36		 mov	 esi, DWORD PTR [esi]

; 99   : 
; 100  : 		if (m_pObject)

  00040	85 f6		 test	 esi, esi
  00042	74 07		 je	 SHORT $LN18@GetBaseThi

; 101  : 		{
; 102  : 			m_pObject->AddReference();

  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN18@GetBaseThi:

; 37   : 	{

  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 		if (m_pObject)

  00052	85 f6		 test	 esi, esi
  00054	74 07		 je	 SHORT $LN24@GetBaseThi

; 54   : 		{
; 55   : 			m_pObject->Release();

  00056	8b ce		 mov	 ecx, esi
  00058	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN24@GetBaseThi:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 31   : 	return roThing.GetPointer();

  0005d	8b c6		 mov	 eax, esi

; 32   : }

  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5e		 pop	 esi
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
$LN26@GetBaseThi:

; 26   : 	{
; 27   : 		return NULL;

  0006f	33 c0		 xor	 eax, eax

; 32   : }

  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5e		 pop	 esi
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
  00081	cc		 int	 3
  00082	cc		 int	 3
  00083	cc		 int	 3
  00084	cc		 int	 3
  00085	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ ENDP ; CGraphicThingInstance::GetBaseThingPtr
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?ReloadTexture@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?ReloadTexture@CGraphicThingInstance@@QAEXXZ PROC	; CGraphicThingInstance::ReloadTexture, COMDAT
; _this$ = ecx

; 1077 : {

  00000	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1077 : {

  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 1d		 je	 SHORT $LN17@ReloadText
  00012	57		 push	 edi
$LL18@ReloadText:

; 266  :         _Func(*_UFirst);

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 211  : 			if (pController->isModelInstance())

  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0001c	85 c0		 test	 eax, eax
  0001e	74 07		 je	 SHORT $LN16@ReloadText

; 212  : 			{
; 213  : 				pController->ReloadTexture();

  00020	8b cf		 mov	 ecx, edi
  00022	e8 00 00 00 00	 call	 ?ReloadTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::ReloadTexture
$LN16@ReloadText:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00027	83 c6 04	 add	 esi, 4
  0002a	3b f3		 cmp	 esi, ebx
  0002c	75 e5		 jne	 SHORT $LL18@ReloadText
  0002e	5f		 pop	 edi
$LN17@ReloadText:
  0002f	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1080 : }

  00030	5b		 pop	 ebx
  00031	c3		 ret	 0
?ReloadTexture@CGraphicThingInstance@@QAEXXZ ENDP	; CGraphicThingInstance::ReloadTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetLODControllerPointer@CGraphicThingInstance@@QAEPAVCGrannyLODController@@K@Z
_TEXT	SEGMENT
_dwModelIndex$ = 8					; size = 4
?GetLODControllerPointer@CGraphicThingInstance@@QAEPAVCGrannyLODController@@K@Z PROC ; CGraphicThingInstance::GetLODControllerPointer, COMDAT
; _this$ = ecx

; 1046 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1047 : 	assert(dwModelIndex < m_LODControllerVector.size());
; 1048 : 	return m_LODControllerVector[dwModelIndex];

  00003	8b 89 cc 02 00
	00		 mov	 ecx, DWORD PTR [ecx+716]
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwModelIndex$[ebp]
  0000c	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]

; 1049 : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?GetLODControllerPointer@CGraphicThingInstance@@QAEPAVCGrannyLODController@@K@Z ENDP ; CGraphicThingInstance::GetLODControllerPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetLODControllerPointer@CGraphicThingInstance@@QBEPAVCGrannyLODController@@K@Z
_TEXT	SEGMENT
_dwModelIndex$ = 8					; size = 4
?GetLODControllerPointer@CGraphicThingInstance@@QBEPAVCGrannyLODController@@K@Z PROC ; CGraphicThingInstance::GetLODControllerPointer, COMDAT
; _this$ = ecx

; 1040 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1041 : 	assert(dwModelIndex < m_LODControllerVector.size());
; 1042 : 	return m_LODControllerVector[dwModelIndex];

  00003	8b 89 cc 02 00
	00		 mov	 ecx, DWORD PTR [ecx+716]
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwModelIndex$[ebp]
  0000c	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]

; 1043 : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?GetLODControllerPointer@CGraphicThingInstance@@QBEPAVCGrannyLODController@@K@Z ENDP ; CGraphicThingInstance::GetLODControllerPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetLODControllerCount@CGraphicThingInstance@@QBEKXZ
_TEXT	SEGMENT
?GetLODControllerCount@CGraphicThingInstance@@QBEKXZ PROC ; CGraphicThingInstance::GetLODControllerCount, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 d0 02 00
	00		 mov	 eax, DWORD PTR [ecx+720]
  00006	2b 81 cc 02 00
	00		 sub	 eax, DWORD PTR [ecx+716]
  0000c	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1037 : }

  0000f	c3		 ret	 0
?GetLODControllerCount@CGraphicThingInstance@@QBEKXZ ENDP ; CGraphicThingInstance::GetLODControllerCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?BlendRenderWithTwoTexture@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?BlendRenderWithTwoTexture@CGraphicThingInstance@@QAEXXZ PROC ; CGraphicThingInstance::BlendRenderWithTwoTexture, COMDAT
; _this$ = ecx

; 1001 : 	//assert(m_bUpdated);
; 1002 : 	if (!m_bUpdated)

  00000	80 b9 8c 02 00
	00 00		 cmp	 BYTE PTR [ecx+652], 0
  00007	74 35		 je	 SHORT $LN18@BlendRende
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00009	53		 push	 ebx
  0000a	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
  00010	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  00017	3b f3		 cmp	 esi, ebx
  00019	74 21		 je	 SHORT $LN28@BlendRende
  0001b	57		 push	 edi
  0001c	0f 1f 40 00	 npad	 4
$LL19@BlendRende:

; 266  :         _Func(*_UFirst);

  00020	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 77   : 			if (pController->isModelInstance())

  00022	8b cf		 mov	 ecx, edi
  00024	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  00029	85 c0		 test	 eax, eax
  0002b	74 07		 je	 SHORT $LN17@BlendRende

; 78   : 			{
; 79   : 				pController->RenderWithTwoTexture();

  0002d	8b cf		 mov	 ecx, edi
  0002f	e8 00 00 00 00	 call	 ?RenderWithTwoTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::RenderWithTwoTexture
$LN17@BlendRende:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00034	83 c6 04	 add	 esi, 4
  00037	3b f3		 cmp	 esi, ebx
  00039	75 e5		 jne	 SHORT $LL19@BlendRende
  0003b	5f		 pop	 edi
$LN28@BlendRende:
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
$LN18@BlendRende:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1009 : }

  0003e	c3		 ret	 0
?BlendRenderWithTwoTexture@CGraphicThingInstance@@QAEXXZ ENDP ; CGraphicThingInstance::BlendRenderWithTwoTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?BlendRenderWithOneTexture@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?BlendRenderWithOneTexture@CGraphicThingInstance@@QAEXXZ PROC ; CGraphicThingInstance::BlendRenderWithOneTexture, COMDAT
; _this$ = ecx

; 977  : 	//assert(m_bUpdated);
; 978  : 	if (!m_bUpdated)

  00000	80 b9 8c 02 00
	00 00		 cmp	 BYTE PTR [ecx+652], 0
  00007	74 35		 je	 SHORT $LN18@BlendRende
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00009	53		 push	 ebx
  0000a	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
  00010	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  00017	3b f3		 cmp	 esi, ebx
  00019	74 21		 je	 SHORT $LN28@BlendRende
  0001b	57		 push	 edi
  0001c	0f 1f 40 00	 npad	 4
$LL19@BlendRende:

; 266  :         _Func(*_UFirst);

  00020	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 66   : 			if (pController->isModelInstance())

  00022	8b cf		 mov	 ecx, edi
  00024	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  00029	85 c0		 test	 eax, eax
  0002b	74 07		 je	 SHORT $LN17@BlendRende

; 67   : 			{
; 68   : 				pController->BlendRenderWithOneTexture();

  0002d	8b cf		 mov	 ecx, edi
  0002f	e8 00 00 00 00	 call	 ?BlendRenderWithOneTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::BlendRenderWithOneTexture
$LN17@BlendRende:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00034	83 c6 04	 add	 esi, 4
  00037	3b f3		 cmp	 esi, ebx
  00039	75 e5		 jne	 SHORT $LL19@BlendRende
  0003b	5f		 pop	 edi
$LN28@BlendRende:
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
$LN18@BlendRende:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 985  : }

  0003e	c3		 ret	 0
?BlendRenderWithOneTexture@CGraphicThingInstance@@QAEXXZ ENDP ; CGraphicThingInstance::BlendRenderWithOneTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?RenderWithTwoTexture@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?RenderWithTwoTexture@CGraphicThingInstance@@QAEXXZ PROC ; CGraphicThingInstance::RenderWithTwoTexture, COMDAT
; _this$ = ecx

; 989  : 	//assert(m_bUpdated);
; 990  : 	if (!m_bUpdated)

  00000	80 b9 8c 02 00
	00 00		 cmp	 BYTE PTR [ecx+652], 0
  00007	74 35		 je	 SHORT $LN18@RenderWith
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00009	53		 push	 ebx
  0000a	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
  00010	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  00017	3b f3		 cmp	 esi, ebx
  00019	74 21		 je	 SHORT $LN28@RenderWith
  0001b	57		 push	 edi
  0001c	0f 1f 40 00	 npad	 4
$LL19@RenderWith:

; 266  :         _Func(*_UFirst);

  00020	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 77   : 			if (pController->isModelInstance())

  00022	8b cf		 mov	 ecx, edi
  00024	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  00029	85 c0		 test	 eax, eax
  0002b	74 07		 je	 SHORT $LN17@RenderWith

; 78   : 			{
; 79   : 				pController->RenderWithTwoTexture();

  0002d	8b cf		 mov	 ecx, edi
  0002f	e8 00 00 00 00	 call	 ?RenderWithTwoTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::RenderWithTwoTexture
$LN17@RenderWith:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00034	83 c6 04	 add	 esi, 4
  00037	3b f3		 cmp	 esi, ebx
  00039	75 e5		 jne	 SHORT $LL19@RenderWith
  0003b	5f		 pop	 edi
$LN28@RenderWith:
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
$LN18@RenderWith:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 997  : }

  0003e	c3		 ret	 0
?RenderWithTwoTexture@CGraphicThingInstance@@QAEXXZ ENDP ; CGraphicThingInstance::RenderWithTwoTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?RenderWithOneTexture@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?RenderWithOneTexture@CGraphicThingInstance@@QAEXXZ PROC ; CGraphicThingInstance::RenderWithOneTexture, COMDAT
; _this$ = ecx

; 965  : 	//assert(m_bUpdated);
; 966  : 	if (!m_bUpdated)

  00000	80 b9 8c 02 00
	00 00		 cmp	 BYTE PTR [ecx+652], 0
  00007	74 35		 je	 SHORT $LN18@RenderWith
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00009	53		 push	 ebx
  0000a	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
  00010	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  00017	3b f3		 cmp	 esi, ebx
  00019	74 21		 je	 SHORT $LN28@RenderWith
  0001b	57		 push	 edi
  0001c	0f 1f 40 00	 npad	 4
$LL19@RenderWith:

; 266  :         _Func(*_UFirst);

  00020	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 55   : 			if (pController->isModelInstance())

  00022	8b cf		 mov	 ecx, edi
  00024	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  00029	85 c0		 test	 eax, eax
  0002b	74 07		 je	 SHORT $LN17@RenderWith

; 56   : 			{
; 57   : 				pController->RenderWithOneTexture();

  0002d	8b cf		 mov	 ecx, edi
  0002f	e8 00 00 00 00	 call	 ?RenderWithOneTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::RenderWithOneTexture
$LN17@RenderWith:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00034	83 c6 04	 add	 esi, 4
  00037	3b f3		 cmp	 esi, ebx
  00039	75 e5		 jne	 SHORT $LL19@RenderWith
  0003b	5f		 pop	 edi
$LN28@RenderWith:
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
$LN18@RenderWith:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 973  : }

  0003e	c3		 ret	 0
?RenderWithOneTexture@CGraphicThingInstance@@QAEXXZ ENDP ; CGraphicThingInstance::RenderWithOneTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetHeight@CGraphicThingInstance@@QAEMXZ
_TEXT	SEGMENT
tv184 = -32						; size = 4
_vtMax$ = -28						; size = 12
_vtMin$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?GetHeight@CGraphicThingInstance@@QAEMXZ PROC		; CGraphicThingInstance::GetHeight, COMDAT
; _this$ = ecx

; 1058 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00010	8b 81 cc 02 00
	00		 mov	 eax, DWORD PTR [ecx+716]
  00016	3b 81 d0 02 00
	00		 cmp	 eax, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1059 : 	if (m_LODControllerVector.empty())

  0001c	74 41		 je	 SHORT $LN13@GetHeight

; 1060 : 	{
; 1061 : 		return 0.0f;
; 1062 : 	}
; 1063 : 
; 1064 : 	CGrannyModelInstance * pModelInstance = m_LODControllerVector[0]->GetModelInstance();

  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance

; 1065 : 	if (!pModelInstance)

  00025	85 c0		 test	 eax, eax
  00027	74 36		 je	 SHORT $LN13@GetHeight

; 1066 : 	{
; 1067 : 		return 0.0f;
; 1068 : 	}
; 1069 : 
; 1070 : 	D3DXVECTOR3 vtMin, vtMax;
; 1071 : 	pModelInstance->GetBoundBox(&vtMin, &vtMax);

  00029	8d 4d e4	 lea	 ecx, DWORD PTR _vtMax$[ebp]
  0002c	51		 push	 ecx
  0002d	8d 4d f0	 lea	 ecx, DWORD PTR _vtMin$[ebp]
  00030	51		 push	 ecx
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox

; 1073 : 	return fabs(vtMin.z - vtMax.z);

  00038	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _vtMin$[ebp+8]
  0003d	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _vtMax$[ebp+8]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 680  :             return (float)fabs(_X);

  00042	0f 54 05 00 00
	00 00		 andps	 xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1073 : 	return fabs(vtMin.z - vtMax.z);

  00049	f3 0f 11 45 e0	 movss	 DWORD PTR tv184[ebp], xmm0
  0004e	d9 45 e0	 fld	 DWORD PTR tv184[ebp]

; 1074 : }

  00051	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00054	33 cd		 xor	 ecx, ebp
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
$LN13@GetHeight:
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00062	d9 ee		 fldz
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
?GetHeight@CGraphicThingInstance@@QAEMXZ ENDP		; CGraphicThingInstance::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetLODLevel@CGraphicThingInstance@@QAEEK@Z
_TEXT	SEGMENT
_dwModelInstance$ = 8					; size = 4
?GetLODLevel@CGraphicThingInstance@@QAEEK@Z PROC	; CGraphicThingInstance::GetLODLevel, COMDAT
; _this$ = ecx

; 1052 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1053 : 	assert(dwModelInstance < m_LODControllerVector.size());
; 1054 : 	return (m_LODControllerVector[dwModelInstance]->GetLODLevel());

  00003	8b 89 cc 02 00
	00		 mov	 ecx, DWORD PTR [ecx+716]
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwModelInstance$[ebp]
  0000c	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  0000f	8a 40 1c	 mov	 al, BYTE PTR [eax+28]

; 1055 : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetLODLevel@CGraphicThingInstance@@QAEEK@Z ENDP	; CGraphicThingInstance::GetLODLevel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetAverageSecondElapsed@CGraphicThingInstance@@QAEMXZ
_TEXT	SEGMENT
?GetAverageSecondElapsed@CGraphicThingInstance@@QAEMXZ PROC ; CGraphicThingInstance::GetAverageSecondElapsed, COMDAT
; _this$ = ecx

; 634  : 	return m_fAverageSecondElapsed;

  00000	d9 81 a0 02 00
	00		 fld	 DWORD PTR [ecx+672]

; 635  : }

  00006	c3		 ret	 0
?GetAverageSecondElapsed@CGraphicThingInstance@@QAEMXZ ENDP ; CGraphicThingInstance::GetAverageSecondElapsed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetSecondElapsed@CGraphicThingInstance@@QAEMXZ
_TEXT	SEGMENT
?GetSecondElapsed@CGraphicThingInstance@@QAEMXZ PROC	; CGraphicThingInstance::GetSecondElapsed, COMDAT
; _this$ = ecx

; 629  : 	return m_fSecondElapsed;

  00000	d9 81 9c 02 00
	00		 fld	 DWORD PTR [ecx+668]

; 630  : }

  00006	c3		 ret	 0
?GetSecondElapsed@CGraphicThingInstance@@QAEMXZ ENDP	; CGraphicThingInstance::GetSecondElapsed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetLocalTime@CGraphicThingInstance@@QAEMXZ
_TEXT	SEGMENT
?GetLocalTime@CGraphicThingInstance@@QAEMXZ PROC	; CGraphicThingInstance::GetLocalTime, COMDAT
; _this$ = ecx

; 624  : 	return m_fLocalTime;

  00000	d9 81 94 02 00
	00		 fld	 DWORD PTR [ecx+660]

; 625  : }

  00006	c3		 ret	 0
?GetLocalTime@CGraphicThingInstance@@QAEMXZ ENDP	; CGraphicThingInstance::GetLocalTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetLastLocalTime@CGraphicThingInstance@@QAEMXZ
_TEXT	SEGMENT
?GetLastLocalTime@CGraphicThingInstance@@QAEMXZ PROC	; CGraphicThingInstance::GetLastLocalTime, COMDAT
; _this$ = ecx

; 619  : 	return m_fLastLocalTime;

  00000	d9 81 90 02 00
	00		 fld	 DWORD PTR [ecx+656]

; 620  : }

  00006	c3		 ret	 0
?GetLastLocalTime@CGraphicThingInstance@@QAEMXZ ENDP	; CGraphicThingInstance::GetLastLocalTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?__SetLocalTime@CGraphicThingInstance@@QAEXM@Z
_TEXT	SEGMENT
_fLocalTime$ = 8					; size = 4
?__SetLocalTime@CGraphicThingInstance@@QAEXM@Z PROC	; CGraphicThingInstance::__SetLocalTime, COMDAT
; _this$ = ecx

; 859  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 860  : 	m_fLastLocalTime = m_fLocalTime;

  00003	8b 81 94 02 00
	00		 mov	 eax, DWORD PTR [ecx+660]

; 861  : 	m_fLocalTime = fLocalTime;

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLocalTime$[ebp]
  0000e	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000f	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 859  : {

  00015	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00016	8b b9 d0 02 00
	00		 mov	 edi, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 860  : 	m_fLastLocalTime = m_fLocalTime;

  0001c	89 81 90 02 00
	00		 mov	 DWORD PTR [ecx+656], eax

; 861  : 	m_fLocalTime = fLocalTime;

  00022	f3 0f 11 81 94
	02 00 00	 movss	 DWORD PTR [ecx+660], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0002a	3b f7		 cmp	 esi, edi
  0002c	74 1b		 je	 SHORT $LN17@SetLocalTi
  0002e	66 90		 npad	 2
$LL18@SetLocalTi:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 20   : 			pController->SetLocalTime(fLocalTime);

  00030	51		 push	 ecx
  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetLocalTime@CGrannyLODController@@QAEXM@Z ; CGrannyLODController::SetLocalTime
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLocalTime$[ebp]
  00042	83 c6 04	 add	 esi, 4
  00045	3b f7		 cmp	 esi, edi
  00047	75 e7		 jne	 SHORT $LL18@SetLocalTi
$LN17@SetLocalTi:
  00049	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 866  : }

  0004a	5e		 pop	 esi
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?__SetLocalTime@CGraphicThingInstance@@QAEXM@Z ENDP	; CGraphicThingInstance::__SetLocalTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?SetSpecularInfo@CGraphicThingInstance@@QAEXIPBDHM@Z
_TEXT	SEGMENT
_ePart$ = 8						; size = 4
_c_szMtrlName$ = 12					; size = 4
_bEnable$ = 16						; size = 4
_fPower$ = 20						; size = 4
?SetSpecularInfo@CGraphicThingInstance@@QAEXIPBDHM@Z PROC ; CGraphicThingInstance::SetSpecularInfo, COMDAT
; _this$ = ecx

; 479  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 d0 02 00
	00		 mov	 eax, DWORD PTR [ecx+720]
  00009	8b 91 cc 02 00
	00		 mov	 edx, DWORD PTR [ecx+716]
  0000f	2b c2		 sub	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 480  : 	if (ePart >= m_LODControllerVector.size())

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _ePart$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 480  : 	if (ePart >= m_LODControllerVector.size())

  00017	3b c8		 cmp	 ecx, eax
  00019	72 13		 jb	 SHORT $LN2@SetSpecula

; 481  : 	{
; 482  : 		TraceError("CGraphicThingInstance::SetSpecularInfo(ePart(%d)<uPartCount(%d)) - ePart OUT OF RANGE",

  0001b	50		 push	 eax
  0001c	51		 push	 ecx
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@IDFCAGB@CGraphicThingInstance?3?3SetSpecu@
  00022	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH

; 497  : }

  0002a	5d		 pop	 ebp
  0002b	c2 10 00	 ret	 16			; 00000010H
$LN2@SetSpecula:

; 483  : 				   ePart, m_LODControllerVector.size());
; 484  : 
; 485  : 		return;
; 486  : 	}
; 487  : 
; 488  : 	if (!m_LODControllerVector[ePart])

  0002e	8b 14 8a	 mov	 edx, DWORD PTR [edx+ecx*4]
  00031	85 d2		 test	 edx, edx
  00033	75 13		 jne	 SHORT $LN3@SetSpecula

; 489  : 	{
; 490  : 		TraceError("CGraphicThingInstance::SetSpecularInfo(ePart(%d)) - ePart Data is NULL",

  00035	50		 push	 eax
  00036	51		 push	 ecx
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@ILOLFLHJ@CGraphicThingInstance?3?3SetSpecu@
  0003c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH

; 497  : }

  00044	5d		 pop	 ebp
  00045	c2 10 00	 ret	 16			; 00000010H
$LN3@SetSpecula:

; 491  : 				   ePart, m_LODControllerVector.size());
; 492  : 
; 493  : 		return;
; 494  : 	}
; 495  : 
; 496  : 	m_LODControllerVector[ePart]->SetSpecularInfo(c_szMtrlName, bEnable, fPower);

  00048	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fPower$[ebp]
  0004d	51		 push	 ecx
  0004e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00053	8b ca		 mov	 ecx, edx
  00055	ff 75 10	 push	 DWORD PTR _bEnable$[ebp]
  00058	ff 75 0c	 push	 DWORD PTR _c_szMtrlName$[ebp]
  0005b	e8 00 00 00 00	 call	 ?SetSpecularInfo@CGrannyLODController@@QAEXPBDHM@Z ; CGrannyLODController::SetSpecularInfo

; 497  : }

  00060	5d		 pop	 ebp
  00061	c2 10 00	 ret	 16			; 00000010H
?SetSpecularInfo@CGraphicThingInstance@@QAEXIPBDHM@Z ENDP ; CGraphicThingInstance::SetSpecularInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?SetMaterialData@CGraphicThingInstance@@QAEXIPBDUSMaterialData@@@Z
_TEXT	SEGMENT
_ePart$ = 8						; size = 4
_c_szImageName$ = 12					; size = 4
_kMaterialData$ = 16					; size = 16
?SetMaterialData@CGraphicThingInstance@@QAEXIPBDUSMaterialData@@@Z PROC ; CGraphicThingInstance::SetMaterialData, COMDAT
; _this$ = ecx

; 458  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 d0 02 00
	00		 mov	 eax, DWORD PTR [ecx+720]
  00009	8b 91 cc 02 00
	00		 mov	 edx, DWORD PTR [ecx+716]
  0000f	2b c2		 sub	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 459  : 	if (ePart >= m_LODControllerVector.size())

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _ePart$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 459  : 	if (ePart >= m_LODControllerVector.size())

  00017	3b c8		 cmp	 ecx, eax
  00019	72 13		 jb	 SHORT $LN2@SetMateria

; 460  : 	{
; 461  : 		TraceError("CGraphicThingInstance::SetMaterialData(ePart(%d)<uPartCount(%d)) - ePart OUT OF RANGE",

  0001b	50		 push	 eax
  0001c	51		 push	 ecx
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@DKLHHMAO@CGraphicThingInstance?3?3SetMater@
  00022	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH

; 476  : }

  0002a	5d		 pop	 ebp
  0002b	c2 18 00	 ret	 24			; 00000018H
$LN2@SetMateria:

; 462  : 				   ePart, m_LODControllerVector.size());
; 463  : 
; 464  : 		return;
; 465  : 	}
; 466  : 
; 467  : 	if (!m_LODControllerVector[ePart])

  0002e	8b 14 8a	 mov	 edx, DWORD PTR [edx+ecx*4]
  00031	85 d2		 test	 edx, edx
  00033	75 13		 jne	 SHORT $LN3@SetMateria

; 468  : 	{
; 469  : 		TraceError("CGraphicThingInstance::SetMaterialData(ePart(%d)) - ePart Data is NULL",

  00035	50		 push	 eax
  00036	51		 push	 ecx
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@ILONCBFP@CGraphicThingInstance?3?3SetMater@
  0003c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH

; 476  : }

  00044	5d		 pop	 ebp
  00045	c2 18 00	 ret	 24			; 00000018H
$LN3@SetMateria:

; 470  : 				   ePart, m_LODControllerVector.size());
; 471  : 
; 472  : 		return;
; 473  : 	}
; 474  : 
; 475  : 	m_LODControllerVector[ePart]->SetMaterialData(c_szImageName, kMaterialData);

  00048	8d 45 10	 lea	 eax, DWORD PTR _kMaterialData$[ebp]
  0004b	8b ca		 mov	 ecx, edx
  0004d	50		 push	 eax
  0004e	ff 75 0c	 push	 DWORD PTR _c_szImageName$[ebp]
  00051	e8 00 00 00 00	 call	 ?SetMaterialData@CGrannyLODController@@QAEXPBDABUSMaterialData@@@Z ; CGrannyLODController::SetMaterialData

; 476  : }

  00056	5d		 pop	 ebp
  00057	c2 18 00	 ret	 24			; 00000018H
?SetMaterialData@CGraphicThingInstance@@QAEXIPBDUSMaterialData@@@Z ENDP ; CGraphicThingInstance::SetMaterialData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?SetMaterialImagePointer@CGraphicThingInstance@@QAEXIPBDPAVCGraphicImage@@@Z
_TEXT	SEGMENT
_ePart$ = 8						; size = 4
_c_szImageName$ = 12					; size = 4
_pImage$ = 16						; size = 4
?SetMaterialImagePointer@CGraphicThingInstance@@QAEXIPBDPAVCGraphicImage@@@Z PROC ; CGraphicThingInstance::SetMaterialImagePointer, COMDAT
; _this$ = ecx

; 437  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 cc 02 00
	00		 mov	 eax, DWORD PTR [ecx+716]
  00009	8b 89 d0 02 00
	00		 mov	 ecx, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 438  : 	if (ePart >= m_LODControllerVector.size())

  0000f	8b 55 08	 mov	 edx, DWORD PTR _ePart$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	2b c8		 sub	 ecx, eax
  00014	c1 f9 02	 sar	 ecx, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 438  : 	if (ePart >= m_LODControllerVector.size())

  00017	3b d1		 cmp	 edx, ecx
  00019	72 25		 jb	 SHORT $LN2@SetMateria
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4259 :         return _Mypair._Myval2._Myptr();

  0001b	8b 45 10	 mov	 eax, DWORD PTR _pImage$[ebp]
  0001e	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2301 :         return _BUF_SIZE <= _Myres;

  00021	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  00025	72 02		 jb	 SHORT $LN12@SetMateria

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00027	8b 00		 mov	 eax, DWORD PTR [eax]
$LN12@SetMateria:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 440  : 		TraceError("CGraphicThingInstance::SetMaterialImagePointer(ePart(%d)<uPartCount(%d), c_szImageName=%s, pImage=%s) - ePart OUT OF RANGE",

  00029	50		 push	 eax
  0002a	ff 75 0c	 push	 DWORD PTR _c_szImageName$[ebp]
  0002d	51		 push	 ecx
  0002e	52		 push	 edx
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0HL@PNAAKLOK@CGraphicThingInstance?3?3SetMater@
  00034	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00039	83 c4 14	 add	 esp, 20			; 00000014H

; 455  : }

  0003c	5d		 pop	 ebp
  0003d	c2 0c 00	 ret	 12			; 0000000cH
$LN2@SetMateria:

; 441  : 				   ePart, m_LODControllerVector.size(), c_szImageName, pImage->GetFileName());
; 442  : 
; 443  : 		return;
; 444  : 	}
; 445  : 
; 446  : 	if (!m_LODControllerVector[ePart])

  00040	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00043	85 c0		 test	 eax, eax
  00045	75 25		 jne	 SHORT $LN3@SetMateria
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4259 :         return _Mypair._Myval2._Myptr();

  00047	8b 45 10	 mov	 eax, DWORD PTR _pImage$[ebp]
  0004a	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2301 :         return _BUF_SIZE <= _Myres;

  0004d	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  00051	72 02		 jb	 SHORT $LN25@SetMateria

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00053	8b 00		 mov	 eax, DWORD PTR [eax]
$LN25@SetMateria:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 448  : 		TraceError("CGraphicThingInstance::SetMaterialImagePointer(ePart(%d), c_szImageName=%s, pImage=%s) - ePart Data is NULL",

  00055	50		 push	 eax
  00056	ff 75 0c	 push	 DWORD PTR _c_szImageName$[ebp]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0GM@CIGLBIHL@CGraphicThingInstance?3?3SetMater@
  00060	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00065	83 c4 14	 add	 esp, 20			; 00000014H

; 455  : }

  00068	5d		 pop	 ebp
  00069	c2 0c 00	 ret	 12			; 0000000cH
$LN3@SetMateria:

; 449  : 				   ePart, m_LODControllerVector.size(), c_szImageName, pImage->GetFileName());
; 450  : 
; 451  : 		return;
; 452  : 	}
; 453  : 
; 454  : 	m_LODControllerVector[ePart]->SetMaterialImagePointer(c_szImageName, pImage);

  0006c	ff 75 10	 push	 DWORD PTR _pImage$[ebp]
  0006f	8b c8		 mov	 ecx, eax
  00071	ff 75 0c	 push	 DWORD PTR _c_szImageName$[ebp]
  00074	e8 00 00 00 00	 call	 ?SetMaterialImagePointer@CGrannyLODController@@QAEXPBDPAVCGraphicImage@@@Z ; CGrannyLODController::SetMaterialImagePointer

; 455  : }

  00079	5d		 pop	 ebp
  0007a	c2 0c 00	 ret	 12			; 0000000cH
?SetMaterialImagePointer@CGraphicThingInstance@@QAEXIPBDPAVCGraphicImage@@@Z ENDP ; CGraphicThingInstance::SetMaterialImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?InsertDelay@CGraphicThingInstance@@QAEXM@Z
_TEXT	SEGMENT
_fDelay$ = 8						; size = 4
?InsertDelay@CGraphicThingInstance@@QAEXM@Z PROC	; CGraphicThingInstance::InsertDelay, COMDAT
; _this$ = ecx

; 613  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 614  : 	m_fDelay = fDelay;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fDelay$[ebp]
  00008	f3 0f 11 81 98
	02 00 00	 movss	 DWORD PTR [ecx+664], xmm0

; 615  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?InsertDelay@CGraphicThingInstance@@QAEXM@Z ENDP	; CGraphicThingInstance::InsertDelay
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?ResetLocalTime@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?ResetLocalTime@CGraphicThingInstance@@QAEXXZ PROC	; CGraphicThingInstance::ResetLocalTime, COMDAT
; _this$ = ecx

; 597  : {

  00000	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 597  : {

  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 599  : 	m_fLastLocalTime = 0.0f;

  0000e	c7 81 90 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+656], 0

; 600  : 	m_fLocalTime = 0.0f;

  00018	c7 81 94 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+660], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	74 1d		 je	 SHORT $LN17@ResetLocal
  00026	57		 push	 edi
$LL18@ResetLocal:

; 266  :         _Func(*_UFirst);

  00027	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 200  : 			if (pController->isModelInstance())

  00029	8b cf		 mov	 ecx, edi
  0002b	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  00030	85 c0		 test	 eax, eax
  00032	74 07		 je	 SHORT $LN16@ResetLocal

; 201  : 			{
; 202  : 				pController->ResetLocalTime();

  00034	8b cf		 mov	 ecx, edi
  00036	e8 00 00 00 00	 call	 ?ResetLocalTime@CGrannyLODController@@QAEXXZ ; CGrannyLODController::ResetLocalTime
$LN16@ResetLocal:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003b	83 c6 04	 add	 esi, 4
  0003e	3b f3		 cmp	 esi, ebx
  00040	75 e5		 jne	 SHORT $LL18@ResetLocal
  00042	5f		 pop	 edi
$LN17@ResetLocal:
  00043	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 604  : }

  00044	5b		 pop	 ebx
  00045	c3		 ret	 0
?ResetLocalTime@CGraphicThingInstance@@QAEXXZ ENDP	; CGraphicThingInstance::ResetLocalTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetBonePosition@CGraphicThingInstance@@QAE_NHHPAM00@Z
_TEXT	SEGMENT
_iModelIndex$ = 8					; size = 4
_iBoneIndex$ = 12					; size = 4
_pfx$ = 16						; size = 4
_pfy$ = 20						; size = 4
_pfz$ = 24						; size = 4
?GetBonePosition@CGraphicThingInstance@@QAE_NHHPAM00@Z PROC ; CGraphicThingInstance::GetBonePosition, COMDAT
; _this$ = ecx

; 366  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00003	8b 81 cc 02 00
	00		 mov	 eax, DWORD PTR [ecx+716]
  00009	8b 4d 08	 mov	 ecx, DWORD PTR _iModelIndex$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 369  : 	CGrannyModelInstance * pModelInstance = m_LODControllerVector[iModelIndex]->GetModelInstance();

  0000c	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0000f	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance

; 370  : 
; 371  : 	if (!pModelInstance)

  00014	85 c0		 test	 eax, eax
  00016	75 06		 jne	 SHORT $LN2@GetBonePos

; 372  : 	{
; 373  : 		return false;

  00018	32 c0		 xor	 al, al

; 382  : }

  0001a	5d		 pop	 ebp
  0001b	c2 14 00	 ret	 20			; 00000014H
$LN2@GetBonePos:

; 374  : 	}
; 375  : 
; 376  : 	const float * pfMatrix = pModelInstance->GetBoneMatrixPointer(iBoneIndex);

  0001e	ff 75 0c	 push	 DWORD PTR _iBoneIndex$[ebp]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ; CGrannyModelInstance::GetBoneMatrixPointer

; 377  : 
; 378  : 	*pfx = pfMatrix[12];

  00028	8b 4d 10	 mov	 ecx, DWORD PTR _pfx$[ebp]
  0002b	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  0002e	89 11		 mov	 DWORD PTR [ecx], edx

; 379  : 	*pfy = pfMatrix[13];

  00030	8b 4d 14	 mov	 ecx, DWORD PTR _pfy$[ebp]
  00033	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00036	89 11		 mov	 DWORD PTR [ecx], edx

; 380  : 	*pfz = pfMatrix[14];

  00038	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0003b	8b 45 18	 mov	 eax, DWORD PTR _pfz$[ebp]
  0003e	89 08		 mov	 DWORD PTR [eax], ecx

; 381  : 	return true;

  00040	b0 01		 mov	 al, 1

; 382  : }

  00042	5d		 pop	 ebp
  00043	c2 14 00	 ret	 20			; 00000014H
?GetBonePosition@CGraphicThingInstance@@QAE_NHHPAM00@Z ENDP ; CGraphicThingInstance::GetBonePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?FindBoneIndex@CGraphicThingInstance@@QAE_NHPBDPAH@Z
_TEXT	SEGMENT
_iModelInstance$ = 8					; size = 4
_c_szBoneName$ = 12					; size = 4
_iRetBone$ = 16						; size = 4
?FindBoneIndex@CGraphicThingInstance@@QAE_NHPBDPAH@Z PROC ; CGraphicThingInstance::FindBoneIndex, COMDAT
; _this$ = ecx

; 298  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00003	8b 89 cc 02 00
	00		 mov	 ecx, DWORD PTR [ecx+716]
  00009	8b 45 08	 mov	 eax, DWORD PTR _iModelInstance$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 301  : 	CGrannyModelInstance * pModelInstance = m_LODControllerVector[iModelInstance]->GetModelInstance();

  0000c	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  0000f	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance

; 302  : 
; 303  : 	if (!pModelInstance)

  00014	85 c0		 test	 eax, eax
  00016	75 06		 jne	 SHORT $LN2@FindBoneIn

; 304  : 	{
; 305  : 		return false;

  00018	32 c0		 xor	 al, al

; 309  : }

  0001a	5d		 pop	 ebp
  0001b	c2 0c 00	 ret	 12			; 0000000cH
$LN2@FindBoneIn:

; 306  : 	}
; 307  : 
; 308  : 	return pModelInstance->GetBoneIndexByName(c_szBoneName, iRetBone);

  0001e	ff 75 10	 push	 DWORD PTR _iRetBone$[ebp]
  00021	8b c8		 mov	 ecx, eax
  00023	ff 75 0c	 push	 DWORD PTR _c_szBoneName$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z ; CGrannyModelInstance::GetBoneIndexByName

; 309  : }

  0002b	5d		 pop	 ebp
  0002c	c2 0c 00	 ret	 12			; 0000000cH
?FindBoneIndex@CGraphicThingInstance@@QAE_NHPBDPAH@Z ENDP ; CGraphicThingInstance::FindBoneIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?DetachModelInstance@CGraphicThingInstance@@QAEXHAAV1@H@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_iDstModelInstance$ = 8					; size = 4
_rSrcInstance$ = 12					; size = 4
_iSrcModelInstance$ = 16				; size = 4
?DetachModelInstance@CGraphicThingInstance@@QAEXHAAV1@H@Z PROC ; CGraphicThingInstance::DetachModelInstance, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 349  : 	if (!CheckModelInstanceIndex(iDstModelInstance))

  00007	8b 7d 08	 mov	 edi, DWORD PTR _iDstModelInstance$[ebp]
  0000a	8b c1		 mov	 eax, ecx
  0000c	57		 push	 edi
  0000d	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  00010	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00015	8b 75 10	 mov	 esi, DWORD PTR _iSrcModelInstance$[ebp]
  00018	84 c0		 test	 al, al
  0001a	74 32		 je	 SHORT $LN9@DetachMode

; 350  : 	{
; 351  : 		TraceError("CGraphicThingInstance::AttachModelInstance(iDstModelInstance=%d, iSrcModelInstance=%d)", iDstModelInstance, iSrcModelInstance);
; 352  : 		return;
; 353  : 	}
; 354  : 	if (!rSrcInstance.CheckModelInstanceIndex(iSrcModelInstance))

  0001c	8b 5d 0c	 mov	 ebx, DWORD PTR _rSrcInstance$[ebp]
  0001f	8b cb		 mov	 ecx, ebx
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00027	84 c0		 test	 al, al
  00029	74 23		 je	 SHORT $LN9@DetachMode

; 357  : 		return;
; 358  : 	}
; 359  : 
; 360  : 	CGrannyLODController * pDstLODController = m_LODControllerVector[iDstModelInstance];
; 361  : 	CGrannyLODController * pSrcLODController = rSrcInstance.m_LODControllerVector[iSrcModelInstance];
; 362  : 	pDstLODController->DetachModelInstance(pSrcLODController);

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0002e	8b 83 cc 02 00
	00		 mov	 eax, DWORD PTR [ebx+716]
  00034	8b 89 cc 02 00
	00		 mov	 ecx, DWORD PTR [ecx+716]
  0003a	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  0003d	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]
  00040	e8 00 00 00 00	 call	 ?DetachModelInstance@CGrannyLODController@@QAEXPAV1@@Z ; CGrannyLODController::DetachModelInstance
  00045	5f		 pop	 edi

; 363  : }

  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 0c 00	 ret	 12			; 0000000cH
$LN9@DetachMode:

; 355  : 	{
; 356  : 		TraceError("CGraphicThingInstance::AttachModelInstance(iDstModelInstance=%d, iSrcModelInstance=%d)", iDstModelInstance, iSrcModelInstance);

  0004e	56		 push	 esi
  0004f	57		 push	 edi
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0FH@FOLHJMIP@CGraphicThingInstance?3?3AttachMo@
  00055	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005d	5f		 pop	 edi

; 363  : }

  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 0c 00	 ret	 12			; 0000000cH
?DetachModelInstance@CGraphicThingInstance@@QAEXHAAV1@H@Z ENDP ; CGraphicThingInstance::DetachModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDAAV1@H@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_iDstModelInstance$ = 8					; size = 4
_c_szBoneName$ = 12					; size = 4
_rSrcInstance$ = 16					; size = 4
_iSrcModelInstance$ = 20				; size = 4
?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDAAV1@H@Z PROC ; CGraphicThingInstance::AttachModelInstance, COMDAT
; _this$ = ecx

; 330  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 331  : 	if (!CheckModelInstanceIndex(iDstModelInstance))

  00007	8b 7d 08	 mov	 edi, DWORD PTR _iDstModelInstance$[ebp]
  0000a	8b c1		 mov	 eax, ecx
  0000c	57		 push	 edi
  0000d	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  00010	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00015	8b 75 14	 mov	 esi, DWORD PTR _iSrcModelInstance$[ebp]
  00018	84 c0		 test	 al, al
  0001a	74 35		 je	 SHORT $LN9@AttachMode

; 332  : 	{
; 333  : 		TraceError("CGraphicThingInstance::AttachModelInstance(iDstModelInstance=%d, c_szBoneName=%s, iSrcModelInstance=%d)", iDstModelInstance, c_szBoneName, iSrcModelInstance);
; 334  : 		return;
; 335  : 	}
; 336  : 	if (!rSrcInstance.CheckModelInstanceIndex(iSrcModelInstance))

  0001c	8b 5d 10	 mov	 ebx, DWORD PTR _rSrcInstance$[ebp]
  0001f	8b cb		 mov	 ecx, ebx
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00027	84 c0		 test	 al, al
  00029	74 26		 je	 SHORT $LN9@AttachMode

; 339  : 		return;
; 340  : 	}
; 341  : 
; 342  : 	CGrannyLODController * pDstLODController = m_LODControllerVector[iDstModelInstance];
; 343  : 	CGrannyLODController * pSrcLODController = rSrcInstance.m_LODControllerVector[iSrcModelInstance];
; 344  : 	pDstLODController->AttachModelInstance(pSrcLODController, c_szBoneName);

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0002e	8b 83 cc 02 00
	00		 mov	 eax, DWORD PTR [ebx+716]
  00034	ff 75 0c	 push	 DWORD PTR _c_szBoneName$[ebp]
  00037	8b 89 cc 02 00
	00		 mov	 ecx, DWORD PTR [ecx+716]
  0003d	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  00040	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]
  00043	e8 00 00 00 00	 call	 ?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z ; CGrannyLODController::AttachModelInstance
  00048	5f		 pop	 edi

; 345  : }

  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 10 00	 ret	 16			; 00000010H
$LN9@AttachMode:

; 337  : 	{
; 338  : 		TraceError("CGraphicThingInstance::AttachModelInstance(iDstModelInstance=%d, c_szBoneName=%s, iSrcModelInstance=%d)", iDstModelInstance, c_szBoneName, iSrcModelInstance);

  00051	56		 push	 esi
  00052	ff 75 0c	 push	 DWORD PTR _c_szBoneName$[ebp]
  00055	57		 push	 edi
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@OAKDPIDM@CGraphicThingInstance?3?3AttachMo@
  0005b	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00060	83 c4 10	 add	 esp, 16			; 00000010H
  00063	5f		 pop	 edi

; 345  : }

  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 10 00	 ret	 16			; 00000010H
?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDAAV1@H@Z ENDP ; CGraphicThingInstance::AttachModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDH@Z
_TEXT	SEGMENT
_iDstModelInstance$ = 8					; size = 4
_c_szBoneName$ = 12					; size = 4
_iSrcModelInstance$ = 16				; size = 4
?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDH@Z PROC ; CGraphicThingInstance::AttachModelInstance, COMDAT
; _this$ = ecx

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 313  : 	if (!CheckModelInstanceIndex(iSrcModelInstance))

  00006	8b 7d 10	 mov	 edi, DWORD PTR _iSrcModelInstance$[ebp]
  00009	8b d9		 mov	 ebx, ecx
  0000b	57		 push	 edi
  0000c	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00011	8b 75 08	 mov	 esi, DWORD PTR _iDstModelInstance$[ebp]
  00014	84 c0		 test	 al, al
  00016	74 27		 je	 SHORT $LN9@AttachMode

; 314  : 	{
; 315  : 		TraceError("CGraphicThingInstance::AttachModelInstance(iDstModelInstance=%d, c_szBoneName=%s, iSrcModelInstance=%d)", iDstModelInstance, c_szBoneName, iSrcModelInstance);
; 316  : 		return;
; 317  : 	}
; 318  : 	if (!CheckModelInstanceIndex(iDstModelInstance))

  00018	56		 push	 esi
  00019	8b cb		 mov	 ecx, ebx
  0001b	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00020	84 c0		 test	 al, al
  00022	74 1b		 je	 SHORT $LN9@AttachMode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00024	8b 8b cc 02 00
	00		 mov	 ecx, DWORD PTR [ebx+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 326  : 	pDstLODController->AttachModelInstance(pSrcLODController, c_szBoneName);

  0002a	ff 75 0c	 push	 DWORD PTR _c_szBoneName$[ebp]
  0002d	ff 34 b9	 push	 DWORD PTR [ecx+edi*4]
  00030	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00033	e8 00 00 00 00	 call	 ?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z ; CGrannyLODController::AttachModelInstance
  00038	5f		 pop	 edi

; 327  : }

  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	5d		 pop	 ebp
  0003c	c2 0c 00	 ret	 12			; 0000000cH
$LN9@AttachMode:

; 319  : 	{
; 320  : 		TraceError("CGraphicThingInstance::AttachModelInstance(iDstModelInstance=%d, c_szBoneName=%s, iSrcModelInstance=%d)", iDstModelInstance, c_szBoneName, iSrcModelInstance);

  0003f	57		 push	 edi
  00040	ff 75 0c	 push	 DWORD PTR _c_szBoneName$[ebp]
  00043	56		 push	 esi
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@OAKDPIDM@CGraphicThingInstance?3?3AttachMo@
  00049	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	5f		 pop	 edi

; 327  : }

  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	5d		 pop	 ebp
  00055	c2 0c 00	 ret	 12			; 0000000cH
?AttachModelInstance@CGraphicThingInstance@@QAEXHPBDH@Z ENDP ; CGraphicThingInstance::AttachModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?SetMotionAtEnd@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?SetMotionAtEnd@CGraphicThingInstance@@QAEXXZ PROC	; CGraphicThingInstance::SetMotionAtEnd, COMDAT
; _this$ = ecx

; 61   : {

  00000	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 61   : {

  00007	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b b9 d0 02 00
	00		 mov	 edi, DWORD PTR [ecx+720]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 0e		 je	 SHORT $LN21@SetMotionA
$LL22@SetMotionA:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1578 :         return ((*static_cast<_Ty1&&>(_Arg1)).*_Obj)(static_cast<_Types2&&>(_Args2)...);

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	e8 00 00 00 00	 call	 ?SetMotionAtEnd@CGrannyLODController@@QAEXXZ ; CGrannyLODController::SetMotionAtEnd
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00019	83 c6 04	 add	 esi, 4
  0001c	3b f7		 cmp	 esi, edi
  0001e	75 f2		 jne	 SHORT $LL22@SetMotionA
$LN21@SetMotionA:
  00020	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 63   : }

  00021	5e		 pop	 esi
  00022	c3		 ret	 0
?SetMotionAtEnd@CGraphicThingInstance@@QAEXXZ ENDP	; CGraphicThingInstance::SetMotionAtEnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?SetEndStopMotion@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?SetEndStopMotion@CGraphicThingInstance@@QAEXXZ PROC	; CGraphicThingInstance::SetEndStopMotion, COMDAT
; _this$ = ecx

; 561  : {

  00000	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 561  : {

  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 1d		 je	 SHORT $LN17@SetEndStop
  00012	57		 push	 edi
$LL18@SetEndStop:

; 266  :         _Func(*_UFirst);

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 255  : 			if (pController->isModelInstance())

  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0001c	85 c0		 test	 eax, eax
  0001e	74 07		 je	 SHORT $LN16@SetEndStop

; 256  : 			{
; 257  : 				pController->SetMotionAtEnd();

  00020	8b cf		 mov	 ecx, edi
  00022	e8 00 00 00 00	 call	 ?SetMotionAtEnd@CGrannyLODController@@QAEXXZ ; CGrannyLODController::SetMotionAtEnd
$LN16@SetEndStop:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00027	83 c6 04	 add	 esi, 4
  0002a	3b f3		 cmp	 esi, ebx
  0002c	75 e5		 jne	 SHORT $LL18@SetEndStop
  0002e	5f		 pop	 edi
$LN17@SetEndStop:
  0002f	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 563  : }

  00030	5b		 pop	 ebx
  00031	c3		 ret	 0
?SetEndStopMotion@CGraphicThingInstance@@QAEXXZ ENDP	; CGraphicThingInstance::SetEndStopMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z
_TEXT	SEGMENT
tv377 = -4						; size = 4
_pController$1$ = 8					; size = 4
_iDstModelInstance$ = 8					; size = 4
_iSrcModelThing$ = 12					; size = 4
_iSrcModel$ = 16					; size = 4
_iSkelInstance$ = 20					; size = 4
?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z PROC ; CGraphicThingInstance::SetModelInstance, COMDAT
; _this$ = ecx

; 384  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 385  : 	if (!CheckModelInstanceIndex(iDstModelInstance))

  00006	8b 7d 08	 mov	 edi, DWORD PTR _iDstModelInstance$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi
  0000c	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  00011	84 c0		 test	 al, al
  00013	0f 84 bf 00 00
	00		 je	 $LN34@SetModelIn

; 386  : 	{
; 387  : 		TraceError("CGraphicThingInstance::SetModelInstance(iDstModelInstance=%d, pModelThing=%d, iSrcModel=%d)\n", iDstModelInstance, iSrcModelThing, iSrcModel);
; 388  : 		return false;
; 389  : 	}
; 390  : 	if (!CheckModelThingIndex(iSrcModelThing))

  00019	ff 75 0c	 push	 DWORD PTR _iSrcModelThing$[ebp]
  0001c	8b ce		 mov	 ecx, esi
  0001e	e8 00 00 00 00	 call	 ?CheckModelThingIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelThingIndex
  00023	84 c0		 test	 al, al
  00025	0f 84 ad 00 00
	00		 je	 $LN34@SetModelIn
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  0002b	8b 86 cc 02 00
	00		 mov	 eax, DWORD PTR [esi+716]
  00031	53		 push	 ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 396  : 	CGrannyLODController * pController = m_LODControllerVector[iDstModelInstance];

  00032	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  00035	89 45 08	 mov	 DWORD PTR _pController$1$[ebp], eax

; 397  : 	if (!pController)

  00038	85 c0		 test	 eax, eax
  0003a	74 29		 je	 SHORT $LN28@SetModelIn

; 398  : 	{
; 399  : 		return false;
; 400  : 	}
; 401  : 
; 402  : 	// HAIR_LINK
; 403  : 	CGrannyLODController * pSkelController = NULL;
; 404  : 	if (iSkelInstance != DONTUSEVALUE)

  0003c	8b 5d 14	 mov	 ebx, DWORD PTR _iSkelInstance$[ebp]
  0003f	83 fb ff	 cmp	 ebx, -1
  00042	74 3b		 je	 SHORT $LN36@SetModelIn

; 405  : 	{
; 406  : 		if (!CheckModelInstanceIndex(iSkelInstance))

  00044	53		 push	 ebx
  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelInstanceIndex
  0004c	84 c0		 test	 al, al
  0004e	75 20		 jne	 SHORT $LN9@SetModelIn

; 407  : 		{
; 408  : 			TraceError("CGraphicThingInstance::SetModelInstanceByOtherSkeletonInstance(iSkelInstance=%d, iDstModelInstance=%d, pModelThing=%d, iSrcModel=%d)\n", iSkelInstance, iDstModelInstance, iSrcModelThing, iSrcModel);

  00050	ff 75 10	 push	 DWORD PTR _iSrcModel$[ebp]
  00053	ff 75 0c	 push	 DWORD PTR _iSrcModelThing$[ebp]
  00056	57		 push	 edi
  00057	53		 push	 ebx
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0IG@CNBHAOPI@CGraphicThingInstance?3?3SetModel@
  0005d	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00062	83 c4 14	 add	 esp, 20			; 00000014H
$LN28@SetModelIn:

; 409  : 			return false;

  00065	5b		 pop	 ebx
  00066	5f		 pop	 edi
  00067	32 c0		 xor	 al, al

; 434  : }

  00069	5e		 pop	 esi
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 10 00	 ret	 16			; 00000010H
$LN9@SetModelIn:

; 410  : 		}
; 411  : 		pSkelController = m_LODControllerVector[iSkelInstance];

  00070	8b 86 cc 02 00
	00		 mov	 eax, DWORD PTR [esi+716]
  00076	8b 1c 98	 mov	 ebx, DWORD PTR [eax+ebx*4]

; 412  : 		if (!pSkelController)

  00079	85 db		 test	 ebx, ebx
  0007b	74 e8		 je	 SHORT $LN28@SetModelIn

; 398  : 	{
; 399  : 		return false;
; 400  : 	}
; 401  : 
; 402  : 	// HAIR_LINK
; 403  : 	CGrannyLODController * pSkelController = NULL;
; 404  : 	if (iSkelInstance != DONTUSEVALUE)

  0007d	eb 02		 jmp	 SHORT $LN10@SetModelIn
$LN36@SetModelIn:
  0007f	33 db		 xor	 ebx, ebx
$LN10@SetModelIn:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00081	8b 45 0c	 mov	 eax, DWORD PTR _iSrcModelThing$[ebp]
  00084	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00087	8b 86 d8 02 00
	00		 mov	 eax, DWORD PTR [esi+728]
  0008d	8d 3c 88	 lea	 edi, DWORD PTR [eax+ecx*4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 421  : 	pController->Clear();

  00090	8b 4d 08	 mov	 ecx, DWORD PTR _pController$1$[ebp]
  00093	e8 00 00 00 00	 call	 ?Clear@CGrannyLODController@@QAEXXZ ; CGrannyLODController::Clear
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00098	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 424  : 	for (DWORD i = 0; i < rModelThingSet.m_pLODThingRefVector.size(); ++i)

  0009b	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0009d	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0009f	2b c1		 sub	 eax, ecx
  000a1	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 424  : 	for (DWORD i = 0; i < rModelThingSet.m_pLODThingRefVector.size(); ++i)

  000a4	85 c0		 test	 eax, eax
  000a6	74 25		 je	 SHORT $LN3@SetModelIn
$LL4@SetModelIn:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 62   : 		return m_pObject == NULL ? true : false;

  000a8	8b 04 b1	 mov	 eax, DWORD PTR [ecx+esi*4]
  000ab	8b 00		 mov	 eax, DWORD PTR [eax]
  000ad	85 c0		 test	 eax, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 426  : 		if (rModelThingSet.m_pLODThingRefVector[i]->IsNull())

  000af	74 b4		 je	 SHORT $LN28@SetModelIn

; 427  : 		{
; 428  : 			return false;
; 429  : 		}
; 430  : 
; 431  : 		pController->AddModel(rModelThingSet.m_pLODThingRefVector[i]->GetPointer(), iSrcModel, pSkelController);

  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _pController$1$[ebp]
  000b4	53		 push	 ebx
  000b5	ff 75 10	 push	 DWORD PTR _iSrcModel$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ?AddModel@CGrannyLODController@@QAEXPAVCGraphicThing@@HPAV1@@Z ; CGrannyLODController::AddModel
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000be	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 424  : 	for (DWORD i = 0; i < rModelThingSet.m_pLODThingRefVector.size(); ++i)

  000c1	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000c2	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000c4	2b c1		 sub	 eax, ecx
  000c6	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 424  : 	for (DWORD i = 0; i < rModelThingSet.m_pLODThingRefVector.size(); ++i)

  000c9	3b f0		 cmp	 esi, eax
  000cb	72 db		 jb	 SHORT $LL4@SetModelIn
$LN3@SetModelIn:
  000cd	5b		 pop	 ebx
  000ce	5f		 pop	 edi

; 432  : 	}
; 433  : 	return true;

  000cf	b0 01		 mov	 al, 1

; 434  : }

  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 10 00	 ret	 16			; 00000010H
$LN34@SetModelIn:

; 391  : 	{
; 392  : 		TraceError("CGraphicThingInstance::SetModelInstance(iDstModelInstance=%d, pModelThing=%d, iSrcModel=%d)\n", iDstModelInstance, iSrcModelThing, iSrcModel);

  000d8	ff 75 10	 push	 DWORD PTR _iSrcModel$[ebp]
  000db	ff 75 0c	 push	 DWORD PTR _iSrcModelThing$[ebp]
  000de	57		 push	 edi
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0FN@FDKPIIBK@CGraphicThingInstance?3?3SetModel@
  000e4	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000e9	83 c4 10	 add	 esp, 16			; 00000010H

; 393  : 		return false;

  000ec	32 c0		 xor	 al, al
  000ee	5f		 pop	 edi

; 434  : }

  000ef	5e		 pop	 esi
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 10 00	 ret	 16			; 00000010H
?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z ENDP ; CGraphicThingInstance::SetModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z
_TEXT	SEGMENT
$T2 = -44						; size = 12
__Loc$3 = -32						; size = 12
$T4 = -20						; size = 8
$T5 = -20						; size = 8
$T6 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwMotionKey$ = 8					; size = 4
_pMotionThing$ = 12					; size = 4
?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z PROC ; CGraphicThingInstance::RegisterMotionThing, COMDAT
; _this$ = ecx

; 590  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 591  : 	CGraphicThing::TRef * pMotionRef = new CGraphicThing::TRef;

  0002a	6a 04		 push	 4
  0002c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00031	8b f8		 mov	 edi, eax
  00033	83 c4 04	 add	 esp, 4
  00036	89 7d f0	 mov	 DWORD PTR $T6[ebp], edi
  00039	85 ff		 test	 edi, edi
  0003b	74 08		 je	 SHORT $LN3@RegisterMo
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 20   : 	CRef() : m_pObject(NULL)

  0003d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 591  : 	CGraphicThing::TRef * pMotionRef = new CGraphicThing::TRef;

  00043	eb 02		 jmp	 SHORT $LN4@RegisterMo
$LN3@RegisterMo:
  00045	33 ff		 xor	 edi, edi
$LN4@RegisterMo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 69   : 		m_pObject = pObject;

  00047	8b 4d 0c	 mov	 ecx, DWORD PTR _pMotionThing$[ebp]
  0004a	8b 37		 mov	 esi, DWORD PTR [edi]
  0004c	89 0f		 mov	 DWORD PTR [edi], ecx

; 70   : 
; 71   : 		if (m_pObject)

  0004e	85 c9		 test	 ecx, ecx
  00050	74 05		 je	 SHORT $LN7@RegisterMo

; 72   : 		{
; 73   : 			m_pObject->AddReference();

  00052	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN7@RegisterMo:

; 74   : 		}
; 75   : 
; 76   : 		if (pOldObject)

  00057	85 f6		 test	 esi, esi
  00059	74 07		 je	 SHORT $LN8@RegisterMo

; 77   : 		{
; 78   : 			pOldObject->Release();

  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN8@RegisterMo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00062	8b 75 08	 mov	 esi, DWORD PTR _dwMotionKey$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1001 :             _Loc                = _Find_lower_bound(_Keyval);

  00065	8d 45 ec	 lea	 eax, DWORD PTR $T5[ebp]
  00068	50		 push	 eax
  00069	8d 45 d4	 lea	 eax, DWORD PTR $T2[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  0006c	89 75 ec	 mov	 DWORD PTR $T5[ebp], esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 593  : 	m_roMotionThingMap.insert(std::map<DWORD, CGraphicThing::TRef *>::value_type(dwMotionKey, pMotionRef));

  0006f	81 c3 e4 02 00
	00		 add	 ebx, 740		; 000002e4H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00075	89 7d f0	 mov	 DWORD PTR $T5[ebp+4], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1001 :             _Loc                = _Find_lower_bound(_Keyval);

  00078	50		 push	 eax
  00079	8b cb		 mov	 ecx, ebx
  0007b	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::_Find_lower_bound<unsigned long>
  00080	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00084	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00087	66 0f d6 45 e0	 movq	 QWORD PTR __Loc$3[ebp], xmm0

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0008c	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00090	75 05		 jne	 SHORT $LN104@RegisterMo
  00092	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
  00095	73 4b		 jae	 SHORT $LN90@RegisterMo
$LN104@RegisterMo:

; 1629 :         if (max_size() == _Get_scary()->_Mysize) {

  00097	81 7b 04 aa aa
	aa 0a		 cmp	 DWORD PTR [ebx+4], 178956970 ; 0aaaaaaaH
  0009e	74 56		 je	 SHORT $LN108@RegisterMo

; 1007 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  000a0	8b 33		 mov	 esi, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1005 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  000a2	89 5d ec	 mov	 DWORD PTR $T4[ebp], ebx

; 77   :         return ::operator new(_Bytes);

  000a5	6a 18		 push	 24			; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 785  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  000a7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1012 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  000ae	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 77   :         return ::operator new(_Bytes);

  000b5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  000ba	8b 4d 08	 mov	 ecx, DWORD PTR _dwMotionKey$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  000bd	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  000c0	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1026 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000c3	8b cb		 mov	 ecx, ebx
  000c5	50		 push	 eax
  000c6	ff 75 e4	 push	 DWORD PTR __Loc$3[ebp+4]

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  000c9	89 78 14	 mov	 DWORD PTR [eax+20], edi

; 1026 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000cc	ff 75 e0	 push	 DWORD PTR __Loc$3[ebp]

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000cf	89 30		 mov	 DWORD PTR [eax], esi

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000d1	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000d4	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 811  :         this->_Ptr->_Color = _Red;

  000d7	66 c7 40 0c 00
	00		 mov	 WORD PTR [eax+12], 0

; 1026 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000dd	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Insert_node
$LN90@RegisterMo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 594  : }

  000e2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ec	59		 pop	 ecx
  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 08 00	 ret	 8
$LN108@RegisterMo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1630 :             _Throw_tree_length_error();

  000f6	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN106@RegisterMo:
  000fb	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z$3:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterMotionThing@CGraphicThingInstance@@QAEXKPAVCGraphicThing@@@Z ENDP ; CGraphicThingInstance::RegisterMotionThing
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?RegisterLODThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pModelRef$ = -4					; size = 4
_iModelThing$ = 8					; size = 4
_pModelThing$ = 12					; size = 4
?RegisterLODThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z PROC ; CGraphicThingInstance::RegisterLODThing, COMDAT
; _this$ = ecx

; 582  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 584  : 	CGraphicThing::TRef * pModelRef = new CGraphicThing::TRef;

  00007	6a 04		 push	 4
  00009	8b d9		 mov	 ebx, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	8b f0		 mov	 esi, eax
  00012	83 c4 04	 add	 esp, 4
  00015	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  00018	85 f6		 test	 esi, esi
  0001a	74 08		 je	 SHORT $LN3@RegisterLO
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 20   : 	CRef() : m_pObject(NULL)

  0001c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 584  : 	CGraphicThing::TRef * pModelRef = new CGraphicThing::TRef;

  00022	eb 02		 jmp	 SHORT $LN4@RegisterLO
$LN3@RegisterLO:
  00024	33 f6		 xor	 esi, esi
$LN4@RegisterLO:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 69   : 		m_pObject = pObject;

  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _pModelThing$[ebp]
  00029	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 584  : 	CGraphicThing::TRef * pModelRef = new CGraphicThing::TRef;

  0002b	89 75 fc	 mov	 DWORD PTR _pModelRef$[ebp], esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 69   : 		m_pObject = pObject;

  0002e	89 0e		 mov	 DWORD PTR [esi], ecx

; 70   : 
; 71   : 		if (m_pObject)

  00030	85 c9		 test	 ecx, ecx
  00032	74 05		 je	 SHORT $LN7@RegisterLO

; 72   : 		{
; 73   : 			m_pObject->AddReference();

  00034	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN7@RegisterLO:

; 74   : 		}
; 75   : 
; 76   : 		if (pOldObject)

  00039	85 ff		 test	 edi, edi
  0003b	74 07		 je	 SHORT $LN8@RegisterLO

; 77   : 		{
; 78   : 			pOldObject->Release();

  0003d	8b cf		 mov	 ecx, edi
  0003f	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN8@RegisterLO:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00044	8b 45 08	 mov	 eax, DWORD PTR _iModelThing$[ebp]
  00047	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  0004a	8b 83 d8 02 00
	00		 mov	 eax, DWORD PTR [ebx+728]
  00050	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]

; 844  :         if (_Mylast != _My_data._Myend) {

  00053	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00056	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00059	74 0f		 je	 SHORT $LN15@RegisterLO
  0005b	5f		 pop	 edi

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0005c	89 30		 mov	 DWORD PTR [eax], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0005e	83 41 04 04	 add	 DWORD PTR [ecx+4], 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 587  : }

  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 08 00	 ret	 8
$LN15@RegisterLO:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0006a	8d 55 fc	 lea	 edx, DWORD PTR _pModelRef$[ebp]
  0006d	52		 push	 edx
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAV?$CRef@VCGraphicThing@@@@@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@AAEPAPAV?$CRef@VCGraphicThing@@@@QAPAV2@ABQAV2@@Z ; std::vector<CRef<CGraphicThing> *,std::allocator<CRef<CGraphicThing> *> >::_Emplace_reallocate<CRef<CGraphicThing> * const &>
  00074	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 587  : }

  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 08 00	 ret	 8
?RegisterLODThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ENDP ; CGraphicThingInstance::RegisterLODThing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z
_TEXT	SEGMENT
_iModelThing$ = 8					; size = 4
_pModelThing$ = 12					; size = 4
?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z PROC ; CGraphicThingInstance::RegisterModelThing, COMDAT
; _this$ = ecx

; 566  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 567  : 	if (!CheckModelThingIndex(iModelThing))

  00004	8b 75 08	 mov	 esi, DWORD PTR _iModelThing$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckModelThingIndex@CGraphicThingInstance@@QAE_NH@Z ; CGraphicThingInstance::CheckModelThingIndex
  00010	84 c0		 test	 al, al
  00012	75 23		 jne	 SHORT $LN2@RegisterMo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4259 :         return _Mypair._Myval2._Myptr();

  00014	8b 45 0c	 mov	 eax, DWORD PTR _pModelThing$[ebp]
  00017	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2301 :         return _BUF_SIZE <= _Myres;

  0001a	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  0001e	72 02		 jb	 SHORT $LN10@RegisterMo

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$LN10@RegisterMo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 569  : 		TraceError("CGraphicThingInstance::RegisterModelThing(iModelThing=%d, pModelThing=%s)\n", iModelThing, pModelThing->GetFileName());

  00022	50		 push	 eax
  00023	56		 push	 esi
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@BCFDDCFO@CGraphicThingInstance?3?3Register@
  00029	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	5f		 pop	 edi

; 578  : 	}
; 579  : }

  00032	5e		 pop	 esi
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
$LN2@RegisterMo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00037	8b 87 d8 02 00
	00		 mov	 eax, DWORD PTR [edi+728]
  0003d	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]
  00040	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 573  : 	m_modelThingSetVector[iModelThing].Clear();

  00043	e8 00 00 00 00	 call	 ?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::SModelThingSet::Clear

; 574  : 
; 575  : 	if (pModelThing)

  00048	8b 45 0c	 mov	 eax, DWORD PTR _pModelThing$[ebp]
  0004b	85 c0		 test	 eax, eax
  0004d	74 09		 je	 SHORT $LN3@RegisterMo

; 576  : 	{
; 577  : 		RegisterLODThing(iModelThing, pModelThing);

  0004f	50		 push	 eax
  00050	56		 push	 esi
  00051	8b cf		 mov	 ecx, edi
  00053	e8 00 00 00 00	 call	 ?RegisterLODThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterLODThing
$LN3@RegisterMo:

; 578  : 	}
; 579  : }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ENDP ; CGraphicThingInstance::RegisterModelThing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?IsMotionThing@CGraphicThingInstance@@QAE_NXZ
_TEXT	SEGMENT
?IsMotionThing@CGraphicThingInstance@@QAE_NXZ PROC	; CGraphicThingInstance::IsMotionThing, COMDAT
; _this$ = ecx

; 278  : 	return !m_roMotionThingMap.empty();

  00000	83 b9 e8 02 00
	00 00		 cmp	 DWORD PTR [ecx+744], 0
  00007	0f 95 c0	 setne	 al

; 279  : }

  0000a	c3		 ret	 0
?IsMotionThing@CGraphicThingInstance@@QAE_NXZ ENDP	; CGraphicThingInstance::IsMotionThing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z
_TEXT	SEGMENT
__Loc$3 = -32						; size = 12
$T4 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_dwKey$ = 8						; size = 4
_ppMotion$ = 12						; size = 4
?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z PROC ; CGraphicThingInstance::GetMotionThingPointer, COMDAT
; _this$ = ecx

; 266  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx

; 267  : 	if (!CheckMotionThingIndex(dwKey))

  00029	8b 75 08	 mov	 esi, DWORD PTR _dwKey$[ebp]
  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 ?CheckMotionThingIndex@CGraphicThingInstance@@QAE_NK@Z ; CGraphicThingInstance::CheckMotionThingIndex
  00032	84 c0		 test	 al, al
  00034	75 13		 jne	 SHORT $LN2@GetMotionT

; 274  : }

  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
$LN2@GetMotionT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map

; 196  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00049	8d 45 08	 lea	 eax, DWORD PTR _dwKey$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 272  : 	*ppMotion = m_roMotionThingMap[dwKey]->GetPointer();

  0004c	81 c7 e4 02 00
	00		 add	 edi, 740		; 000002e4H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map

; 196  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00052	50		 push	 eax
  00053	8d 45 e0	 lea	 eax, DWORD PTR __Loc$3[ebp]
  00056	8b cf		 mov	 ecx, edi
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::_Find_lower_bound<unsigned long>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0005e	8b 45 e8	 mov	 eax, DWORD PTR __Loc$3[ebp+8]
  00061	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00065	75 05		 jne	 SHORT $LN7@GetMotionT
  00067	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
  0006a	73 51		 jae	 SHORT $LN6@GetMotionT
$LN7@GetMotionT:

; 1629 :         if (max_size() == _Get_scary()->_Mysize) {

  0006c	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  00073	74 67		 je	 SHORT $LN106@GetMotionT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map

; 204  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  00075	8b 37		 mov	 esi, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1005 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00077	89 7d ec	 mov	 DWORD PTR $T4[ebp], edi

; 77   :         return ::operator new(_Bytes);

  0007a	6a 18		 push	 24			; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 785  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0007c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1012 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00083	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 77   :         return ::operator new(_Bytes);

  0008a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  0008f	8b d0		 mov	 edx, eax

; 77   :         return ::operator new(_Bytes);

  00091	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 214  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  00094	8b 45 08	 mov	 eax, DWORD PTR _dwKey$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map

; 210  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00097	8b cf		 mov	 ecx, edi
  00099	52		 push	 edx
  0009a	ff 75 e4	 push	 DWORD PTR __Loc$3[ebp+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 214  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  0009d	89 42 10	 mov	 DWORD PTR [edx+16], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map

; 210  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000a0	ff 75 e0	 push	 DWORD PTR __Loc$3[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 214  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  000a3	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000aa	89 32		 mov	 DWORD PTR [edx], esi

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000ac	89 72 04	 mov	 DWORD PTR [edx+4], esi

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000af	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 811  :         this->_Ptr->_Color = _Red;

  000b2	66 c7 42 0c 00
	00		 mov	 WORD PTR [edx+12], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\map

; 210  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000b8	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CRef<CGraphicThing> *> > >::_Insert_node
$LN6@GetMotionT:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 272  : 	*ppMotion = m_roMotionThingMap[dwKey]->GetPointer();

  000bd	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	8b 45 0c	 mov	 eax, DWORD PTR _ppMotion$[ebp]
  000c5	89 08		 mov	 DWORD PTR [eax], ecx

; 273  : 	return true;

  000c7	b0 01		 mov	 al, 1

; 274  : }

  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d3	59		 pop	 ecx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 08 00	 ret	 8
$LN106@GetMotionT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1630 :             _Throw_tree_length_error();

  000dc	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN104@GetMotionT:
  000e1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CRef<CGraphicThing> *>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetMotionThingPointer@CGraphicThingInstance@@QAE_NKPAPAVCGraphicThing@@@Z ENDP ; CGraphicThingInstance::GetMotionThingPointer
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?CheckMotionThingIndex@CGraphicThingInstance@@QAE_NK@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_dwMotionKey$ = 8					; size = 4
?CheckMotionThingIndex@CGraphicThingInstance@@QAE_NK@Z PROC ; CGraphicThingInstance::CheckMotionThingIndex, COMDAT
; _this$ = ecx

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1367 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00007	8d 45 08	 lea	 eax, DWORD PTR _dwMotionKey$[ebp]
  0000a	50		 push	 eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 255  : 	std::map<DWORD, CGraphicThing::TRef *>::iterator itor = m_roMotionThingMap.find(dwMotionKey);

  0000b	8d b1 e4 02 00
	00		 lea	 esi, DWORD PTR [ecx+740]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1367 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00011	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::_Find_lower_bound<unsigned long>

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR __Loc$1[ebp+8]
  0001f	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00023	75 14		 jne	 SHORT $LN31@CheckMotio
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  00025	8b 45 08	 mov	 eax, DWORD PTR _dwMotionKey$[ebp]
  00028	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002b	72 0c		 jb	 SHORT $LN31@CheckMotio

; 233  :         return this->_Ptr == _Right._Ptr;

  0002d	39 0e		 cmp	 DWORD PTR [esi], ecx
  0002f	5e		 pop	 esi
  00030	0f 95 c0	 setne	 al
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 263  : }

  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN31@CheckMotio:

; 256  : 
; 257  : 	if (m_roMotionThingMap.end() == itor)
; 258  : 	{
; 259  : 		return false;

  00039	32 c0		 xor	 al, al
  0003b	5e		 pop	 esi

; 263  : }

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?CheckMotionThingIndex@CGraphicThingInstance@@QAE_NK@Z ENDP ; CGraphicThingInstance::CheckMotionThingIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?CheckModelThingIndex@CGraphicThingInstance@@QAE_NH@Z
_TEXT	SEGMENT
_iModelThing$ = 8					; size = 4
?CheckModelThingIndex@CGraphicThingInstance@@QAE_NH@Z PROC ; CGraphicThingInstance::CheckModelThingIndex, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 238  : 	if (iModelThing < 0)

  00003	83 7d 08 00	 cmp	 DWORD PTR _iModelThing$[ebp], 0
  00007	7c 26		 jl	 SHORT $LN7@CheckModel
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00009	8b 91 dc 02 00
	00		 mov	 edx, DWORD PTR [ecx+732]
  0000f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00014	2b 91 d8 02 00
	00		 sub	 edx, DWORD PTR [ecx+728]
  0001a	f7 ea		 imul	 edx
  0001c	d1 fa		 sar	 edx, 1
  0001e	8b c2		 mov	 eax, edx
  00020	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00023	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 245  : 	if (iModelThing >= max)

  00025	39 45 08	 cmp	 DWORD PTR _iModelThing$[ebp], eax
  00028	0f 9c c0	 setl	 al

; 248  : 	}
; 249  : 
; 250  : 	return true;
; 251  : }

  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
$LN7@CheckModel:

; 246  : 	{
; 247  : 		return false;

  0002f	32 c0		 xor	 al, al

; 248  : 	}
; 249  : 
; 250  : 	return true;
; 251  : }

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?CheckModelThingIndex@CGraphicThingInstance@@QAE_NH@Z ENDP ; CGraphicThingInstance::CheckModelThingIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z
_TEXT	SEGMENT
_iModelInstance$ = 8					; size = 4
?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z PROC ; CGraphicThingInstance::CheckModelInstanceIndex, COMDAT
; _this$ = ecx

; 220  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 221  : 	if (iModelInstance < 0)

  00003	8b 55 08	 mov	 edx, DWORD PTR _iModelInstance$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	78 18		 js	 SHORT $LN7@CheckModel
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000a	8b 81 d0 02 00
	00		 mov	 eax, DWORD PTR [ecx+720]
  00010	2b 81 cc 02 00
	00		 sub	 eax, DWORD PTR [ecx+716]
  00016	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 228  : 	if (iModelInstance >= max)

  00019	3b d0		 cmp	 edx, eax
  0001b	0f 9c c0	 setl	 al

; 231  : 	}
; 232  : 
; 233  : 	return true;
; 234  : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
$LN7@CheckModel:

; 229  : 	{
; 230  : 		return false;

  00022	32 c0		 xor	 al, al

; 231  : 	}
; 232  : 
; 233  : 	return true;
; 234  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?CheckModelInstanceIndex@CGraphicThingInstance@@QAE_NH@Z ENDP ; CGraphicThingInstance::CheckModelInstanceIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?ReserveModelThing@CGraphicThingInstance@@QAEXH@Z
_TEXT	SEGMENT
_iCount$ = 8						; size = 4
$T1 = 11						; size = 1
?ReserveModelThing@CGraphicThingInstance@@QAEXH@Z PROC	; CGraphicThingInstance::ReserveModelThing, COMDAT
; _this$ = ecx

; 293  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1621 :         if (_Newsize < _Oldsize) { // trim

  00005	8b 75 08	 mov	 esi, DWORD PTR _iCount$[ebp]
  00008	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 293  : {

  0000d	57		 push	 edi

; 294  : 	m_modelThingSetVector.resize(iCount);

  0000e	8d b9 d8 02 00
	00		 lea	 edi, DWORD PTR [ecx+728]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1620 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00014	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00017	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00019	f7 e9		 imul	 ecx
  0001b	d1 fa		 sar	 edx, 1
  0001d	8b da		 mov	 ebx, edx
  0001f	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  00022	03 da		 add	 ebx, edx

; 1621 :         if (_Newsize < _Oldsize) { // trim

  00024	3b f3		 cmp	 esi, ebx
  00026	73 20		 jae	 SHORT $LN6@ReserveMod

; 1622 :             const pointer _Newlast = _Myfirst + _Newsize;

  00028	8b 17		 mov	 edx, DWORD PTR [edi]
  0002a	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]

; 1623 :             _Orphan_range(_Newlast, _Mylast);
; 1624 :             _Destroy_range(_Newlast, _Mylast, _Al);

  0002d	57		 push	 edi
  0002e	8d 34 82	 lea	 esi, DWORD PTR [edx+eax*4]
  00031	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00034	50		 push	 eax
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAXPAUSModelThingSet@CGraphicThingInstance@@QAU12@AAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicThingInstance::SModelThingSet> >
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 295  : }

  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1626 :             _Mylast = _Newlast;

  0003e	89 77 04	 mov	 DWORD PTR [edi+4], esi
  00041	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 295  : }

  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
$LN6@ReserveMod:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1630 :         if (_Newsize > _Oldsize) { // append

  00048	76 3f		 jbe	 SHORT $LN7@ReserveMod

; 1631 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0004a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00052	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00054	f7 e9		 imul	 ecx
  00056	d1 fa		 sar	 edx, 1
  00058	8b c2		 mov	 eax, edx
  0005a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0005d	03 c2		 add	 eax, edx

; 1632 :             if (_Newsize > _Oldcapacity) { // reallocate

  0005f	3b f0		 cmp	 esi, eax
  00061	76 13		 jbe	 SHORT $LN8@ReserveMod

; 1633 :                 _Resize_reallocate(_Newsize, _Val);

  00063	8d 45 0b	 lea	 eax, DWORD PTR $T1[ebp]
  00066	8b cf		 mov	 ecx, edi
  00068	50		 push	 eax
  00069	56		 push	 esi
  0006a	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::_Resize_reallocate<std::_Value_init_tag>
  0006f	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 295  : }

  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
$LN8@ReserveMod:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1643 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

  00076	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00079	2b f3		 sub	 esi, ebx
  0007b	57		 push	 edi
  0007c	56		 push	 esi
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@YAPAUSModelThingSet@CGraphicThingInstance@@PAU12@IAAV?$allocator@USModelThingSet@CGraphicThingInstance@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CGraphicThingInstance::SModelThingSet> >
  00083	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 295  : }

  00086	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@ReserveMod:
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
?ReserveModelThing@CGraphicThingInstance@@QAEXH@Z ENDP	; CGraphicThingInstance::ReserveModelThing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pInstance$3 = 8					; size = 4
_iCount$ = 8						; size = 4
?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z PROC ; CGraphicThingInstance::ReserveModelInstance, COMDAT
; _this$ = ecx

; 282  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00025	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 283  : 	stl_wipe(m_LODControllerVector);

  0002b	8d b9 cc 02 00
	00		 lea	 edi, DWORD PTR [ecx+716]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00031	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  00034	3b f0		 cmp	 esi, eax
  00036	74 1c		 je	 SHORT $LN18@ReserveMod
$LL36@ReserveMod:

; 44   : 	{
; 45   : 		delete* i;

  00038	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 06		 je	 SHORT $LN21@ReserveMod
  0003e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00040	6a 01		 push	 1
  00042	ff 10		 call	 DWORD PTR [eax]
$LN21@ReserveMod:

; 46   : 		*i = NULL;

  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  0004a	83 c6 04	 add	 esi, 4

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0004d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  00050	3b f0		 cmp	 esi, eax
  00052	75 e4		 jne	 SHORT $LL36@ReserveMod
$LN18@ReserveMod:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00054	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00056	3b c8		 cmp	 ecx, eax
  00058	74 03		 je	 SHORT $LN37@ReserveMod

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005a	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
$LN37@ReserveMod:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 285  : 	for (int i = 0; i < iCount; ++i)

  0005d	8b 75 08	 mov	 esi, DWORD PTR _iCount$[ebp]
  00060	85 f6		 test	 esi, esi
  00062	7e 4e		 jle	 SHORT $LN3@ReserveMod
$LL4@ReserveMod:

; 287  : 		CGrannyLODController * pInstance = new CGrannyLODController;

  00064	6a 3c		 push	 60			; 0000003cH
  00066	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00071	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00078	85 c0		 test	 eax, eax
  0007a	74 09		 je	 SHORT $LN6@ReserveMod
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??0CGrannyLODController@@QAE@XZ ; CGrannyLODController::CGrannyLODController
  00083	eb 02		 jmp	 SHORT $LN7@ReserveMod
$LN6@ReserveMod:
  00085	33 c0		 xor	 eax, eax
$LN7@ReserveMod:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00087	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 287  : 		CGrannyLODController * pInstance = new CGrannyLODController;

  0008a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00091	89 45 08	 mov	 DWORD PTR _pInstance$3[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00094	3b 4f 08	 cmp	 ecx, DWORD PTR [edi+8]
  00097	74 08		 je	 SHORT $LN12@ReserveMod

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00099	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0009b	83 47 04 04	 add	 DWORD PTR [edi+4], 4

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0009f	eb 0c		 jmp	 SHORT $LN2@ReserveMod
$LN12@ReserveMod:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000a1	8d 45 08	 lea	 eax, DWORD PTR _pInstance$3[ebp]
  000a4	50		 push	 eax
  000a5	51		 push	 ecx
  000a6	8b cf		 mov	 ecx, edi
  000a8	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGrannyLODController@@@?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@AAEPAPAVCGrannyLODController@@QAPAV2@ABQAV2@@Z ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::_Emplace_reallocate<CGrannyLODController * const &>
$LN2@ReserveMod:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 285  : 	for (int i = 0; i < iCount; ++i)

  000ad	83 ee 01	 sub	 esi, 1
  000b0	75 b2		 jne	 SHORT $LL4@ReserveMod
$LN3@ReserveMod:

; 288  : 		m_LODControllerVector.push_back(pInstance);
; 289  : 	}
; 290  : }

  000b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bc	59		 pop	 ecx
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z$0:
  00000	6a 3c		 push	 60			; 0000003cH
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z ENDP ; CGraphicThingInstance::ReserveModelInstance
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?DestroyDeviceObjects@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?DestroyDeviceObjects@CGraphicThingInstance@@QAEXXZ PROC ; CGraphicThingInstance::DestroyDeviceObjects, COMDAT
; _this$ = ecx

; 214  : {

  00000	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 214  : {

  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 1d		 je	 SHORT $LN17@DestroyDev
  00012	57		 push	 edi
$LL18@DestroyDev:

; 266  :         _Func(*_UFirst);

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 169  : 			if (pController->isModelInstance())

  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0001c	85 c0		 test	 eax, eax
  0001e	74 07		 je	 SHORT $LN16@DestroyDev

; 170  : 			{
; 171  : 				pController->DestroyDeviceObjects();

  00020	8b cf		 mov	 ecx, edi
  00022	e8 00 00 00 00	 call	 ?DestroyDeviceObjects@CGrannyLODController@@QAEXXZ ; CGrannyLODController::DestroyDeviceObjects
$LN16@DestroyDev:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00027	83 c6 04	 add	 esi, 4
  0002a	3b f3		 cmp	 esi, ebx
  0002c	75 e5		 jne	 SHORT $LL18@DestroyDev
  0002e	5f		 pop	 edi
$LN17@DestroyDev:
  0002f	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 217  : }

  00030	5b		 pop	 ebx
  00031	c3		 ret	 0
?DestroyDeviceObjects@CGraphicThingInstance@@QAEXXZ ENDP ; CGraphicThingInstance::DestroyDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?CreateDeviceObjects@CGraphicThingInstance@@QAE_NXZ
_TEXT	SEGMENT
?CreateDeviceObjects@CGraphicThingInstance@@QAE_NXZ PROC ; CGraphicThingInstance::CreateDeviceObjects, COMDAT
; _this$ = ecx

; 207  : {

  00000	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 d0 02 00
	00		 mov	 ebx, DWORD PTR [ecx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 207  : {

  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 cc 02 00
	00		 mov	 esi, DWORD PTR [ecx+716]
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 1d		 je	 SHORT $LN27@CreateDevi
  00012	57		 push	 edi
$LL18@CreateDevi:

; 266  :         _Func(*_UFirst);

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 158  : 			if (pController->isModelInstance())

  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0001c	85 c0		 test	 eax, eax
  0001e	74 07		 je	 SHORT $LN16@CreateDevi

; 159  : 			{
; 160  : 				pController->CreateDeviceObjects();

  00020	8b cf		 mov	 ecx, edi
  00022	e8 00 00 00 00	 call	 ?CreateDeviceObjects@CGrannyLODController@@QAEXXZ ; CGrannyLODController::CreateDeviceObjects
$LN16@CreateDevi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00027	83 c6 04	 add	 esi, 4
  0002a	3b f3		 cmp	 esi, ebx
  0002c	75 e5		 jne	 SHORT $LL18@CreateDevi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 210  : 	return true;

  0002e	5f		 pop	 edi
$LN27@CreateDevi:
  0002f	5e		 pop	 esi

; 211  : }

  00030	b0 01		 mov	 al, 1
  00032	5b		 pop	 ebx
  00033	c3		 ret	 0
?CreateDeviceObjects@CGraphicThingInstance@@QAE_NXZ ENDP ; CGraphicThingInstance::CreateDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?OnInitialize@CGraphicThingInstance@@UAEXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?OnInitialize@CGraphicThingInstance@@UAEXXZ PROC	; CGraphicThingInstance::OnInitialize, COMDAT
; _this$ = ecx

; 1107 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\DirectX\d3dx9math.inl

; 306  :     z = fz;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1115 : 	m_v3Center = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00010	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp+8]
  00013	0f 14 c0	 unpcklps xmm0, xmm0
  00016	66 0f d6 81 a8
	02 00 00	 movq	 QWORD PTR [ecx+680], xmm0
  0001e	c6 81 8c 02 00
	00 00		 mov	 BYTE PTR [ecx+652], 0
  00025	c7 81 90 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+656], 0
  0002f	c7 81 94 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+660], 0
  00039	c7 81 98 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+664], 0
  00043	c7 81 9c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+668], 0
  0004d	c7 81 a0 02 00
	00 8f c2 f5 3c	 mov	 DWORD PTR [ecx+672], 1022739087 ; 3cf5c28fH
  00057	c7 81 a4 02 00
	00 00 00 80 bf	 mov	 DWORD PTR [ecx+676], -1082130432 ; bf800000H
  00061	89 81 b0 02 00
	00		 mov	 DWORD PTR [ecx+688], eax

; 1116 : 
; 1117 : 	ResetLocalTime();

  00067	e8 00 00 00 00	 call	 ?ResetLocalTime@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::ResetLocalTime

; 1118 : }

  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
?OnInitialize@CGraphicThingInstance@@UAEXXZ ENDP	; CGraphicThingInstance::OnInitialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?Picking@CGraphicThingInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
_dir$ = 12						; size = 4
_out_x$ = 16						; size = 4
_out_y$ = 20						; size = 4
?Picking@CGraphicThingInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z PROC ; CGraphicThingInstance::Picking, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 	if (!m_pHeightAttributeInstance)

  00003	8b 89 b8 01 00
	00		 mov	 ecx, DWORD PTR [ecx+440]
  00009	85 c9		 test	 ecx, ecx
  0000b	75 06		 jne	 SHORT $LN2@Picking

; 68   : 	{
; 69   : 		return false;

  0000d	32 c0		 xor	 al, al

; 72   : }

  0000f	5d		 pop	 ebp
  00010	c2 10 00	 ret	 16			; 00000010H
$LN2@Picking:
  00013	5d		 pop	 ebp

; 70   : 	}
; 71   : 	return m_pHeightAttributeInstance->Picking(v, dir, out_x, out_y);

  00014	e9 00 00 00 00	 jmp	 ?Picking@CAttributeInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z ; CAttributeInstance::Picking
?Picking@CGraphicThingInstance@@QAE_NABUD3DXVECTOR3@@0AAM1@Z ENDP ; CGraphicThingInstance::Picking
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?LessRenderOrder@CGraphicThingInstance@@QAE_NPAV1@@Z
_TEXT	SEGMENT
_pkThingInst$ = 8					; size = 4
?LessRenderOrder@CGraphicThingInstance@@QAE_NPAV1@@Z PROC ; CGraphicThingInstance::LessRenderOrder, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 36   : 	return (GetBaseThingPtr() < pkThingInst->GetBaseThingPtr());

  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pkThingInst$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ ; CGraphicThingInstance::GetBaseThingPtr
  0000f	8b cf		 mov	 ecx, edi
  00011	8b f0		 mov	 esi, eax
  00013	e8 00 00 00 00	 call	 ?GetBaseThingPtr@CGraphicThingInstance@@QAEPAVCGraphicThing@@XZ ; CGraphicThingInstance::GetBaseThingPtr
  00018	3b c6		 cmp	 eax, esi
  0001a	5f		 pop	 edi
  0001b	0f 92 c0	 setb	 al
  0001e	5e		 pop	 esi

; 37   : }

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?LessRenderOrder@CGraphicThingInstance@@QAE_NPAV1@@Z ENDP ; CGraphicThingInstance::LessRenderOrder
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?DeformAll@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?DeformAll@CGraphicThingInstance@@QAEXXZ PROC		; CGraphicThingInstance::DeformAll, COMDAT
; _this$ = ecx

; 799  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi

; 802  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  00004	33 f6		 xor	 esi, esi
  00006	c6 83 8c 02 00
	00 01		 mov	 BYTE PTR [ebx+652], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000d	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
  00013	8b 8b cc 02 00
	00		 mov	 ecx, DWORD PTR [ebx+716]
  00019	2b c1		 sub	 eax, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 802  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  0001b	83 f8 04	 cmp	 eax, 4
  0001e	72 49		 jb	 SHORT $LN3@DeformAll
  00020	57		 push	 edi
$LL4@DeformAll:

; 803  : 	{
; 804  : 		CGrannyLODController* pkLOD = m_LODControllerVector[i];

  00021	8b 3c b1	 mov	 edi, DWORD PTR [ecx+esi*4]

; 805  : 		if (pkLOD && pkLOD->isModelInstance())

  00024	85 ff		 test	 edi, edi
  00026	74 2a		 je	 SHORT $LN2@DeformAll
  00028	8b cf		 mov	 ecx, edi
  0002a	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0002f	85 c0		 test	 eax, eax
  00031	74 1f		 je	 SHORT $LN2@DeformAll

; 806  : 		{
; 807  : 			if (i == 5) // This is the number of PART_ACCE

  00033	83 fe 05	 cmp	 esi, 5
  00036	75 0f		 jne	 SHORT $LN6@DeformAll

; 808  : 			{
; 809  : 				RecalcAccePositionMatrixFromBoneMatrix();

  00038	8b cb		 mov	 ecx, ebx
  0003a	e8 00 00 00 00	 call	 ?RecalcAccePositionMatrixFromBoneMatrix@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::RecalcAccePositionMatrixFromBoneMatrix

; 810  : 				pkLOD->DeformAll(&m_matAbsoluteTrans);

  0003f	8d 83 cc 01 00
	00		 lea	 eax, DWORD PTR [ebx+460]

; 811  : 			}

  00045	eb 03		 jmp	 SHORT $LN17@DeformAll
$LN6@DeformAll:

; 812  : 			else
; 813  : 				pkLOD->DeformAll(&m_worldMatrix);

  00047	8d 43 6c	 lea	 eax, DWORD PTR [ebx+108]
$LN17@DeformAll:

; 802  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  0004a	50		 push	 eax
  0004b	8b cf		 mov	 ecx, edi
  0004d	e8 00 00 00 00	 call	 ?DeformAll@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyLODController::DeformAll
$LN2@DeformAll:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00052	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 802  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  00058	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00059	8b 8b cc 02 00
	00		 mov	 ecx, DWORD PTR [ebx+716]
  0005f	2b c1		 sub	 eax, ecx
  00061	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 802  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  00064	3b f0		 cmp	 esi, eax
  00066	75 b9		 jne	 SHORT $LL4@DeformAll
  00068	5f		 pop	 edi
$LN3@DeformAll:
  00069	5e		 pop	 esi

; 814  : 		}
; 815  : 	}
; 816  : }

  0006a	5b		 pop	 ebx
  0006b	c3		 ret	 0
?DeformAll@CGraphicThingInstance@@QAEXXZ ENDP		; CGraphicThingInstance::DeformAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?UpdateTime@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
tv180 = -4						; size = 4
$T1 = -4						; size = 4
?UpdateTime@CGraphicThingInstance@@QAEXXZ PROC		; CGraphicThingInstance::UpdateTime, COMDAT
; _this$ = ecx

; 892  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 893  : 	//granny_system_clock clockNow = GrannyGetSystemSeconds();
; 894  : 	//m_fSecondElapsed = GrannyGetSecondsElapsed(&m_clockLast, &clockNow) * m_fMotionTimeSpeed;
; 895  : 
; 896  : 	//DWORD t1=ELTimer_GetMSec();
; 897  : 
; 898  : 	m_fSecondElapsed = CTimer::Instance().GetElapsedSecond();

  00008	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0000e	e8 00 00 00 00	 call	 ?GetElapsedSecond@CTimer@@QAEMXZ ; CTimer::GetElapsedSecond

; 899  : 
; 900  : 	if (m_fDelay > m_fSecondElapsed)

  00013	f3 0f 10 86 98
	02 00 00	 movss	 xmm0, DWORD PTR [esi+664]
  0001b	d9 5d fc	 fstp	 DWORD PTR tv180[ebp]
  0001e	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR tv180[ebp]
  00023	0f 2f c1	 comiss	 xmm0, xmm1
  00026	76 09		 jbe	 SHORT $LN2@UpdateTime

; 901  : 	{
; 902  : 		m_fDelay -= m_fSecondElapsed;

  00028	0f 57 d2	 xorps	 xmm2, xmm2
  0002b	f3 0f 5c c1	 subss	 xmm0, xmm1

; 903  : 		m_fSecondElapsed = 0.0f;
; 904  : 	}

  0002f	eb 0a		 jmp	 SHORT $LN29@UpdateTime
$LN2@UpdateTime:

; 905  : 	else
; 906  : 	{
; 907  : 		m_fSecondElapsed -= m_fDelay;

  00031	0f 28 d1	 movaps	 xmm2, xmm1
  00034	f3 0f 5c d0	 subss	 xmm2, xmm0
  00038	0f 57 c0	 xorps	 xmm0, xmm0
$LN29@UpdateTime:

; 911  : 	m_fLastLocalTime = m_fLocalTime;

  0003b	f3 0f 11 86 98
	02 00 00	 movss	 DWORD PTR [esi+664], xmm0
  00043	f3 0f 10 86 94
	02 00 00	 movss	 xmm0, DWORD PTR [esi+660]

; 913  : 	m_fAverageSecondElapsed = m_fAverageSecondElapsed + (m_fSecondElapsed - m_fAverageSecondElapsed) / 4.0f;

  0004b	f3 0f 10 8e a0
	02 00 00	 movss	 xmm1, DWORD PTR [esi+672]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00053	8b 9e d0 02 00
	00		 mov	 ebx, DWORD PTR [esi+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 911  : 	m_fLastLocalTime = m_fLocalTime;

  00059	f3 0f 11 86 90
	02 00 00	 movss	 DWORD PTR [esi+656], xmm0

; 912  : 	m_fLocalTime += m_fSecondElapsed;

  00061	f3 0f 58 c2	 addss	 xmm0, xmm2
  00065	f3 0f 11 96 9c
	02 00 00	 movss	 DWORD PTR [esi+668], xmm2
  0006d	f3 0f 11 55 fc	 movss	 DWORD PTR $T1[ebp], xmm2
  00072	f3 0f 11 86 94
	02 00 00	 movss	 DWORD PTR [esi+660], xmm0

; 913  : 	m_fAverageSecondElapsed = m_fAverageSecondElapsed + (m_fSecondElapsed - m_fAverageSecondElapsed) / 4.0f;

  0007a	0f 28 c2	 movaps	 xmm0, xmm2
  0007d	f3 0f 5c c1	 subss	 xmm0, xmm1
  00081	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3e800000
  00089	f3 0f 58 c1	 addss	 xmm0, xmm1
  0008d	f3 0f 11 86 a0
	02 00 00	 movss	 DWORD PTR [esi+672], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00095	8b b6 cc 02 00
	00		 mov	 esi, DWORD PTR [esi+716]
  0009b	3b f3		 cmp	 esi, ebx
  0009d	74 28		 je	 SHORT $LN19@UpdateTime
  0009f	57		 push	 edi
$LL20@UpdateTime:

; 266  :         _Func(*_UFirst);

  000a0	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 30   : 			if (pController->isModelInstance())

  000a2	8b cf		 mov	 ecx, edi
  000a4	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  000a9	85 c0		 test	 eax, eax
  000ab	74 12		 je	 SHORT $LN18@UpdateTime

; 31   : 			{
; 32   : 				pController->UpdateTime(fElapsedTime);

  000ad	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR $T1[ebp]
  000b2	51		 push	 ecx
  000b3	8b cf		 mov	 ecx, edi
  000b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ba	e8 00 00 00 00	 call	 ?UpdateTime@CGrannyLODController@@QAEXM@Z ; CGrannyLODController::UpdateTime
$LN18@UpdateTime:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  000bf	83 c6 04	 add	 esi, 4
  000c2	3b f3		 cmp	 esi, ebx
  000c4	75 da		 jne	 SHORT $LL20@UpdateTime
  000c6	5f		 pop	 edi
$LN19@UpdateTime:
  000c7	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 919  : }

  000c8	5b		 pop	 ebx
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
?UpdateTime@CGraphicThingInstance@@QAEXXZ ENDP		; CGraphicThingInstance::UpdateTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?UpdateLODLevel@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -12						; size = 4
_update$$sroa$221$1$ = -8				; size = 4
_update$$sroa$222$1$ = -4				; size = 4
?UpdateLODLevel@CGraphicThingInstance@@QAEXXZ PROC	; CGraphicThingInstance::UpdateLODLevel, COMDAT
; _this$ = ecx

; 869  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b d9		 mov	 ebx, ecx

; 870  : 	CCamera * pcurCamera = CCameraManager::Instance().GetCurrentCamera();

  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  00013	57		 push	 edi
  00014	89 5c 24 0c	 mov	 DWORD PTR _this$1$[esp+24], ebx
  00018	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
  0001d	8b f8		 mov	 edi, eax

; 871  : 	if (!pcurCamera)

  0001f	85 ff		 test	 edi, edi
  00021	75 14		 jne	 SHORT $LN2@UpdateLODL

; 872  : 	{
; 873  : 		TraceError("CGraphicThingInstance::UpdateLODLevel - GetCurrentCamera() == NULL");

  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@LMOOEEKB@CGraphicThingInstance?3?3UpdateLO@
  00028	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0002d	83 c4 04	 add	 esp, 4

; 889  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
$LN2@UpdateLODL:

; 874  : 		return;
; 875  : 	}
; 876  : 
; 877  : 	const D3DXVECTOR3 & c_rv3TargetPosition = pcurCamera->GetTarget();
; 878  : 	const D3DXVECTOR3 & c_rv3CameraPosition = pcurCamera->GetEye();
; 879  : 	const D3DXVECTOR3 & c_v3Position = GetPosition();

  00037	8b cb		 mov	 ecx, ebx
  00039	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 880  : 
; 881  : 	CGrannyLODController::FUpdateLODLevel update;
; 882  : 	update.fDistanceFromCenter = sqrtf((c_rv3TargetPosition.x - c_v3Position.x) * (c_rv3TargetPosition.x - c_v3Position.x) +

  0003e	f3 0f 10 4f 40	 movss	 xmm1, DWORD PTR [edi+64]
  00043	8b f0		 mov	 esi, eax
  00045	f3 0f 10 47 3c	 movss	 xmm0, DWORD PTR [edi+60]
  0004a	f3 0f 5c 06	 subss	 xmm0, DWORD PTR [esi]
  0004e	f3 0f 5c 4e 04	 subss	 xmm1, DWORD PTR [esi+4]
  00053	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00057	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0005b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0005f	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  00062	0f 5a c0	 cvtps2pd xmm0, xmm0
  00065	66 0f 2e c8	 ucomisd xmm1, xmm0
  00069	77 06		 ja	 SHORT $LN32@UpdateLODL
  0006b	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  0006f	eb 05		 jmp	 SHORT $LN33@UpdateLODL
$LN32@UpdateLODL:
  00071	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN33@UpdateLODL:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 884  : 	update.fDistanceFromCamera = sqrtf((c_rv3CameraPosition.x - c_v3Position.x) * (c_rv3CameraPosition.x - c_v3Position.x) +

  00076	f3 0f 10 4f 34	 movss	 xmm1, DWORD PTR [edi+52]
  0007b	f3 0f 10 57 30	 movss	 xmm2, DWORD PTR [edi+48]
  00080	f3 0f 5c 16	 subss	 xmm2, DWORD PTR [esi]
  00084	f3 0f 5c 4e 04	 subss	 xmm1, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  00089	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 884  : 	update.fDistanceFromCamera = sqrtf((c_rv3CameraPosition.x - c_v3Position.x) * (c_rv3CameraPosition.x - c_v3Position.x) +

  0008d	f3 0f 59 d2	 mulss	 xmm2, xmm2
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  00091	f3 0f 11 44 24
	14		 movss	 DWORD PTR _update$$sroa$222$1$[esp+24], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 884  : 	update.fDistanceFromCamera = sqrtf((c_rv3CameraPosition.x - c_v3Position.x) * (c_rv3CameraPosition.x - c_v3Position.x) +

  00097	f3 0f 10 47 38	 movss	 xmm0, DWORD PTR [edi+56]
  0009c	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  000a1	f3 0f 59 c9	 mulss	 xmm1, xmm1
  000a5	f3 0f 58 d1	 addss	 xmm2, xmm1
  000a9	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000ad	0f 57 c9	 xorps	 xmm1, xmm1
  000b0	f3 0f 58 d0	 addss	 xmm2, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  000b4	0f 5a c2	 cvtps2pd xmm0, xmm2
  000b7	66 0f 2e c8	 ucomisd xmm1, xmm0
  000bb	77 06		 ja	 SHORT $LN34@UpdateLODL
  000bd	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  000c1	eb 05		 jmp	 SHORT $LN35@UpdateLODL
$LN34@UpdateLODL:
  000c3	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN35@UpdateLODL:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  000c8	8b 74 24 0c	 mov	 esi, DWORD PTR _this$1$[esp+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000cc	8b 9b d0 02 00
	00		 mov	 ebx, DWORD PTR [ebx+720]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  000d2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  000d6	8b b6 cc 02 00
	00		 mov	 esi, DWORD PTR [esi+716]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  000dc	f3 0f 11 44 24
	10		 movss	 DWORD PTR _update$$sroa$221$1$[esp+24], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  000e2	3b f3		 cmp	 esi, ebx
  000e4	74 35		 je	 SHORT $LN22@UpdateLODL
$LL23@UpdateLODL:

; 266  :         _Func(*_UFirst);

  000e6	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\LODController.h

; 44   : 			if (pController->isModelInstance())

  000e8	8b cf		 mov	 ecx, edi
  000ea	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  000ef	85 c0		 test	 eax, eax
  000f1	74 21		 je	 SHORT $LN21@UpdateLODL

; 45   : 			{
; 46   : 				pController->UpdateLODLevel(fDistanceFromCenter, fDistanceFromCamera);

  000f3	f3 0f 10 44 24
	10		 movss	 xmm0, DWORD PTR _update$$sroa$221$1$[esp+24]
  000f9	83 ec 08	 sub	 esp, 8
  000fc	8b cf		 mov	 ecx, edi
  000fe	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00104	f3 0f 10 44 24
	1c		 movss	 xmm0, DWORD PTR _update$$sroa$222$1$[esp+32]
  0010a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010f	e8 00 00 00 00	 call	 ?UpdateLODLevel@CGrannyLODController@@QAEXMM@Z ; CGrannyLODController::UpdateLODLevel
$LN21@UpdateLODL:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00114	83 c6 04	 add	 esi, 4
  00117	3b f3		 cmp	 esi, ebx
  00119	75 cb		 jne	 SHORT $LL23@UpdateLODL
$LN22@UpdateLODL:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 889  : }

  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	5b		 pop	 ebx
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
?UpdateLODLevel@CGraphicThingInstance@@QAEXXZ ENDP	; CGraphicThingInstance::UpdateLODLevel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ?DeformNoSkin@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
?DeformNoSkin@CGraphicThingInstance@@QAEXXZ PROC	; CGraphicThingInstance::DeformNoSkin, COMDAT
; _this$ = ecx

; 819  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi

; 822  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  00004	33 f6		 xor	 esi, esi
  00006	c6 83 8c 02 00
	00 01		 mov	 BYTE PTR [ebx+652], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000d	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
  00013	8b 8b cc 02 00
	00		 mov	 ecx, DWORD PTR [ebx+716]
  00019	2b c1		 sub	 eax, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 822  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  0001b	83 f8 04	 cmp	 eax, 4
  0001e	72 49		 jb	 SHORT $LN3@DeformNoSk
  00020	57		 push	 edi
$LL4@DeformNoSk:

; 823  : 	{
; 824  : 		CGrannyLODController* pkLOD = m_LODControllerVector[i];

  00021	8b 3c b1	 mov	 edi, DWORD PTR [ecx+esi*4]

; 825  : 		if (pkLOD && pkLOD->isModelInstance())

  00024	85 ff		 test	 edi, edi
  00026	74 2a		 je	 SHORT $LN2@DeformNoSk
  00028	8b cf		 mov	 ecx, edi
  0002a	e8 00 00 00 00	 call	 ?isModelInstance@CGrannyLODController@@QAEHXZ ; CGrannyLODController::isModelInstance
  0002f	85 c0		 test	 eax, eax
  00031	74 1f		 je	 SHORT $LN2@DeformNoSk

; 826  : 		{
; 827  : 			if (i == 5) // This is the number of PART_ACCE

  00033	83 fe 05	 cmp	 esi, 5
  00036	75 0f		 jne	 SHORT $LN6@DeformNoSk

; 828  : 			{
; 829  : 				RecalcAccePositionMatrixFromBoneMatrix();

  00038	8b cb		 mov	 ecx, ebx
  0003a	e8 00 00 00 00	 call	 ?RecalcAccePositionMatrixFromBoneMatrix@CGraphicThingInstance@@QAEXXZ ; CGraphicThingInstance::RecalcAccePositionMatrixFromBoneMatrix

; 830  : 				pkLOD->DeformNoSkin(&m_matAbsoluteTrans);

  0003f	8d 83 cc 01 00
	00		 lea	 eax, DWORD PTR [ebx+460]

; 831  : 			}

  00045	eb 03		 jmp	 SHORT $LN17@DeformNoSk
$LN6@DeformNoSk:

; 832  : 			else
; 833  : 				pkLOD->DeformNoSkin(&m_worldMatrix);

  00047	8d 43 6c	 lea	 eax, DWORD PTR [ebx+108]
$LN17@DeformNoSk:

; 822  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  0004a	50		 push	 eax
  0004b	8b cf		 mov	 ecx, edi
  0004d	e8 00 00 00 00	 call	 ?DeformNoSkin@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyLODController::DeformNoSkin
$LN2@DeformNoSk:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00052	8b 83 d0 02 00
	00		 mov	 eax, DWORD PTR [ebx+720]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 822  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  00058	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00059	8b 8b cc 02 00
	00		 mov	 ecx, DWORD PTR [ebx+716]
  0005f	2b c1		 sub	 eax, ecx
  00061	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 822  : 	for (std::vector<CGrannyLODController*>::size_type i = 0; i != m_LODControllerVector.size(); i++)

  00064	3b f0		 cmp	 esi, eax
  00066	75 b9		 jne	 SHORT $LL4@DeformNoSk
  00068	5f		 pop	 edi
$LN3@DeformNoSk:
  00069	5e		 pop	 esi

; 834  : 		}
; 835  : 	}
; 836  : }

  0006a	5b		 pop	 ebx
  0006b	c3		 ret	 0
?DeformNoSkin@CGraphicThingInstance@@QAEXXZ ENDP	; CGraphicThingInstance::DeformNoSkin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ??1CGraphicThingInstance@@UAE@XZ
_TEXT	SEGMENT
??1CGraphicThingInstance@@UAE@XZ PROC			; CGraphicThingInstance::~CGraphicThingInstance, COMDAT
; _this$ = ecx

; 1126 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1127 : }

  00003	8d 8e e4 02 00
	00		 lea	 ecx, DWORD PTR [esi+740]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicThingInstance@@6B@
  0000f	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CRef<CGraphicThing> *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CRef<CGraphicThing> *> >,0> >
  00014	8d 8e d8 02 00
	00		 lea	 ecx, DWORD PTR [esi+728]
  0001a	e8 00 00 00 00	 call	 ??1?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::~vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0001f	8b 86 cc 02 00
	00		 mov	 eax, DWORD PTR [esi+716]
  00025	85 c0		 test	 eax, eax
  00027	74 4d		 je	 SHORT $LN9@CGraphicTh

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00029	8b 8e d4 02 00
	00		 mov	 ecx, DWORD PTR [esi+724]
  0002f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00031	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00034	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0003a	72 12		 jb	 SHORT $LN25@CGraphicTh

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0003c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0003f	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00042	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00044	83 c0 fc	 add	 eax, -4			; fffffffcH
  00047	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0004a	77 32		 ja	 SHORT $LN22@CGraphicTh

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0004c	8b c2		 mov	 eax, edx
$LN25@CGraphicTh:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0004e	51		 push	 ecx
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00055	c7 86 cc 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+716], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0005f	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00062	c7 86 d0 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+720], 0

; 2114 :             _Myend   = nullptr;

  0006c	c7 86 d4 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+724], 0
$LN9@CGraphicTh:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1127 : }

  00076	8b ce		 mov	 ecx, esi
  00078	5e		 pop	 esi
  00079	e9 00 00 00 00	 jmp	 ??1CGraphicObjectInstance@@UAE@XZ ; CGraphicObjectInstance::~CGraphicObjectInstance
$LN22@CGraphicTh:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN31@CGraphicTh:
  00083	cc		 int	 3
??1CGraphicThingInstance@@UAE@XZ ENDP			; CGraphicThingInstance::~CGraphicThingInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp
;	COMDAT ??0CGraphicThingInstance@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGraphicThingInstance@@QAE@XZ PROC			; CGraphicThingInstance::CGraphicThingInstance, COMDAT
; _this$ = ecx

; 1121 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGraphicThingInstance@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx
  00029	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  0002c	e8 00 00 00 00	 call	 ??0CGraphicObjectInstance@@QAE@XZ ; CGraphicObjectInstance::CGraphicObjectInstance
  00031	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CGraphicThingInstance@@6B@
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003e	c7 87 cc 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+716], 0
  00048	c7 87 d0 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+720], 0
  00052	c7 87 d4 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+724], 0
  0005c	c7 87 d8 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+728], 0
  00066	c7 87 dc 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+732], 0
  00070	c7 87 e0 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+736], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1121 : {

  0007a	8d b7 e4 02 00
	00		 lea	 esi, DWORD PTR [edi+740]
  00080	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  00084	6a 18		 push	 24			; 00000018H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1121 : {

  00086	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00089	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0008f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  00096	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009b	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0009e	89 00		 mov	 DWORD PTR [eax], eax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  000a0	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  000a3	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 350  :         _Pnode->_Color = _Black;

  000a6	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H

; 1941 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000ac	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.cpp

; 1122 : 	Initialize();

  000ae	8b cf		 mov	 ecx, edi
  000b0	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000b4	e8 00 00 00 00	 call	 ?Initialize@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Initialize

; 1123 : }

  000b9	8b c7		 mov	 eax, edi
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c5	59		 pop	 ecx
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGraphicThingInstance@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGraphicObjectInstance@@UAE@XZ ; CGraphicObjectInstance::~CGraphicObjectInstance
__unwindfunclet$??0CGraphicThingInstance@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 cc 02 00
	00		 add	 ecx, 716		; 000002ccH
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGrannyLODController@@V?$allocator@PAVCGrannyLODController@@@std@@@std@@QAE@XZ ; std::vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >::~vector<CGrannyLODController *,std::allocator<CGrannyLODController *> >
__unwindfunclet$??0CGraphicThingInstance@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 d8 02 00
	00		 add	 ecx, 728		; 000002d8H
  0001f	e9 00 00 00 00	 jmp	 ??1?$vector@USModelThingSet@CGraphicThingInstance@@V?$allocator@USModelThingSet@CGraphicThingInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >::~vector<CGraphicThingInstance::SModelThingSet,std::allocator<CGraphicThingInstance::SModelThingSet> >
__unwindfunclet$??0CGraphicThingInstance@@QAE@XZ$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 e4 02 00
	00		 add	 ecx, 740		; 000002e4H
  0002d	e9 00 00 00 00	 jmp	 ??1?$map@KPAV?$CRef@VCGraphicThing@@@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAV?$CRef@VCGraphicThing@@@@@std@@@3@@std@@QAE@XZ
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$??0CGraphicThingInstance@@QAE@XZ:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGraphicThingInstance@@QAE@XZ
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGraphicThingInstance@@QAE@XZ ENDP			; CGraphicThingInstance::CGraphicThingInstance
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.h
;	COMDAT ?GetType@CGraphicThingInstance@@UBEHXZ
_TEXT	SEGMENT
?GetType@CGraphicThingInstance@@UBEHXZ PROC		; CGraphicThingInstance::GetType, COMDAT
; _this$ = ecx

; 28   : 	int GetType() const { return ID; }

  00000	b8 13 1f f2 ad	 mov	 eax, -1376641261	; adf21f13H
  00005	c3		 ret	 0
?GetType@CGraphicThingInstance@@UBEHXZ ENDP		; CGraphicThingInstance::GetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@CAXXZ PROC ; std::vector<CRef<CGraphicThing> *,std::allocator<CRef<CGraphicThing> *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAV?$CRef@VCGraphicThing@@@@V?$allocator@PAV?$CRef@VCGraphicThing@@@@@std@@@std@@CAXXZ ENDP ; std::vector<CRef<CGraphicThing> *,std::allocator<CRef<CGraphicThing> *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.h
;	COMDAT ?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ PROC ; CGraphicThingInstance::SModelThingSet::Clear, COMDAT
; _this$ = ecx

; 16   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b d9		 mov	 ebx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00027	8b 33		 mov	 esi, DWORD PTR [ebx]
  00029	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  0002c	3b f0		 cmp	 esi, eax
  0002e	74 40		 je	 SHORT $LN5@Clear
$LL23@Clear:

; 44   : 	{
; 45   : 		delete* i;

  00030	8b 3e		 mov	 edi, DWORD PTR [esi]
  00032	85 ff		 test	 edi, edi
  00034	74 2a		 je	 SHORT $LN28@Clear
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\Ref.h

; 53   : 		if (m_pObject)

  00036	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 37   : 	{

  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 		if (m_pObject)

  0003f	85 c9		 test	 ecx, ecx
  00041	74 0b		 je	 SHORT $LN34@Clear

; 54   : 		{
; 55   : 			m_pObject->Release();

  00043	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 			m_pObject = NULL;

  00048	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
$LN34@Clear:
  0004e	6a 04		 push	 4
  00050	57		 push	 edi

; 39   : 	}

  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005d	83 c4 08	 add	 esp, 8
$LN28@Clear:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 46   : 		*i = NULL;

  00060	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  00066	83 c6 04	 add	 esi, 4

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00069	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 156  :         return _Ptr == _Right._Ptr;

  0006c	3b f0		 cmp	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  0006e	75 c0		 jne	 SHORT $LL23@Clear
$LN5@Clear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00070	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00072	3b c8		 cmp	 ecx, eax
  00074	74 03		 je	 SHORT $LN24@Clear

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00076	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN24@Clear:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterGrnLib\ThingInstance.h

; 18   : 		}

  00079	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00083	59		 pop	 ecx
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
  0008b	cc		 int	 3
  0008c	cc		 int	 3
  0008d	cc		 int	 3
  0008e	cc		 int	 3
  0008f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clear@SModelThingSet@CGraphicThingInstance@@QAEXXZ ENDP ; CGraphicThingInstance::SModelThingSet::Clear
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 418  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 324  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
