; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\MilesLib\Distribute\SoundManager2D.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CSoundManager2D@@QAE@XZ			; CSoundManager2D::CSoundManager2D
PUBLIC	??1CSoundManager2D@@UAE@XZ			; CSoundManager2D::~CSoundManager2D
PUBLIC	?Initialize@CSoundManager2D@@QAE_NXZ		; CSoundManager2D::Initialize
PUBLIC	?Destroy@CSoundManager2D@@QAEXXZ		; CSoundManager2D::Destroy
PUBLIC	?GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z ; CSoundManager2D::GetInstance
PUBLIC	??_GCSoundManager2D@@UAEPAXI@Z			; CSoundManager2D::`scalar deleting destructor'
PUBLIC	??_7CSoundManager2D@@6B@			; CSoundManager2D::`vftable'
PUBLIC	??_C@_0CM@LNGHBJHC@CSoundManager2D?3?3GetInstance?5?$CIf@ ; `string'
PUBLIC	??_R1A@?0A@EA@CSoundBase@@8			; CSoundBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCSoundBase@@@8				; CSoundBase `RTTI Type Descriptor'
PUBLIC	??_R3CSoundBase@@8				; CSoundBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSoundBase@@8				; CSoundBase::`RTTI Base Class Array'
PUBLIC	??_R4CSoundManager2D@@6B@			; CSoundManager2D::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSoundManager2D@@@8			; CSoundManager2D `RTTI Type Descriptor'
PUBLIC	??_R3CSoundManager2D@@8				; CSoundManager2D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSoundManager2D@@8				; CSoundManager2D::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSoundManager2D@@8		; CSoundManager2D::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__AIL_open_digital_driver@16:PROC
EXTRN	__imp__AIL_close_digital_driver@4:PROC
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CSoundBase@@QAE@XZ:PROC			; CSoundBase::CSoundBase
EXTRN	??1CSoundBase@@UAE@XZ:PROC			; CSoundBase::~CSoundBase
EXTRN	?Initialize@CSoundBase@@QAEXXZ:PROC		; CSoundBase::Initialize
EXTRN	?Destroy@CSoundBase@@QAEXXZ:PROC		; CSoundBase::Destroy
EXTRN	?AddFile@CSoundBase@@QAEPAVCSoundData@@KPBD@Z:PROC ; CSoundBase::AddFile
EXTRN	?GetFileCRC@CSoundBase@@QAEKPBD@Z:PROC		; CSoundBase::GetFileCRC
EXTRN	??0CSoundInstance2D@@QAE@XZ:PROC		; CSoundInstance2D::CSoundInstance2D
EXTRN	??1CSoundInstance2D@@UAE@XZ:PROC		; CSoundInstance2D::~CSoundInstance2D
EXTRN	??_ECSoundManager2D@@UAEPAXI@Z:PROC		; CSoundManager2D::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A:DWORD ; CSoundBase::ms_DIGDriver
EXTRN	?ms_dataMap@CSoundBase@@1V?$map@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@@std@@A:QWORD ; CSoundBase::ms_dataMap
EXTRN	___security_cookie:DWORD
;	COMDAT ?k@?1??GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z@4KA
_BSS	SEGMENT
?k@?1??GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z@4KA DD 01H DUP (?) ; `CSoundManager2D::GetInstance'::`2'::k
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@CSoundManager2D@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSoundManager2D@@8 DD FLAT:??_R0?AVCSoundManager2D@@@8 ; CSoundManager2D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSoundManager2D@@8
rdata$r	ENDS
;	COMDAT ??_R2CSoundManager2D@@8
rdata$r	SEGMENT
??_R2CSoundManager2D@@8 DD FLAT:??_R1A@?0A@EA@CSoundManager2D@@8 ; CSoundManager2D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CSoundManager2D@@8
rdata$r	SEGMENT
??_R3CSoundManager2D@@8 DD 00H				; CSoundManager2D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CSoundManager2D@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSoundManager2D@@@8
data$rs	SEGMENT
??_R0?AVCSoundManager2D@@@8 DD FLAT:??_7type_info@@6B@	; CSoundManager2D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSoundManager2D@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CSoundManager2D@@6B@
rdata$r	SEGMENT
??_R4CSoundManager2D@@6B@ DD 00H			; CSoundManager2D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSoundManager2D@@@8
	DD	FLAT:??_R3CSoundManager2D@@8
rdata$r	ENDS
;	COMDAT ??_R2CSoundBase@@8
rdata$r	SEGMENT
??_R2CSoundBase@@8 DD FLAT:??_R1A@?0A@EA@CSoundBase@@8	; CSoundBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSoundBase@@8
rdata$r	SEGMENT
??_R3CSoundBase@@8 DD 00H				; CSoundBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSoundBase@@@8
data$rs	SEGMENT
??_R0?AVCSoundBase@@@8 DD FLAT:??_7type_info@@6B@	; CSoundBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSoundBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CSoundBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSoundBase@@8 DD FLAT:??_R0?AVCSoundBase@@@8 ; CSoundBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CM@LNGHBJHC@CSoundManager2D?3?3GetInstance?5?$CIf@
CONST	SEGMENT
??_C@_0CM@LNGHBJHC@CSoundManager2D?3?3GetInstance?5?$CIf@ DB 'CSoundManag'
	DB	'er2D::GetInstance (filename: %s)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSoundManager2D@@6B@
CONST	SEGMENT
??_7CSoundManager2D@@6B@ DD FLAT:??_R4CSoundManager2D@@6B@ ; CSoundManager2D::`vftable'
	DD	FLAT:??_ECSoundManager2D@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CSoundManager2D@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSoundManager2D@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSoundManager2D@@QAE@XZ$0
__ehfuncinfo$??0CSoundManager2D@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CSoundManager2D@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCSoundManager2D@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSoundManager2D@@UAEPAXI@Z PROC			; CSoundManager2D::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSoundManager2D@@UAE@XZ ; CSoundManager2D::~CSoundManager2D
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 34		 push	 52			; 00000034H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCSoundManager2D@@UAEPAXI@Z ENDP			; CSoundManager2D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\MilesLib\SoundManager2D.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\MilesLib\SoundManager2D.cpp
;	COMDAT ?GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z
_TEXT	SEGMENT
_this$1$ = -8						; size = 4
_pkSoundData$1$ = -4					; size = 4
_c_pszFileName$ = 8					; size = 4
?GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z PROC ; CSoundManager2D::GetInstance, COMDAT
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 53   : 	DWORD dwFileCRC = GetFileCRC(c_pszFileName);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _c_pszFileName$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	53		 push	 ebx
  0000f	89 7d f8	 mov	 DWORD PTR _this$1$[ebp], edi
  00012	e8 00 00 00 00	 call	 ?GetFileCRC@CSoundBase@@QAEKPBD@Z ; CSoundBase::GetFileCRC
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1611 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00017	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_dataMap@CSoundBase@@1V?$map@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@@std@@A
  0001d	8b ce		 mov	 ecx, esi
  0001f	8b 56 04	 mov	 edx, DWORD PTR [esi+4]

; 1612 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1613 :         while (!_Trynode->_Isnil) {

  00022	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  00026	75 14		 jne	 SHORT $LN16@GetInstanc
$LL15@GetInstanc:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  00028	39 42 10	 cmp	 DWORD PTR [edx+16], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1615 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  0002b	73 05		 jae	 SHORT $LN17@GetInstanc

; 1616 :                 _Result._Location._Child = _Tree_child::_Right;
; 1617 :                 _Trynode                 = _Trynode->_Right;

  0002d	8b 52 08	 mov	 edx, DWORD PTR [edx+8]

; 1618 :             } else {

  00030	eb 04		 jmp	 SHORT $LN18@GetInstanc
$LN17@GetInstanc:

; 1619 :                 _Result._Location._Child = _Tree_child::_Left;
; 1620 :                 _Result._Bound           = _Trynode;

  00032	8b ca		 mov	 ecx, edx

; 1621 :                 _Trynode                 = _Trynode->_Left;

  00034	8b 12		 mov	 edx, DWORD PTR [edx]
$LN18@GetInstanc:

; 1612 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1613 :         while (!_Trynode->_Isnil) {

  00036	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  0003a	74 ec		 je	 SHORT $LL15@GetInstanc
$LN16@GetInstanc:

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0003c	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00040	75 05		 jne	 SHORT $LN12@GetInstanc
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  00042	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00045	73 02		 jae	 SHORT $LN11@GetInstanc
$LN12@GetInstanc:

; 1372 :         return _Get_scary()->_Myhead;

  00047	8b ce		 mov	 ecx, esi
$LN11@GetInstanc:

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00049	3b ce		 cmp	 ecx, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\MilesLib\SoundManager2D.cpp

; 58   : 	if (itor == ms_dataMap.end())

  0004b	75 0b		 jne	 SHORT $LN4@GetInstanc

; 59   : 	{
; 60   : 		pkSoundData = AddFile(dwFileCRC, c_pszFileName);    // CSoundBase::AddFile

  0004d	53		 push	 ebx
  0004e	50		 push	 eax
  0004f	8b cf		 mov	 ecx, edi
  00051	e8 00 00 00 00	 call	 ?AddFile@CSoundBase@@QAEPAVCSoundData@@KPBD@Z ; CSoundBase::AddFile

; 61   : 	}

  00056	eb 03		 jmp	 SHORT $LN59@GetInstanc
$LN4@GetInstanc:

; 62   : 	else
; 63   : 	{
; 64   : 		pkSoundData = itor->second;

  00058	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
$LN59@GetInstanc:

; 65   : 	}
; 66   : 
; 67   : 	assert(pkSoundData != NULL);
; 68   : 
; 69   : 	static DWORD k = 0;
; 70   : 
; 71   : 	DWORD start = k++;

  0005b	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?k@?1??GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z@4KA
  00061	89 45 fc	 mov	 DWORD PTR _pkSoundData$1$[ebp], eax

; 72   : 	DWORD end = start + INSTANCE_MAX_COUNT;

  00064	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00067	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0006a	a3 00 00 00 00	 mov	 DWORD PTR ?k@?1??GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z@4KA, eax

; 73   : 
; 74   : 	while (start < end)

  0006f	3b f3		 cmp	 esi, ebx
  00071	73 24		 jae	 SHORT $LN3@GetInstanc
$LL2@GetInstanc:

; 75   : 	{
; 76   : 		CSoundInstance2D * pkInst = &ms_Instances[start % INSTANCE_MAX_COUNT];

  00073	8b c6		 mov	 eax, esi
  00075	83 e0 03	 and	 eax, 3
  00078	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0007b	8d 3c 87	 lea	 edi, DWORD PTR [edi+eax*4]

; 77   : 
; 78   : 		if (pkInst->IsDone())

  0007e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00081	83 c7 04	 add	 edi, 4
  00084	8b cf		 mov	 ecx, edi
  00086	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00089	ff d0		 call	 eax
  0008b	84 c0		 test	 al, al
  0008d	75 13		 jne	 SHORT $LN52@GetInstanc

; 85   : 		}
; 86   : 
; 87   : 		++start;

  0008f	8b 7d f8	 mov	 edi, DWORD PTR _this$1$[ebp]
  00092	46		 inc	 esi
  00093	3b f3		 cmp	 esi, ebx
  00095	72 dc		 jb	 SHORT $LL2@GetInstanc
$LN3@GetInstanc:
  00097	5f		 pop	 edi

; 88   : 	}
; 89   : 
; 90   : 	return NULL;
; 91   : }

  00098	5e		 pop	 esi
  00099	33 c0		 xor	 eax, eax
  0009b	5b		 pop	 ebx
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 04 00	 ret	 4
$LN52@GetInstanc:

; 79   : 		{
; 80   : 			if (!pkInst->SetSound(pkSoundData))

  000a2	8b 07		 mov	 eax, DWORD PTR [edi]
  000a4	8b cf		 mov	 ecx, edi
  000a6	ff 75 fc	 push	 DWORD PTR _pkSoundData$1$[ebp]
  000a9	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000ac	ff d0		 call	 eax
  000ae	84 c0		 test	 al, al
  000b0	75 10		 jne	 SHORT $LN7@GetInstanc

; 81   : 			{
; 82   : 				TraceError("CSoundManager2D::GetInstance (filename: %s)", c_pszFileName);

  000b2	ff 75 08	 push	 DWORD PTR _c_pszFileName$[ebp]
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@LNGHBJHC@CSoundManager2D?3?3GetInstance?5?$CIf@
  000ba	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000bf	83 c4 08	 add	 esp, 8
$LN7@GetInstanc:

; 83   : 			}
; 84   : 			return (pkInst);

  000c2	8b c7		 mov	 eax, edi
  000c4	5f		 pop	 edi

; 88   : 	}
; 89   : 
; 90   : 	return NULL;
; 91   : }

  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 04 00	 ret	 4
?GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z ENDP ; CSoundManager2D::GetInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\MilesLib\SoundManager2D.cpp
;	COMDAT ?Destroy@CSoundManager2D@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CSoundManager2D@@QAEXXZ PROC			; CSoundManager2D::Destroy, COMDAT
; _this$ = ecx

; 36   : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi

; 37   : 	for (int i = 0; i < INSTANCE_MAX_COUNT; ++i)

  00005	bf 04 00 00 00	 mov	 edi, 4
  0000a	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  0000d	0f 1f 00	 npad	 3
$LL4@Destroy:

; 38   : 	{
; 39   : 		ms_Instances[i].Destroy();

  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	8b ce		 mov	 ecx, esi
  00014	ff 50 08	 call	 DWORD PTR [eax+8]
  00017	83 c6 0c	 add	 esi, 12			; 0000000cH
  0001a	83 ef 01	 sub	 edi, 1
  0001d	75 f1		 jne	 SHORT $LL4@Destroy

; 40   : 	}
; 41   : 
; 42   : 	if (ms_DIGDriver != NULL)

  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A ; CSoundBase::ms_DIGDriver
  00024	85 c0		 test	 eax, eax
  00026	74 0d		 je	 SHORT $LN5@Destroy

; 43   : 	{
; 44   : 		AIL_close_digital_driver(ms_DIGDriver);

  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_close_digital_driver@4

; 45   : 		ms_DIGDriver = NULL;

  0002f	89 3d 00 00 00
	00		 mov	 DWORD PTR ?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A, edi ; CSoundBase::ms_DIGDriver
$LN5@Destroy:

; 46   : 	}
; 47   : 
; 48   : 	CSoundBase::Destroy();

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	8b cb		 mov	 ecx, ebx
  00039	5b		 pop	 ebx
  0003a	e9 00 00 00 00	 jmp	 ?Destroy@CSoundBase@@QAEXXZ ; CSoundBase::Destroy
?Destroy@CSoundManager2D@@QAEXXZ ENDP			; CSoundManager2D::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\MilesLib\SoundManager2D.cpp
;	COMDAT ?Initialize@CSoundManager2D@@QAE_NXZ
_TEXT	SEGMENT
?Initialize@CSoundManager2D@@QAE_NXZ PROC		; CSoundManager2D::Initialize, COMDAT
; _this$ = ecx

; 13   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 14   : 	CSoundBase::Initialize();

  00003	e8 00 00 00 00	 call	 ?Initialize@CSoundBase@@QAEXXZ ; CSoundBase::Initialize

; 15   : 
; 16   : 	if (ms_DIGDriver)

  00008	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A, 0 ; CSoundBase::ms_DIGDriver
  0000f	75 2f		 jne	 SHORT $LN13@Initialize

; 17   : 	{
; 18   : 		return true;
; 19   : 	}
; 20   : 
; 21   : 	ms_DIGDriver = AIL_open_digital_driver(44100, 16, 2, 0);

  00011	57		 push	 edi
  00012	6a 00		 push	 0
  00014	6a 02		 push	 2
  00016	6a 10		 push	 16			; 00000010H
  00018	68 44 ac 00 00	 push	 44100			; 0000ac44H
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_open_digital_driver@16
  00023	a3 00 00 00 00	 mov	 DWORD PTR ?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A, eax ; CSoundBase::ms_DIGDriver
  00028	83 c6 04	 add	 esi, 4
  0002b	bf 04 00 00 00	 mov	 edi, 4
$LL4@Initialize:

; 22   : 
; 23   : 	for (int i = 0; i < INSTANCE_MAX_COUNT; ++i)
; 24   : 	{
; 25   : 		ms_Instances[i].Initialize();

  00030	8b 06		 mov	 eax, DWORD PTR [esi]
  00032	8b ce		 mov	 ecx, esi
  00034	ff 50 04	 call	 DWORD PTR [eax+4]
  00037	83 c6 0c	 add	 esi, 12			; 0000000cH
  0003a	83 ef 01	 sub	 edi, 1
  0003d	75 f1		 jne	 SHORT $LL4@Initialize

; 26   : 	}
; 27   : 	/*	ms_DIGDriver = AIL_open_digital_driver(44100,
; 28   : 											   (DIG_F_STEREO_16 & DIG_F_16BITS_MASK) ? 16 : 8,
; 29   : 											   (DIG_F_STEREO_16 & DIG_F_16BITS_MASK) ? 2 : 1,
; 30   : 											   0);
; 31   : 	*/
; 32   : 	return true;

  0003f	5f		 pop	 edi
$LN13@Initialize:

; 33   : }

  00040	b0 01		 mov	 al, 1
  00042	5e		 pop	 esi
  00043	c3		 ret	 0
?Initialize@CSoundManager2D@@QAE_NXZ ENDP		; CSoundManager2D::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\MilesLib\SoundManager2D.cpp
;	COMDAT ??1CSoundManager2D@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CSoundManager2D@@UAE@XZ PROC				; CSoundManager2D::~CSoundManager2D, COMDAT
; _this$ = ecx

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSoundManager2D@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 10   : }

  00025	68 00 00 00 00	 push	 OFFSET ??1CSoundInstance2D@@UAE@XZ ; CSoundInstance2D::~CSoundInstance2D
  0002a	6a 04		 push	 4
  0002c	6a 0c		 push	 12			; 0000000cH
  0002e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00031	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSoundManager2D@@6B@
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0003d	8b ce		 mov	 ecx, esi
  0003f	e8 00 00 00 00	 call	 ??1CSoundBase@@UAE@XZ	; CSoundBase::~CSoundBase
  00044	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00047	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004e	59		 pop	 ecx
  0004f	5e		 pop	 esi
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSoundManager2D@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSoundManager2D@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSoundManager2D@@UAE@XZ ENDP				; CSoundManager2D::~CSoundManager2D
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\MilesLib\SoundManager2D.cpp
;	COMDAT ??0CSoundManager2D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CSoundManager2D@@QAE@XZ PROC				; CSoundManager2D::CSoundManager2D, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSoundManager2D@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CSoundBase@@QAE@XZ	; CSoundBase::CSoundBase
  0002e	68 00 00 00 00	 push	 OFFSET ??1CSoundInstance2D@@UAE@XZ ; CSoundInstance2D::~CSoundInstance2D
  00033	68 00 00 00 00	 push	 OFFSET ??0CSoundInstance2D@@QAE@XZ ; CSoundInstance2D::CSoundInstance2D
  00038	6a 04		 push	 4
  0003a	6a 0c		 push	 12			; 0000000cH
  0003c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSoundManager2D@@6B@
  0004d	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z

; 6    : }

  00052	8b c6		 mov	 eax, esi
  00054	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00057	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005e	59		 pop	 ecx
  0005f	5e		 pop	 esi
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSoundManager2D@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CSoundBase@@UAE@XZ	; CSoundBase::~CSoundBase
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CSoundManager2D@@QAE@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSoundManager2D@@QAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSoundManager2D@@QAE@XZ ENDP				; CSoundManager2D::CSoundManager2D
END
