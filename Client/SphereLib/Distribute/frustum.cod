; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\Distribute\frustum.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z ; Frustum::BuildViewFrustum
PUBLIC	?BuildViewFrustum2@Frustum@@QAEXAAUD3DXMATRIX@@MMMMABUD3DXVECTOR3@@1@Z ; Frustum::BuildViewFrustum2
PUBLIC	?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ; Frustum::ViewVolumeTest
PUBLIC	__real@3f000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_sqrt:PROC
EXTRN	_tan:PROC
EXTRN	_D3DXPlaneNormalize@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
;	COMDAT ?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z
_TEXT	SEGMENT
_distance$ = -28					; size = 24
_center$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_c_v3Center$ = 8					; size = 4
_c_fRadius$ = 12					; size = 4
?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z PROC ; Frustum::ViewVolumeTest, COMDAT
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _c_v3Center$[ebp]
  00013	8b d1		 mov	 edx, ecx

; 27   : 	if (m_bUsingSphere)

  00015	f3 0f 10 5d 0c	 movss	 xmm3, DWORD PTR _c_fRadius$[ebp]
  0001a	80 3a 00	 cmp	 BYTE PTR [edx], 0
  0001d	74 46		 je	 SHORT $LN9@ViewVolume

; 28   : 	{
; 29   : 		D3DXVECTOR3 v(

  0001f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00024	f3 0f 5c 42 08	 subss	 xmm0, DWORD PTR [edx+8]
  00029	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  0002d	f3 0f 5c 52 04	 subss	 xmm2, DWORD PTR [edx+4]
  00032	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00037	f3 0f 5c 4a 0c	 subss	 xmm1, DWORD PTR [edx+12]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1884 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0003c	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00040	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00044	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00048	f3 0f 58 d0	 addss	 xmm2, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 34   : 		if ((c_fRadius + m_fRadius) * (c_fRadius + m_fRadius) < D3DXVec3LengthSq(&v))

  0004c	0f 28 c3	 movaps	 xmm0, xmm3
  0004f	f3 0f 58 42 10	 addss	 xmm0, DWORD PTR [edx+16]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1884 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00054	f3 0f 58 d1	 addss	 xmm2, xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 34   : 		if ((c_fRadius + m_fRadius) * (c_fRadius + m_fRadius) < D3DXVec3LengthSq(&v))

  00058	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0005c	0f 2f d0	 comiss	 xmm2, xmm0
  0005f	0f 87 9f 00 00
	00		 ja	 $LN21@ViewVolume
$LN9@ViewVolume:

; 35   : 		{
; 36   : 			return VS_OUTSIDE;
; 37   : 		}
; 38   : 	}
; 39   : 
; 40   : 	const int count = 6;
; 41   : 
; 42   : 	D3DXVECTOR3 center = c_v3Center;

  00065	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00069	0f 28 d3	 movaps	 xmm2, xmm3
  0006c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 43   : 	//center.y *=-1;
; 44   : 
; 45   : 	int i;
; 46   : 
; 47   : 	float distance[count];
; 48   : 	for (i = 0; i < count; i++)

  0006f	33 c9		 xor	 ecx, ecx
  00071	0f 57 15 00 00
	00 00		 xorps	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
  00078	66 0f d6 45 f0	 movq	 QWORD PTR _center$[ebp], xmm0
  0007d	f3 0f 10 6d f4	 movss	 xmm5, DWORD PTR _center$[ebp+4]
  00082	f3 0f 10 75 f0	 movss	 xmm6, DWORD PTR _center$[ebp]
  00087	89 45 f8	 mov	 DWORD PTR _center$[ebp+8], eax
  0008a	8d 42 1c	 lea	 eax, DWORD PTR [edx+28]
  0008d	f3 0f 10 65 f8	 movss	 xmm4, DWORD PTR _center$[ebp+8]
$LL4@ViewVolume:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 2392 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00092	0f 28 c6	 movaps	 xmm0, xmm6
  00095	0f 28 cd	 movaps	 xmm1, xmm5
  00098	f3 0f 59 48 fc	 mulss	 xmm1, DWORD PTR [eax-4]
  0009d	f3 0f 59 40 f8	 mulss	 xmm0, DWORD PTR [eax-8]
  000a2	f3 0f 58 c8	 addss	 xmm1, xmm0
  000a6	0f 28 c4	 movaps	 xmm0, xmm4
  000a9	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  000ad	f3 0f 58 c8	 addss	 xmm1, xmm0
  000b1	f3 0f 58 48 04	 addss	 xmm1, DWORD PTR [eax+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 51   : 		if (distance[i] <= -c_fRadius)

  000b6	0f 2f d1	 comiss	 xmm2, xmm1
  000b9	f3 0f 11 4c 8d
	e4		 movss	 DWORD PTR _distance$[ebp+ecx*4], xmm1
  000bf	73 43		 jae	 SHORT $LN21@ViewVolume

; 43   : 	//center.y *=-1;
; 44   : 
; 45   : 	int i;
; 46   : 
; 47   : 	float distance[count];
; 48   : 	for (i = 0; i < count; i++)

  000c1	41		 inc	 ecx
  000c2	83 c0 10	 add	 eax, 16			; 00000010H
  000c5	83 f9 06	 cmp	 ecx, 6
  000c8	7c c8		 jl	 SHORT $LL4@ViewVolume

; 52   : 		{
; 53   : 			return VS_OUTSIDE;
; 54   : 		}
; 55   : 	}
; 56   : 
; 57   : 	//return VS_INSIDE;
; 58   : 
; 59   : 	for (i = 0; i < count; i++)

  000ca	33 c0		 xor	 eax, eax
  000cc	0f 1f 40 00	 npad	 4
$LL7@ViewVolume:

; 60   : 	{
; 61   : 		if (distance[i] <= c_fRadius)

  000d0	0f 2f 5c 85 e4	 comiss	 xmm3, DWORD PTR _distance$[ebp+eax*4]
  000d5	73 18		 jae	 SHORT $LN22@ViewVolume

; 52   : 		{
; 53   : 			return VS_OUTSIDE;
; 54   : 		}
; 55   : 	}
; 56   : 
; 57   : 	//return VS_INSIDE;
; 58   : 
; 59   : 	for (i = 0; i < count; i++)

  000d7	40		 inc	 eax
  000d8	83 f8 06	 cmp	 eax, 6
  000db	7c f3		 jl	 SHORT $LL7@ViewVolume

; 64   : 		}
; 65   : 	}
; 66   : 
; 67   : 	return VS_INSIDE;

  000dd	33 c0		 xor	 eax, eax

; 68   : }

  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
$LN22@ViewVolume:

; 62   : 		{
; 63   : 			return VS_PARTIAL;

  000ef	b8 01 00 00 00	 mov	 eax, 1

; 68   : }

  000f4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f7	33 cd		 xor	 ecx, ebp
  000f9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c2 08 00	 ret	 8
$LN21@ViewVolume:
  00104	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00107	b8 02 00 00 00	 mov	 eax, 2
  0010c	33 cd		 xor	 ecx, ebp
  0010e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c2 08 00	 ret	 8
?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ENDP ; Frustum::ViewVolumeTest
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
;	COMDAT ?BuildViewFrustum2@Frustum@@QAEXAAUD3DXMATRIX@@MMMMABUD3DXVECTOR3@@1@Z
_TEXT	SEGMENT
$T2 = -12						; size = 12
tv486 = -8						; size = 8
_mat$ = 8						; size = 4
_fNear$ = 12						; size = 4
_fFar$ = 16						; size = 4
tv402 = 20						; size = 4
_fH$ = 20						; size = 4
_fFov$ = 20						; size = 4
_fAspect$ = 24						; size = 4
_vCamera$ = 28						; size = 4
_vLook$ = 32						; size = 4
?BuildViewFrustum2@Frustum@@QAEXAAUD3DXMATRIX@@MMMMABUD3DXVECTOR3@@1@Z PROC ; Frustum::BuildViewFrustum2, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 89   : 	float fViewLen = fFar - fNear;

  00006	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fFar$[ebp]
  0000b	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _fNear$[ebp]
  00010	56		 push	 esi

; 90   : 	float fH = fViewLen * tan(fFov * 0.5f);

  00011	83 ec 08	 sub	 esp, 8
  00014	8b f1		 mov	 esi, ecx
  00016	f3 0f 11 45 10	 movss	 DWORD PTR _fFar$[ebp], xmm0
  0001b	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fFov$[ebp]
  00020	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00028	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00030	e8 00 00 00 00	 call	 _tan
  00035	f3 0f 10 6d 10	 movss	 xmm5, DWORD PTR _fFar$[ebp]
  0003a	0f 57 db	 xorps	 xmm3, xmm3
  0003d	0f 5a c5	 cvtps2pd xmm0, xmm5

; 92   : 	D3DXVECTOR3 P(0.0f, 0.0f, fNear + fViewLen * 0.5f);

  00040	0f 28 e5	 movaps	 xmm4, xmm5
  00043	0f 57 d2	 xorps	 xmm2, xmm2
  00046	f3 0f 59 25 00
	00 00 00	 mulss	 xmm4, DWORD PTR __real@3f000000
  0004e	f2 0f 11 45 f8	 movsd	 QWORD PTR tv486[ebp], xmm0
  00053	dc 4d f8	 fmul	 QWORD PTR tv486[ebp]
  00056	f3 0f 58 65 0c	 addss	 xmm4, DWORD PTR _fNear$[ebp]
  0005b	d9 5d 14	 fstp	 DWORD PTR _fH$[ebp]
  0005e	f3 0f 10 4d 14	 movss	 xmm1, DWORD PTR _fH$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00063	f3 0f 5c e5	 subss	 xmm4, xmm5
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 91   : 	float fW = fH * fAspect;

  00067	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0006a	f3 0f 5c d1	 subss	 xmm2, xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 91   : 	float fW = fH * fAspect;

  0006e	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _fAspect$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1859 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  00073	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00077	f3 0f 5c d8	 subss	 xmm3, xmm0

; 1859 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  0007b	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0007f	f3 0f 59 db	 mulss	 xmm3, xmm3
  00083	f3 0f 58 da	 addss	 xmm3, xmm2
  00087	f3 0f 58 dc	 addss	 xmm3, xmm4
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  0008b	0f 5a c3	 cvtps2pd xmm0, xmm3
  0008e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00093	e8 00 00 00 00	 call	 _sqrt
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 96   : 	m_v3Center = vCamera + vLook * (fNear + fViewLen * 0.5f);

  00098	f3 0f 10 55 10	 movss	 xmm2, DWORD PTR _fFar$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  0009d	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 96   : 	m_v3Center = vCamera + vLook * (fNear + fViewLen * 0.5f);

  000a0	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@3f000000

; 97   : 	BuildViewFrustum(mat);

  000a8	8b ce		 mov	 ecx, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  000aa	8b 45 20	 mov	 eax, DWORD PTR _vLook$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  000ad	d9 5d 14	 fstp	 DWORD PTR tv402[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 95   : 	m_fRadius = D3DXVec3Length(&PQ);

  000b0	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR tv402[ebp]

; 96   : 	m_v3Center = vCamera + vLook * (fNear + fViewLen * 0.5f);

  000b5	f3 0f 58 55 0c	 addss	 xmm2, DWORD PTR _fNear$[ebp]

; 97   : 	BuildViewFrustum(mat);

  000ba	ff 75 08	 push	 DWORD PTR _mat$[ebp]
  000bd	f3 0f 11 46 10	 movss	 DWORD PTR [esi+16], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  000c2	0f 28 ca	 movaps	 xmm1, xmm2
  000c5	0f 28 c2	 movaps	 xmm0, xmm2
  000c8	f3 0f 59 08	 mulss	 xmm1, DWORD PTR [eax]
  000cc	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  000d1	f3 0f 59 50 08	 mulss	 xmm2, DWORD PTR [eax+8]

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000d6	8b 45 1c	 mov	 eax, DWORD PTR _vCamera$[ebp]
  000d9	f3 0f 58 08	 addss	 xmm1, DWORD PTR [eax]
  000dd	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  000e2	f3 0f 58 50 08	 addss	 xmm2, DWORD PTR [eax+8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 96   : 	m_v3Center = vCamera + vLook * (fNear + fViewLen * 0.5f);

  000e7	0f 14 c8	 unpcklps xmm1, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 306  :     z = fz;

  000ea	f3 0f 11 55 fc	 movss	 DWORD PTR $T2[ebp+8], xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 96   : 	m_v3Center = vCamera + vLook * (fNear + fViewLen * 0.5f);

  000ef	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp+8]
  000f2	66 0f d6 4e 04	 movq	 QWORD PTR [esi+4], xmm1
  000f7	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 97   : 	BuildViewFrustum(mat);

  000fa	e8 00 00 00 00	 call	 ?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z ; Frustum::BuildViewFrustum

; 98   : 	m_bUsingSphere = true;

  000ff	c6 06 01	 mov	 BYTE PTR [esi], 1
  00102	5e		 pop	 esi

; 99   : }

  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 1c 00	 ret	 28			; 0000001cH
?BuildViewFrustum2@Frustum@@QAEXAAUD3DXMATRIX@@MMMMABUD3DXVECTOR3@@1@Z ENDP ; Frustum::BuildViewFrustum2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp
;	COMDAT ?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
$T5 = -16						; size = 16
$T6 = -16						; size = 16
_mat$ = 8						; size = 4
?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z PROC	; Frustum::BuildViewFrustum, COMDAT
; _this$ = ecx

; 71   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 73   : 	m_plane[0] = D3DXPLANE(          mat._13,           mat._23,           mat._33,           mat._43);

  00006	8b 45 08	 mov	 eax, DWORD PTR _mat$[ebp]
  00009	c6 01 00	 mov	 BYTE PTR [ecx], 0
  0000c	56		 push	 esi
  0000d	8d 71 14	 lea	 esi, DWORD PTR [ecx+20]
  00010	f3 0f 10 58 08	 movss	 xmm3, DWORD PTR [eax+8]
  00015	f3 0f 10 50 18	 movss	 xmm2, DWORD PTR [eax+24]
  0001a	f3 0f 10 48 28	 movss	 xmm1, DWORD PTR [eax+40]
  0001f	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1254 :     a = fa;

  00024	f3 0f 11 5d f0	 movss	 DWORD PTR $T6[ebp], xmm3

; 1255 :     b = fb;

  00029	f3 0f 11 55 f4	 movss	 DWORD PTR $T6[ebp+4], xmm2

; 1256 :     c = fc;

  0002e	f3 0f 11 4d f8	 movss	 DWORD PTR $T6[ebp+8], xmm1

; 1257 :     d = fd;

  00033	f3 0f 11 45 fc	 movss	 DWORD PTR $T6[ebp+12], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 73   : 	m_plane[0] = D3DXPLANE(          mat._13,           mat._23,           mat._33,           mat._43);

  00038	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T6[ebp]
  0003c	57		 push	 edi
  0003d	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0

; 74   : 	m_plane[1] = D3DXPLANE(mat._14 - mat._13, mat._24 - mat._23, mat._34 - mat._33, mat._44 - mat._43);

  00040	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  00045	f3 0f 5c 58 08	 subss	 xmm3, DWORD PTR [eax+8]
  0004a	f3 0f 10 50 1c	 movss	 xmm2, DWORD PTR [eax+28]
  0004f	f3 0f 5c 50 18	 subss	 xmm2, DWORD PTR [eax+24]
  00054	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00059	f3 0f 5c 48 28	 subss	 xmm1, DWORD PTR [eax+40]
  0005e	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  00063	f3 0f 5c 40 38	 subss	 xmm0, DWORD PTR [eax+56]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1254 :     a = fa;

  00068	f3 0f 11 5d f0	 movss	 DWORD PTR $T5[ebp], xmm3

; 1255 :     b = fb;

  0006d	f3 0f 11 55 f4	 movss	 DWORD PTR $T5[ebp+4], xmm2

; 1256 :     c = fc;

  00072	f3 0f 11 4d f8	 movss	 DWORD PTR $T5[ebp+8], xmm1

; 1257 :     d = fd;

  00077	f3 0f 11 45 fc	 movss	 DWORD PTR $T5[ebp+12], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 74   : 	m_plane[1] = D3DXPLANE(mat._14 - mat._13, mat._24 - mat._23, mat._34 - mat._33, mat._44 - mat._43);

  0007c	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T5[ebp]
  00080	0f 11 41 24	 movups	 XMMWORD PTR [ecx+36], xmm0

; 76   : 	m_plane[2] = D3DXPLANE(mat._14 + mat._11, mat._24 + mat._21, mat._34 + mat._31, mat._44 + mat._41);

  00084	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  00089	f3 0f 58 18	 addss	 xmm3, DWORD PTR [eax]
  0008d	f3 0f 10 50 10	 movss	 xmm2, DWORD PTR [eax+16]
  00092	f3 0f 58 50 1c	 addss	 xmm2, DWORD PTR [eax+28]
  00097	f3 0f 10 48 20	 movss	 xmm1, DWORD PTR [eax+32]
  0009c	f3 0f 58 48 2c	 addss	 xmm1, DWORD PTR [eax+44]
  000a1	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  000a6	f3 0f 58 40 30	 addss	 xmm0, DWORD PTR [eax+48]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1254 :     a = fa;

  000ab	f3 0f 11 5d f0	 movss	 DWORD PTR $T4[ebp], xmm3

; 1255 :     b = fb;

  000b0	f3 0f 11 55 f4	 movss	 DWORD PTR $T4[ebp+4], xmm2

; 1256 :     c = fc;

  000b5	f3 0f 11 4d f8	 movss	 DWORD PTR $T4[ebp+8], xmm1

; 1257 :     d = fd;

  000ba	f3 0f 11 45 fc	 movss	 DWORD PTR $T4[ebp+12], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 76   : 	m_plane[2] = D3DXPLANE(mat._14 + mat._11, mat._24 + mat._21, mat._34 + mat._31, mat._44 + mat._41);

  000bf	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T4[ebp]
  000c3	0f 11 41 34	 movups	 XMMWORD PTR [ecx+52], xmm0

; 77   : 	m_plane[3] = D3DXPLANE(mat._14 - mat._11, mat._24 - mat._21, mat._34 - mat._31, mat._44 - mat._41);

  000c7	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  000cc	f3 0f 5c 18	 subss	 xmm3, DWORD PTR [eax]
  000d0	f3 0f 10 50 1c	 movss	 xmm2, DWORD PTR [eax+28]
  000d5	f3 0f 5c 50 10	 subss	 xmm2, DWORD PTR [eax+16]
  000da	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  000df	f3 0f 5c 48 20	 subss	 xmm1, DWORD PTR [eax+32]
  000e4	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  000e9	f3 0f 5c 40 30	 subss	 xmm0, DWORD PTR [eax+48]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1254 :     a = fa;

  000ee	f3 0f 11 5d f0	 movss	 DWORD PTR $T3[ebp], xmm3

; 1255 :     b = fb;

  000f3	f3 0f 11 55 f4	 movss	 DWORD PTR $T3[ebp+4], xmm2

; 1256 :     c = fc;

  000f8	f3 0f 11 4d f8	 movss	 DWORD PTR $T3[ebp+8], xmm1

; 1257 :     d = fd;

  000fd	f3 0f 11 45 fc	 movss	 DWORD PTR $T3[ebp+12], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 77   : 	m_plane[3] = D3DXPLANE(mat._14 - mat._11, mat._24 - mat._21, mat._34 - mat._31, mat._44 - mat._41);

  00102	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T3[ebp]
  00106	0f 11 41 44	 movups	 XMMWORD PTR [ecx+68], xmm0

; 78   : 	m_plane[4] = D3DXPLANE(mat._14 + mat._12, mat._24 + mat._22, mat._34 + mat._32, mat._44 + mat._42);

  0010a	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  0010f	f3 0f 10 50 1c	 movss	 xmm2, DWORD PTR [eax+28]
  00114	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00119	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  0011e	f3 0f 58 40 34	 addss	 xmm0, DWORD PTR [eax+52]
  00123	f3 0f 58 58 04	 addss	 xmm3, DWORD PTR [eax+4]
  00128	f3 0f 58 50 14	 addss	 xmm2, DWORD PTR [eax+20]
  0012d	f3 0f 58 48 24	 addss	 xmm1, DWORD PTR [eax+36]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1257 :     d = fd;

  00132	f3 0f 11 45 fc	 movss	 DWORD PTR $T2[ebp+12], xmm0
  00137	f3 0f 11 5d f0	 movss	 DWORD PTR $T2[ebp], xmm3
  0013c	f3 0f 11 55 f4	 movss	 DWORD PTR $T2[ebp+4], xmm2
  00141	f3 0f 11 4d f8	 movss	 DWORD PTR $T2[ebp+8], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 78   : 	m_plane[4] = D3DXPLANE(mat._14 + mat._12, mat._24 + mat._22, mat._34 + mat._32, mat._44 + mat._42);

  00146	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T2[ebp]
  0014a	0f 11 41 54	 movups	 XMMWORD PTR [ecx+84], xmm0

; 79   : 	m_plane[5] = D3DXPLANE(mat._14 - mat._12, mat._24 - mat._22, mat._34 - mat._32, mat._44 - mat._42);

  0014e	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  00153	f3 0f 10 50 1c	 movss	 xmm2, DWORD PTR [eax+28]
  00158	f3 0f 5c 58 04	 subss	 xmm3, DWORD PTR [eax+4]
  0015d	f3 0f 5c 50 14	 subss	 xmm2, DWORD PTR [eax+20]
  00162	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00167	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  0016c	f3 0f 5c 48 24	 subss	 xmm1, DWORD PTR [eax+36]
  00171	f3 0f 5c 40 34	 subss	 xmm0, DWORD PTR [eax+52]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1254 :     a = fa;

  00176	f3 0f 11 5d f0	 movss	 DWORD PTR $T1[ebp], xmm3

; 1255 :     b = fb;

  0017b	f3 0f 11 55 f4	 movss	 DWORD PTR $T1[ebp+4], xmm2

; 1256 :     c = fc;

  00180	f3 0f 11 4d f8	 movss	 DWORD PTR $T1[ebp+8], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 73   : 	m_plane[0] = D3DXPLANE(          mat._13,           mat._23,           mat._33,           mat._43);

  00185	bf 06 00 00 00	 mov	 edi, 6
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1257 :     d = fd;

  0018a	f3 0f 11 45 fc	 movss	 DWORD PTR $T1[ebp+12], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\SphereLib\frustum.cpp

; 79   : 	m_plane[5] = D3DXPLANE(mat._14 - mat._12, mat._24 - mat._22, mat._34 - mat._32, mat._44 - mat._42);

  0018f	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T1[ebp]
  00193	0f 11 41 64	 movups	 XMMWORD PTR [ecx+100], xmm0
$LL4@BuildViewF:

; 80   : 
; 81   : 	for (int i = 0; i < 6; i++)
; 82   : 	{
; 83   : 		D3DXPlaneNormalize(&m_plane[i], &m_plane[i]);

  00197	56		 push	 esi
  00198	56		 push	 esi
  00199	e8 00 00 00 00	 call	 _D3DXPlaneNormalize@8
  0019e	83 c6 10	 add	 esi, 16			; 00000010H
  001a1	83 ef 01	 sub	 edi, 1
  001a4	75 f1		 jne	 SHORT $LL4@BuildViewF

; 84   : 	}
; 85   : }

  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 04 00	 ret	 4
?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z ENDP	; Frustum::BuildViewFrustum
_TEXT	ENDS
END
