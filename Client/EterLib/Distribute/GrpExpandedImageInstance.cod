; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Distribute\GrpExpandedImageInstance.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_Fake_alloc@std@@3U_Fake_allocator@1@B		; std::_Fake_alloc
PUBLIC	??_7?$CDynamicPool@VCGraphicExpandedImageInstance@@@@6B@ ; CDynamicPool<CGraphicExpandedImageInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAEPAXI@Z ; CDynamicPool<CGraphicExpandedImageInstance>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCGraphicExpandedImageInstance@@@@6B@ ; CDynamicPool<CGraphicExpandedImageInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCGraphicExpandedImageInstance@@@@@8 ; CDynamicPool<CGraphicExpandedImageInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8 ; CDynamicPool<CGraphicExpandedImageInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8 ; CDynamicPool<CGraphicExpandedImageInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8 ; CDynamicPool<CGraphicExpandedImageInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_E?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAEPAXI@Z:PROC ; CDynamicPool<CGraphicExpandedImageInstance>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCGraphicExpandedImageInstance@@@@@8 ; CDynamicPool<CGraphicExpandedImageInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8 ; CDynamicPool<CGraphicExpandedImageInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8 DD 00H ; CDynamicPool<CGraphicExpandedImageInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCGraphicExpandedImageInstance@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@VCGraphicExpandedImageInstance@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CGraphicExpandedImageInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCGraphicExpandedImageInstance@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCGraphicExpandedImageInstance@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCGraphicExpandedImageInstance@@@@6B@ DD 00H ; CDynamicPool<CGraphicExpandedImageInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCGraphicExpandedImageInstance@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCGraphicExpandedImageInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@VCGraphicExpandedImageInstance@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCGraphicExpandedImageInstance@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCGraphicExpandedImageInstance@@@@6B@ ; CDynamicPool<CGraphicExpandedImageInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?_Fake_alloc@std@@3U_Fake_allocator@1@B
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0SPDTVertex@@QAE@XZ				; SPDTVertex::SPDTVertex
PUBLIC	?Type@CGraphicExpandedImageInstance@@SAKXZ	; CGraphicExpandedImageInstance::Type
PUBLIC	??0CGraphicExpandedImageInstance@@QAE@XZ	; CGraphicExpandedImageInstance::CGraphicExpandedImageInstance
PUBLIC	??1CGraphicExpandedImageInstance@@UAE@XZ	; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
PUBLIC	?Destroy@CGraphicExpandedImageInstance@@QAEXXZ	; CGraphicExpandedImageInstance::Destroy
PUBLIC	?SetDepth@CGraphicExpandedImageInstance@@QAEXM@Z ; CGraphicExpandedImageInstance::SetDepth
PUBLIC	?SetOrigin@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::SetOrigin
PUBLIC	?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetOrigin
PUBLIC	?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z ; CGraphicExpandedImageInstance::SetRotation
PUBLIC	?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetScale
PUBLIC	?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
PUBLIC	?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ; CGraphicExpandedImageInstance::SetRenderingMode
PUBLIC	?SetRenderBox@CGraphicExpandedImageInstance@@QAEXAAUtagRECT@@@Z ; CGraphicExpandedImageInstance::SetRenderBox
PUBLIC	?GetPixelColor@CGraphicExpandedImageInstance@@QAEKKK@Z ; CGraphicExpandedImageInstance::GetPixelColor
PUBLIC	?GetRenderWidth@CGraphicExpandedImageInstance@@QAEHXZ ; CGraphicExpandedImageInstance::GetRenderWidth
PUBLIC	?GetRenderHeight@CGraphicExpandedImageInstance@@QAEHXZ ; CGraphicExpandedImageInstance::GetRenderHeight
PUBLIC	?SetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMMMMMM@Z ; CGraphicExpandedImageInstance::SetExpandedRenderingRect
PUBLIC	?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z ; CGraphicExpandedImageInstance::iSetRenderingRect
PUBLIC	?iSetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHHHHHH@Z ; CGraphicExpandedImageInstance::iSetExpandedRenderingRect
PUBLIC	?SetTextureRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetTextureRenderingRect
PUBLIC	?Initialize@CGraphicExpandedImageInstance@@IAEXXZ ; CGraphicExpandedImageInstance::Initialize
PUBLIC	?OnRender@CGraphicExpandedImageInstance@@MAEXXZ	; CGraphicExpandedImageInstance::OnRender
PUBLIC	?OnSetImagePointer@CGraphicExpandedImageInstance@@MAEXXZ ; CGraphicExpandedImageInstance::OnSetImagePointer
PUBLIC	?OnIsType@CGraphicExpandedImageInstance@@MAEHK@Z ; CGraphicExpandedImageInstance::OnIsType
PUBLIC	?SaveColorMap@CGraphicExpandedImageInstance@@AAEXXZ ; CGraphicExpandedImageInstance::SaveColorMap
PUBLIC	?CreateSystem@CGraphicExpandedImageInstance@@SAXI@Z ; CGraphicExpandedImageInstance::CreateSystem
PUBLIC	?DestroySystem@CGraphicExpandedImageInstance@@SAXXZ ; CGraphicExpandedImageInstance::DestroySystem
PUBLIC	?New@CGraphicExpandedImageInstance@@SAPAV1@XZ	; CGraphicExpandedImageInstance::New
PUBLIC	?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
PUBLIC	??_GCGraphicExpandedImageInstance@@UAEPAXI@Z	; CGraphicExpandedImageInstance::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAE@XZ ; CDynamicPool<CGraphicExpandedImageInstance>::~CDynamicPool<CGraphicExpandedImageInstance>
PUBLIC	?Delete@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@KAXPAVCGraphicExpandedImageInstance@@@Z ; CDynamicPool<CGraphicExpandedImageInstance>::Delete
PUBLIC	?_Reallocate_exactly@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Reallocate_exactly
PUBLIC	?_Change_array@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXQAPAVCGraphicExpandedImageInstance@@II@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A ; CGraphicExpandedImageInstance::ms_kPool
PUBLIC	??_7CGraphicExpandedImageInstance@@6B@		; CGraphicExpandedImageInstance::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_C@_0CF@LODADJBM@Could?5not?5save?5color?5map?5?$CIresul@ ; `string'
PUBLIC	??_C@_0BO@COPDODEE@CGraphicExpandedImageInstance@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CGraphicExpandedImageInstance@@6B@		; CGraphicExpandedImageInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicExpandedImageInstance@@@8	; CGraphicExpandedImageInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicExpandedImageInstance@@8		; CGraphicExpandedImageInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicExpandedImageInstance@@8		; CGraphicExpandedImageInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicExpandedImageInstance@@8	; CGraphicExpandedImageInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicImageInstance@@8		; CGraphicImageInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicImageInstance@@@8		; CGraphicImageInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicImageInstance@@8			; CGraphicImageInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicImageInstance@@8			; CGraphicImageInstance::`RTTI Base Class Array'
PUBLIC	__real@3c8efa35
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@437f0000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z:PROC ; CGraphicBase::SetDefaultIndexBuffer
EXTRN	?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z:PROC ; CGraphicBase::SetPDTStream
EXTRN	?GetWidth@CGraphicTexture@@QBEHXZ:PROC		; CGraphicTexture::GetWidth
EXTRN	?GetHeight@CGraphicTexture@@QBEHXZ:PROC		; CGraphicTexture::GetHeight
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture9@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	?GetWidth@CGraphicImage@@QBEHXZ:PROC		; CGraphicImage::GetWidth
EXTRN	?GetHeight@CGraphicImage@@QBEHXZ:PROC		; CGraphicImage::GetHeight
EXTRN	?GetRectReference@CGraphicImage@@QBEABUtagRECT@@XZ:PROC ; CGraphicImage::GetRectReference
EXTRN	?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImage::GetTexturePointer
EXTRN	?IsType@CGraphicImageInstance@@QAEHK@Z:PROC	; CGraphicImageInstance::IsType
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	??1CGraphicImageInstance@@UAE@XZ:PROC		; CGraphicImageInstance::~CGraphicImageInstance
EXTRN	?Destroy@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Destroy
EXTRN	?IsEmpty@CGraphicImageInstance@@QBE_NXZ:PROC	; CGraphicImageInstance::IsEmpty
EXTRN	?GetWidth@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetWidth
EXTRN	?GetHeight@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetHeight
EXTRN	??_ECGraphicExpandedImageInstance@@UAEPAXI@Z:PROC ; CGraphicExpandedImageInstance::`vector deleting destructor'
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture9@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetFVF@CStateManager@@QAEXK@Z:PROC		; CStateManager::SetFVF
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIIH@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol3:PROC
EXTRN	__libm_sse2_cos_precise:PROC
EXTRN	__libm_sse2_sin_precise:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4KA DD 01H DUP (?) ; `CGraphicExpandedImageInstance::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4HA DD 01H DUP (?) ; `CGraphicExpandedImageInstance::Type'::`2'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CGraphicExpandedImageInstance@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CGraphicExpandedImageInstance@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT ??_R2CGraphicImageInstance@@8
rdata$r	SEGMENT
??_R2CGraphicImageInstance@@8 DD FLAT:??_R1A@?0A@EA@CGraphicImageInstance@@8 ; CGraphicImageInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicImageInstance@@8
rdata$r	SEGMENT
??_R3CGraphicImageInstance@@8 DD 00H			; CGraphicImageInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicImageInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicImageInstance@@@8
data$rs	SEGMENT
??_R0?AVCGraphicImageInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicImageInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicImageInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicImageInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicImageInstance@@8 DD FLAT:??_R0?AVCGraphicImageInstance@@@8 ; CGraphicImageInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicImageInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicExpandedImageInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicExpandedImageInstance@@8 DD FLAT:??_R0?AVCGraphicExpandedImageInstance@@@8 ; CGraphicExpandedImageInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicExpandedImageInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicExpandedImageInstance@@8
rdata$r	SEGMENT
??_R2CGraphicExpandedImageInstance@@8 DD FLAT:??_R1A@?0A@EA@CGraphicExpandedImageInstance@@8 ; CGraphicExpandedImageInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicImageInstance@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicExpandedImageInstance@@8
rdata$r	SEGMENT
??_R3CGraphicExpandedImageInstance@@8 DD 00H		; CGraphicExpandedImageInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicExpandedImageInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicExpandedImageInstance@@@8
data$rs	SEGMENT
??_R0?AVCGraphicExpandedImageInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicExpandedImageInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicExpandedImageInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGraphicExpandedImageInstance@@6B@
rdata$r	SEGMENT
??_R4CGraphicExpandedImageInstance@@6B@ DD 00H		; CGraphicExpandedImageInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicExpandedImageInstance@@@8
	DD	FLAT:??_R3CGraphicExpandedImageInstance@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@COPDODEE@CGraphicExpandedImageInstance@
CONST	SEGMENT
??_C@_0BO@COPDODEE@CGraphicExpandedImageInstance@ DB 'CGraphicExpandedIma'
	DB	'geInstance', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LODADJBM@Could?5not?5save?5color?5map?5?$CIresul@
CONST	SEGMENT
??_C@_0CF@LODADJBM@Could?5not?5save?5color?5map?5?$CIresul@ DB 'Could not'
	DB	' save color map (result %u)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicExpandedImageInstance@@6B@
CONST	SEGMENT
??_7CGraphicExpandedImageInstance@@6B@ DD FLAT:??_R4CGraphicExpandedImageInstance@@6B@ ; CGraphicExpandedImageInstance::`vftable'
	DD	FLAT:??_ECGraphicExpandedImageInstance@@UAEPAXI@Z
	DD	FLAT:?OnRender@CGraphicExpandedImageInstance@@MAEXXZ
	DD	FLAT:?OnSetImagePointer@CGraphicExpandedImageInstance@@MAEXXZ
	DD	FLAT:?OnIsType@CGraphicExpandedImageInstance@@MAEHK@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A DD FLAT:??_7?$CDynamicPool@VCGraphicExpandedImageInstance@@@@6B@ ; CGraphicExpandedImageInstance::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@QAEPAVCGraphicExpandedImageInstance@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@QAEPAVCGraphicExpandedImageInstance@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@QAEPAVCGraphicExpandedImageInstance@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@QAEPAVCGraphicExpandedImageInstance@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CGraphicExpandedImageInstance@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CGraphicExpandedImageInstance@@SAPAV1@XZ$0
__ehfuncinfo$?New@CGraphicExpandedImageInstance@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CGraphicExpandedImageInstance@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGraphicExpandedImageInstance@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CGraphicExpandedImageInstance@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CGraphicExpandedImageInstance@@SAKXZ$0
__ehfuncinfo$?Type@CGraphicExpandedImageInstance@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CGraphicExpandedImageInstance@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv495 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	2b c2		 sub	 eax, edx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	2b c2		 sub	 eax, edx
  0001d	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 d2 00 00
	00		 je	 $LN66@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b ca		 sub	 ecx, edx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 f9 02	 sar	 ecx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b d1		 mov	 edx, ecx
  00040	d1 ea		 shr	 edx, 1
  00042	2b c2		 sub	 eax, edx
  00044	3b c8		 cmp	 ecx, eax
  00046	76 17		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00048	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  0004d	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00058	83 c4 04	 add	 esp, 4
  0005b	8b f8		 mov	 edi, eax
  0005d	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00062	8b f7		 mov	 esi, edi
  00064	3b c7		 cmp	 eax, edi
  00066	0f 43 f0	 cmovae	 esi, eax
  00069	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0006f	0f 87 8d 00 00
	00		 ja	 $LN67@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00075	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b f8		 mov	 edi, eax
  0008e	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  00090	85 c0		 test	 eax, eax
  00092	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009a	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009d	8b f8		 mov	 edi, eax
  0009f	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000a1	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000a6	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000ac	89 4d fc	 mov	 DWORD PTR tv495[ebp], ecx
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	89 01		 mov	 DWORD PTR [ecx], eax

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b6	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000bb	3b c1		 cmp	 eax, ecx
  000bd	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bf	8b c7		 mov	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000c1	eb 17		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c3	57		 push	 edi
  000c4	50		 push	 eax
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	83 c0 04	 add	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d7	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000e5	8b cb		 mov	 ecx, ebx
  000e7	56		 push	 esi
  000e8	ff 75 f8	 push	 DWORD PTR __Newsize$1$[ebp]
  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXQAPAVCGraphicExpandedImageInstance@@II@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Change_array

; 920  :         return _Newvec + _Whereoff;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx

; 921  :     }

  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
$LN66@Emplace_re:

; 888  :             _Xlength();

  000fd	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
$LN67@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00102	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN64@Emplace_re:
  00107	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CGraphicExpandedImageInstance::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A ; CGraphicExpandedImageInstance::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAE@XZ ; CDynamicPool<CGraphicExpandedImageInstance>::~CDynamicPool<CGraphicExpandedImageInstance>
??__F?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CGraphicExpandedImageInstance::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ??__E?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CGraphicExpandedImageInstance::ms_kPool'', COMDAT

; 6    : CDynamicPool<CGraphicExpandedImageInstance>		CGraphicExpandedImageInstance::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CGraphicExpandedImageInstance::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CGraphicExpandedImageInstance::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAEPAXI@Z PROC ; CDynamicPool<CGraphicExpandedImageInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAE@XZ ; CDynamicPool<CGraphicExpandedImageInstance>::~CDynamicPool<CGraphicExpandedImageInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAEPAXI@Z ENDP ; CDynamicPool<CGraphicExpandedImageInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXQAPAVCGraphicExpandedImageInstance@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXQAPAVCGraphicExpandedImageInstance@@II@Z PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Change_array, COMDAT
; _this$ = ecx

; 2076 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2077 :         // orphan all iterators, discard old array, acquire new array
; 2078 :         auto& _Al         = _Getal();
; 2079 :         auto& _My_data    = _Mypair._Myval2;
; 2080 :         pointer& _Myfirst = _My_data._Myfirst;
; 2081 :         pointer& _Mylast  = _My_data._Mylast;
; 2082 :         pointer& _Myend   = _My_data._Myend;
; 2083 : 
; 2084 :         _My_data._Orphan_all();
; 2085 : 
; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN8@Change_arr

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN18@Change_arr

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN15@Change_arr

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN18@Change_arr:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2092 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 2096 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXQAPAVCGraphicExpandedImageInstance@@II@Z ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Size$1$ = -4						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 1665 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1666 :         auto& _Al         = _Getal();
; 1667 :         auto& _My_data    = _Mypair._Myval2;
; 1668 :         pointer& _Myfirst = _My_data._Myfirst;
; 1669 :         pointer& _Mylast  = _My_data._Mylast;
; 1670 : 
; 1671 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000f	2b 06		 sub	 eax, DWORD PTR [esi]
  00011	c1 f8 02	 sar	 eax, 2
  00014	89 45 fc	 mov	 DWORD PTR __Size$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00017	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0001d	0f 87 8a 00 00
	00		 ja	 $LN55@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00023	c1 e3 02	 shl	 ebx, 2

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  0002c	72 0d		 jb	 SHORT $LN15@Reallocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00034	83 c4 04	 add	 esp, 4
  00037	8b f8		 mov	 edi, eax
  00039	eb 13		 jmp	 SHORT $LN14@Reallocate
$LN15@Reallocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0003b	85 db		 test	 ebx, ebx
  0003d	74 0d		 je	 SHORT $LN16@Reallocate

; 77   :         return ::operator new(_Bytes);

  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00045	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00048	8b f8		 mov	 edi, eax
  0004a	eb 02		 jmp	 SHORT $LN14@Reallocate
$LN16@Reallocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0004c	33 ff		 xor	 edi, edi
$LN14@Reallocate:

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004e	57		 push	 edi
  0004f	ff 76 04	 push	 DWORD PTR [esi+4]
  00052	ff 36		 push	 DWORD PTR [esi]
  00054	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00059	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 2c		 je	 SHORT $LN39@Reallocate

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN49@Reallocate

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 26		 ja	 SHORT $LN46@Reallocate

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN49@Reallocate:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008b	83 c4 08	 add	 esp, 8
$LN39@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR __Size$1$[ebp]
  00091	89 3e		 mov	 DWORD PTR [esi], edi
  00093	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00099	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  0009c	5f		 pop	 edi
  0009d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 1687 :     }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
$LN46@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN55@Reallocate:

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000ad	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN53@Reallocate:
  000b2	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@KAXPAVCGraphicExpandedImageInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@KAXPAVCGraphicExpandedImageInstance@@@Z PROC ; CDynamicPool<CGraphicExpandedImageInstance>::Delete, COMDAT

; 113  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  : 		delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 115  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCGraphicExpandedImageInstance@@@@KAXPAVCGraphicExpandedImageInstance@@@Z ENDP ; CDynamicPool<CGraphicExpandedImageInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAE@XZ PROC ; CDynamicPool<CGraphicExpandedImageInstance>::~CDynamicPool<CGraphicExpandedImageInstance>, COMDAT
; _this$ = ecx

; 18   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCGraphicExpandedImageInstance@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 2114 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 2114 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 26   : 	}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@VCGraphicExpandedImageInstance@@@@UAE@XZ ENDP ; CDynamicPool<CGraphicExpandedImageInstance>::~CDynamicPool<CGraphicExpandedImageInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicExpandedImageInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicExpandedImageInstance@@UAEPAXI@Z PROC	; CGraphicExpandedImageInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicExpandedImageInstance@@UAE@XZ ; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 88 00 00 00	 push	 136			; 00000088H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCGraphicExpandedImageInstance@@UAEPAXI@Z ENDP	; CGraphicExpandedImageInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkImgInst$ = 8						; size = 4
?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z PROC	; CGraphicExpandedImageInstance::Delete, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 25   : 	pkImgInst->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkImgInst$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 26   : 	ms_kPool.Free(pkImgInst);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 27   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
  00039	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 27   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ENDP	; CGraphicExpandedImageInstance::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CGraphicExpandedImageInstance@@SAPAV1@XZ PROC	; CGraphicExpandedImageInstance::New, COMDAT

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CGraphicExpandedImageInstance@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00023	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 63   : 		if (m_kVct_pkFree.empty())

  00029	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16, ecx
  0002f	0f 85 83 00 00
	00		 jne	 $LN4@New

; 65   : 			T* pkNewData = new T;

  00035	68 88 00 00 00	 push	 136			; 00000088H
  0003a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003f	83 c4 04	 add	 esp, 4
  00042	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	85 c0		 test	 eax, eax
  0004e	74 09		 je	 SHORT $LN6@New
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ??0CGraphicExpandedImageInstance@@QAE@XZ ; CGraphicExpandedImageInstance::CGraphicExpandedImageInstance
  00057	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00059	33 c0		 xor	 eax, eax
$LN7@New:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0005b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 65   : 			T* pkNewData = new T;

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	89 45 f0	 mov	 DWORD PTR _pkNewData$3[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0006b	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+12
  00071	74 1e		 je	 SHORT $LN14@New

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00073	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00075	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 67   : 			++m_uUsedCapacity;

  0007c	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+32
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 21   : }

  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
$LN14@New:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00091	8d 45 f0	 lea	 eax, DWORD PTR _pkNewData$3[ebp]
  00094	50		 push	 eax
  00095	51		 push	 ecx
  00096	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+4
  0009b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
  000a0	8b 45 f0	 mov	 eax, DWORD PTR _pkNewData$3[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 67   : 			++m_uUsedCapacity;

  000a3	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+32
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 21   : }

  000a9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b3	59		 pop	 ecx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
$LN4@New:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 71   : 		T* pkFreeData = m_kVct_pkFree.back();

  000b8	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  000bb	83 c1 fc	 add	 ecx, -4			; fffffffcH
  000be	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 21   : }

  000c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ce	59		 pop	 ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CGraphicExpandedImageInstance@@SAPAV1@XZ$0:
  00000	68 88 00 00 00	 push	 136			; 00000088H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?New@CGraphicExpandedImageInstance@@SAPAV1@XZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CGraphicExpandedImageInstance@@SAPAV1@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ENDP	; CGraphicExpandedImageInstance::New
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?DestroySystem@CGraphicExpandedImageInstance@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CGraphicExpandedImageInstance@@SAXXZ PROC ; CGraphicExpandedImageInstance::DestroySystem, COMDAT

; 14   : {

  00000	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 14   : {

  00007	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 21		 je	 SHORT $LN38@DestroySys
$LL20@DestroySys:

; 266  :         _Func(*_UFirst);

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 114  : 		delete pkData;

  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN26@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN26@DestroySys:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
  00025	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+8
  0002b	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	3b f7		 cmp	 esi, edi
$LN38@DestroySys:
  00033	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
  00039	0f 45 fe	 cmovne	 edi, esi
  0003c	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16, ecx
  00042	89 3d 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+8, edi
  00048	0f 45 0d 10 00
	00 00		 cmovne	 ecx, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  0004f	5f		 pop	 edi
  00050	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, ecx
  00056	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 16   : }

  00057	c3		 ret	 0
?DestroySystem@CGraphicExpandedImageInstance@@SAXXZ ENDP ; CGraphicExpandedImageInstance::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?CreateSystem@CGraphicExpandedImageInstance@@SAXI@Z
_TEXT	SEGMENT
_uCapacity$ = 8						; size = 4
?CreateSystem@CGraphicExpandedImageInstance@@SAXI@Z PROC ; CGraphicExpandedImageInstance::CreateSystem, COMDAT

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00003	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+12
  00008	2b 05 04 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 9    : {

  0000e	56		 push	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 57   : 		m_uInitCapacity = uCapacity;

  0000f	8b 75 08	 mov	 esi, DWORD PTR _uCapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00012	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 57   : 		m_uInitCapacity = uCapacity;

  00015	89 35 1c 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+28, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1743 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  0001b	3b f0		 cmp	 esi, eax
  0001d	76 13		 jbe	 SHORT $LN6@CreateSyst

; 1744 :             if (_Newcapacity > max_size()) {

  0001f	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  00025	77 33		 ja	 SHORT $LN19@CreateSyst

; 1746 :             }
; 1747 : 
; 1748 :             _Reallocate_exactly(_Newcapacity);

  00027	56		 push	 esi
  00028	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+4
  0002d	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Reallocate_exactly
$LN6@CreateSyst:

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00032	a1 18 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  00037	2b 05 10 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  0003d	c1 f8 02	 sar	 eax, 2

; 1743 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00040	3b f0		 cmp	 esi, eax
  00042	76 13		 jbe	 SHORT $LN13@CreateSyst

; 1744 :             if (_Newcapacity > max_size()) {

  00044	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0004a	77 0e		 ja	 SHORT $LN19@CreateSyst

; 1746 :             }
; 1747 : 
; 1748 :             _Reallocate_exactly(_Newcapacity);

  0004c	56		 push	 esi
  0004d	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00052	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Reallocate_exactly
$LN13@CreateSyst:
  00057	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 11   : }

  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN19@CreateSyst:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1745 :                 _Xlength();

  0005a	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
$LN21@CreateSyst:
  0005f	cc		 int	 3
?CreateSystem@CGraphicExpandedImageInstance@@SAXI@Z ENDP ; CGraphicExpandedImageInstance::CreateSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SaveColorMap@CGraphicExpandedImageInstance@@AAEXXZ
_TEXT	SEGMENT
_lockedRect$ = -20					; size = 8
_pTexture$1$ = -12					; size = 4
_this$1$ = -8						; size = 4
_y$1$ = -4						; size = 4
?SaveColorMap@CGraphicExpandedImageInstance@@AAEXXZ PROC ; CGraphicExpandedImageInstance::SaveColorMap, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
  00009	89 7d f8	 mov	 DWORD PTR _this$1$[ebp], edi

; 329  : 	if (m_pColorMap)

  0000c	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
  00012	85 c0		 test	 eax, eax
  00014	74 09		 je	 SHORT $LN8@SaveColorM

; 330  : 	{
; 331  : 		delete[] m_pColorMap;

  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0001c	83 c4 04	 add	 esp, 4
$LN8@SaveColorM:

; 332  : 	}
; 333  : 
; 334  : 	if (GetWidth() == 0 || GetHeight() == 0)

  0001f	8b cf		 mov	 ecx, edi
  00021	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00026	85 c0		 test	 eax, eax
  00028	0f 84 f8 00 00
	00		 je	 $LN10@SaveColorM
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00035	85 c0		 test	 eax, eax
  00037	0f 84 e9 00 00
	00		 je	 $LN10@SaveColorM

; 335  : 	{
; 336  : 		return;
; 337  : 	}
; 338  : 
; 339  : 	CGraphicImage* pImage = m_roImage.GetPointer();
; 340  : 	CGraphicTexture* pTexture = pImage->GetTexturePointer();

  0003d	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00040	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ ; CGraphicImage::GetTexturePointer

; 341  : 
; 342  : 	D3DLOCKED_RECT lockedRect;
; 343  : 	HRESULT hr = pTexture->GetD3DTexture()->LockRect(0, &lockedRect, NULL, 0);

  00045	8b c8		 mov	 ecx, eax
  00047	89 45 f4	 mov	 DWORD PTR _pTexture$1$[ebp], eax
  0004a	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture9@@XZ ; CGraphicTexture::GetD3DTexture
  0004f	6a 00		 push	 0
  00051	6a 00		 push	 0
  00053	8d 55 ec	 lea	 edx, DWORD PTR _lockedRect$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	52		 push	 edx
  00059	6a 00		 push	 0
  0005b	50		 push	 eax
  0005c	ff 51 4c	 call	 DWORD PTR [ecx+76]

; 344  : 	if (hr != D3D_OK)

  0005f	85 c0		 test	 eax, eax
  00061	74 13		 je	 SHORT $LN11@SaveColorM

; 345  : 	{
; 346  : 		TraceError("Could not save color map (result %u)", hr);

  00063	50		 push	 eax
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@LODADJBM@Could?5not?5save?5color?5map?5?$CIresul@
  00069	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0006e	83 c4 08	 add	 esp, 8
  00071	5f		 pop	 edi

; 363  : }

  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
$LN11@SaveColorM:
  00076	53		 push	 ebx
  00077	56		 push	 esi

; 347  : 		return;
; 348  : 	}
; 349  : 
; 350  : 	m_pColorMap = new DWORD[GetWidth() * GetHeight()];

  00078	8b cf		 mov	 ecx, edi
  0007a	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0007f	8b cf		 mov	 ecx, edi
  00081	8b f0		 mov	 esi, eax
  00083	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00088	0f af c6	 imul	 eax, esi
  0008b	33 c9		 xor	 ecx, ecx
  0008d	ba 04 00 00 00	 mov	 edx, 4
  00092	f7 e2		 mul	 edx
  00094	0f 90 c1	 seto	 cl
  00097	f7 d9		 neg	 ecx
  00099	0b c8		 or	 ecx, eax
  0009b	51		 push	 ecx
  0009c	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  000a1	83 c4 04	 add	 esp, 4
  000a4	89 87 80 00 00
	00		 mov	 DWORD PTR [edi+128], eax

; 351  : 
; 352  : 	// read colors
; 353  : 	for (DWORD y = 0; y < GetHeight(); ++y)

  000aa	33 db		 xor	 ebx, ebx
  000ac	8b cf		 mov	 ecx, edi
  000ae	89 5d fc	 mov	 DWORD PTR _y$1$[ebp], ebx
  000b1	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  000b6	85 c0		 test	 eax, eax
  000b8	74 5a		 je	 SHORT $LN3@SaveColorM
  000ba	66 0f 1f 44 00
	00		 npad	 6
$LL4@SaveColorM:

; 354  : 	{
; 355  : 		for (DWORD x = 0; x < GetWidth(); ++x)

  000c0	8b cf		 mov	 ecx, edi
  000c2	33 f6		 xor	 esi, esi
  000c4	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  000c9	85 c0		 test	 eax, eax
  000cb	74 38		 je	 SHORT $LN2@SaveColorM
  000cd	0f 1f 00	 npad	 3
$LL7@SaveColorM:

; 356  : 		{
; 357  : 			DWORD dwIndex = x * 4 + y * lockedRect.Pitch;

  000d0	8b 45 ec	 mov	 eax, DWORD PTR _lockedRect$[ebp]

; 358  : 			m_pColorMap[y * GetWidth() + x] = *(DWORD*)(&((BYTE*)lockedRect.pBits)[dwIndex]);

  000d3	8b 4d f8	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000d6	8b bf 80 00 00
	00		 mov	 edi, DWORD PTR [edi+128]
  000dc	0f af c3	 imul	 eax, ebx
  000df	03 45 f0	 add	 eax, DWORD PTR _lockedRect$[ebp+4]
  000e2	8b 1c b0	 mov	 ebx, DWORD PTR [eax+esi*4]
  000e5	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  000ea	0f af 45 fc	 imul	 eax, DWORD PTR _y$1$[ebp]
  000ee	03 c6		 add	 eax, esi
  000f0	46		 inc	 esi
  000f1	89 1c 87	 mov	 DWORD PTR [edi+eax*4], ebx
  000f4	8b 7d f8	 mov	 edi, DWORD PTR _this$1$[ebp]
  000f7	8b cf		 mov	 ecx, edi
  000f9	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  000fe	8b 5d fc	 mov	 ebx, DWORD PTR _y$1$[ebp]
  00101	3b f0		 cmp	 esi, eax
  00103	72 cb		 jb	 SHORT $LL7@SaveColorM
$LN2@SaveColorM:

; 351  : 
; 352  : 	// read colors
; 353  : 	for (DWORD y = 0; y < GetHeight(); ++y)

  00105	43		 inc	 ebx
  00106	8b cf		 mov	 ecx, edi
  00108	89 5d fc	 mov	 DWORD PTR _y$1$[ebp], ebx
  0010b	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00110	3b d8		 cmp	 ebx, eax
  00112	72 ac		 jb	 SHORT $LL4@SaveColorM
$LN3@SaveColorM:

; 359  : 		}
; 360  : 	}
; 361  : 
; 362  : 	pTexture->GetD3DTexture()->UnlockRect(0);

  00114	8b 4d f4	 mov	 ecx, DWORD PTR _pTexture$1$[ebp]
  00117	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture9@@XZ ; CGraphicTexture::GetD3DTexture
  0011c	6a 00		 push	 0
  0011e	50		 push	 eax
  0011f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00121	ff 51 50	 call	 DWORD PTR [ecx+80]
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
$LN10@SaveColorM:
  00126	5f		 pop	 edi

; 363  : }

  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c3		 ret	 0
?SaveColorMap@CGraphicExpandedImageInstance@@AAEXXZ ENDP ; CGraphicExpandedImageInstance::SaveColorMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?OnIsType@CGraphicExpandedImageInstance@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CGraphicExpandedImageInstance@@MAEHK@Z PROC	; CGraphicExpandedImageInstance::OnIsType, COMDAT
; _this$ = ecx

; 400  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 401  : 	if (CGraphicExpandedImageInstance::Type() == dwType)

  00006	e8 00 00 00 00	 call	 ?Type@CGraphicExpandedImageInstance@@SAKXZ ; CGraphicExpandedImageInstance::Type
  0000b	8b 55 08	 mov	 edx, DWORD PTR _dwType$[ebp]
  0000e	3b c2		 cmp	 eax, edx
  00010	75 0a		 jne	 SHORT $LN2@OnIsType

; 402  : 	{
; 403  : 		return TRUE;

  00012	b8 01 00 00 00	 mov	 eax, 1
  00017	5e		 pop	 esi

; 407  : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@OnIsType:

; 404  : 	}
; 405  : 
; 406  : 	return CGraphicImageInstance::IsType(dwType);

  0001c	52		 push	 edx
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?IsType@CGraphicImageInstance@@QAEHK@Z ; CGraphicImageInstance::IsType
  00024	5e		 pop	 esi

; 407  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?OnIsType@CGraphicExpandedImageInstance@@MAEHK@Z ENDP	; CGraphicExpandedImageInstance::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?OnSetImagePointer@CGraphicExpandedImageInstance@@MAEXXZ
_TEXT	SEGMENT
tv130 = -4						; size = 4
?OnSetImagePointer@CGraphicExpandedImageInstance@@MAEXXZ PROC ; CGraphicExpandedImageInstance::OnSetImagePointer, COMDAT
; _this$ = ecx

; 383  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 384  : 	if (IsEmpty())

  00007	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0000c	84 c0		 test	 al, al
  0000e	75 68		 jne	 SHORT $LN1@OnSetImage

; 385  : 	{
; 386  : 		return;
; 387  : 	}
; 388  : 
; 389  : #ifdef INGAME_WIKI
; 390  : 	if (m_pColorMap)

  00010	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  00016	85 c0		 test	 eax, eax
  00018	74 13		 je	 SHORT $LN3@OnSetImage

; 391  : 	{
; 392  : 		delete[] m_pColorMap;

  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00020	83 c4 04	 add	 esp, 4

; 393  : 		m_pColorMap = NULL;

  00023	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
$LN3@OnSetImage:

; 394  : 	}
; 395  : #endif
; 396  : 
; 397  : 	SetOrigin(float(GetWidth()) / 2.0f, float(GetHeight()) / 2.0f);

  0002d	8b ce		 mov	 ecx, esi
  0002f	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00034	8b ce		 mov	 ecx, esi
  00036	66 0f 6e c0	 movd	 xmm0, eax
  0003a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00045	f3 0f 11 45 fc	 movss	 DWORD PTR tv130[ebp], xmm0
  0004a	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0004f	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR tv130[ebp]
  00054	83 ec 08	 sub	 esp, 8
  00057	8b ce		 mov	 ecx, esi
  00059	66 0f 6e c0	 movd	 xmm0, eax
  0005d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00060	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00066	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  0006e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00073	e8 00 00 00 00	 call	 ?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetOrigin
$LN1@OnSetImage:
  00078	5e		 pop	 esi

; 398  : }

  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
?OnSetImagePointer@CGraphicExpandedImageInstance@@MAEXXZ ENDP ; CGraphicExpandedImageInstance::OnSetImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?OnRender@CGraphicExpandedImageInstance@@MAEXXZ
_TEXT	SEGMENT
tv2326 = -152						; size = 8
_sv2$1$ = -148						; size = 4
_eu1$1$ = -144						; size = 4
_eu2$1$ = -140						; size = 4
tv2298 = -140						; size = 4
_ev1$1$ = -136						; size = 4
tv2300 = -136						; size = 4
_su2$1$ = -132						; size = 4
tv2292 = -132						; size = 4
_pTexture$1$ = -128					; size = 4
_fimgHalfHeight$1$ = -124				; size = 4
_fimgWidth$1$ = -124					; size = 4
_ev2$1$ = -124						; size = 4
_fimgHalfWidth$1$ = -120				; size = 4
_pImage$1$ = -120					; size = 4
_dwR$1$ = -116						; size = 4
_c_rRect$1$ = -116					; size = 4
tv2205 = -116						; size = 4
_texReverseWidth$1$ = -112				; size = 4
_dwG$1$ = -112						; size = 4
tv2361 = -112						; size = 4
tv2204 = -112						; size = 4
_dwR$1$ = -108						; size = 4
_dwR$1$ = -108						; size = 4
_dwG$1$ = -108						; size = 4
_dwG$1$ = -104						; size = 4
_dwG$1$ = -104						; size = 4
_dwR$1$ = -104						; size = 4
_vertices$ = -100					; size = 96
__$ArrayPad$ = -4					; size = 4
?OnRender@CGraphicExpandedImageInstance@@MAEXXZ PROC	; CGraphicExpandedImageInstance::OnRender, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx
  00016	57		 push	 edi

; 31   : 	CGraphicImage * pImage = m_roImage.GetPointer();

  00017	8b 7e 1c	 mov	 edi, DWORD PTR [esi+28]

; 32   : 	CGraphicTexture * pTexture = pImage->GetTexturePointer();

  0001a	8b cf		 mov	 ecx, edi
  0001c	89 7d 88	 mov	 DWORD PTR _pImage$1$[ebp], edi
  0001f	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ ; CGraphicImage::GetTexturePointer

; 33   : 
; 34   : 	const RECT& c_rRect = pImage->GetRectReference();

  00024	8b cf		 mov	 ecx, edi
  00026	89 45 80	 mov	 DWORD PTR _pTexture$1$[ebp], eax
  00029	e8 00 00 00 00	 call	 ?GetRectReference@CGraphicImage@@QBEABUtagRECT@@XZ ; CGraphicImage::GetRectReference

; 35   : 	float texReverseWidth = 1.0f / float(pTexture->GetWidth());

  0002e	8b 4d 80	 mov	 ecx, DWORD PTR _pTexture$1$[ebp]
  00031	8b f8		 mov	 edi, eax
  00033	89 7d 8c	 mov	 DWORD PTR _c_rRect$1$[ebp], edi
  00036	e8 00 00 00 00	 call	 ?GetWidth@CGraphicTexture@@QBEHXZ ; CGraphicTexture::GetWidth
  0003b	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000

; 36   : 	float texReverseHeight = 1.0f / float(pTexture->GetHeight());

  00043	8b 4d 80	 mov	 ecx, DWORD PTR _pTexture$1$[ebp]
  00046	66 0f 6e c0	 movd	 xmm0, eax
  0004a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0004d	f3 0f 5e c8	 divss	 xmm1, xmm0
  00051	f3 0f 11 4d 90	 movss	 DWORD PTR _texReverseWidth$1$[ebp], xmm1
  00056	e8 00 00 00 00	 call	 ?GetHeight@CGraphicTexture@@QBEHXZ ; CGraphicTexture::GetHeight

; 37   : 
; 38   : #ifdef INGAME_WIKI
; 39   : 	float su1 = (c_rRect.left + m_renderBox.left - m_RenderingRect.left_top - m_TextureRenderingRect.left) * texReverseWidth;

  0005b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0005d	8b fe		 mov	 edi, esi
  0005f	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00067	0f 28 d4	 movaps	 xmm2, xmm4
  0006a	66 0f 6e c0	 movd	 xmm0, eax
  0006e	8b c6		 mov	 eax, esi
  00070	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00073	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  00076	8b c1		 mov	 eax, ecx
  00078	2b 47 40	 sub	 eax, DWORD PTR [edi+64]
  0007b	2b 56 60	 sub	 edx, DWORD PTR [esi+96]
  0007e	03 c2		 add	 eax, edx
  00080	f3 0f 5e d0	 divss	 xmm2, xmm0
  00084	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _texReverseWidth$1$[ebp]
  00089	66 0f 6e d8	 movd	 xmm3, eax

; 40   : 	float su2 = (c_rRect.left + m_renderBox.left - m_RenderingRect.left_bottom - m_TextureRenderingRect.left) * texReverseWidth;

  0008d	8b c6		 mov	 eax, esi
  0008f	0f 5b db	 cvtdq2ps xmm3, xmm3
  00092	2b 48 44	 sub	 ecx, DWORD PTR [eax+68]

; 41   : 	float sv1 = (c_rRect.top + m_renderBox.top - m_RenderingRect.top_left - m_TextureRenderingRect.top) * texReverseHeight;

  00095	8b 78 64	 mov	 edi, DWORD PTR [eax+100]
  00098	03 ca		 add	 ecx, edx
  0009a	8b 50 74	 mov	 edx, DWORD PTR [eax+116]
  0009d	2b d7		 sub	 edx, edi
  0009f	89 7d 90	 mov	 DWORD PTR tv2361[ebp], edi
  000a2	8b fe		 mov	 edi, esi
  000a4	f3 0f 59 d8	 mulss	 xmm3, xmm0
  000a8	66 0f 6e c9	 movd	 xmm1, ecx
  000ac	8b 4d 8c	 mov	 ecx, DWORD PTR _c_rRect$1$[ebp]
  000af	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000b2	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000b5	8b c1		 mov	 eax, ecx
  000b7	2b 47 48	 sub	 eax, DWORD PTR [edi+72]
  000ba	03 c2		 add	 eax, edx
  000bc	f3 0f 59 c8	 mulss	 xmm1, xmm0
  000c0	f3 0f 11 8d 7c
	ff ff ff	 movss	 DWORD PTR _su2$1$[ebp], xmm1
  000c8	66 0f 6e c8	 movd	 xmm1, eax

; 42   : 	float sv2 = (c_rRect.top + m_renderBox.top - m_RenderingRect.top_right - m_TextureRenderingRect.top) * texReverseHeight;

  000cc	8b c6		 mov	 eax, esi
  000ce	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000d1	2b 48 4c	 sub	 ecx, DWORD PTR [eax+76]
  000d4	03 ca		 add	 ecx, edx

; 43   : 	float eu1 = (c_rRect.left + m_RenderingRect.right_top + m_TextureRenderingRect.right + (c_rRect.right - c_rRect.left - m_TextureRenderingRect.left) - m_renderBox.right) * texReverseWidth;

  000d6	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  000d9	2b 56 60	 sub	 edx, DWORD PTR [esi+96]
  000dc	2b 50 78	 sub	 edx, DWORD PTR [eax+120]
  000df	8b 75 8c	 mov	 esi, DWORD PTR _c_rRect$1$[ebp]
  000e2	66 0f 6e e9	 movd	 xmm5, ecx
  000e6	0f 5b ed	 cvtdq2ps xmm5, xmm5
  000e9	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000ec	f3 0f 59 ca	 mulss	 xmm1, xmm2
  000f0	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  000f3	f3 0f 59 ea	 mulss	 xmm5, xmm2
  000f7	03 47 50	 add	 eax, DWORD PTR [edi+80]
  000fa	f3 0f 11 ad 6c
	ff ff ff	 movss	 DWORD PTR _sv2$1$[ebp], xmm5
  00102	66 0f 6e e8	 movd	 xmm5, eax

; 44   : 	float eu2 = (c_rRect.left + m_RenderingRect.right_bottom + m_TextureRenderingRect.right + (c_rRect.right - c_rRect.left - m_TextureRenderingRect.left) - m_renderBox.right) * texReverseWidth;

  00106	8b c7		 mov	 eax, edi
  00108	0f 5b ed	 cvtdq2ps xmm5, xmm5
  0010b	8b 40 54	 mov	 eax, DWORD PTR [eax+84]
  0010e	03 c1		 add	 eax, ecx
  00110	03 c2		 add	 eax, edx
  00112	f3 0f 59 e8	 mulss	 xmm5, xmm0
  00116	f3 0f 11 ad 70
	ff ff ff	 movss	 DWORD PTR _eu1$1$[ebp], xmm5
  0011e	66 0f 6e e8	 movd	 xmm5, eax

; 45   : 	float ev1 = (c_rRect.top + m_RenderingRect.bottom_left + m_TextureRenderingRect.bottom + (c_rRect.bottom - c_rRect.top - m_TextureRenderingRect.top) - m_renderBox.bottom) * texReverseHeight;

  00122	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00125	8b c7		 mov	 eax, edi
  00127	0f 5b ed	 cvtdq2ps xmm5, xmm5
  0012a	8b 50 6c	 mov	 edx, DWORD PTR [eax+108]
  0012d	2b 55 90	 sub	 edx, DWORD PTR tv2361[ebp]
  00130	2b 57 7c	 sub	 edx, DWORD PTR [edi+124]
  00133	f3 0f 59 e8	 mulss	 xmm5, xmm0

; 52   : 	vertices[0].texCoord = TTextureCoordinate(su1, sv1);

  00137	f3 0f 11 4d b0	 movss	 DWORD PTR _vertices$[ebp+20], xmm1
  0013c	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0013f	f3 0f 10 4f 04	 movss	 xmm1, DWORD PTR [edi+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 45   : 	float ev1 = (c_rRect.top + m_RenderingRect.bottom_left + m_TextureRenderingRect.bottom + (c_rRect.bottom - c_rRect.top - m_TextureRenderingRect.top) - m_renderBox.bottom) * texReverseHeight;

  00144	03 47 58	 add	 eax, DWORD PTR [edi+88]

; 52   : 	vertices[0].texCoord = TTextureCoordinate(su1, sv1);

  00147	f3 0f 11 5d ac	 movss	 DWORD PTR _vertices$[ebp+16], xmm3
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0014c	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 44   : 	float eu2 = (c_rRect.left + m_RenderingRect.right_bottom + m_TextureRenderingRect.right + (c_rRect.right - c_rRect.left - m_TextureRenderingRect.left) - m_renderBox.right) * texReverseWidth;

  00154	f3 0f 11 ad 74
	ff ff ff	 movss	 DWORD PTR _eu2$1$[ebp], xmm5
  0015c	66 0f 6e c0	 movd	 xmm0, eax

; 46   : 	float ev2 = (c_rRect.top + m_RenderingRect.bottom_right + m_TextureRenderingRect.bottom + (c_rRect.bottom - c_rRect.top - m_TextureRenderingRect.top) - m_renderBox.bottom) * texReverseHeight;

  00160	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  00163	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00166	03 c1		 add	 eax, ecx
  00168	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0016a	0f 2f cc	 comiss	 xmm1, xmm4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 45   : 	float ev1 = (c_rRect.top + m_RenderingRect.bottom_left + m_TextureRenderingRect.bottom + (c_rRect.bottom - c_rRect.top - m_TextureRenderingRect.top) - m_renderBox.bottom) * texReverseHeight;

  0016d	f3 0f 59 c2	 mulss	 xmm0, xmm2
  00171	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _ev1$1$[ebp], xmm0
  00179	66 0f 6e c0	 movd	 xmm0, eax

; 46   : 	float ev2 = (c_rRect.top + m_RenderingRect.bottom_right + m_TextureRenderingRect.bottom + (c_rRect.bottom - c_rRect.top - m_TextureRenderingRect.top) - m_renderBox.bottom) * texReverseHeight;

  0017d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00180	f3 0f 59 c2	 mulss	 xmm0, xmm2

; 47   : 
; 48   : 	TPDTVertex vertices[4];
; 49   : 	vertices[0].position.x = m_v2Position.x - 0.5f;

  00184	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f000000
  0018c	f3 0f 11 45 84	 movss	 DWORD PTR _ev2$1$[ebp], xmm0
  00191	f3 0f 10 47 14	 movss	 xmm0, DWORD PTR [edi+20]
  00196	f3 0f 5c c2	 subss	 xmm0, xmm2
  0019a	f3 0f 11 45 90	 movss	 DWORD PTR tv2204[ebp], xmm0
  0019f	f3 0f 11 45 9c	 movss	 DWORD PTR _vertices$[ebp], xmm0

; 50   : 	vertices[0].position.y = m_v2Position.y - 0.5f;

  001a4	f3 0f 10 47 18	 movss	 xmm0, DWORD PTR [edi+24]
  001a9	f3 0f 5c c2	 subss	 xmm0, xmm2
  001ad	f3 0f 11 45 8c	 movss	 DWORD PTR tv2205[ebp], xmm0
  001b2	f3 0f 11 45 a0	 movss	 DWORD PTR _vertices$[ebp+4], xmm0

; 51   : 	vertices[0].position.z = m_fDepth;

  001b7	f3 0f 10 47 28	 movss	 xmm0, DWORD PTR [edi+40]
  001bc	f3 0f 11 45 a4	 movss	 DWORD PTR _vertices$[ebp+8], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  001c1	0f 57 c0	 xorps	 xmm0, xmm0
  001c4	72 09		 jb	 SHORT $LN66@OnRender
  001c6	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  001cd	eb 3c		 jmp	 SHORT $LN65@OnRender
$LN66@OnRender:
  001cf	0f 2f c1	 comiss	 xmm0, xmm1
  001d2	72 09		 jb	 SHORT $LN64@OnRender
  001d4	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  001db	eb 2e		 jmp	 SHORT $LN65@OnRender
$LN64@OnRender:
  001dd	0f 28 c1	 movaps	 xmm0, xmm1
  001e0	f3 0f 59 c3	 mulss	 xmm0, xmm3
  001e4	f3 0f 58 c2	 addss	 xmm0, xmm2
  001e8	e8 00 00 00 00	 call	 __ftol3
  001ed	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f000000
  001f5	0f 57 c0	 xorps	 xmm0, xmm0
  001f8	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  00200	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00208	89 45 98	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN65@OnRender:

; 1410 :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  0020b	f3 0f 10 4f 08	 movss	 xmm1, DWORD PTR [edi+8]
  00210	0f 2f cc	 comiss	 xmm1, xmm4
  00213	72 09		 jb	 SHORT $LN70@OnRender
  00215	c7 45 94 ff 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  0021c	eb 29		 jmp	 SHORT $LN69@OnRender
$LN70@OnRender:
  0021e	0f 2f c1	 comiss	 xmm0, xmm1
  00221	72 09		 jb	 SHORT $LN68@OnRender
  00223	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 0
  0022a	eb 1b		 jmp	 SHORT $LN69@OnRender
$LN68@OnRender:
  0022c	0f 28 c1	 movaps	 xmm0, xmm1
  0022f	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00233	f3 0f 58 c2	 addss	 xmm0, xmm2
  00237	e8 00 00 00 00	 call	 __ftol3
  0023c	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00244	89 45 94	 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN69@OnRender:

; 1411 :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  00247	f3 0f 10 4f 0c	 movss	 xmm1, DWORD PTR [edi+12]
  0024c	0f 57 c0	 xorps	 xmm0, xmm0
  0024f	0f 2f cc	 comiss	 xmm1, xmm4
  00252	72 07		 jb	 SHORT $LN74@OnRender
  00254	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  00259	eb 2e		 jmp	 SHORT $LN73@OnRender
$LN74@OnRender:
  0025b	0f 2f c1	 comiss	 xmm0, xmm1
  0025e	72 04		 jb	 SHORT $LN72@OnRender
  00260	33 f6		 xor	 esi, esi
  00262	eb 25		 jmp	 SHORT $LN73@OnRender
$LN72@OnRender:
  00264	0f 28 c1	 movaps	 xmm0, xmm1
  00267	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0026f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00277	e8 00 00 00 00	 call	 __ftol3
  0027c	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00284	8b f0		 mov	 esi, eax
  00286	0f 57 c0	 xorps	 xmm0, xmm0
$LN73@OnRender:

; 1412 :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00289	f3 0f 10 4f 10	 movss	 xmm1, DWORD PTR [edi+16]
  0028e	0f 2f cc	 comiss	 xmm1, xmm4
  00291	72 07		 jb	 SHORT $LN78@OnRender
  00293	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00298	eb 29		 jmp	 SHORT $LN77@OnRender
$LN78@OnRender:
  0029a	0f 2f c1	 comiss	 xmm0, xmm1
  0029d	72 04		 jb	 SHORT $LN76@OnRender
  0029f	33 c0		 xor	 eax, eax
  002a1	eb 20		 jmp	 SHORT $LN77@OnRender
$LN76@OnRender:
  002a3	0f 28 c1	 movaps	 xmm0, xmm1
  002a6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  002ae	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  002b6	e8 00 00 00 00	 call	 __ftol3
  002bb	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
$LN77@OnRender:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 55   : 	vertices[1].position.x = m_v2Position.x - 0.5f;

  002c3	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv2204[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  002c8	f3 0f 10 4f 04	 movss	 xmm1, DWORD PTR [edi+4]

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  002cd	c1 e0 08	 shl	 eax, 8
  002d0	0b 45 98	 or	 eax, DWORD PTR _dwR$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 55   : 	vertices[1].position.x = m_v2Position.x - 0.5f;

  002d3	f3 0f 11 45 b4	 movss	 DWORD PTR _vertices$[ebp+24], xmm0

; 56   : 	vertices[1].position.y = m_v2Position.y - 0.5f;

  002d8	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv2205[ebp]
  002dd	f3 0f 11 45 b8	 movss	 DWORD PTR _vertices$[ebp+28], xmm0

; 57   : 	vertices[1].position.z = m_fDepth;

  002e2	f3 0f 10 47 28	 movss	 xmm0, DWORD PTR [edi+40]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  002e7	c1 e0 08	 shl	 eax, 8
  002ea	0b 45 94	 or	 eax, DWORD PTR _dwG$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 57   : 	vertices[1].position.z = m_fDepth;

  002ed	f3 0f 11 45 bc	 movss	 DWORD PTR _vertices$[ebp+32], xmm0

; 58   : 	vertices[1].texCoord = TTextureCoordinate(eu1, sv2);

  002f2	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _eu1$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  002fa	c1 e0 08	 shl	 eax, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 58   : 	vertices[1].texCoord = TTextureCoordinate(eu1, sv2);

  002fd	f3 0f 11 45 c4	 movss	 DWORD PTR _vertices$[ebp+40], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00302	0b c6		 or	 eax, esi

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00304	0f 2f cc	 comiss	 xmm1, xmm4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 53   : 	vertices[0].diffuse = m_DiffuseColor;

  00307	89 45 a8	 mov	 DWORD PTR _vertices$[ebp+12], eax

; 58   : 	vertices[1].texCoord = TTextureCoordinate(eu1, sv2);

  0030a	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _sv2$1$[ebp]
  00312	f3 0f 11 45 c8	 movss	 DWORD PTR _vertices$[ebp+44], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00317	0f 57 c0	 xorps	 xmm0, xmm0
  0031a	72 09		 jb	 SHORT $LN86@OnRender
  0031c	c7 45 94 ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  00323	eb 34		 jmp	 SHORT $LN85@OnRender
$LN86@OnRender:
  00325	0f 2f c1	 comiss	 xmm0, xmm1
  00328	72 09		 jb	 SHORT $LN84@OnRender
  0032a	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  00331	eb 26		 jmp	 SHORT $LN85@OnRender
$LN84@OnRender:
  00333	0f 28 c1	 movaps	 xmm0, xmm1
  00336	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0033e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00346	e8 00 00 00 00	 call	 __ftol3
  0034b	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00353	0f 57 c0	 xorps	 xmm0, xmm0
  00356	89 45 94	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN85@OnRender:

; 1410 :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  00359	f3 0f 10 4f 08	 movss	 xmm1, DWORD PTR [edi+8]
  0035e	0f 2f cc	 comiss	 xmm1, xmm4
  00361	72 09		 jb	 SHORT $LN90@OnRender
  00363	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  0036a	eb 31		 jmp	 SHORT $LN89@OnRender
$LN90@OnRender:
  0036c	0f 2f c1	 comiss	 xmm0, xmm1
  0036f	72 09		 jb	 SHORT $LN88@OnRender
  00371	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 0
  00378	eb 23		 jmp	 SHORT $LN89@OnRender
$LN88@OnRender:
  0037a	0f 28 c1	 movaps	 xmm0, xmm1
  0037d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00385	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0038d	e8 00 00 00 00	 call	 __ftol3
  00392	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  0039a	89 45 98	 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN89@OnRender:

; 1411 :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  0039d	f3 0f 10 4f 0c	 movss	 xmm1, DWORD PTR [edi+12]
  003a2	0f 57 c0	 xorps	 xmm0, xmm0
  003a5	0f 2f cc	 comiss	 xmm1, xmm4
  003a8	72 07		 jb	 SHORT $LN94@OnRender
  003aa	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  003af	eb 2e		 jmp	 SHORT $LN93@OnRender
$LN94@OnRender:
  003b1	0f 2f c1	 comiss	 xmm0, xmm1
  003b4	72 04		 jb	 SHORT $LN92@OnRender
  003b6	33 f6		 xor	 esi, esi
  003b8	eb 25		 jmp	 SHORT $LN93@OnRender
$LN92@OnRender:
  003ba	0f 28 c1	 movaps	 xmm0, xmm1
  003bd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  003c5	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  003cd	e8 00 00 00 00	 call	 __ftol3
  003d2	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  003da	8b f0		 mov	 esi, eax
  003dc	0f 57 c0	 xorps	 xmm0, xmm0
$LN93@OnRender:

; 1412 :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  003df	f3 0f 10 4f 10	 movss	 xmm1, DWORD PTR [edi+16]
  003e4	0f 2f cc	 comiss	 xmm1, xmm4
  003e7	72 07		 jb	 SHORT $LN98@OnRender
  003e9	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  003ee	eb 29		 jmp	 SHORT $LN97@OnRender
$LN98@OnRender:
  003f0	0f 2f c1	 comiss	 xmm0, xmm1
  003f3	72 04		 jb	 SHORT $LN96@OnRender
  003f5	33 c0		 xor	 eax, eax
  003f7	eb 20		 jmp	 SHORT $LN97@OnRender
$LN96@OnRender:
  003f9	0f 28 c1	 movaps	 xmm0, xmm1
  003fc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00404	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0040c	e8 00 00 00 00	 call	 __ftol3
  00411	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
$LN97@OnRender:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 61   : 	vertices[2].position.x = m_v2Position.x - 0.5f;

  00419	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv2204[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0041e	f3 0f 10 4f 04	 movss	 xmm1, DWORD PTR [edi+4]

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00423	c1 e0 08	 shl	 eax, 8
  00426	0b 45 94	 or	 eax, DWORD PTR _dwR$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 61   : 	vertices[2].position.x = m_v2Position.x - 0.5f;

  00429	f3 0f 11 45 cc	 movss	 DWORD PTR _vertices$[ebp+48], xmm0

; 62   : 	vertices[2].position.y = m_v2Position.y - 0.5f;

  0042e	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv2205[ebp]
  00433	f3 0f 11 45 d0	 movss	 DWORD PTR _vertices$[ebp+52], xmm0

; 63   : 	vertices[2].position.z = m_fDepth;

  00438	f3 0f 10 47 28	 movss	 xmm0, DWORD PTR [edi+40]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  0043d	c1 e0 08	 shl	 eax, 8
  00440	0b 45 98	 or	 eax, DWORD PTR _dwG$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 63   : 	vertices[2].position.z = m_fDepth;

  00443	f3 0f 11 45 d4	 movss	 DWORD PTR _vertices$[ebp+56], xmm0

; 64   : 	vertices[2].texCoord = TTextureCoordinate(su2, ev1);

  00448	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _su2$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00450	c1 e0 08	 shl	 eax, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 64   : 	vertices[2].texCoord = TTextureCoordinate(su2, ev1);

  00453	f3 0f 11 45 dc	 movss	 DWORD PTR _vertices$[ebp+64], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00458	0b c6		 or	 eax, esi

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0045a	0f 2f cc	 comiss	 xmm1, xmm4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 59   : 	vertices[1].diffuse = m_DiffuseColor;

  0045d	89 45 c0	 mov	 DWORD PTR _vertices$[ebp+36], eax

; 64   : 	vertices[2].texCoord = TTextureCoordinate(su2, ev1);

  00460	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _ev1$1$[ebp]
  00468	f3 0f 11 45 e0	 movss	 DWORD PTR _vertices$[ebp+68], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0046d	0f 57 c0	 xorps	 xmm0, xmm0
  00470	72 09		 jb	 SHORT $LN106@OnRender
  00472	c7 45 94 ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  00479	eb 34		 jmp	 SHORT $LN105@OnRender
$LN106@OnRender:
  0047b	0f 2f c1	 comiss	 xmm0, xmm1
  0047e	72 09		 jb	 SHORT $LN104@OnRender
  00480	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  00487	eb 26		 jmp	 SHORT $LN105@OnRender
$LN104@OnRender:
  00489	0f 28 c1	 movaps	 xmm0, xmm1
  0048c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00494	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0049c	e8 00 00 00 00	 call	 __ftol3
  004a1	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  004a9	0f 57 c0	 xorps	 xmm0, xmm0
  004ac	89 45 94	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN105@OnRender:

; 1410 :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  004af	f3 0f 10 4f 08	 movss	 xmm1, DWORD PTR [edi+8]
  004b4	0f 2f cc	 comiss	 xmm1, xmm4
  004b7	72 09		 jb	 SHORT $LN110@OnRender
  004b9	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  004c0	eb 31		 jmp	 SHORT $LN109@OnRender
$LN110@OnRender:
  004c2	0f 2f c1	 comiss	 xmm0, xmm1
  004c5	72 09		 jb	 SHORT $LN108@OnRender
  004c7	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 0
  004ce	eb 23		 jmp	 SHORT $LN109@OnRender
$LN108@OnRender:
  004d0	0f 28 c1	 movaps	 xmm0, xmm1
  004d3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  004db	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  004e3	e8 00 00 00 00	 call	 __ftol3
  004e8	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  004f0	89 45 98	 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN109@OnRender:

; 1411 :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  004f3	f3 0f 10 4f 0c	 movss	 xmm1, DWORD PTR [edi+12]
  004f8	0f 57 c0	 xorps	 xmm0, xmm0
  004fb	0f 2f cc	 comiss	 xmm1, xmm4
  004fe	72 07		 jb	 SHORT $LN114@OnRender
  00500	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  00505	eb 2e		 jmp	 SHORT $LN113@OnRender
$LN114@OnRender:
  00507	0f 2f c1	 comiss	 xmm0, xmm1
  0050a	72 04		 jb	 SHORT $LN112@OnRender
  0050c	33 f6		 xor	 esi, esi
  0050e	eb 25		 jmp	 SHORT $LN113@OnRender
$LN112@OnRender:
  00510	0f 28 c1	 movaps	 xmm0, xmm1
  00513	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0051b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00523	e8 00 00 00 00	 call	 __ftol3
  00528	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00530	8b f0		 mov	 esi, eax
  00532	0f 57 c0	 xorps	 xmm0, xmm0
$LN113@OnRender:

; 1412 :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00535	f3 0f 10 4f 10	 movss	 xmm1, DWORD PTR [edi+16]
  0053a	0f 2f cc	 comiss	 xmm1, xmm4
  0053d	72 07		 jb	 SHORT $LN118@OnRender
  0053f	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00544	eb 29		 jmp	 SHORT $LN117@OnRender
$LN118@OnRender:
  00546	0f 2f c1	 comiss	 xmm0, xmm1
  00549	72 04		 jb	 SHORT $LN116@OnRender
  0054b	33 c0		 xor	 eax, eax
  0054d	eb 20		 jmp	 SHORT $LN117@OnRender
$LN116@OnRender:
  0054f	0f 28 c1	 movaps	 xmm0, xmm1
  00552	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0055a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00562	e8 00 00 00 00	 call	 __ftol3
  00567	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
$LN117@OnRender:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 67   : 	vertices[3].position.x = m_v2Position.x - 0.5f;

  0056f	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv2204[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00574	f3 0f 10 4f 04	 movss	 xmm1, DWORD PTR [edi+4]

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00579	c1 e0 08	 shl	 eax, 8
  0057c	0b 45 94	 or	 eax, DWORD PTR _dwR$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 67   : 	vertices[3].position.x = m_v2Position.x - 0.5f;

  0057f	f3 0f 11 45 e4	 movss	 DWORD PTR _vertices$[ebp+72], xmm0

; 68   : 	vertices[3].position.y = m_v2Position.y - 0.5f;

  00584	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv2205[ebp]
  00589	f3 0f 11 45 e8	 movss	 DWORD PTR _vertices$[ebp+76], xmm0

; 69   : 	vertices[3].position.z = m_fDepth;

  0058e	f3 0f 10 47 28	 movss	 xmm0, DWORD PTR [edi+40]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00593	c1 e0 08	 shl	 eax, 8
  00596	0b 45 98	 or	 eax, DWORD PTR _dwG$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 69   : 	vertices[3].position.z = m_fDepth;

  00599	f3 0f 11 45 ec	 movss	 DWORD PTR _vertices$[ebp+80], xmm0

; 70   : 	vertices[3].texCoord = TTextureCoordinate(eu2, ev2);

  0059e	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _eu2$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  005a6	c1 e0 08	 shl	 eax, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 70   : 	vertices[3].texCoord = TTextureCoordinate(eu2, ev2);

  005a9	f3 0f 11 45 f4	 movss	 DWORD PTR _vertices$[ebp+88], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  005ae	0b c6		 or	 eax, esi

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  005b0	0f 2f cc	 comiss	 xmm1, xmm4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 65   : 	vertices[2].diffuse = m_DiffuseColor;

  005b3	89 45 d8	 mov	 DWORD PTR _vertices$[ebp+60], eax

; 70   : 	vertices[3].texCoord = TTextureCoordinate(eu2, ev2);

  005b6	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _ev2$1$[ebp]
  005bb	f3 0f 11 45 f8	 movss	 DWORD PTR _vertices$[ebp+92], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  005c0	0f 57 c0	 xorps	 xmm0, xmm0
  005c3	72 09		 jb	 SHORT $LN126@OnRender
  005c5	c7 45 8c ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  005cc	eb 34		 jmp	 SHORT $LN125@OnRender
$LN126@OnRender:
  005ce	0f 2f c1	 comiss	 xmm0, xmm1
  005d1	72 09		 jb	 SHORT $LN124@OnRender
  005d3	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  005da	eb 26		 jmp	 SHORT $LN125@OnRender
$LN124@OnRender:
  005dc	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  005e4	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  005ec	0f 28 c1	 movaps	 xmm0, xmm1
  005ef	e8 00 00 00 00	 call	 __ftol3
  005f4	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  005fc	0f 57 c0	 xorps	 xmm0, xmm0
  005ff	89 45 8c	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN125@OnRender:

; 1410 :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  00602	f3 0f 10 4f 08	 movss	 xmm1, DWORD PTR [edi+8]
  00607	0f 2f cc	 comiss	 xmm1, xmm4
  0060a	72 09		 jb	 SHORT $LN130@OnRender
  0060c	c7 45 90 ff 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  00613	eb 31		 jmp	 SHORT $LN129@OnRender
$LN130@OnRender:
  00615	0f 2f c1	 comiss	 xmm0, xmm1
  00618	72 09		 jb	 SHORT $LN128@OnRender
  0061a	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 0
  00621	eb 23		 jmp	 SHORT $LN129@OnRender
$LN128@OnRender:
  00623	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  0062b	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  00633	0f 28 c1	 movaps	 xmm0, xmm1
  00636	e8 00 00 00 00	 call	 __ftol3
  0063b	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00643	89 45 90	 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN129@OnRender:

; 1411 :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  00646	f3 0f 10 4f 0c	 movss	 xmm1, DWORD PTR [edi+12]
  0064b	0f 57 c0	 xorps	 xmm0, xmm0
  0064e	0f 2f cc	 comiss	 xmm1, xmm4
  00651	72 07		 jb	 SHORT $LN134@OnRender
  00653	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  00658	eb 2e		 jmp	 SHORT $LN133@OnRender
$LN134@OnRender:
  0065a	0f 2f c1	 comiss	 xmm0, xmm1
  0065d	72 04		 jb	 SHORT $LN132@OnRender
  0065f	33 f6		 xor	 esi, esi
  00661	eb 25		 jmp	 SHORT $LN133@OnRender
$LN132@OnRender:
  00663	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  0066b	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  00673	0f 28 c1	 movaps	 xmm0, xmm1
  00676	e8 00 00 00 00	 call	 __ftol3
  0067b	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00683	8b f0		 mov	 esi, eax
  00685	0f 57 c0	 xorps	 xmm0, xmm0
$LN133@OnRender:

; 1412 :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00688	f3 0f 10 4f 10	 movss	 xmm1, DWORD PTR [edi+16]
  0068d	0f 2f cc	 comiss	 xmm1, xmm4
  00690	72 07		 jb	 SHORT $LN138@OnRender
  00692	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00697	eb 21		 jmp	 SHORT $LN137@OnRender
$LN138@OnRender:
  00699	0f 2f c1	 comiss	 xmm0, xmm1
  0069c	72 04		 jb	 SHORT $LN136@OnRender
  0069e	33 c0		 xor	 eax, eax
  006a0	eb 18		 jmp	 SHORT $LN137@OnRender
$LN136@OnRender:
  006a2	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  006aa	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  006b2	0f 28 c1	 movaps	 xmm0, xmm1
  006b5	e8 00 00 00 00	 call	 __ftol3
$LN137@OnRender:

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  006ba	c1 e0 08	 shl	 eax, 8
  006bd	0f 57 c0	 xorps	 xmm0, xmm0
  006c0	0b 45 8c	 or	 eax, DWORD PTR _dwR$1$[ebp]
  006c3	c1 e0 08	 shl	 eax, 8
  006c6	0b 45 90	 or	 eax, DWORD PTR _dwG$1$[ebp]
  006c9	c1 e0 08	 shl	 eax, 8
  006cc	0b c6		 or	 eax, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 73   : 	if (0.0f == m_fRotation)

  006ce	0f 2e 47 3c	 ucomiss xmm0, DWORD PTR [edi+60]
  006d2	89 45 f0	 mov	 DWORD PTR _vertices$[ebp+84], eax
  006d5	9f		 lahf
  006d6	f6 c4 44	 test	 ah, 68			; 00000044H
  006d9	0f 8a 52 01 00
	00		 jp	 $LN9@OnRender

; 74   : 	{
; 75   : 		float fimgWidth = float(pImage->GetWidth()) * m_v2Scale.x;

  006df	8b 4d 88	 mov	 ecx, DWORD PTR _pImage$1$[ebp]
  006e2	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImage@@QBEHXZ ; CGraphicImage::GetWidth

; 76   : 		float fimgHeight = float(pImage->GetHeight()) * m_v2Scale.y;

  006e7	8b 4d 88	 mov	 ecx, DWORD PTR _pImage$1$[ebp]
  006ea	66 0f 6e c0	 movd	 xmm0, eax
  006ee	0f 5b c0	 cvtdq2ps xmm0, xmm0
  006f1	f3 0f 59 47 34	 mulss	 xmm0, DWORD PTR [edi+52]
  006f6	f3 0f 11 45 84	 movss	 DWORD PTR _fimgWidth$1$[ebp], xmm0
  006fb	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImage@@QBEHXZ ; CGraphicImage::GetHeight
  00700	f3 0f 10 6f 38	 movss	 xmm5, DWORD PTR [edi+56]

; 77   : 
; 78   : 		vertices[0].position.x -= m_RenderingRect.left_top - m_renderBox.left;

  00705	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _vertices$[ebp]
  0070a	0f 28 dd	 movaps	 xmm3, xmm5
  0070d	66 0f 6e 57 78	 movd	 xmm2, DWORD PTR [edi+120]
  00712	66 0f 6e c0	 movd	 xmm0, eax
  00716	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  00719	2b 47 70	 sub	 eax, DWORD PTR [edi+112]
  0071c	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 79   : 		vertices[0].position.y -= m_RenderingRect.top_left - m_renderBox.top;
; 80   : 		vertices[1].position.x += fimgWidth + m_RenderingRect.right_top - m_renderBox.right;

  0071f	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00722	f3 0f 59 d8	 mulss	 xmm3, xmm0
  00726	66 0f 6e c0	 movd	 xmm0, eax
  0072a	8b 47 48	 mov	 eax, DWORD PTR [edi+72]
  0072d	2b 47 74	 sub	 eax, DWORD PTR [edi+116]
  00730	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00733	f3 0f 5c c8	 subss	 xmm1, xmm0
  00737	66 0f 6e c0	 movd	 xmm0, eax
  0073b	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 81   : 		vertices[1].position.y -= m_RenderingRect.top_right - m_renderBox.top;

  0073e	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  00741	2b 47 74	 sub	 eax, DWORD PTR [edi+116]
  00744	f3 0f 11 4d 9c	 movss	 DWORD PTR _vertices$[ebp], xmm1
  00749	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR _vertices$[ebp+4]
  0074e	f3 0f 5c c8	 subss	 xmm1, xmm0
  00752	66 0f 6e 47 50	 movd	 xmm0, DWORD PTR [edi+80]
  00757	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0075a	f3 0f 11 4d a0	 movss	 DWORD PTR _vertices$[ebp+4], xmm1
  0075f	f3 0f 58 45 84	 addss	 xmm0, DWORD PTR _fimgWidth$1$[ebp]
  00764	f3 0f 10 4d b8	 movss	 xmm1, DWORD PTR _vertices$[ebp+28]
  00769	f3 0f 5c c2	 subss	 xmm0, xmm2
  0076d	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _vertices$[ebp+24]
  00772	f3 0f 11 45 b4	 movss	 DWORD PTR _vertices$[ebp+24], xmm0
  00777	66 0f 6e c0	 movd	 xmm0, eax

; 82   : 		vertices[2].position.x -= m_RenderingRect.left_bottom - m_renderBox.left;

  0077b	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  0077e	2b 47 70	 sub	 eax, DWORD PTR [edi+112]
  00781	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00784	f3 0f 5c c8	 subss	 xmm1, xmm0
  00788	66 0f 6e c0	 movd	 xmm0, eax
  0078c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0078f	f3 0f 11 4d b8	 movss	 DWORD PTR _vertices$[ebp+28], xmm1
  00794	f3 0f 10 4d cc	 movss	 xmm1, DWORD PTR _vertices$[ebp+48]
  00799	f3 0f 5c c8	 subss	 xmm1, xmm0
  0079d	66 0f 6e 47 58	 movd	 xmm0, DWORD PTR [edi+88]

; 83   : 		vertices[2].position.y += fimgHeight + m_RenderingRect.bottom_left - m_renderBox.bottom;

  007a2	0f 5b c0	 cvtdq2ps xmm0, xmm0
  007a5	f3 0f 11 4d cc	 movss	 DWORD PTR _vertices$[ebp+48], xmm1
  007aa	66 0f 6e 4f 7c	 movd	 xmm1, DWORD PTR [edi+124]
  007af	f3 0f 58 c3	 addss	 xmm0, xmm3
  007b3	0f 5b c9	 cvtdq2ps xmm1, xmm1
  007b6	f3 0f 5c c1	 subss	 xmm0, xmm1
  007ba	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _vertices$[ebp+52]
  007bf	f3 0f 11 45 d0	 movss	 DWORD PTR _vertices$[ebp+52], xmm0
  007c4	66 0f 6e 47 54	 movd	 xmm0, DWORD PTR [edi+84]

; 84   : 		vertices[3].position.x += fimgWidth + m_RenderingRect.right_bottom - m_renderBox.right;

  007c9	0f 5b c0	 cvtdq2ps xmm0, xmm0
  007cc	f3 0f 58 45 84	 addss	 xmm0, DWORD PTR _fimgWidth$1$[ebp]
  007d1	f3 0f 5c c2	 subss	 xmm0, xmm2
  007d5	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _vertices$[ebp+72]
  007da	f3 0f 11 45 e4	 movss	 DWORD PTR _vertices$[ebp+72], xmm0
  007df	66 0f 6e 47 5c	 movd	 xmm0, DWORD PTR [edi+92]

; 85   : 		vertices[3].position.y += fimgHeight + m_RenderingRect.bottom_right - m_renderBox.bottom;

  007e4	0f 5b c0	 cvtdq2ps xmm0, xmm0
  007e7	f3 0f 58 c3	 addss	 xmm0, xmm3
  007eb	f3 0f 5c c1	 subss	 xmm0, xmm1

; 86   : 		if ((0.0f < m_v2Scale.x && 0.0f > m_v2Scale.y) || (0.0f > m_v2Scale.x && 0.0f < m_v2Scale.y))

  007ef	f3 0f 10 4f 34	 movss	 xmm1, DWORD PTR [edi+52]
  007f4	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _vertices$[ebp+76]
  007f9	f3 0f 11 45 e8	 movss	 DWORD PTR _vertices$[ebp+76], xmm0
  007fe	0f 57 c0	 xorps	 xmm0, xmm0
  00801	0f 2f c8	 comiss	 xmm1, xmm0
  00804	76 05		 jbe	 SHORT $LN13@OnRender
  00806	0f 2f c5	 comiss	 xmm0, xmm5
  00809	77 12		 ja	 SHORT $LN12@OnRender
$LN13@OnRender:
  0080b	0f 2f c1	 comiss	 xmm0, xmm1
  0080e	0f 86 fd 01 00
	00		 jbe	 $LN10@OnRender
  00814	0f 2f e8	 comiss	 xmm5, xmm0
  00817	0f 86 f4 01 00
	00		 jbe	 $LN10@OnRender
$LN12@OnRender:

; 87   : 		{
; 88   : 			STATEMANAGER.SetRenderState(D3DRS_CULLMODE, D3DCULL_CCW);

  0081d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00823	6a 03		 push	 3
  00825	6a 16		 push	 22			; 00000016H
  00827	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 89   : 		}
; 90   : 	}

  0082c	e9 e0 01 00 00	 jmp	 $LN10@OnRender
$LN9@OnRender:

; 91   : #else
; 92   : 	float su = (c_rRect.left - m_RenderingRect.left) * texReverseWidth;
; 93   : 	float sv = (c_rRect.top - m_RenderingRect.top) * texReverseHeight;
; 94   : 	float eu = (c_rRect.left + m_RenderingRect.right + (c_rRect.right - c_rRect.left)) * texReverseWidth;
; 95   : 	float ev = (c_rRect.top + m_RenderingRect.bottom + (c_rRect.bottom - c_rRect.top)) * texReverseHeight;
; 96   : 
; 97   : 	TPDTVertex vertices[4];
; 98   : 	vertices[0].position.x = m_v2Position.x - 0.5f;
; 99   : 	vertices[0].position.y = m_v2Position.y - 0.5f;
; 100  : 	vertices[0].position.z = m_fDepth;
; 101  : 	vertices[0].texCoord = TTextureCoordinate(su, sv);
; 102  : 	vertices[0].diffuse = m_DiffuseColor;
; 103  : 
; 104  : 	vertices[1].position.x = m_v2Position.x - 0.5f;
; 105  : 	vertices[1].position.y = m_v2Position.y - 0.5f;
; 106  : 	vertices[1].position.z = m_fDepth;
; 107  : 	vertices[1].texCoord = TTextureCoordinate(eu, sv);
; 108  : 	vertices[1].diffuse = m_DiffuseColor;
; 109  : 
; 110  : 	vertices[2].position.x = m_v2Position.x - 0.5f;
; 111  : 	vertices[2].position.y = m_v2Position.y - 0.5f;
; 112  : 	vertices[2].position.z = m_fDepth;
; 113  : 	vertices[2].texCoord = TTextureCoordinate(su, ev);
; 114  : 	vertices[2].diffuse = m_DiffuseColor;
; 115  : 
; 116  : 	vertices[3].position.x = m_v2Position.x - 0.5f;
; 117  : 	vertices[3].position.y = m_v2Position.y - 0.5f;
; 118  : 	vertices[3].position.z = m_fDepth;
; 119  : 	vertices[3].texCoord = TTextureCoordinate(eu, ev);
; 120  : 	vertices[3].diffuse = m_DiffuseColor;
; 121  : 
; 122  : 	if (0.0f == m_fRotation)
; 123  : 	{
; 124  : 		float fimgWidth = float(pImage->GetWidth()) * m_v2Scale.x;
; 125  : 		float fimgHeight = float(pImage->GetHeight()) * m_v2Scale.y;
; 126  : 
; 127  : 		vertices[0].position.x -= m_RenderingRect.left;
; 128  : 		vertices[0].position.y -= m_RenderingRect.top;
; 129  : 		vertices[1].position.x += fimgWidth + m_RenderingRect.right;
; 130  : 		vertices[1].position.y -= m_RenderingRect.top;
; 131  : 		vertices[2].position.x -= m_RenderingRect.left;
; 132  : 		vertices[2].position.y += fimgHeight + m_RenderingRect.bottom;
; 133  : 		vertices[3].position.x += fimgWidth + m_RenderingRect.right;
; 134  : 		vertices[3].position.y += fimgHeight + m_RenderingRect.bottom;
; 135  : 		if ((0.0f < m_v2Scale.x && 0.0f > m_v2Scale.y) || (0.0f > m_v2Scale.x && 0.0f < m_v2Scale.y))
; 136  : 		{
; 137  : 			STATEMANAGER.SetRenderState(D3DRS_CULLMODE, D3DCULL_CCW);
; 138  : 		}
; 139  : 	}
; 140  : #endif
; 141  : 	else
; 142  : 	{
; 143  : 		float fimgHalfWidth = float(pImage->GetWidth()) / 2.0f * m_v2Scale.x;

  00831	8b 75 88	 mov	 esi, DWORD PTR _pImage$1$[ebp]
  00834	8b ce		 mov	 ecx, esi
  00836	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImage@@QBEHXZ ; CGraphicImage::GetWidth

; 144  : 		float fimgHalfHeight = float(pImage->GetHeight()) / 2.0f * m_v2Scale.y;

  0083b	8b ce		 mov	 ecx, esi
  0083d	66 0f 6e c0	 movd	 xmm0, eax
  00841	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00844	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  0084c	f3 0f 59 47 34	 mulss	 xmm0, DWORD PTR [edi+52]
  00851	f3 0f 11 45 88	 movss	 DWORD PTR _fimgHalfWidth$1$[ebp], xmm0
  00856	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImage@@QBEHXZ ; CGraphicImage::GetHeight

; 145  : 
; 146  : 		for (int i = 0; i < 4; ++i)
; 147  : 		{
; 148  : 			vertices[i].position.x += m_v2Origin.x;

  0085b	f3 0f 10 55 9c	 movss	 xmm2, DWORD PTR _vertices$[ebp]

; 149  : 			vertices[i].position.y += m_v2Origin.y;

  00860	f3 0f 10 4f 30	 movss	 xmm1, DWORD PTR [edi+48]
  00865	66 0f 6e c0	 movd	 xmm0, eax
  00869	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0086c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00874	f3 0f 59 47 38	 mulss	 xmm0, DWORD PTR [edi+56]
  00879	f3 0f 11 45 84	 movss	 DWORD PTR _fimgHalfHeight$1$[ebp], xmm0
  0087e	f3 0f 10 47 2c	 movss	 xmm0, DWORD PTR [edi+44]
  00883	f3 0f 58 d0	 addss	 xmm2, xmm0
  00887	f3 0f 11 55 9c	 movss	 DWORD PTR _vertices$[ebp], xmm2
  0088c	f3 0f 10 55 a0	 movss	 xmm2, DWORD PTR _vertices$[ebp+4]
  00891	f3 0f 58 d1	 addss	 xmm2, xmm1
  00895	f3 0f 11 55 a0	 movss	 DWORD PTR _vertices$[ebp+4], xmm2
  0089a	f3 0f 10 55 b4	 movss	 xmm2, DWORD PTR _vertices$[ebp+24]
  0089f	f3 0f 58 d0	 addss	 xmm2, xmm0
  008a3	f3 0f 11 55 b4	 movss	 DWORD PTR _vertices$[ebp+24], xmm2
  008a8	f3 0f 10 55 b8	 movss	 xmm2, DWORD PTR _vertices$[ebp+28]
  008ad	f3 0f 58 d1	 addss	 xmm2, xmm1
  008b1	f3 0f 11 55 b8	 movss	 DWORD PTR _vertices$[ebp+28], xmm2
  008b6	f3 0f 10 55 cc	 movss	 xmm2, DWORD PTR _vertices$[ebp+48]
  008bb	f3 0f 58 d0	 addss	 xmm2, xmm0
  008bf	f3 0f 11 55 cc	 movss	 DWORD PTR _vertices$[ebp+48], xmm2
  008c4	f3 0f 10 55 d0	 movss	 xmm2, DWORD PTR _vertices$[ebp+52]
  008c9	f3 0f 58 d1	 addss	 xmm2, xmm1
  008cd	f3 0f 11 55 d0	 movss	 DWORD PTR _vertices$[ebp+52], xmm2
  008d2	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR _vertices$[ebp+72]
  008d7	f3 0f 58 d0	 addss	 xmm2, xmm0
  008db	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _vertices$[ebp+76]
  008e0	f3 0f 58 c1	 addss	 xmm0, xmm1
  008e4	f3 0f 11 55 e4	 movss	 DWORD PTR _vertices$[ebp+72], xmm2
  008e9	f3 0f 11 45 e8	 movss	 DWORD PTR _vertices$[ebp+76], xmm0

; 150  : 		}
; 151  : 
; 152  : 		float fRadian = D3DXToRadian(m_fRotation);

  008ee	f3 0f 10 47 3c	 movss	 xmm0, DWORD PTR [edi+60]
  008f3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 653  :             return (float)cos(_X);

  008fb	0f 5a c0	 cvtps2pd xmm0, xmm0
  008fe	f2 0f 11 85 68
	ff ff ff	 movsd	 QWORD PTR tv2326[ebp], xmm0
  00906	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
  0090b	0f 57 c9	 xorps	 xmm1, xmm1
  0090e	f2 0f 5a c8	 cvtsd2ss xmm1, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 153  : 		vertices[0].position.x += (-fimgHalfWidth * cosf(fRadian)) - (-fimgHalfHeight * sinf(fRadian));

  00912	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _fimgHalfWidth$1$[ebp]
  00917	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0091e	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR tv2292[ebp], xmm0
  00926	f3 0f 59 c1	 mulss	 xmm0, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 653  :             return (float)cos(_X);

  0092a	f3 0f 11 8d 78
	ff ff ff	 movss	 DWORD PTR tv2300[ebp], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 153  : 		vertices[0].position.x += (-fimgHalfWidth * cosf(fRadian)) - (-fimgHalfHeight * sinf(fRadian));

  00932	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR tv2298[ebp], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 758  :             return (float)sin(_X);

  0093a	f2 0f 10 85 68
	ff ff ff	 movsd	 xmm0, QWORD PTR tv2326[ebp]
  00942	e8 00 00 00 00	 call	 __libm_sse2_sin_precise
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 153  : 		vertices[0].position.x += (-fimgHalfWidth * cosf(fRadian)) - (-fimgHalfHeight * sinf(fRadian));

  00947	f3 0f 10 75 84	 movss	 xmm6, DWORD PTR _fimgHalfHeight$1$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 758  :             return (float)sin(_X);

  0094c	0f 57 db	 xorps	 xmm3, xmm3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 153  : 		vertices[0].position.x += (-fimgHalfWidth * cosf(fRadian)) - (-fimgHalfHeight * sinf(fRadian));

  0094f	f3 0f 10 a5 74
	ff ff ff	 movss	 xmm4, DWORD PTR tv2298[ebp]
  00957	0f 28 ce	 movaps	 xmm1, xmm6
  0095a	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 758  :             return (float)sin(_X);

  00961	f2 0f 5a d8	 cvtsd2ss xmm3, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp

; 154  : 		vertices[0].position.y += (-fimgHalfWidth * sinf(fRadian)) + (-fimgHalfHeight * cosf(fRadian));

  00965	f3 0f 10 ad 78
	ff ff ff	 movss	 xmm5, DWORD PTR tv2300[ebp]
  0096d	0f 28 c4	 movaps	 xmm0, xmm4
  00970	f3 0f 59 cb	 mulss	 xmm1, xmm3
  00974	0f 28 d5	 movaps	 xmm2, xmm5

; 155  : 		vertices[1].position.x += (+fimgHalfWidth * cosf(fRadian)) - (-fimgHalfHeight * sinf(fRadian));

  00977	f3 0f 59 6d 88	 mulss	 xmm5, DWORD PTR _fimgHalfWidth$1$[ebp]
  0097c	f3 0f 5c c1	 subss	 xmm0, xmm1
  00980	f3 0f 59 d6	 mulss	 xmm2, xmm6
  00984	f3 0f 58 45 9c	 addss	 xmm0, DWORD PTR _vertices$[ebp]
  00989	f3 0f 11 45 9c	 movss	 DWORD PTR _vertices$[ebp], xmm0
  0098e	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv2292[ebp]
  00996	f3 0f 59 c3	 mulss	 xmm0, xmm3
  0099a	f3 0f 5c c2	 subss	 xmm0, xmm2
  0099e	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR _vertices$[ebp+4]
  009a3	f3 0f 11 45 a0	 movss	 DWORD PTR _vertices$[ebp+4], xmm0
  009a8	0f 28 c5	 movaps	 xmm0, xmm5
  009ab	f3 0f 5c c1	 subss	 xmm0, xmm1

; 156  : 		vertices[1].position.y += (+fimgHalfWidth * sinf(fRadian)) + (-fimgHalfHeight * cosf(fRadian));

  009af	0f 28 cb	 movaps	 xmm1, xmm3
  009b2	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _vertices$[ebp+24]
  009b7	f3 0f 11 45 b4	 movss	 DWORD PTR _vertices$[ebp+24], xmm0
  009bc	f3 0f 59 4d 88	 mulss	 xmm1, DWORD PTR _fimgHalfWidth$1$[ebp]

; 157  : 		vertices[2].position.x += (-fimgHalfWidth * cosf(fRadian)) - (+fimgHalfHeight * sinf(fRadian));

  009c1	f3 0f 59 de	 mulss	 xmm3, xmm6
  009c5	0f 28 c1	 movaps	 xmm0, xmm1
  009c8	f3 0f 5c c2	 subss	 xmm0, xmm2
  009cc	f3 0f 5c e3	 subss	 xmm4, xmm3

; 158  : 		vertices[2].position.y += (-fimgHalfWidth * sinf(fRadian)) + (+fimgHalfHeight * cosf(fRadian));
; 159  : 		vertices[3].position.x += (+fimgHalfWidth * cosf(fRadian)) - (+fimgHalfHeight * sinf(fRadian));

  009d0	f3 0f 5c eb	 subss	 xmm5, xmm3
  009d4	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _vertices$[ebp+28]
  009d9	f3 0f 58 65 cc	 addss	 xmm4, DWORD PTR _vertices$[ebp+48]
  009de	f3 0f 58 6d e4	 addss	 xmm5, DWORD PTR _vertices$[ebp+72]
  009e3	f3 0f 11 45 b8	 movss	 DWORD PTR _vertices$[ebp+28], xmm0
  009e8	0f 28 c2	 movaps	 xmm0, xmm2
  009eb	f3 0f 5c c1	 subss	 xmm0, xmm1
  009ef	f3 0f 11 65 cc	 movss	 DWORD PTR _vertices$[ebp+48], xmm4

; 160  : 		vertices[3].position.y += (+fimgHalfWidth * sinf(fRadian)) + (+fimgHalfHeight * cosf(fRadian));

  009f4	f3 0f 58 ca	 addss	 xmm1, xmm2
  009f8	f3 0f 11 6d e4	 movss	 DWORD PTR _vertices$[ebp+72], xmm5
  009fd	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _vertices$[ebp+52]
  00a02	f3 0f 58 4d e8	 addss	 xmm1, DWORD PTR _vertices$[ebp+76]
  00a07	f3 0f 11 45 d0	 movss	 DWORD PTR _vertices$[ebp+52], xmm0
  00a0c	f3 0f 11 4d e8	 movss	 DWORD PTR _vertices$[ebp+76], xmm1
$LN10@OnRender:

; 161  : 	}
; 162  : 
; 163  : 	switch (m_iRenderingMode)

  00a11	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  00a17	83 e8 01	 sub	 eax, 1
  00a1a	74 1d		 je	 SHORT $LN14@OnRender
  00a1c	83 e8 01	 sub	 eax, 1
  00a1f	74 18		 je	 SHORT $LN14@OnRender
  00a21	83 e8 01	 sub	 eax, 1
  00a24	75 31		 jne	 SHORT $LN5@OnRender

; 169  : 		break;
; 170  : 	case RENDERING_MODE_MODULATE:
; 171  : 		STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_ZERO);

  00a26	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00a2c	6a 01		 push	 1
  00a2e	6a 13		 push	 19			; 00000013H
  00a30	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 172  : 		STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_SRCCOLOR);

  00a35	6a 03		 push	 3
  00a37	eb 11		 jmp	 SHORT $LN154@OnRender
$LN14@OnRender:

; 164  : 	{
; 165  : 	case RENDERING_MODE_SCREEN:
; 166  : 	case RENDERING_MODE_COLOR_DODGE:
; 167  : 		STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_INVDESTCOLOR);

  00a39	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00a3f	6a 0a		 push	 10			; 0000000aH
  00a41	6a 13		 push	 19			; 00000013H
  00a43	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 168  : 		STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_ONE);

  00a48	6a 02		 push	 2
$LN154@OnRender:

; 173  : 		break;
; 174  : 	}
; 175  : 
; 176  : 	if (CGraphicBase::SetPDTStream(vertices, 4))

  00a4a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00a50	6a 14		 push	 20			; 00000014H
  00a52	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState
$LN5@OnRender:
  00a57	8d 45 9c	 lea	 eax, DWORD PTR _vertices$[ebp]
  00a5a	6a 04		 push	 4
  00a5c	50		 push	 eax
  00a5d	e8 00 00 00 00	 call	 ?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z ; CGraphicBase::SetPDTStream
  00a62	83 c4 08	 add	 esp, 8
  00a65	84 c0		 test	 al, al
  00a67	74 58		 je	 SHORT $LN17@OnRender

; 177  : 	{
; 178  : 		CGraphicBase::SetDefaultIndexBuffer(CGraphicBase::DEFAULT_IB_FILL_RECT);

  00a69	6a 05		 push	 5
  00a6b	e8 00 00 00 00	 call	 ?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z ; CGraphicBase::SetDefaultIndexBuffer

; 179  : 
; 180  : 		STATEMANAGER.SetTexture(0, pTexture->GetD3DTexture());

  00a70	8b 4d 80	 mov	 ecx, DWORD PTR _pTexture$1$[ebp]
  00a73	83 c4 04	 add	 esp, 4
  00a76	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00a7c	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture9@@XZ ; CGraphicTexture::GetD3DTexture
  00a81	50		 push	 eax
  00a82	6a 00		 push	 0
  00a84	8b ce		 mov	 ecx, esi
  00a86	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture9@@@Z ; CStateManager::SetTexture

; 181  : 		STATEMANAGER.SetTexture(1, NULL);

  00a8b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00a91	6a 00		 push	 0
  00a93	6a 01		 push	 1
  00a95	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture9@@@Z ; CStateManager::SetTexture

; 182  : 		STATEMANAGER.SetFVF(D3DFVF_XYZ | D3DFVF_DIFFUSE | D3DFVF_TEX1);

  00a9a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00aa0	68 42 01 00 00	 push	 322			; 00000142H
  00aa5	e8 00 00 00 00	 call	 ?SetFVF@CStateManager@@QAEXK@Z ; CStateManager::SetFVF

; 183  : 		STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLELIST, 0, 4, 0, 2);

  00aaa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00ab0	6a 00		 push	 0
  00ab2	6a 02		 push	 2
  00ab4	6a 00		 push	 0
  00ab6	6a 04		 push	 4
  00ab8	6a 00		 push	 0
  00aba	6a 04		 push	 4
  00abc	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIIH@Z ; CStateManager::DrawIndexedPrimitive
$LN17@OnRender:

; 184  : 	}
; 185  : 	//STATEMANAGER.DrawIndexedPrimitiveUP(D3DPT_TRIANGLELIST, 0, 4, 2, c_FillRectIndices, D3DFMT_INDEX16, vertices, sizeof(TPDTVertex));
; 186  : 	/////////////////////////////////////////////////////////////
; 187  : 
; 188  : 	switch (m_iRenderingMode)

  00ac1	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  00ac7	5f		 pop	 edi
  00ac8	5e		 pop	 esi
  00ac9	83 e8 01	 sub	 eax, 1
  00acc	74 0a		 je	 SHORT $LN18@OnRender
  00ace	83 e8 01	 sub	 eax, 1
  00ad1	74 05		 je	 SHORT $LN18@OnRender
  00ad3	83 e8 01	 sub	 eax, 1
  00ad6	75 1a		 jne	 SHORT $LN7@OnRender
$LN18@OnRender:

; 189  : 	{
; 190  : 	case RENDERING_MODE_SCREEN:
; 191  : 	case RENDERING_MODE_COLOR_DODGE:
; 192  : 	case RENDERING_MODE_MODULATE:
; 193  : 		STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  00ad8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00ade	6a 13		 push	 19			; 00000013H
  00ae0	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 194  : 		STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  00ae5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00aeb	6a 14		 push	 20			; 00000014H
  00aed	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN7@OnRender:

; 195  : 		break;
; 196  : 	}
; 197  : 	STATEMANAGER.SetRenderState(D3DRS_CULLMODE, D3DCULL_CW);

  00af2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00af8	6a 02		 push	 2
  00afa	6a 16		 push	 22			; 00000016H
  00afc	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 198  : }

  00b01	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b04	33 cd		 xor	 ecx, ebp
  00b06	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b0b	8b e5		 mov	 esp, ebp
  00b0d	5d		 pop	 ebp
  00b0e	c3		 ret	 0
?OnRender@CGraphicExpandedImageInstance@@MAEXXZ ENDP	; CGraphicExpandedImageInstance::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?Initialize@CGraphicExpandedImageInstance@@IAEXXZ
_TEXT	SEGMENT
?Initialize@CGraphicExpandedImageInstance@@IAEXXZ PROC	; CGraphicExpandedImageInstance::Initialize, COMDAT
; _this$ = ecx

; 410  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 411  : 	m_iRenderingMode = RENDERING_MODE_NORMAL;
; 412  : 	m_fDepth = 0.0f;
; 413  : 	m_v2Origin.x = m_v2Origin.y = 0.0f;
; 414  : 	m_v2Scale.x = m_v2Scale.y = 1.0f;
; 415  : 	m_fRotation = 0.0f;
; 416  : #ifdef INGAME_WIKI
; 417  : 	memset(&m_RenderingRect, 0, sizeof(ExpandedRECT));
; 418  : 	memset(&m_TextureRenderingRect, 0, sizeof(RECT));

  00003	6a 30		 push	 48			; 00000030H
  00005	6a 00		 push	 0
  00007	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
  0000a	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0
  00014	50		 push	 eax
  00015	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  0001c	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  00023	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  0002a	c7 46 38 00 00
	80 3f		 mov	 DWORD PTR [esi+56], 1065353216 ; 3f800000H
  00031	c7 46 34 00 00
	80 3f		 mov	 DWORD PTR [esi+52], 1065353216 ; 3f800000H
  00038	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  0003f	e8 00 00 00 00	 call	 _memset
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH

; 419  : 	m_pColorMap = NULL;

  00047	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00051	0f 57 c0	 xorps	 xmm0, xmm0

; 420  : 
; 421  : 	memset(&m_renderBox, 0, sizeof(m_renderBox));

  00054	0f 11 46 70	 movups	 XMMWORD PTR [esi+112], xmm0
  00058	5e		 pop	 esi

; 422  : #else
; 423  : 	memset(&m_RenderingRect, 0, sizeof(RECT));
; 424  : #endif
; 425  : }

  00059	c3		 ret	 0
?Initialize@CGraphicExpandedImageInstance@@IAEXXZ ENDP	; CGraphicExpandedImageInstance::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetTextureRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z
_TEXT	SEGMENT
_fWidth$1$ = -4						; size = 4
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetTextureRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z PROC ; CGraphicExpandedImageInstance::SetTextureRenderingRect, COMDAT
; _this$ = ecx

; 301  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 302  : 	if (IsEmpty())

  00007	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0000c	84 c0		 test	 al, al
  0000e	75 5c		 jne	 SHORT $LN1@SetTexture

; 303  : 	{
; 304  : 		return;
; 305  : 	}
; 306  : 
; 307  : 	float fWidth = float(GetWidth());

  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth

; 308  : 	float fHeight = float(GetHeight());

  00017	8b ce		 mov	 ecx, esi
  00019	66 0f 6e c0	 movd	 xmm0, eax
  0001d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00020	f3 0f 11 45 fc	 movss	 DWORD PTR _fWidth$1$[ebp], xmm0
  00025	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight

; 309  : 
; 310  : 	m_TextureRenderingRect.left = fWidth * fLeft;

  0002a	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _fWidth$1$[ebp]
  0002f	0f 28 c1	 movaps	 xmm0, xmm1

; 311  : 	m_TextureRenderingRect.top = fHeight * fTop;
; 312  : 	m_TextureRenderingRect.right = fWidth * fRight;

  00032	f3 0f 59 4d 10	 mulss	 xmm1, DWORD PTR _fRight$[ebp]
  00037	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _fLeft$[ebp]
  0003c	66 0f 6e d0	 movd	 xmm2, eax
  00040	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00043	f3 0f 2c c0	 cvttss2si eax, xmm0
  00047	0f 28 c2	 movaps	 xmm0, xmm2

; 313  : 	m_TextureRenderingRect.bottom = fHeight * fBottom;

  0004a	f3 0f 59 55 14	 mulss	 xmm2, DWORD PTR _fBottom$[ebp]
  0004f	89 46 60	 mov	 DWORD PTR [esi+96], eax
  00052	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _fTop$[ebp]
  00057	f3 0f 2c c0	 cvttss2si eax, xmm0
  0005b	89 46 64	 mov	 DWORD PTR [esi+100], eax
  0005e	f3 0f 2c c1	 cvttss2si eax, xmm1
  00062	89 46 68	 mov	 DWORD PTR [esi+104], eax
  00065	f3 0f 2c c2	 cvttss2si eax, xmm2
  00069	89 46 6c	 mov	 DWORD PTR [esi+108], eax
$LN1@SetTexture:
  0006c	5e		 pop	 esi

; 314  : }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 10 00	 ret	 16			; 00000010H
?SetTextureRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ENDP ; CGraphicExpandedImageInstance::SetTextureRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?iSetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHHHHHH@Z
_TEXT	SEGMENT
_iLeftTop$ = 8						; size = 4
_iLeftBottom$ = 12					; size = 4
_iTopLeft$ = 16						; size = 4
_iTopRight$ = 20					; size = 4
_iRightTop$ = 24					; size = 4
_iRightBottom$ = 28					; size = 4
_iBottomLeft$ = 32					; size = 4
_iBottomRight$ = 36					; size = 4
?iSetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHHHHHH@Z PROC ; CGraphicExpandedImageInstance::iSetExpandedRenderingRect, COMDAT
; _this$ = ecx

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 285  : 	if (IsEmpty())

  00006	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0000b	84 c0		 test	 al, al
  0000d	75 30		 jne	 SHORT $LN1@iSetExpand

; 286  : 	{
; 287  : 		return;
; 288  : 	}
; 289  : 
; 290  : 	m_RenderingRect.left_top = iLeftTop;

  0000f	8b 45 08	 mov	 eax, DWORD PTR _iLeftTop$[ebp]
  00012	89 46 40	 mov	 DWORD PTR [esi+64], eax

; 291  : 	m_RenderingRect.left_bottom = iLeftBottom;

  00015	8b 45 0c	 mov	 eax, DWORD PTR _iLeftBottom$[ebp]
  00018	89 46 44	 mov	 DWORD PTR [esi+68], eax

; 292  : 	m_RenderingRect.top_left = iTopLeft;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _iTopLeft$[ebp]
  0001e	89 46 48	 mov	 DWORD PTR [esi+72], eax

; 293  : 	m_RenderingRect.top_right = iTopRight;

  00021	8b 45 14	 mov	 eax, DWORD PTR _iTopRight$[ebp]
  00024	89 46 4c	 mov	 DWORD PTR [esi+76], eax

; 294  : 	m_RenderingRect.right_top = iRightTop;

  00027	8b 45 18	 mov	 eax, DWORD PTR _iRightTop$[ebp]
  0002a	89 46 50	 mov	 DWORD PTR [esi+80], eax

; 295  : 	m_RenderingRect.right_bottom = iRightBottom;

  0002d	8b 45 1c	 mov	 eax, DWORD PTR _iRightBottom$[ebp]
  00030	89 46 54	 mov	 DWORD PTR [esi+84], eax

; 296  : 	m_RenderingRect.bottom_left = iBottomLeft;

  00033	8b 45 20	 mov	 eax, DWORD PTR _iBottomLeft$[ebp]
  00036	89 46 58	 mov	 DWORD PTR [esi+88], eax

; 297  : 	m_RenderingRect.bottom_right = iBottomRight;

  00039	8b 45 24	 mov	 eax, DWORD PTR _iBottomRight$[ebp]
  0003c	89 46 5c	 mov	 DWORD PTR [esi+92], eax
$LN1@iSetExpand:
  0003f	5e		 pop	 esi

; 298  : }

  00040	5d		 pop	 ebp
  00041	c2 20 00	 ret	 32			; 00000020H
?iSetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHHHHHH@Z ENDP ; CGraphicExpandedImageInstance::iSetExpandedRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z
_TEXT	SEGMENT
_iLeft$ = 8						; size = 4
_iTop$ = 12						; size = 4
_iRight$ = 16						; size = 4
_iBottom$ = 20						; size = 4
?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z PROC ; CGraphicExpandedImageInstance::iSetRenderingRect, COMDAT
; _this$ = ecx

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 275  : 	if (IsEmpty())

  00006	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0000b	84 c0		 test	 al, al
  0000d	75 1b		 jne	 SHORT $LN1@iSetRender

; 276  : 	{
; 277  : 		return;
; 278  : 	}
; 279  : 
; 280  : 	iSetExpandedRenderingRect(iLeft, iLeft, iTop, iTop, iRight, iRight, iBottom, iBottom);

  0000f	8b 45 14	 mov	 eax, DWORD PTR _iBottom$[ebp]
  00012	8b ce		 mov	 ecx, esi
  00014	50		 push	 eax
  00015	50		 push	 eax
  00016	8b 45 10	 mov	 eax, DWORD PTR _iRight$[ebp]
  00019	50		 push	 eax
  0001a	50		 push	 eax
  0001b	8b 45 0c	 mov	 eax, DWORD PTR _iTop$[ebp]
  0001e	50		 push	 eax
  0001f	50		 push	 eax
  00020	8b 45 08	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00023	50		 push	 eax
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?iSetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHHHHHH@Z ; CGraphicExpandedImageInstance::iSetExpandedRenderingRect
$LN1@iSetRender:
  0002a	5e		 pop	 esi

; 281  : }

  0002b	5d		 pop	 ebp
  0002c	c2 10 00	 ret	 16			; 00000010H
?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z ENDP ; CGraphicExpandedImageInstance::iSetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMMMMMM@Z
_TEXT	SEGMENT
_fWidth$1$ = -4						; size = 4
_fLeftTop$ = 8						; size = 4
_fLeftBottom$ = 12					; size = 4
_fTopLeft$ = 16						; size = 4
_fTopRight$ = 20					; size = 4
_fRightTop$ = 24					; size = 4
_fRightBottom$ = 28					; size = 4
_fBottomLeft$ = 32					; size = 4
_fBottomRight$ = 36					; size = 4
?SetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMMMMMM@Z PROC ; CGraphicExpandedImageInstance::SetExpandedRenderingRect, COMDAT
; _this$ = ecx

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 255  : 	if (IsEmpty())

  00007	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0000c	84 c0		 test	 al, al
  0000e	0f 85 98 00 00
	00		 jne	 $LN1@SetExpande

; 256  : 	{
; 257  : 		return;
; 258  : 	}
; 259  : 
; 260  : 	float fWidth = float(GetWidth());

  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth

; 261  : 	float fHeight = float(GetHeight());

  0001b	8b ce		 mov	 ecx, esi
  0001d	66 0f 6e c0	 movd	 xmm0, eax
  00021	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00024	f3 0f 11 45 fc	 movss	 DWORD PTR _fWidth$1$[ebp], xmm0
  00029	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight

; 262  : 
; 263  : 	m_RenderingRect.left_top = fWidth * fLeftTop;

  0002e	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _fWidth$1$[ebp]
  00033	0f 28 c1	 movaps	 xmm0, xmm1
  00036	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _fLeftTop$[ebp]
  0003b	66 0f 6e d0	 movd	 xmm2, eax
  0003f	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00042	f3 0f 2c c0	 cvttss2si eax, xmm0

; 264  : 	m_RenderingRect.left_bottom = fWidth * fLeftBottom;

  00046	0f 28 c1	 movaps	 xmm0, xmm1
  00049	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _fLeftBottom$[ebp]
  0004e	89 46 40	 mov	 DWORD PTR [esi+64], eax
  00051	f3 0f 2c c0	 cvttss2si eax, xmm0

; 265  : 	m_RenderingRect.top_left = fHeight * fTopLeft;

  00055	0f 28 c2	 movaps	 xmm0, xmm2
  00058	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _fTopLeft$[ebp]
  0005d	89 46 44	 mov	 DWORD PTR [esi+68], eax
  00060	f3 0f 2c c0	 cvttss2si eax, xmm0

; 266  : 	m_RenderingRect.top_right = fHeight * fTopRight;

  00064	0f 28 c2	 movaps	 xmm0, xmm2
  00067	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _fTopRight$[ebp]
  0006c	89 46 48	 mov	 DWORD PTR [esi+72], eax
  0006f	f3 0f 2c c0	 cvttss2si eax, xmm0

; 267  : 	m_RenderingRect.right_top = fWidth * fRightTop;

  00073	0f 28 c1	 movaps	 xmm0, xmm1

; 268  : 	m_RenderingRect.right_bottom = fWidth * fRightBottom;

  00076	f3 0f 59 4d 1c	 mulss	 xmm1, DWORD PTR _fRightBottom$[ebp]
  0007b	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  0007e	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _fRightTop$[ebp]
  00083	f3 0f 2c c0	 cvttss2si eax, xmm0

; 269  : 	m_RenderingRect.bottom_left = fHeight * fBottomLeft;

  00087	0f 28 c2	 movaps	 xmm0, xmm2

; 270  : 	m_RenderingRect.bottom_right = fHeight * fBottomRight;

  0008a	f3 0f 59 55 24	 mulss	 xmm2, DWORD PTR _fBottomRight$[ebp]
  0008f	89 46 50	 mov	 DWORD PTR [esi+80], eax
  00092	f3 0f 59 45 20	 mulss	 xmm0, DWORD PTR _fBottomLeft$[ebp]
  00097	f3 0f 2c c1	 cvttss2si eax, xmm1
  0009b	89 46 54	 mov	 DWORD PTR [esi+84], eax
  0009e	f3 0f 2c c0	 cvttss2si eax, xmm0
  000a2	89 46 58	 mov	 DWORD PTR [esi+88], eax
  000a5	f3 0f 2c c2	 cvttss2si eax, xmm2
  000a9	89 46 5c	 mov	 DWORD PTR [esi+92], eax
$LN1@SetExpande:
  000ac	5e		 pop	 esi

; 271  : }

  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 20 00	 ret	 32			; 00000020H
?SetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMMMMMM@Z ENDP ; CGraphicExpandedImageInstance::SetExpandedRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?GetRenderHeight@CGraphicExpandedImageInstance@@QAEHXZ
_TEXT	SEGMENT
?GetRenderHeight@CGraphicExpandedImageInstance@@QAEHXZ PROC ; CGraphicExpandedImageInstance::GetRenderHeight, COMDAT
; _this$ = ecx

; 323  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 324  : 	return GetHeight() * m_v2Scale.y;

  00003	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00008	66 0f 6e c0	 movd	 xmm0, eax
  0000c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0000f	f3 0f 59 46 38	 mulss	 xmm0, DWORD PTR [esi+56]
  00014	5e		 pop	 esi
  00015	f3 0f 2c c0	 cvttss2si eax, xmm0

; 325  : }

  00019	c3		 ret	 0
?GetRenderHeight@CGraphicExpandedImageInstance@@QAEHXZ ENDP ; CGraphicExpandedImageInstance::GetRenderHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?GetRenderWidth@CGraphicExpandedImageInstance@@QAEHXZ
_TEXT	SEGMENT
?GetRenderWidth@CGraphicExpandedImageInstance@@QAEHXZ PROC ; CGraphicExpandedImageInstance::GetRenderWidth, COMDAT
; _this$ = ecx

; 318  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 319  : 	return GetWidth() * m_v2Scale.x;

  00003	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00008	66 0f 6e c0	 movd	 xmm0, eax
  0000c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0000f	f3 0f 59 46 34	 mulss	 xmm0, DWORD PTR [esi+52]
  00014	5e		 pop	 esi
  00015	f3 0f 2c c0	 cvttss2si eax, xmm0

; 320  : }

  00019	c3		 ret	 0
?GetRenderWidth@CGraphicExpandedImageInstance@@QAEHXZ ENDP ; CGraphicExpandedImageInstance::GetRenderWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?GetPixelColor@CGraphicExpandedImageInstance@@QAEKKK@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetPixelColor@CGraphicExpandedImageInstance@@QAEKKK@Z PROC ; CGraphicExpandedImageInstance::GetPixelColor, COMDAT
; _this$ = ecx

; 366  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 367  : 	if (!m_pColorMap)

  00007	83 bf 80 00 00
	00 00		 cmp	 DWORD PTR [edi+128], 0
  0000e	75 05		 jne	 SHORT $LN2@GetPixelCo

; 368  : 	{
; 369  : 		SaveColorMap();

  00010	e8 00 00 00 00	 call	 ?SaveColorMap@CGraphicExpandedImageInstance@@AAEXXZ ; CGraphicExpandedImageInstance::SaveColorMap
$LN2@GetPixelCo:

; 370  : 	}
; 371  : 
; 372  : 	return m_pColorMap[y * GetWidth() + x];

  00015	8b b7 80 00 00
	00		 mov	 esi, DWORD PTR [edi+128]
  0001b	8b cf		 mov	 ecx, edi
  0001d	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00022	0f af 45 0c	 imul	 eax, DWORD PTR _y$[ebp]
  00026	5f		 pop	 edi
  00027	03 45 08	 add	 eax, DWORD PTR _x$[ebp]
  0002a	8b 04 86	 mov	 eax, DWORD PTR [esi+eax*4]
  0002d	5e		 pop	 esi

; 373  : }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?GetPixelColor@CGraphicExpandedImageInstance@@QAEKKK@Z ENDP ; CGraphicExpandedImageInstance::GetPixelColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetRenderBox@CGraphicExpandedImageInstance@@QAEXAAUtagRECT@@@Z
_TEXT	SEGMENT
_renderBox$ = 8						; size = 4
?SetRenderBox@CGraphicExpandedImageInstance@@QAEXAAUtagRECT@@@Z PROC ; CGraphicExpandedImageInstance::SetRenderBox, COMDAT
; _this$ = ecx

; 429  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 430  : 	memcpy(&m_renderBox, &renderBox, sizeof(m_renderBox));

  00003	8b 45 08	 mov	 eax, DWORD PTR _renderBox$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 41 70	 movups	 XMMWORD PTR [ecx+112], xmm0

; 431  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetRenderBox@CGraphicExpandedImageInstance@@QAEXAAUtagRECT@@@Z ENDP ; CGraphicExpandedImageInstance::SetRenderBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z
_TEXT	SEGMENT
_iMode$ = 8						; size = 4
?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z PROC ; CGraphicExpandedImageInstance::SetRenderingMode, COMDAT
; _this$ = ecx

; 248  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 249  : 	m_iRenderingMode = iMode;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iMode$[ebp]
  00006	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 250  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ENDP ; CGraphicExpandedImageInstance::SetRenderingMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z
_TEXT	SEGMENT
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z PROC ; CGraphicExpandedImageInstance::SetRenderingRect, COMDAT
; _this$ = ecx

; 228  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 229  : 	if (IsEmpty())

  00006	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0000b	84 c0		 test	 al, al
  0000d	75 4d		 jne	 SHORT $LN1@SetRenderi

; 230  : 	{
; 231  : 		return;
; 232  : 	}
; 233  : 
; 234  : #ifdef INGAME_WIKI
; 235  : 	SetExpandedRenderingRect(fLeft, fLeft, fTop, fTop, fRight, fRight, fBottom, fBottom);

  0000f	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00014	83 ec 20	 sub	 esp, 32			; 00000020H
  00017	8b ce		 mov	 ecx, esi
  00019	f3 0f 11 44 24
	1c		 movss	 DWORD PTR [esp+28], xmm0
  0001f	f3 0f 11 44 24
	18		 movss	 DWORD PTR [esp+24], xmm0
  00025	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  0002a	f3 0f 11 44 24
	14		 movss	 DWORD PTR [esp+20], xmm0
  00030	f3 0f 11 44 24
	10		 movss	 DWORD PTR [esp+16], xmm0
  00036	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  0003b	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00041	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00047	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  0004c	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00052	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00057	e8 00 00 00 00	 call	 ?SetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMMMMMM@Z ; CGraphicExpandedImageInstance::SetExpandedRenderingRect
$LN1@SetRenderi:
  0005c	5e		 pop	 esi

; 236  : #else
; 237  : 	float fWidth = float(GetWidth());
; 238  : 	float fHeight = float(GetHeight());
; 239  : 
; 240  : 	m_RenderingRect.left = fWidth * fLeft;
; 241  : 	m_RenderingRect.top = fHeight * fTop;
; 242  : 	m_RenderingRect.right = fWidth * fRight;
; 243  : 	m_RenderingRect.bottom = fHeight * fBottom;
; 244  : #endif
; 245  : }

  0005d	5d		 pop	 ebp
  0005e	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ENDP ; CGraphicExpandedImageInstance::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z PROC	; CGraphicExpandedImageInstance::SetScale, COMDAT
; _this$ = ecx

; 222  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 223  : 	m_v2Scale.x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	f3 0f 11 41 34	 movss	 DWORD PTR [ecx+52], xmm0

; 224  : 	m_v2Scale.y = fy;

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	f3 0f 11 41 38	 movss	 DWORD PTR [ecx+56], xmm0

; 225  : }

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z ENDP	; CGraphicExpandedImageInstance::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z
_TEXT	SEGMENT
_fRotation$ = 8						; size = 4
?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z PROC ; CGraphicExpandedImageInstance::SetRotation, COMDAT
; _this$ = ecx

; 217  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 218  : 	m_fRotation = fRotation;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fRotation$[ebp]
  00008	f3 0f 11 41 3c	 movss	 DWORD PTR [ecx+60], xmm0

; 219  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z ENDP ; CGraphicExpandedImageInstance::SetRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z PROC	; CGraphicExpandedImageInstance::SetOrigin, COMDAT
; _this$ = ecx

; 211  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 212  : 	m_v2Origin.x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	f3 0f 11 41 2c	 movss	 DWORD PTR [ecx+44], xmm0

; 213  : 	m_v2Origin.y = fy;

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	f3 0f 11 41 30	 movss	 DWORD PTR [ecx+48], xmm0

; 214  : }

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z ENDP	; CGraphicExpandedImageInstance::SetOrigin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetOrigin@CGraphicExpandedImageInstance@@QAEXXZ
_TEXT	SEGMENT
tv68 = -4						; size = 4
?SetOrigin@CGraphicExpandedImageInstance@@QAEXXZ PROC	; CGraphicExpandedImageInstance::SetOrigin, COMDAT
; _this$ = ecx

; 206  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 207  : 	SetOrigin(float(GetWidth()) / 2.0f, float(GetHeight()) / 2.0f);

  00007	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0000c	8b ce		 mov	 ecx, esi
  0000e	66 0f 6e c0	 movd	 xmm0, eax
  00012	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00015	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  0001d	f3 0f 11 45 fc	 movss	 DWORD PTR tv68[ebp], xmm0
  00022	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00027	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR tv68[ebp]
  0002c	83 ec 08	 sub	 esp, 8
  0002f	8b ce		 mov	 ecx, esi
  00031	66 0f 6e c0	 movd	 xmm0, eax
  00035	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00038	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  0003e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00046	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004b	e8 00 00 00 00	 call	 ?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetOrigin
  00050	5e		 pop	 esi

; 208  : }

  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
?SetOrigin@CGraphicExpandedImageInstance@@QAEXXZ ENDP	; CGraphicExpandedImageInstance::SetOrigin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?SetDepth@CGraphicExpandedImageInstance@@QAEXM@Z
_TEXT	SEGMENT
_fDepth$ = 8						; size = 4
?SetDepth@CGraphicExpandedImageInstance@@QAEXM@Z PROC	; CGraphicExpandedImageInstance::SetDepth, COMDAT
; _this$ = ecx

; 201  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 	m_fDepth = fDepth;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fDepth$[ebp]
  00008	f3 0f 11 41 28	 movss	 DWORD PTR [ecx+40], xmm0

; 203  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetDepth@CGraphicExpandedImageInstance@@QAEXM@Z ENDP	; CGraphicExpandedImageInstance::SetDepth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CGraphicExpandedImageInstance@@QAEXXZ PROC	; CGraphicExpandedImageInstance::Destroy, COMDAT
; _this$ = ecx

; 434  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 435  : 	CGraphicImageInstance::Destroy();

  00003	e8 00 00 00 00	 call	 ?Destroy@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Destroy

; 436  : 
; 437  : 	if (m_pColorMap)

  00008	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  0000e	85 c0		 test	 eax, eax
  00010	74 09		 je	 SHORT $LN2@Destroy

; 438  : 	{
; 439  : 		delete[] m_pColorMap;

  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00018	83 c4 04	 add	 esp, 4
$LN2@Destroy:

; 440  : 	}
; 441  : 
; 442  : 	Initialize();

  0001b	8b ce		 mov	 ecx, esi
  0001d	5e		 pop	 esi
  0001e	e9 00 00 00 00	 jmp	 ?Initialize@CGraphicExpandedImageInstance@@IAEXXZ ; CGraphicExpandedImageInstance::Initialize
?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ENDP	; CGraphicExpandedImageInstance::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ??1CGraphicExpandedImageInstance@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGraphicExpandedImageInstance@@UAE@XZ PROC		; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance, COMDAT
; _this$ = ecx

; 459  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGraphicExpandedImageInstance@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicExpandedImageInstance@@6B@

; 460  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy

; 461  : }

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGraphicExpandedImageInstance@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGraphicExpandedImageInstance@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGraphicExpandedImageInstance@@UAE@XZ ENDP		; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ??0CGraphicExpandedImageInstance@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGraphicExpandedImageInstance@@QAE@XZ PROC		; CGraphicExpandedImageInstance::CGraphicExpandedImageInstance, COMDAT
; _this$ = ecx

; 454  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance

; 455  : 	Initialize();

  0000f	8b ce		 mov	 ecx, esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicExpandedImageInstance@@6B@
  00017	e8 00 00 00 00	 call	 ?Initialize@CGraphicExpandedImageInstance@@IAEXXZ ; CGraphicExpandedImageInstance::Initialize

; 456  : }

  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??0CGraphicExpandedImageInstance@@QAE@XZ ENDP		; CGraphicExpandedImageInstance::CGraphicExpandedImageInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpExpandedImageInstance.cpp
;	COMDAT ?Type@CGraphicExpandedImageInstance@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CGraphicExpandedImageInstance@@SAKXZ PROC		; CGraphicExpandedImageInstance::Type, COMDAT

; 377  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CGraphicExpandedImageInstance@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 378  : 	static DWORD s_dwType = GetCRC32("CGraphicExpandedImageInstance", strlen("CGraphicExpandedImageInstance"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 379  : 	return (s_dwType);
; 380  : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 378  : 	static DWORD s_dwType = GetCRC32("CGraphicExpandedImageInstance", strlen("CGraphicExpandedImageInstance"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 1d		 push	 29			; 0000001dH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@COPDODEE@CGraphicExpandedImageInstance@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CGraphicExpandedImageInstance@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicExpandedImageInstance@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CGraphicExpandedImageInstance@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CGraphicExpandedImageInstance@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CGraphicExpandedImageInstance@@SAKXZ ENDP		; CGraphicExpandedImageInstance::Type
; Function compile flags: /Ogtp
;	COMDAT ??0SPDTVertex@@QAE@XZ
_TEXT	SEGMENT
??0SPDTVertex@@QAE@XZ PROC				; SPDTVertex::SPDTVertex, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0SPDTVertex@@QAE@XZ ENDP				; SPDTVertex::SPDTVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 324  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
