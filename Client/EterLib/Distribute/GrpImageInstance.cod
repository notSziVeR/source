; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Distribute\GrpImageInstance.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_Fake_alloc@std@@3U_Fake_allocator@1@B		; std::_Fake_alloc
PUBLIC	??_7?$CDynamicPool@VCGraphicImageInstance@@@@6B@ ; CDynamicPool<CGraphicImageInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCGraphicImageInstance@@@@UAEPAXI@Z ; CDynamicPool<CGraphicImageInstance>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCGraphicImageInstance@@@@6B@ ; CDynamicPool<CGraphicImageInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCGraphicImageInstance@@@@@8 ; CDynamicPool<CGraphicImageInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCGraphicImageInstance@@@@8	; CDynamicPool<CGraphicImageInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCGraphicImageInstance@@@@8	; CDynamicPool<CGraphicImageInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCGraphicImageInstance@@@@8 ; CDynamicPool<CGraphicImageInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_E?$CDynamicPool@VCGraphicImageInstance@@@@UAEPAXI@Z:PROC ; CDynamicPool<CGraphicImageInstance>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCGraphicImageInstance@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCGraphicImageInstance@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCGraphicImageInstance@@@@@8 ; CDynamicPool<CGraphicImageInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCGraphicImageInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCGraphicImageInstance@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCGraphicImageInstance@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCGraphicImageInstance@@@@8 ; CDynamicPool<CGraphicImageInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCGraphicImageInstance@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCGraphicImageInstance@@@@8 DD 00H	; CDynamicPool<CGraphicImageInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCGraphicImageInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCGraphicImageInstance@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@VCGraphicImageInstance@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CGraphicImageInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCGraphicImageInstance@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCGraphicImageInstance@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCGraphicImageInstance@@@@6B@ DD 00H ; CDynamicPool<CGraphicImageInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCGraphicImageInstance@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCGraphicImageInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@VCGraphicImageInstance@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCGraphicImageInstance@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCGraphicImageInstance@@@@6B@ ; CDynamicPool<CGraphicImageInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCGraphicImageInstance@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?_Fake_alloc@std@@3U_Fake_allocator@1@B
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0SPDTVertex@@QAE@XZ				; SPDTVertex::SPDTVertex
PUBLIC	?Type@CGraphicImageInstance@@SAKXZ		; CGraphicImageInstance::Type
PUBLIC	?IsType@CGraphicImageInstance@@QAEHK@Z		; CGraphicImageInstance::IsType
PUBLIC	??0CGraphicImageInstance@@QAE@XZ		; CGraphicImageInstance::CGraphicImageInstance
PUBLIC	??1CGraphicImageInstance@@UAE@XZ		; CGraphicImageInstance::~CGraphicImageInstance
PUBLIC	?Destroy@CGraphicImageInstance@@QAEXXZ		; CGraphicImageInstance::Destroy
PUBLIC	?Render@CGraphicImageInstance@@QAEXXZ		; CGraphicImageInstance::Render
PUBLIC	?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
PUBLIC	?SetScale@CGraphicImageInstance@@QAEXMM@Z	; CGraphicImageInstance::SetScale
PUBLIC	?SetPosition@CGraphicImageInstance@@QAEXMM@Z	; CGraphicImageInstance::SetPosition
PUBLIC	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
PUBLIC	?ReloadImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::ReloadImagePointer
PUBLIC	?IsEmpty@CGraphicImageInstance@@QBE_NXZ		; CGraphicImageInstance::IsEmpty
PUBLIC	?GetWidth@CGraphicImageInstance@@QAEHXZ		; CGraphicImageInstance::GetWidth
PUBLIC	?GetHeight@CGraphicImageInstance@@QAEHXZ	; CGraphicImageInstance::GetHeight
PUBLIC	?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer
PUBLIC	?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTextureReference
PUBLIC	?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
PUBLIC	??8CGraphicImageInstance@@QBE_NABV0@@Z		; CGraphicImageInstance::operator==
PUBLIC	?Initialize@CGraphicImageInstance@@IAEXXZ	; CGraphicImageInstance::Initialize
PUBLIC	?OnRender@CGraphicImageInstance@@MAEXXZ		; CGraphicImageInstance::OnRender
PUBLIC	?OnSetImagePointer@CGraphicImageInstance@@MAEXXZ ; CGraphicImageInstance::OnSetImagePointer
PUBLIC	?OnIsType@CGraphicImageInstance@@MAEHK@Z	; CGraphicImageInstance::OnIsType
PUBLIC	?CreateSystem@CGraphicImageInstance@@SAXI@Z	; CGraphicImageInstance::CreateSystem
PUBLIC	?DestroySystem@CGraphicImageInstance@@SAXXZ	; CGraphicImageInstance::DestroySystem
PUBLIC	?New@CGraphicImageInstance@@SAPAV1@XZ		; CGraphicImageInstance::New
PUBLIC	?Delete@CGraphicImageInstance@@SAXPAV1@@Z	; CGraphicImageInstance::Delete
PUBLIC	??_GCGraphicImageInstance@@UAEPAXI@Z		; CGraphicImageInstance::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCGraphicImageInstance@@@@UAE@XZ ; CDynamicPool<CGraphicImageInstance>::~CDynamicPool<CGraphicImageInstance>
PUBLIC	?Delete@?$CDynamicPool@VCGraphicImageInstance@@@@KAXPAVCGraphicImageInstance@@@Z ; CDynamicPool<CGraphicImageInstance>::Delete
PUBLIC	?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
PUBLIC	?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A ; CGraphicImageInstance::ms_kPool
PUBLIC	??_7CGraphicImageInstance@@6B@			; CGraphicImageInstance::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_C@_0BG@OHFFHEGB@CGraphicImageInstance@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CGraphicImageInstance@@6B@			; CGraphicImageInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicImageInstance@@@8		; CGraphicImageInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicImageInstance@@8			; CGraphicImageInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicImageInstance@@8			; CGraphicImageInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicImageInstance@@8		; CGraphicImageInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@437f0000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?Reload@CResource@@QAEXXZ:PROC			; CResource::Reload
EXTRN	?IsEmpty@CResource@@QBE_NXZ:PROC		; CResource::IsEmpty
EXTRN	?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z:PROC ; CGraphicBase::SetDefaultIndexBuffer
EXTRN	?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z:PROC ; CGraphicBase::SetPDTStream
EXTRN	?GetWidth@CGraphicTexture@@QBEHXZ:PROC		; CGraphicTexture::GetWidth
EXTRN	?GetHeight@CGraphicTexture@@QBEHXZ:PROC		; CGraphicTexture::GetHeight
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture9@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	?GetWidth@CGraphicImage@@QBEHXZ:PROC		; CGraphicImage::GetWidth
EXTRN	?GetHeight@CGraphicImage@@QBEHXZ:PROC		; CGraphicImage::GetHeight
EXTRN	?GetRectReference@CGraphicImage@@QBEABUtagRECT@@XZ:PROC ; CGraphicImage::GetRectReference
EXTRN	?GetTextureReference@CGraphicImage@@QBEABVCGraphicTexture@@XZ:PROC ; CGraphicImage::GetTextureReference
EXTRN	?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImage::GetTexturePointer
EXTRN	??_ECGraphicImageInstance@@UAEPAXI@Z:PROC	; CGraphicImageInstance::`vector deleting destructor'
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture9@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetFVF@CStateManager@@QAEXK@Z:PROC		; CStateManager::SetFVF
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIIH@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol3:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CGraphicImageInstance@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CGraphicImageInstance@@SAKXZ@4KA DD 01H DUP (?) ; `CGraphicImageInstance::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CGraphicImageInstance@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CGraphicImageInstance@@SAKXZ@4HA DD 01H DUP (?) ; `CGraphicImageInstance::Type'::`2'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CGraphicImageInstance@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CGraphicImageInstance@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicImageInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicImageInstance@@8 DD FLAT:??_R0?AVCGraphicImageInstance@@@8 ; CGraphicImageInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicImageInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicImageInstance@@8
rdata$r	SEGMENT
??_R2CGraphicImageInstance@@8 DD FLAT:??_R1A@?0A@EA@CGraphicImageInstance@@8 ; CGraphicImageInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicImageInstance@@8
rdata$r	SEGMENT
??_R3CGraphicImageInstance@@8 DD 00H			; CGraphicImageInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicImageInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicImageInstance@@@8
data$rs	SEGMENT
??_R0?AVCGraphicImageInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicImageInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicImageInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGraphicImageInstance@@6B@
rdata$r	SEGMENT
??_R4CGraphicImageInstance@@6B@ DD 00H			; CGraphicImageInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicImageInstance@@@8
	DD	FLAT:??_R3CGraphicImageInstance@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OHFFHEGB@CGraphicImageInstance@
CONST	SEGMENT
??_C@_0BG@OHFFHEGB@CGraphicImageInstance@ DB 'CGraphicImageInstance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicImageInstance@@6B@
CONST	SEGMENT
??_7CGraphicImageInstance@@6B@ DD FLAT:??_R4CGraphicImageInstance@@6B@ ; CGraphicImageInstance::`vftable'
	DD	FLAT:??_ECGraphicImageInstance@@UAEPAXI@Z
	DD	FLAT:?OnRender@CGraphicImageInstance@@MAEXXZ
	DD	FLAT:?OnSetImagePointer@CGraphicImageInstance@@MAEXXZ
	DD	FLAT:?OnIsType@CGraphicImageInstance@@MAEHK@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A DD FLAT:??_7?$CDynamicPool@VCGraphicImageInstance@@@@6B@ ; CGraphicImageInstance::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CRef@VCGraphicImage@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CGraphicImageInstance@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CGraphicImageInstance@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CGraphicImageInstance@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CGraphicImageInstance@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CGraphicImageInstance@@SAKXZ$0
__ehfuncinfo$?Type@CGraphicImageInstance@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CGraphicImageInstance@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv495 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	2b c2		 sub	 eax, edx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	2b c2		 sub	 eax, edx
  0001d	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 d2 00 00
	00		 je	 $LN66@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b ca		 sub	 ecx, edx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 f9 02	 sar	 ecx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b d1		 mov	 edx, ecx
  00040	d1 ea		 shr	 edx, 1
  00042	2b c2		 sub	 eax, edx
  00044	3b c8		 cmp	 ecx, eax
  00046	76 17		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00048	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  0004d	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00058	83 c4 04	 add	 esp, 4
  0005b	8b f8		 mov	 edi, eax
  0005d	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00062	8b f7		 mov	 esi, edi
  00064	3b c7		 cmp	 eax, edi
  00066	0f 43 f0	 cmovae	 esi, eax
  00069	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0006f	0f 87 8d 00 00
	00		 ja	 $LN67@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00075	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b f8		 mov	 edi, eax
  0008e	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  00090	85 c0		 test	 eax, eax
  00092	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009a	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009d	8b f8		 mov	 edi, eax
  0009f	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000a1	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000a6	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000ac	89 4d fc	 mov	 DWORD PTR tv495[ebp], ecx
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	89 01		 mov	 DWORD PTR [ecx], eax

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b6	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000bb	3b c1		 cmp	 eax, ecx
  000bd	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bf	8b c7		 mov	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000c1	eb 17		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c3	57		 push	 edi
  000c4	50		 push	 eax
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	83 c0 04	 add	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d7	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000e5	8b cb		 mov	 ecx, ebx
  000e7	56		 push	 esi
  000e8	ff 75 f8	 push	 DWORD PTR __Newsize$1$[ebp]
  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Change_array

; 920  :         return _Newvec + _Whereoff;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx

; 921  :     }

  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
$LN66@Emplace_re:

; 888  :             _Xlength();

  000fd	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN67@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00102	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN64@Emplace_re:
  00107	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CGraphicImageInstance::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A ; CGraphicImageInstance::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCGraphicImageInstance@@@@UAE@XZ ; CDynamicPool<CGraphicImageInstance>::~CDynamicPool<CGraphicImageInstance>
??__F?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CGraphicImageInstance::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ??__E?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CGraphicImageInstance::ms_kPool'', COMDAT

; 11   : CDynamicPool<CGraphicImageInstance>		CGraphicImageInstance::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CGraphicImageInstance::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CGraphicImageInstance::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCGraphicImageInstance@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCGraphicImageInstance@@@@UAEPAXI@Z PROC ; CDynamicPool<CGraphicImageInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCGraphicImageInstance@@@@UAE@XZ ; CDynamicPool<CGraphicImageInstance>::~CDynamicPool<CGraphicImageInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCGraphicImageInstance@@@@UAEPAXI@Z ENDP ; CDynamicPool<CGraphicImageInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Change_array, COMDAT
; _this$ = ecx

; 2076 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2077 :         // orphan all iterators, discard old array, acquire new array
; 2078 :         auto& _Al         = _Getal();
; 2079 :         auto& _My_data    = _Mypair._Myval2;
; 2080 :         pointer& _Myfirst = _My_data._Myfirst;
; 2081 :         pointer& _Mylast  = _My_data._Mylast;
; 2082 :         pointer& _Myend   = _My_data._Myend;
; 2083 : 
; 2084 :         _My_data._Orphan_all();
; 2085 : 
; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN8@Change_arr

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN18@Change_arr

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN15@Change_arr

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN18@Change_arr:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2092 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 2096 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Size$1$ = -4						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 1665 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1666 :         auto& _Al         = _Getal();
; 1667 :         auto& _My_data    = _Mypair._Myval2;
; 1668 :         pointer& _Myfirst = _My_data._Myfirst;
; 1669 :         pointer& _Mylast  = _My_data._Mylast;
; 1670 : 
; 1671 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000f	2b 06		 sub	 eax, DWORD PTR [esi]
  00011	c1 f8 02	 sar	 eax, 2
  00014	89 45 fc	 mov	 DWORD PTR __Size$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00017	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0001d	0f 87 8a 00 00
	00		 ja	 $LN55@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00023	c1 e3 02	 shl	 ebx, 2

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  0002c	72 0d		 jb	 SHORT $LN15@Reallocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00034	83 c4 04	 add	 esp, 4
  00037	8b f8		 mov	 edi, eax
  00039	eb 13		 jmp	 SHORT $LN14@Reallocate
$LN15@Reallocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0003b	85 db		 test	 ebx, ebx
  0003d	74 0d		 je	 SHORT $LN16@Reallocate

; 77   :         return ::operator new(_Bytes);

  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00045	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00048	8b f8		 mov	 edi, eax
  0004a	eb 02		 jmp	 SHORT $LN14@Reallocate
$LN16@Reallocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0004c	33 ff		 xor	 edi, edi
$LN14@Reallocate:

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004e	57		 push	 edi
  0004f	ff 76 04	 push	 DWORD PTR [esi+4]
  00052	ff 36		 push	 DWORD PTR [esi]
  00054	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00059	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 2c		 je	 SHORT $LN39@Reallocate

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN49@Reallocate

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 26		 ja	 SHORT $LN46@Reallocate

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN49@Reallocate:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008b	83 c4 08	 add	 esp, 8
$LN39@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR __Size$1$[ebp]
  00091	89 3e		 mov	 DWORD PTR [esi], edi
  00093	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00099	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  0009c	5f		 pop	 edi
  0009d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 1687 :     }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
$LN46@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN55@Reallocate:

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000ad	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN53@Reallocate:
  000b2	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCGraphicImageInstance@@@@KAXPAVCGraphicImageInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCGraphicImageInstance@@@@KAXPAVCGraphicImageInstance@@@Z PROC ; CDynamicPool<CGraphicImageInstance>::Delete, COMDAT

; 113  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  : 		delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 115  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCGraphicImageInstance@@@@KAXPAVCGraphicImageInstance@@@Z ENDP ; CDynamicPool<CGraphicImageInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCGraphicImageInstance@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCGraphicImageInstance@@@@UAE@XZ PROC	; CDynamicPool<CGraphicImageInstance>::~CDynamicPool<CGraphicImageInstance>, COMDAT
; _this$ = ecx

; 18   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCGraphicImageInstance@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 2114 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 2114 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 26   : 	}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@VCGraphicImageInstance@@@@UAE@XZ ENDP	; CDynamicPool<CGraphicImageInstance>::~CDynamicPool<CGraphicImageInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicImageInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicImageInstance@@UAEPAXI@Z PROC		; CGraphicImageInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 28		 push	 40			; 00000028H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCGraphicImageInstance@@UAEPAXI@Z ENDP		; CGraphicImageInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?Delete@CGraphicImageInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkImgInst$ = 8						; size = 4
?Delete@CGraphicImageInstance@@SAXPAV1@@Z PROC		; CGraphicImageInstance::Delete, COMDAT

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 30   : 	pkImgInst->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkImgInst$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Destroy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 31   : 	ms_kPool.Free(pkImgInst);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 32   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
  00039	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 32   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CGraphicImageInstance@@SAXPAV1@@Z ENDP		; CGraphicImageInstance::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?New@CGraphicImageInstance@@SAPAV1@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pkNewData$2 = -4					; size = 4
?New@CGraphicImageInstance@@SAPAV1@XZ PROC		; CGraphicImageInstance::New, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 63   : 		if (m_kVct_pkFree.empty())

  00010	75 5c		 jne	 SHORT $LN4@New

; 65   : 			T* pkNewData = new T;

  00012	6a 28		 push	 40			; 00000028H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00019	83 c4 04	 add	 esp, 4
  0001c	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0001f	85 c0		 test	 eax, eax
  00021	74 09		 je	 SHORT $LN6@New
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0002a	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  0002c	33 c0		 xor	 eax, eax
$LN7@New:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002e	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 65   : 			T* pkNewData = new T;

  00034	89 45 fc	 mov	 DWORD PTR _pkNewData$2[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00037	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+12
  0003d	74 13		 je	 SHORT $LN14@New

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0003f	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00041	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 67   : 			++m_uUsedCapacity;

  00048	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+32
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 26   : }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN14@New:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00052	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$2[ebp]
  00055	50		 push	 eax
  00056	51		 push	 ecx
  00057	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+4
  0005c	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
  00061	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$2[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 67   : 			++m_uUsedCapacity;

  00064	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+32
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 26   : }

  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
$LN4@New:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 71   : 		T* pkFreeData = m_kVct_pkFree.back();

  0006e	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  00071	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00074	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 26   : }

  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
?New@CGraphicImageInstance@@SAPAV1@XZ ENDP		; CGraphicImageInstance::New
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?DestroySystem@CGraphicImageInstance@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CGraphicImageInstance@@SAXXZ PROC	; CGraphicImageInstance::DestroySystem, COMDAT

; 19   : {

  00000	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 19   : {

  00007	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 21		 je	 SHORT $LN38@DestroySys
$LL20@DestroySys:

; 266  :         _Func(*_UFirst);

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 114  : 		delete pkData;

  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN26@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN26@DestroySys:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
  00025	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+8
  0002b	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	3b f7		 cmp	 esi, edi
$LN38@DestroySys:
  00033	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20
  00039	0f 45 fe	 cmovne	 edi, esi
  0003c	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16, ecx
  00042	89 3d 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+8, edi
  00048	0f 45 0d 10 00
	00 00		 cmovne	 ecx, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16
  0004f	5f		 pop	 edi
  00050	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20, ecx
  00056	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 21   : }

  00057	c3		 ret	 0
?DestroySystem@CGraphicImageInstance@@SAXXZ ENDP	; CGraphicImageInstance::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?CreateSystem@CGraphicImageInstance@@SAXI@Z
_TEXT	SEGMENT
_uCapacity$ = 8						; size = 4
?CreateSystem@CGraphicImageInstance@@SAXI@Z PROC	; CGraphicImageInstance::CreateSystem, COMDAT

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00003	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+12
  00008	2b 05 04 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 14   : {

  0000e	56		 push	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 57   : 		m_uInitCapacity = uCapacity;

  0000f	8b 75 08	 mov	 esi, DWORD PTR _uCapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00012	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Pool.h

; 57   : 		m_uInitCapacity = uCapacity;

  00015	89 35 1c 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+28, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1743 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  0001b	3b f0		 cmp	 esi, eax
  0001d	76 13		 jbe	 SHORT $LN6@CreateSyst

; 1744 :             if (_Newcapacity > max_size()) {

  0001f	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  00025	77 33		 ja	 SHORT $LN19@CreateSyst

; 1746 :             }
; 1747 : 
; 1748 :             _Reallocate_exactly(_Newcapacity);

  00027	56		 push	 esi
  00028	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+4
  0002d	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
$LN6@CreateSyst:

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00032	a1 18 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+24
  00037	2b 05 10 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16
  0003d	c1 f8 02	 sar	 eax, 2

; 1743 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00040	3b f0		 cmp	 esi, eax
  00042	76 13		 jbe	 SHORT $LN13@CreateSyst

; 1744 :             if (_Newcapacity > max_size()) {

  00044	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0004a	77 0e		 ja	 SHORT $LN19@CreateSyst

; 1746 :             }
; 1747 : 
; 1748 :             _Reallocate_exactly(_Newcapacity);

  0004c	56		 push	 esi
  0004d	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16
  00052	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
$LN13@CreateSyst:
  00057	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 16   : }

  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN19@CreateSyst:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1745 :                 _Xlength();

  0005a	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN21@CreateSyst:
  0005f	cc		 int	 3
?CreateSystem@CGraphicImageInstance@@SAXI@Z ENDP	; CGraphicImageInstance::CreateSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?OnIsType@CGraphicImageInstance@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CGraphicImageInstance@@MAEHK@Z PROC		; CGraphicImageInstance::OnIsType, COMDAT
; _this$ = ecx

; 210  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 211  : 	if (CGraphicImageInstance::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CGraphicImageInstance@@SAKXZ ; CGraphicImageInstance::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 212  : 	{
; 213  : 		return TRUE;
; 214  : 	}
; 215  : 
; 216  : 	return FALSE;
; 217  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CGraphicImageInstance@@MAEHK@Z ENDP		; CGraphicImageInstance::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?OnSetImagePointer@CGraphicImageInstance@@MAEXXZ
_TEXT	SEGMENT
?OnSetImagePointer@CGraphicImageInstance@@MAEXXZ PROC	; CGraphicImageInstance::OnSetImagePointer, COMDAT
; _this$ = ecx

; 221  : }

  00000	c2 00 00	 ret	 0
?OnSetImagePointer@CGraphicImageInstance@@MAEXXZ ENDP	; CGraphicImageInstance::OnSetImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?OnRender@CGraphicImageInstance@@MAEXXZ
_TEXT	SEGMENT
_pTexture$1$ = -140					; size = 4
_su$1$ = -136						; size = 4
tv945 = -132						; size = 4
_sv$1$ = -128						; size = 4
tv929 = -124						; size = 4
_eu$1$ = -120						; size = 4
_fimgHeight$1$ = -116					; size = 4
tv964 = -116						; size = 4
_fimgWidth$1$ = -112					; size = 4
tv963 = -112						; size = 4
_ev$1$ = -108						; size = 4
_texReverseWidth$1$ = -108				; size = 4
_this$GSCopy$1$ = -104					; size = 4
_vertices$ = -100					; size = 96
__$ArrayPad$ = -4					; size = 4
?OnRender@CGraphicImageInstance@@MAEXXZ PROC		; CGraphicImageInstance::OnRender, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b f9		 mov	 edi, ecx
  00018	89 7d 98	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi

; 48   : 	CGraphicImage * pImage = m_roImage.GetPointer();

  0001b	8b 77 1c	 mov	 esi, DWORD PTR [edi+28]

; 49   : 	CGraphicTexture * pTexture = pImage->GetTexturePointer();

  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ ; CGraphicImage::GetTexturePointer

; 50   : 
; 51   : 	//float fimgWidth = pImage->GetWidth();
; 52   : 	//float fimgHeight = pImage->GetHeight();
; 53   : 
; 54   : 	float fimgWidth = m_roImage->GetWidth() * m_v2Scale.x;

  00025	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00028	8b d8		 mov	 ebx, eax
  0002a	89 9d 74 ff ff
	ff		 mov	 DWORD PTR _pTexture$1$[ebp], ebx
  00030	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImage@@QBEHXZ ; CGraphicImage::GetWidth

; 55   : 	float fimgHeight = m_roImage->GetHeight() * m_v2Scale.y;

  00035	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00038	66 0f 6e c0	 movd	 xmm0, eax
  0003c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003f	f3 0f 59 47 20	 mulss	 xmm0, DWORD PTR [edi+32]
  00044	f3 0f 11 45 90	 movss	 DWORD PTR _fimgWidth$1$[ebp], xmm0
  00049	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImage@@QBEHXZ ; CGraphicImage::GetHeight

; 56   : 
; 57   : 	const RECT& c_rRect = pImage->GetRectReference();

  0004e	8b ce		 mov	 ecx, esi
  00050	66 0f 6e c0	 movd	 xmm0, eax
  00054	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00057	f3 0f 59 47 24	 mulss	 xmm0, DWORD PTR [edi+36]
  0005c	f3 0f 11 45 8c	 movss	 DWORD PTR _fimgHeight$1$[ebp], xmm0
  00061	e8 00 00 00 00	 call	 ?GetRectReference@CGraphicImage@@QBEABUtagRECT@@XZ ; CGraphicImage::GetRectReference

; 58   : 	float texReverseWidth = 1.0f / float(pTexture->GetWidth());

  00066	8b cb		 mov	 ecx, ebx
  00068	8b f0		 mov	 esi, eax
  0006a	e8 00 00 00 00	 call	 ?GetWidth@CGraphicTexture@@QBEHXZ ; CGraphicTexture::GetWidth
  0006f	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000

; 59   : 	float texReverseHeight = 1.0f / float(pTexture->GetHeight());

  00077	8b cb		 mov	 ecx, ebx
  00079	66 0f 6e c0	 movd	 xmm0, eax
  0007d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00080	f3 0f 5e c8	 divss	 xmm1, xmm0
  00084	f3 0f 11 4d 94	 movss	 DWORD PTR _texReverseWidth$1$[ebp], xmm1
  00089	e8 00 00 00 00	 call	 ?GetHeight@CGraphicTexture@@QBEHXZ ; CGraphicTexture::GetHeight
  0008e	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00096	0f 57 d2	 xorps	 xmm2, xmm2
  00099	66 0f 6e 26	 movd	 xmm4, DWORD PTR [esi]
  0009d	66 0f 6e 6e 08	 movd	 xmm5, DWORD PTR [esi+8]
  000a2	66 0f 6e c0	 movd	 xmm0, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 59   : 	float texReverseHeight = 1.0f / float(pTexture->GetHeight());

  000a6	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a9	66 0f 6e 5e 04	 movd	 xmm3, DWORD PTR [esi+4]
  000ae	f3 0f 5e c8	 divss	 xmm1, xmm0
  000b2	66 0f 6e 46 0c	 movd	 xmm0, DWORD PTR [esi+12]

; 63   : 	float ev = (c_rRect.top + (c_rRect.bottom - c_rRect.top)) * texReverseHeight;

  000b7	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 69   : 	vertices[0].position.z	= 0.0f;

  000ba	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+8], 0
  000c1	0f 5b e4	 cvtdq2ps xmm4, xmm4
  000c4	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000c8	f3 0f 59 65 94	 mulss	 xmm4, DWORD PTR _texReverseWidth$1$[ebp]
  000cd	0f 5b db	 cvtdq2ps xmm3, xmm3
  000d0	0f 5b ed	 cvtdq2ps xmm5, xmm5
  000d3	f3 0f 59 d9	 mulss	 xmm3, xmm1
  000d7	f3 0f 59 6d 94	 mulss	 xmm5, DWORD PTR _texReverseWidth$1$[ebp]
  000dc	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  000e4	f3 0f 11 45 94	 movss	 DWORD PTR _ev$1$[ebp], xmm0
  000e9	f3 0f 10 47 14	 movss	 xmm0, DWORD PTR [edi+20]
  000ee	f3 0f 5c c1	 subss	 xmm0, xmm1
  000f2	f3 0f 11 5d 80	 movss	 DWORD PTR _sv$1$[ebp], xmm3

; 70   : 	vertices[0].texCoord	= TTextureCoordinate(su, sv);

  000f7	f3 0f 11 5d b0	 movss	 DWORD PTR _vertices$[ebp+20], xmm3
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  000fc	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 60   : 	float su = c_rRect.left * texReverseWidth;

  00104	f3 0f 11 a5 78
	ff ff ff	 movss	 DWORD PTR _su$1$[ebp], xmm4

; 61   : 	float sv = c_rRect.top * texReverseHeight;
; 62   : 	float eu = (c_rRect.left + (c_rRect.right - c_rRect.left)) * texReverseWidth;

  0010c	f3 0f 11 6d 88	 movss	 DWORD PTR _eu$1$[ebp], xmm5

; 64   : 
; 65   : 
; 66   : 	TPDTVertex vertices[4];
; 67   : 	vertices[0].position.x	= m_v2Position.x - 0.5f;

  00111	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR tv945[ebp], xmm0
  00119	f3 0f 11 45 9c	 movss	 DWORD PTR _vertices$[ebp], xmm0

; 68   : 	vertices[0].position.y	= m_v2Position.y - 0.5f;

  0011e	f3 0f 10 47 18	 movss	 xmm0, DWORD PTR [edi+24]
  00123	f3 0f 5c c1	 subss	 xmm0, xmm1

; 70   : 	vertices[0].texCoord	= TTextureCoordinate(su, sv);

  00127	f3 0f 11 65 ac	 movss	 DWORD PTR _vertices$[ebp+16], xmm4
  0012c	f3 0f 11 45 84	 movss	 DWORD PTR tv929[ebp], xmm0
  00131	f3 0f 11 45 a0	 movss	 DWORD PTR _vertices$[ebp+4], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00136	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  0013b	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00142	72 07		 jb	 SHORT $LN16@OnRender
  00144	bb ff 00 00 00	 mov	 ebx, 255		; 000000ffH
  00149	eb 2b		 jmp	 SHORT $LN15@OnRender
$LN16@OnRender:
  0014b	0f 2f d0	 comiss	 xmm2, xmm0
  0014e	72 04		 jb	 SHORT $LN14@OnRender
  00150	33 db		 xor	 ebx, ebx
  00152	eb 22		 jmp	 SHORT $LN15@OnRender
$LN14@OnRender:
  00154	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00158	f3 0f 58 c1	 addss	 xmm0, xmm1
  0015c	e8 00 00 00 00	 call	 __ftol3
  00161	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  00169	8b d8		 mov	 ebx, eax
  0016b	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  00173	0f 57 d2	 xorps	 xmm2, xmm2
$LN15@OnRender:

; 1410 :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  00176	f3 0f 10 47 08	 movss	 xmm0, DWORD PTR [edi+8]
  0017b	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00182	72 07		 jb	 SHORT $LN20@OnRender
  00184	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  00189	eb 18		 jmp	 SHORT $LN19@OnRender
$LN20@OnRender:
  0018b	0f 2f d0	 comiss	 xmm2, xmm0
  0018e	72 04		 jb	 SHORT $LN18@OnRender
  00190	33 ff		 xor	 edi, edi
  00192	eb 0f		 jmp	 SHORT $LN19@OnRender
$LN18@OnRender:
  00194	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00198	f3 0f 58 c1	 addss	 xmm0, xmm1
  0019c	e8 00 00 00 00	 call	 __ftol3
  001a1	8b f8		 mov	 edi, eax
$LN19@OnRender:

; 1411 :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  001a3	8b 45 98	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  001a6	0f 57 c9	 xorps	 xmm1, xmm1
  001a9	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  001ae	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  001b5	72 07		 jb	 SHORT $LN24@OnRender
  001b7	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  001bc	eb 26		 jmp	 SHORT $LN23@OnRender
$LN24@OnRender:
  001be	0f 2f c8	 comiss	 xmm1, xmm0
  001c1	72 04		 jb	 SHORT $LN22@OnRender
  001c3	33 f6		 xor	 esi, esi
  001c5	eb 1d		 jmp	 SHORT $LN23@OnRender
$LN22@OnRender:
  001c7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  001cf	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  001d7	e8 00 00 00 00	 call	 __ftol3
  001dc	8b f0		 mov	 esi, eax
  001de	0f 57 c9	 xorps	 xmm1, xmm1
  001e1	8b 45 98	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
$LN23@OnRender:

; 1412 :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  001e4	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  001e9	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  001f1	0f 2f c2	 comiss	 xmm0, xmm2
  001f4	72 07		 jb	 SHORT $LN28@OnRender
  001f6	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  001fb	eb 26		 jmp	 SHORT $LN27@OnRender
$LN28@OnRender:
  001fd	0f 2f c8	 comiss	 xmm1, xmm0
  00200	72 04		 jb	 SHORT $LN26@OnRender
  00202	33 c0		 xor	 eax, eax
  00204	eb 1d		 jmp	 SHORT $LN27@OnRender
$LN26@OnRender:
  00206	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0020e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00216	e8 00 00 00 00	 call	 __ftol3
  0021b	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
$LN27@OnRender:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 73   : 	vertices[1].position.x	= m_v2Position.x + fimgWidth - 0.5f;

  00223	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  0022b	c1 e0 08	 shl	 eax, 8
  0022e	0b c3		 or	 eax, ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 75   : 	vertices[1].position.z	= 0.0f;

  00230	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+32], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00237	c1 e0 08	 shl	 eax, 8
  0023a	0b c7		 or	 eax, edi
  0023c	c1 e0 08	 shl	 eax, 8
  0023f	0b c6		 or	 eax, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 73   : 	vertices[1].position.x	= m_v2Position.x + fimgWidth - 0.5f;

  00241	8b 75 98	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00244	89 45 a8	 mov	 DWORD PTR _vertices$[ebp+12], eax
  00247	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  0024c	f3 0f 58 45 90	 addss	 xmm0, DWORD PTR _fimgWidth$1$[ebp]
  00251	f3 0f 5c c1	 subss	 xmm0, xmm1
  00255	f3 0f 11 45 90	 movss	 DWORD PTR tv963[ebp], xmm0
  0025a	f3 0f 11 45 b4	 movss	 DWORD PTR _vertices$[ebp+24], xmm0

; 74   : 	vertices[1].position.y	= m_v2Position.y - 0.5f;

  0025f	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv929[ebp]
  00264	f3 0f 11 45 b8	 movss	 DWORD PTR _vertices$[ebp+28], xmm0

; 76   : 	vertices[1].texCoord	= TTextureCoordinate(eu, sv);

  00269	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _eu$1$[ebp]
  0026e	f3 0f 11 45 c4	 movss	 DWORD PTR _vertices$[ebp+40], xmm0
  00273	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _sv$1$[ebp]
  00278	f3 0f 11 45 c8	 movss	 DWORD PTR _vertices$[ebp+44], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0027d	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  00282	0f 2f c2	 comiss	 xmm0, xmm2
  00285	0f 57 d2	 xorps	 xmm2, xmm2
  00288	72 07		 jb	 SHORT $LN36@OnRender
  0028a	bb ff 00 00 00	 mov	 ebx, 255		; 000000ffH
  0028f	eb 27		 jmp	 SHORT $LN35@OnRender
$LN36@OnRender:
  00291	0f 2f d0	 comiss	 xmm2, xmm0
  00294	72 04		 jb	 SHORT $LN34@OnRender
  00296	33 db		 xor	 ebx, ebx
  00298	eb 1e		 jmp	 SHORT $LN35@OnRender
$LN34@OnRender:
  0029a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  002a2	f3 0f 58 c1	 addss	 xmm0, xmm1
  002a6	e8 00 00 00 00	 call	 __ftol3
  002ab	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  002b3	8b d8		 mov	 ebx, eax
  002b5	0f 57 d2	 xorps	 xmm2, xmm2
$LN35@OnRender:

; 1410 :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  002b8	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  002bd	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  002c4	72 07		 jb	 SHORT $LN40@OnRender
  002c6	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  002cb	eb 1c		 jmp	 SHORT $LN39@OnRender
$LN40@OnRender:
  002cd	0f 2f d0	 comiss	 xmm2, xmm0
  002d0	72 04		 jb	 SHORT $LN38@OnRender
  002d2	33 ff		 xor	 edi, edi
  002d4	eb 13		 jmp	 SHORT $LN39@OnRender
$LN38@OnRender:
  002d6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  002de	f3 0f 58 c1	 addss	 xmm0, xmm1
  002e2	e8 00 00 00 00	 call	 __ftol3
  002e7	8b f8		 mov	 edi, eax
$LN39@OnRender:

; 1411 :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  002e9	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  002ee	0f 57 c9	 xorps	 xmm1, xmm1
  002f1	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  002f8	72 07		 jb	 SHORT $LN44@OnRender
  002fa	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  002ff	eb 23		 jmp	 SHORT $LN43@OnRender
$LN44@OnRender:
  00301	0f 2f c8	 comiss	 xmm1, xmm0
  00304	72 04		 jb	 SHORT $LN42@OnRender
  00306	33 f6		 xor	 esi, esi
  00308	eb 1a		 jmp	 SHORT $LN43@OnRender
$LN42@OnRender:
  0030a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00312	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0031a	e8 00 00 00 00	 call	 __ftol3
  0031f	8b f0		 mov	 esi, eax
  00321	0f 57 c9	 xorps	 xmm1, xmm1
$LN43@OnRender:

; 1412 :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00324	8b 45 98	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00327	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  0032f	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00334	0f 2f c2	 comiss	 xmm0, xmm2
  00337	72 07		 jb	 SHORT $LN48@OnRender
  00339	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  0033e	eb 26		 jmp	 SHORT $LN47@OnRender
$LN48@OnRender:
  00340	0f 2f c8	 comiss	 xmm1, xmm0
  00343	72 04		 jb	 SHORT $LN46@OnRender
  00345	33 c0		 xor	 eax, eax
  00347	eb 1d		 jmp	 SHORT $LN47@OnRender
$LN46@OnRender:
  00349	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00351	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00359	e8 00 00 00 00	 call	 __ftol3
  0035e	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
$LN47@OnRender:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 79   : 	vertices[2].position.x	= m_v2Position.x - 0.5f;

  00366	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv945[ebp]

; 80   : 	vertices[2].position.y	= m_v2Position.y + fimgHeight - 0.5f;

  0036e	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00376	c1 e0 08	 shl	 eax, 8
  00379	0b c3		 or	 eax, ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 79   : 	vertices[2].position.x	= m_v2Position.x - 0.5f;

  0037b	f3 0f 11 45 cc	 movss	 DWORD PTR _vertices$[ebp+48], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00380	c1 e0 08	 shl	 eax, 8
  00383	0b c7		 or	 eax, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 81   : 	vertices[2].position.z	= 0.0f;

  00385	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+56], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  0038c	c1 e0 08	 shl	 eax, 8
  0038f	0b c6		 or	 eax, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 80   : 	vertices[2].position.y	= m_v2Position.y + fimgHeight - 0.5f;

  00391	8b 75 98	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00394	89 45 c0	 mov	 DWORD PTR _vertices$[ebp+36], eax
  00397	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  0039c	f3 0f 58 45 8c	 addss	 xmm0, DWORD PTR _fimgHeight$1$[ebp]
  003a1	f3 0f 5c c1	 subss	 xmm0, xmm1
  003a5	f3 0f 11 45 8c	 movss	 DWORD PTR tv964[ebp], xmm0
  003aa	f3 0f 11 45 d0	 movss	 DWORD PTR _vertices$[ebp+52], xmm0

; 82   : 	vertices[2].texCoord	= TTextureCoordinate(su, ev);

  003af	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _su$1$[ebp]
  003b7	f3 0f 11 45 dc	 movss	 DWORD PTR _vertices$[ebp+64], xmm0
  003bc	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _ev$1$[ebp]
  003c1	f3 0f 11 45 e0	 movss	 DWORD PTR _vertices$[ebp+68], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  003c6	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  003cb	0f 2f c2	 comiss	 xmm0, xmm2
  003ce	0f 57 d2	 xorps	 xmm2, xmm2
  003d1	72 07		 jb	 SHORT $LN56@OnRender
  003d3	bb ff 00 00 00	 mov	 ebx, 255		; 000000ffH
  003d8	eb 27		 jmp	 SHORT $LN55@OnRender
$LN56@OnRender:
  003da	0f 2f d0	 comiss	 xmm2, xmm0
  003dd	72 04		 jb	 SHORT $LN54@OnRender
  003df	33 db		 xor	 ebx, ebx
  003e1	eb 1e		 jmp	 SHORT $LN55@OnRender
$LN54@OnRender:
  003e3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  003eb	f3 0f 58 c1	 addss	 xmm0, xmm1
  003ef	e8 00 00 00 00	 call	 __ftol3
  003f4	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  003fc	8b d8		 mov	 ebx, eax
  003fe	0f 57 d2	 xorps	 xmm2, xmm2
$LN55@OnRender:

; 1410 :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  00401	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  00406	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0040d	72 07		 jb	 SHORT $LN60@OnRender
  0040f	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  00414	eb 1c		 jmp	 SHORT $LN59@OnRender
$LN60@OnRender:
  00416	0f 2f d0	 comiss	 xmm2, xmm0
  00419	72 04		 jb	 SHORT $LN58@OnRender
  0041b	33 ff		 xor	 edi, edi
  0041d	eb 13		 jmp	 SHORT $LN59@OnRender
$LN58@OnRender:
  0041f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00427	f3 0f 58 c1	 addss	 xmm0, xmm1
  0042b	e8 00 00 00 00	 call	 __ftol3
  00430	8b f8		 mov	 edi, eax
$LN59@OnRender:

; 1411 :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  00432	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00437	0f 57 c9	 xorps	 xmm1, xmm1
  0043a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00441	72 07		 jb	 SHORT $LN64@OnRender
  00443	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  00448	eb 23		 jmp	 SHORT $LN63@OnRender
$LN64@OnRender:
  0044a	0f 2f c8	 comiss	 xmm1, xmm0
  0044d	72 04		 jb	 SHORT $LN62@OnRender
  0044f	33 f6		 xor	 esi, esi
  00451	eb 1a		 jmp	 SHORT $LN63@OnRender
$LN62@OnRender:
  00453	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0045b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00463	e8 00 00 00 00	 call	 __ftol3
  00468	8b f0		 mov	 esi, eax
  0046a	0f 57 c9	 xorps	 xmm1, xmm1
$LN63@OnRender:

; 1412 :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  0046d	8b 45 98	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00470	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00475	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0047c	72 07		 jb	 SHORT $LN68@OnRender
  0047e	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00483	eb 1e		 jmp	 SHORT $LN67@OnRender
$LN68@OnRender:
  00485	0f 2f c8	 comiss	 xmm1, xmm0
  00488	72 04		 jb	 SHORT $LN66@OnRender
  0048a	33 c0		 xor	 eax, eax
  0048c	eb 15		 jmp	 SHORT $LN67@OnRender
$LN66@OnRender:
  0048e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00496	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0049e	e8 00 00 00 00	 call	 __ftol3
$LN67@OnRender:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 85   : 	vertices[3].position.x	= m_v2Position.x + fimgWidth - 0.5f;

  004a3	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv963[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  004a8	0f 57 c9	 xorps	 xmm1, xmm1

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  004ab	c1 e0 08	 shl	 eax, 8
  004ae	0b c3		 or	 eax, ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 85   : 	vertices[3].position.x	= m_v2Position.x + fimgWidth - 0.5f;

  004b0	f3 0f 11 45 e4	 movss	 DWORD PTR _vertices$[ebp+72], xmm0

; 86   : 	vertices[3].position.y	= m_v2Position.y + fimgHeight - 0.5f;

  004b5	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv964[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  004ba	c1 e0 08	 shl	 eax, 8
  004bd	0b c7		 or	 eax, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 86   : 	vertices[3].position.y	= m_v2Position.y + fimgHeight - 0.5f;

  004bf	f3 0f 11 45 e8	 movss	 DWORD PTR _vertices$[ebp+76], xmm0

; 88   : 	vertices[3].texCoord	= TTextureCoordinate(eu, ev);

  004c4	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _eu$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  004c9	c1 e0 08	 shl	 eax, 8
  004cc	0b c6		 or	 eax, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 88   : 	vertices[3].texCoord	= TTextureCoordinate(eu, ev);

  004ce	f3 0f 11 45 f4	 movss	 DWORD PTR _vertices$[ebp+88], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  004d3	8b 75 98	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 88   : 	vertices[3].texCoord	= TTextureCoordinate(eu, ev);

  004d6	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _ev$1$[ebp]
  004db	f3 0f 11 45 f8	 movss	 DWORD PTR _vertices$[ebp+92], xmm0
  004e0	89 45 d8	 mov	 DWORD PTR _vertices$[ebp+60], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  004e3	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  004e8	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 87   : 	vertices[3].position.z	= 0.0f;

  004ef	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+80], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  004f6	72 07		 jb	 SHORT $LN76@OnRender
  004f8	bb ff 00 00 00	 mov	 ebx, 255		; 000000ffH
  004fd	eb 23		 jmp	 SHORT $LN75@OnRender
$LN76@OnRender:
  004ff	0f 2f c8	 comiss	 xmm1, xmm0
  00502	72 04		 jb	 SHORT $LN74@OnRender
  00504	33 db		 xor	 ebx, ebx
  00506	eb 1a		 jmp	 SHORT $LN75@OnRender
$LN74@OnRender:
  00508	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00510	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00518	e8 00 00 00 00	 call	 __ftol3
  0051d	8b d8		 mov	 ebx, eax
  0051f	0f 57 c9	 xorps	 xmm1, xmm1
$LN75@OnRender:

; 1410 :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  00522	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  00527	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0052e	72 07		 jb	 SHORT $LN80@OnRender
  00530	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  00535	eb 20		 jmp	 SHORT $LN79@OnRender
$LN80@OnRender:
  00537	0f 2f c8	 comiss	 xmm1, xmm0
  0053a	72 04		 jb	 SHORT $LN78@OnRender
  0053c	33 ff		 xor	 edi, edi
  0053e	eb 17		 jmp	 SHORT $LN79@OnRender
$LN78@OnRender:
  00540	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00548	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00550	e8 00 00 00 00	 call	 __ftol3
  00555	8b f8		 mov	 edi, eax
$LN79@OnRender:

; 1411 :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  00557	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  0055c	0f 57 c9	 xorps	 xmm1, xmm1
  0055f	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00566	72 07		 jb	 SHORT $LN84@OnRender
  00568	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  0056d	eb 23		 jmp	 SHORT $LN83@OnRender
$LN84@OnRender:
  0056f	0f 2f c8	 comiss	 xmm1, xmm0
  00572	72 04		 jb	 SHORT $LN82@OnRender
  00574	33 f6		 xor	 esi, esi
  00576	eb 1a		 jmp	 SHORT $LN83@OnRender
$LN82@OnRender:
  00578	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00580	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00588	e8 00 00 00 00	 call	 __ftol3
  0058d	8b f0		 mov	 esi, eax
  0058f	0f 57 c9	 xorps	 xmm1, xmm1
$LN83@OnRender:

; 1412 :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00592	8b 45 98	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00595	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0059a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  005a1	72 07		 jb	 SHORT $LN88@OnRender
  005a3	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  005a8	eb 1e		 jmp	 SHORT $LN87@OnRender
$LN88@OnRender:
  005aa	0f 2f c8	 comiss	 xmm1, xmm0
  005ad	72 04		 jb	 SHORT $LN86@OnRender
  005af	33 c0		 xor	 eax, eax
  005b1	eb 15		 jmp	 SHORT $LN87@OnRender
$LN86@OnRender:
  005b3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  005bb	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  005c3	e8 00 00 00 00	 call	 __ftol3
$LN87@OnRender:

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  005c8	c1 e0 08	 shl	 eax, 8
  005cb	0b c3		 or	 eax, ebx
  005cd	c1 e0 08	 shl	 eax, 8
  005d0	0b c7		 or	 eax, edi
  005d2	c1 e0 08	 shl	 eax, 8
  005d5	0b c6		 or	 eax, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 89   : 	vertices[3].diffuse		= m_DiffuseColor;

  005d7	89 45 f0	 mov	 DWORD PTR _vertices$[ebp+84], eax

; 90   : 
; 91   : 	if (CGraphicBase::SetPDTStream(vertices, 4))

  005da	8d 45 9c	 lea	 eax, DWORD PTR _vertices$[ebp]
  005dd	6a 04		 push	 4
  005df	50		 push	 eax
  005e0	e8 00 00 00 00	 call	 ?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z ; CGraphicBase::SetPDTStream
  005e5	83 c4 08	 add	 esp, 8
  005e8	84 c0		 test	 al, al
  005ea	74 5b		 je	 SHORT $LN2@OnRender

; 92   : 	{
; 93   : 		CGraphicBase::SetDefaultIndexBuffer(CGraphicBase::DEFAULT_IB_FILL_RECT);

  005ec	6a 05		 push	 5
  005ee	e8 00 00 00 00	 call	 ?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z ; CGraphicBase::SetDefaultIndexBuffer

; 94   : 
; 95   : 		STATEMANAGER.SetTexture(0, pTexture->GetD3DTexture());

  005f3	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _pTexture$1$[ebp]
  005f9	83 c4 04	 add	 esp, 4
  005fc	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00602	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture9@@XZ ; CGraphicTexture::GetD3DTexture
  00607	50		 push	 eax
  00608	6a 00		 push	 0
  0060a	8b ce		 mov	 ecx, esi
  0060c	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture9@@@Z ; CStateManager::SetTexture

; 96   : 		STATEMANAGER.SetTexture(1, NULL);

  00611	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00617	6a 00		 push	 0
  00619	6a 01		 push	 1
  0061b	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture9@@@Z ; CStateManager::SetTexture

; 97   : 		STATEMANAGER.SetFVF(D3DFVF_XYZ | D3DFVF_DIFFUSE | D3DFVF_TEX1);

  00620	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00626	68 42 01 00 00	 push	 322			; 00000142H
  0062b	e8 00 00 00 00	 call	 ?SetFVF@CStateManager@@QAEXK@Z ; CStateManager::SetFVF

; 98   : 		STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLELIST, 0, 4, 0, 2);

  00630	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00636	6a 00		 push	 0
  00638	6a 02		 push	 2
  0063a	6a 00		 push	 0
  0063c	6a 04		 push	 4
  0063e	6a 00		 push	 0
  00640	6a 04		 push	 4
  00642	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIIH@Z ; CStateManager::DrawIndexedPrimitive
$LN2@OnRender:

; 99   : 	}
; 100  : 	//OLD: STATEMANAGER.DrawIndexedPrimitiveUP(D3DPT_TRIANGLELIST, 0, 4, 2, c_FillRectIndices, D3DFMT_INDEX16, vertices, sizeof(TPDTVertex));
; 101  : 	////////////////////////////////////////////////////////////
; 102  : }

  00647	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0064a	5f		 pop	 edi
  0064b	5e		 pop	 esi
  0064c	33 cd		 xor	 ecx, ebp
  0064e	5b		 pop	 ebx
  0064f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00654	8b e5		 mov	 esp, ebp
  00656	5d		 pop	 ebp
  00657	c3		 ret	 0
?OnRender@CGraphicImageInstance@@MAEXXZ ENDP		; CGraphicImageInstance::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?Initialize@CGraphicImageInstance@@IAEXXZ
_TEXT	SEGMENT
?Initialize@CGraphicImageInstance@@IAEXXZ PROC		; CGraphicImageInstance::Initialize, COMDAT
; _this$ = ecx

; 225  : 	m_DiffuseColor.r = m_DiffuseColor.g = m_DiffuseColor.b = m_DiffuseColor.a = 1.0f;

  00000	c7 41 10 00 00
	80 3f		 mov	 DWORD PTR [ecx+16], 1065353216 ; 3f800000H
  00007	c7 41 0c 00 00
	80 3f		 mov	 DWORD PTR [ecx+12], 1065353216 ; 3f800000H
  0000e	c7 41 08 00 00
	80 3f		 mov	 DWORD PTR [ecx+8], 1065353216 ; 3f800000H
  00015	c7 41 04 00 00
	80 3f		 mov	 DWORD PTR [ecx+4], 1065353216 ; 3f800000H

; 226  : 	m_v2Position.x = m_v2Position.y = 0.0f;

  0001c	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
  00023	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 227  : 
; 228  : 	/*** Start New Pet System ***/
; 229  : 	m_v2Scale.x = m_v2Scale.y = 1.0f;

  0002a	c7 41 24 00 00
	80 3f		 mov	 DWORD PTR [ecx+36], 1065353216 ; 3f800000H
  00031	c7 41 20 00 00
	80 3f		 mov	 DWORD PTR [ecx+32], 1065353216 ; 3f800000H

; 230  : 	/*** End New Pet System ***/
; 231  : }

  00038	c3		 ret	 0
?Initialize@CGraphicImageInstance@@IAEXXZ ENDP		; CGraphicImageInstance::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ??8CGraphicImageInstance@@QBE_NABV0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??8CGraphicImageInstance@@QBE_NABV0@@Z PROC		; CGraphicImageInstance::operator==, COMDAT
; _this$ = ecx

; 194  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 195  : 	return (m_roImage.GetPointer() == rhs.m_roImage.GetPointer());

  00003	8b 45 08	 mov	 eax, DWORD PTR _rhs$[ebp]
  00006	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00009	3b 48 1c	 cmp	 ecx, DWORD PTR [eax+28]
  0000c	0f 94 c0	 sete	 al

; 196  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8CGraphicImageInstance@@QBE_NABV0@@Z ENDP		; CGraphicImageInstance::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ
_TEXT	SEGMENT
?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ PROC ; CGraphicImageInstance::GetGraphicImagePointer, COMDAT
; _this$ = ecx

; 117  : 	return m_roImage.GetPointer();

  00000	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 118  : }

  00003	c3		 ret	 0
?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ENDP ; CGraphicImageInstance::GetGraphicImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ
_TEXT	SEGMENT
?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ PROC ; CGraphicImageInstance::GetTextureReference, COMDAT
; _this$ = ecx

; 106  : 	return m_roImage->GetTextureReference();

  00000	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00003	e9 00 00 00 00	 jmp	 ?GetTextureReference@CGraphicImage@@QBEABVCGraphicTexture@@XZ ; CGraphicImage::GetTextureReference
?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ ENDP ; CGraphicImageInstance::GetTextureReference
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ
_TEXT	SEGMENT
?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ PROC ; CGraphicImageInstance::GetTexturePointer, COMDAT
; _this$ = ecx

; 111  : 	CGraphicImage* pkImage = m_roImage.GetPointer();

  00000	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]

; 112  : 	return pkImage ? pkImage->GetTexturePointer() : NULL;

  00003	85 c9		 test	 ecx, ecx
  00005	0f 85 00 00 00
	00		 jne	 ?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ ; CGraphicImage::GetTexturePointer
  0000b	33 c0		 xor	 eax, eax

; 113  : }

  0000d	c3		 ret	 0
?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ENDP ; CGraphicImageInstance::GetTexturePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?GetHeight@CGraphicImageInstance@@QAEHXZ
_TEXT	SEGMENT
?GetHeight@CGraphicImageInstance@@QAEHXZ PROC		; CGraphicImageInstance::GetHeight, COMDAT
; _this$ = ecx

; 131  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 132  : 	if (IsEmpty())

  00003	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00008	84 c0		 test	 al, al
  0000a	74 04		 je	 SHORT $LN2@GetHeight

; 133  : 	{
; 134  : 		return 0;

  0000c	33 c0		 xor	 eax, eax
  0000e	5e		 pop	 esi

; 138  : }

  0000f	c3		 ret	 0
$LN2@GetHeight:

; 135  : 	}
; 136  : 
; 137  : 	return m_roImage->GetHeight();

  00010	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00013	5e		 pop	 esi
  00014	e9 00 00 00 00	 jmp	 ?GetHeight@CGraphicImage@@QBEHXZ ; CGraphicImage::GetHeight
?GetHeight@CGraphicImageInstance@@QAEHXZ ENDP		; CGraphicImageInstance::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?GetWidth@CGraphicImageInstance@@QAEHXZ
_TEXT	SEGMENT
?GetWidth@CGraphicImageInstance@@QAEHXZ PROC		; CGraphicImageInstance::GetWidth, COMDAT
; _this$ = ecx

; 121  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 122  : 	if (IsEmpty())

  00003	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00008	84 c0		 test	 al, al
  0000a	74 04		 je	 SHORT $LN2@GetWidth

; 123  : 	{
; 124  : 		return 0;

  0000c	33 c0		 xor	 eax, eax
  0000e	5e		 pop	 esi

; 128  : }

  0000f	c3		 ret	 0
$LN2@GetWidth:

; 125  : 	}
; 126  : 
; 127  : 	return m_roImage->GetWidth();

  00010	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00013	5e		 pop	 esi
  00014	e9 00 00 00 00	 jmp	 ?GetWidth@CGraphicImage@@QBEHXZ ; CGraphicImage::GetWidth
?GetWidth@CGraphicImageInstance@@QAEHXZ ENDP		; CGraphicImageInstance::GetWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?IsEmpty@CGraphicImageInstance@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@CGraphicImageInstance@@QBE_NXZ PROC		; CGraphicImageInstance::IsEmpty, COMDAT
; _this$ = ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h

; 62   : 		return m_pObject == NULL ? true : false;

  00000	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00003	85 c9		 test	 ecx, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 185  : 	if (!m_roImage.IsNull() && !m_roImage->IsEmpty())

  00005	74 0b		 je	 SHORT $LN2@IsEmpty
  00007	e8 00 00 00 00	 call	 ?IsEmpty@CResource@@QBE_NXZ ; CResource::IsEmpty
  0000c	84 c0		 test	 al, al
  0000e	0f 95 c0	 setne	 al

; 191  : }

  00011	c3		 ret	 0
$LN2@IsEmpty:

; 186  : 	{
; 187  : 		return false;
; 188  : 	}
; 189  : 
; 190  : 	return true;

  00012	b0 01		 mov	 al, 1

; 191  : }

  00014	c3		 ret	 0
?IsEmpty@CGraphicImageInstance@@QBE_NXZ ENDP		; CGraphicImageInstance::IsEmpty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?ReloadImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z
_TEXT	SEGMENT
_pImage$ = 8						; size = 4
?ReloadImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z PROC ; CGraphicImageInstance::ReloadImagePointer, COMDAT
; _this$ = ecx

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h

; 62   : 		return m_pObject == NULL ? true : false;

  00003	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00006	85 c0		 test	 eax, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 169  : 	if (m_roImage.IsNull())

  00008	75 06		 jne	 SHORT $LN2@ReloadImag

; 180  : 	}
; 181  : }

  0000a	5d		 pop	 ebp

; 170  : 	{
; 171  : 		SetImagePointer(pImage);

  0000b	e9 00 00 00 00	 jmp	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
$LN2@ReloadImag:

; 172  : 		return;
; 173  : 	}
; 174  : 
; 175  : 	CGraphicImage * pkImage = m_roImage.GetPointer();
; 176  : 
; 177  : 	if (pkImage)
; 178  : 	{
; 179  : 		pkImage->Reload();

  00010	8b c8		 mov	 ecx, eax
  00012	e8 00 00 00 00	 call	 ?Reload@CResource@@QAEXXZ ; CResource::Reload

; 180  : 	}
; 181  : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?ReloadImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ENDP ; CGraphicImageInstance::ReloadImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z
_TEXT	SEGMENT
_pImage$ = 8						; size = 4
?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z PROC ; CGraphicImageInstance::SetImagePointer, COMDAT
; _this$ = ecx

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h

; 69   : 		m_pObject = pObject;

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pImage$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 161  : {

  00009	57		 push	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h

; 67   : 		CReferenceObject* pOldObject = m_pObject;

  0000a	8b 7e 1c	 mov	 edi, DWORD PTR [esi+28]

; 69   : 		m_pObject = pObject;

  0000d	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx

; 70   : 
; 71   : 		if (m_pObject)

  00010	85 c9		 test	 ecx, ecx
  00012	74 05		 je	 SHORT $LN4@SetImagePo

; 72   : 		{
; 73   : 			m_pObject->AddReference();

  00014	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN4@SetImagePo:

; 74   : 		}
; 75   : 
; 76   : 		if (pOldObject)

  00019	85 ff		 test	 edi, edi
  0001b	74 07		 je	 SHORT $LN5@SetImagePo

; 77   : 		{
; 78   : 			pOldObject->Release();

  0001d	8b cf		 mov	 ecx, edi
  0001f	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN5@SetImagePo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 164  : 	OnSetImagePointer();

  00024	8b 06		 mov	 eax, DWORD PTR [esi]
  00026	8b ce		 mov	 ecx, esi
  00028	ff 50 08	 call	 DWORD PTR [eax+8]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi

; 165  : }

  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ENDP ; CGraphicImageInstance::SetImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?SetPosition@CGraphicImageInstance@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetPosition@CGraphicImageInstance@@QAEXMM@Z PROC	; CGraphicImageInstance::SetPosition, COMDAT
; _this$ = ecx

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 156  : 	m_v2Position.x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0

; 157  : 	m_v2Position.y = fy;

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0

; 158  : }

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?SetPosition@CGraphicImageInstance@@QAEXMM@Z ENDP	; CGraphicImageInstance::SetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?SetScale@CGraphicImageInstance@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetScale@CGraphicImageInstance@@QAEXMM@Z PROC		; CGraphicImageInstance::SetScale, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 150  : 	m_v2Scale.x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	f3 0f 11 41 20	 movss	 DWORD PTR [ecx+32], xmm0

; 151  : 	m_v2Scale.y = fy;

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	f3 0f 11 41 24	 movss	 DWORD PTR [ecx+36], xmm0

; 152  : }

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?SetScale@CGraphicImageInstance@@QAEXMM@Z ENDP		; CGraphicImageInstance::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z PROC	; CGraphicImageInstance::SetDiffuseColor, COMDAT
; _this$ = ecx

; 141  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 142  : 	m_DiffuseColor.r = fr;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00008	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 143  : 	m_DiffuseColor.g = fg;

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00012	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 144  : 	m_DiffuseColor.b = fb;

  00017	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  0001c	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 145  : 	m_DiffuseColor.a = fa;

  00021	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00026	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 146  : }

  0002b	5d		 pop	 ebp
  0002c	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ENDP	; CGraphicImageInstance::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?Render@CGraphicImageInstance@@QAEXXZ
_TEXT	SEGMENT
?Render@CGraphicImageInstance@@QAEXXZ PROC		; CGraphicImageInstance::Render, COMDAT
; _this$ = ecx

; 35   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 36   : 	if (IsEmpty())

  00003	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00008	84 c0		 test	 al, al
  0000a	75 08		 jne	 SHORT $LN1@Render

; 37   : 	{
; 38   : 		return;
; 39   : 	}
; 40   : 
; 41   : 	assert(!IsEmpty());
; 42   : 
; 43   : 	OnRender();

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b ce		 mov	 ecx, esi
  00010	5e		 pop	 esi
  00011	ff 60 04	 jmp	 DWORD PTR [eax+4]
$LN1@Render:
  00014	5e		 pop	 esi

; 44   : }

  00015	c3		 ret	 0
?Render@CGraphicImageInstance@@QAEXXZ ENDP		; CGraphicImageInstance::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?Destroy@CGraphicImageInstance@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CGraphicImageInstance@@QAEXXZ PROC		; CGraphicImageInstance::Destroy, COMDAT
; _this$ = ecx

; 234  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h

; 67   : 		CReferenceObject* pOldObject = m_pObject;

  00003	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]

; 68   : 
; 69   : 		m_pObject = pObject;

  00006	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0

; 70   : 
; 71   : 		if (m_pObject)
; 72   : 		{
; 73   : 			m_pObject->AddReference();
; 74   : 		}
; 75   : 
; 76   : 		if (pOldObject)

  0000d	85 c9		 test	 ecx, ecx
  0000f	74 05		 je	 SHORT $LN5@Destroy

; 77   : 		{
; 78   : 			pOldObject->Release();

  00011	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN5@Destroy:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 236  : 	Initialize();

  00016	8b ce		 mov	 ecx, esi
  00018	5e		 pop	 esi
  00019	e9 00 00 00 00	 jmp	 ?Initialize@CGraphicImageInstance@@IAEXXZ ; CGraphicImageInstance::Initialize
?Destroy@CGraphicImageInstance@@QAEXXZ ENDP		; CGraphicImageInstance::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ??1CGraphicImageInstance@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGraphicImageInstance@@UAE@XZ PROC			; CGraphicImageInstance::~CGraphicImageInstance, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGraphicImageInstance@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicImageInstance@@6B@

; 246  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Destroy
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h

; 53   : 		if (m_pObject)

  00030	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]

; 37   : 	{

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 		if (m_pObject)

  0003a	85 c9		 test	 ecx, ecx
  0003c	74 0c		 je	 SHORT $LN7@CGraphicIm

; 54   : 		{
; 55   : 			m_pObject->Release();

  0003e	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 			m_pObject = NULL;

  00043	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
$LN7@CGraphicIm:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 247  : }

  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGraphicImageInstance@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGraphicImageInstance@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGraphicImageInstance@@UAE@XZ ENDP			; CGraphicImageInstance::~CGraphicImageInstance
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ??0CGraphicImageInstance@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGraphicImageInstance@@QAE@XZ PROC			; CGraphicImageInstance::CGraphicImageInstance, COMDAT
; _this$ = ecx

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicImageInstance@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\Ref.h

; 20   : 	CRef() : m_pObject(NULL)

  00010	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp

; 241  : 	Initialize();

  00017	e8 00 00 00 00	 call	 ?Initialize@CGraphicImageInstance@@IAEXXZ ; CGraphicImageInstance::Initialize

; 242  : }

  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??0CGraphicImageInstance@@QAE@XZ ENDP			; CGraphicImageInstance::CGraphicImageInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?IsType@CGraphicImageInstance@@QAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?IsType@CGraphicImageInstance@@QAEHK@Z PROC		; CGraphicImageInstance::IsType, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 206  : 	return OnIsType(dwType);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 207  : }

  00005	5d		 pop	 ebp

; 206  : 	return OnIsType(dwType);

  00006	ff 60 0c	 jmp	 DWORD PTR [eax+12]
?IsType@CGraphicImageInstance@@QAEHK@Z ENDP		; CGraphicImageInstance::IsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpImageInstance.cpp
;	COMDAT ?Type@CGraphicImageInstance@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CGraphicImageInstance@@SAKXZ PROC			; CGraphicImageInstance::Type, COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CGraphicImageInstance@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 200  : 	static DWORD s_dwType = GetCRC32("CGraphicImageInstance", strlen("CGraphicImageInstance"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CGraphicImageInstance@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 201  : 	return (s_dwType);
; 202  : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CGraphicImageInstance@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 200  : 	static DWORD s_dwType = GetCRC32("CGraphicImageInstance", strlen("CGraphicImageInstance"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicImageInstance@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CGraphicImageInstance@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 15		 push	 21			; 00000015H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OHFFHEGB@CGraphicImageInstance@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicImageInstance@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CGraphicImageInstance@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CGraphicImageInstance@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicImageInstance@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CGraphicImageInstance@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CGraphicImageInstance@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CGraphicImageInstance@@SAKXZ ENDP			; CGraphicImageInstance::Type
; Function compile flags: /Ogtp
;	COMDAT ??0SPDTVertex@@QAE@XZ
_TEXT	SEGMENT
??0SPDTVertex@@QAE@XZ PROC				; SPDTVertex::SPDTVertex, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0SPDTVertex@@QAE@XZ ENDP				; SPDTVertex::SPDTVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 324  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
