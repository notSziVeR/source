; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\Distribute\RaceDataFile.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	?_Fake_alloc@std@@3U_Fake_allocator@1@B		; std::_Fake_alloc
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?_Fake_alloc@std@@3U_Fake_allocator@1@B
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?LoadRaceData@CRaceData@@QAEHPBD@Z		; CRaceData::LoadRaceData
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	??_C@_0BC@NDOIOPFI@basemodelfilename@		; `string'
PUBLIC	??_C@_0N@FNBFCAFH@treefilename@			; `string'
PUBLIC	??_C@_0BC@KCFLFBNM@attributefilename@		; `string'
PUBLIC	??_C@_0O@OKJLKLAI@smokebonename@		; `string'
PUBLIC	??_C@_0BD@HKKNCHKI@motionlistfilename@		; `string'
PUBLIC	??_C@_0O@OGIHOCKK@smokefilename@		; `string'
PUBLIC	??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@ ; `string'
PUBLIC	??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@ ; `string'
PUBLIC	??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@ ; `string'
PUBLIC	??_C@_09IOJGLPMI@shapedata@			; `string'
PUBLIC	??_C@_08PEIJGPHF@pathname@			; `string'
PUBLIC	??_C@_0P@BDBLEP@shapedatacount@			; `string'
PUBLIC	??_C@_0M@GCDLCIFI@specialpath@			; `string'
PUBLIC	??_C@_0L@BLAJFEIP@shapeindex@			; `string'
PUBLIC	??_C@_05NCCFOPHA@model@				; `string'
PUBLIC	??_C@_0M@NFFHMNPF@local_model@			; `string'
PUBLIC	??_C@_0BB@OAFGNDMP@local_sourceskin@		; `string'
PUBLIC	??_C@_0BB@CMMEEAHN@local_targetskin@		; `string'
PUBLIC	??_C@_0L@ILFPKBGB@sourceskin@			; `string'
PUBLIC	??_C@_0L@EHMNDCND@targetskin@			; `string'
PUBLIC	??_C@_0N@LBPJELHP@sourceskin?$CFu@		; `string'
PUBLIC	??_C@_0N@OAMIJCJ@targetskin?$CFu@		; `string'
PUBLIC	??_C@_08HKPOBGLF@hairdata@			; `string'
PUBLIC	??_C@_0O@HCGNHJP@hairdatacount@			; `string'
PUBLIC	??_C@_09DFEJDBKH@hairindex@			; `string'
PUBLIC	??_C@_0O@OPEMPJIC@attachingdata@		; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	__atoi64:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	_tolower:PROC
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CTextFileLoader@@QAE@XZ:PROC			; CTextFileLoader::CTextFileLoader
EXTRN	??1CTextFileLoader@@UAE@XZ:PROC			; CTextFileLoader::~CTextFileLoader
EXTRN	?Load@CTextFileLoader@@QAE_NPBD@Z:PROC		; CTextFileLoader::Load
EXTRN	?SetTop@CTextFileLoader@@QAEXXZ:PROC		; CTextFileLoader::SetTop
EXTRN	?SetChildNode@CTextFileLoader@@QAEHPBD@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z:PROC ; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z:PROC ; NRaceData::LoadAttachingData
EXTRN	?SetShapeModel@CRaceData@@QAEXIPBD@Z:PROC	; CRaceData::SetShapeModel
EXTRN	?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z:PROC	; CRaceData::AppendShapeSkin
EXTRN	?SetHairSkin@CRaceData@@QAEXIIPBD00@Z:PROC	; CRaceData::SetHairSkin
EXTRN	?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z:PROC ; CEffectManager::RegisterEffect2
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?__szSkin1@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
_BSS	SEGMENT
?__szSkin1@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA DB 0cH DUP (?) ; `CRaceData::LoadRaceData'::`30'::__szSkin1
_BSS	ENDS
;	COMDAT ?__szSkin2@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
_BSS	SEGMENT
?__szSkin2@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA DB 0cH DUP (?) ; `CRaceData::LoadRaceData'::`30'::__szSkin2
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPEMPJIC@attachingdata@
CONST	SEGMENT
??_C@_0O@OPEMPJIC@attachingdata@ DB 'attachingdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DFEJDBKH@hairindex@
CONST	SEGMENT
??_C@_09DFEJDBKH@hairindex@ DB 'hairindex', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HCGNHJP@hairdatacount@
CONST	SEGMENT
??_C@_0O@HCGNHJP@hairdatacount@ DB 'hairdatacount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HKPOBGLF@hairdata@
CONST	SEGMENT
??_C@_08HKPOBGLF@hairdata@ DB 'hairdata', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OAMIJCJ@targetskin?$CFu@
CONST	SEGMENT
??_C@_0N@OAMIJCJ@targetskin?$CFu@ DB 'targetskin%u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LBPJELHP@sourceskin?$CFu@
CONST	SEGMENT
??_C@_0N@LBPJELHP@sourceskin?$CFu@ DB 'sourceskin%u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHMNDCND@targetskin@
CONST	SEGMENT
??_C@_0L@EHMNDCND@targetskin@ DB 'targetskin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ILFPKBGB@sourceskin@
CONST	SEGMENT
??_C@_0L@ILFPKBGB@sourceskin@ DB 'sourceskin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CMMEEAHN@local_targetskin@
CONST	SEGMENT
??_C@_0BB@CMMEEAHN@local_targetskin@ DB 'local_targetskin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OAFGNDMP@local_sourceskin@
CONST	SEGMENT
??_C@_0BB@OAFGNDMP@local_sourceskin@ DB 'local_sourceskin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NFFHMNPF@local_model@
CONST	SEGMENT
??_C@_0M@NFFHMNPF@local_model@ DB 'local_model', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05NCCFOPHA@model@
CONST	SEGMENT
??_C@_05NCCFOPHA@model@ DB 'model', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BLAJFEIP@shapeindex@
CONST	SEGMENT
??_C@_0L@BLAJFEIP@shapeindex@ DB 'shapeindex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCDLCIFI@specialpath@
CONST	SEGMENT
??_C@_0M@GCDLCIFI@specialpath@ DB 'specialpath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDBLEP@shapedatacount@
CONST	SEGMENT
??_C@_0P@BDBLEP@shapedatacount@ DB 'shapedatacount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PEIJGPHF@pathname@
CONST	SEGMENT
??_C@_08PEIJGPHF@pathname@ DB 'pathname', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IOJGLPMI@shapedata@
CONST	SEGMENT
??_C@_09IOJGLPMI@shapedata@ DB 'shapedata', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@
CONST	SEGMENT
??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@ DB 'CRace'
	DB	'Data::RegisterEffect2(%s) ERROR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@
CONST	SEGMENT
??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@ DB 'Smoke'
	DB	'FileName SmokeNum[%d] OUT OF RANGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@
CONST	SEGMENT
??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@ DB 'S'
	DB	'mokeFileName ArgCount[%d]%2==0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OGIHOCKK@smokefilename@
CONST	SEGMENT
??_C@_0O@OGIHOCKK@smokefilename@ DB 'smokefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKKNCHKI@motionlistfilename@
CONST	SEGMENT
??_C@_0BD@HKKNCHKI@motionlistfilename@ DB 'motionlistfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKJLKLAI@smokebonename@
CONST	SEGMENT
??_C@_0O@OKJLKLAI@smokebonename@ DB 'smokebonename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KCFLFBNM@attributefilename@
CONST	SEGMENT
??_C@_0BC@KCFLFBNM@attributefilename@ DB 'attributefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FNBFCAFH@treefilename@
CONST	SEGMENT
??_C@_0N@FNBFCAFH@treefilename@ DB 'treefilename', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NDOIOPFI@basemodelfilename@
CONST	SEGMENT
??_C@_0BC@NDOIOPFI@basemodelfilename@ DB 'basemodelfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadRaceData@CRaceData@@QAEHPBD@Z DD 019930522H
	DD	02cH
	DD	FLAT:__unwindtable$?LoadRaceData@CRaceData@@QAEHPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadRaceData@CRaceData@@QAEHPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$10
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$11
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$12
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$14
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$15
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$16
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$20
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$22
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$24
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$26
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$28
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$31
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$32
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$33
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$34
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$35
	DD	023H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$36
	DD	024H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$37
	DD	025H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$39
	DD	027H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$40
	DD	025H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$41
	DD	029H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$43
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
_TEXT	SEGMENT
__Right_size$1$ = -8					; size = 4
__New_size$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left_size$1$ = 12					; size = 4
__Left$ = 12						; size = 4
__Ptr$1$ = 16						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 5078 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 5079 :     const auto _Left_size  = _Left.size();
; 5080 :     const auto _Right_size = _Right.size();

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Right$[ebp]

; 5081 :     if (_Left.max_size() - _Left_size < _Right_size) {

  0000a	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR __Left$[ebp]
  00014	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00017	89 75 f8	 mov	 DWORD PTR __Right_size$1$[ebp], esi
  0001a	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  0001d	2b c2		 sub	 eax, edx
  0001f	89 55 0c	 mov	 DWORD PTR __Left_size$1$[ebp], edx
  00022	3b c6		 cmp	 eax, esi
  00024	0f 82 d7 00 00
	00		 jb	 $LN53@operator

; 2301 :         return _BUF_SIZE <= _Myres;

  0002a	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  0002e	72 02		 jb	 SHORT $LN9@operator

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00030	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN9@operator:

; 2301 :         return _BUF_SIZE <= _Myres;

  00032	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  00036	72 02		 jb	 SHORT $LN16@operator

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00038	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN16@operator:

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0003a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 2919 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  0003d	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  00040	89 45 fc	 mov	 DWORD PTR __New_size$1$[ebp], eax
  00043	0f 57 c0	 xorps	 xmm0, xmm0

; 2920 :         size_type _New_capacity = _BUF_SIZE - 1;

  00046	be 0f 00 00 00	 mov	 esi, 15			; 0000000fH

; 2921 :         auto& _My_data          = _Mypair._Myval2;
; 2922 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  0004b	8b c1		 mov	 eax, ecx
  0004d	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00050	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 2349 :     size_type _Mysize = 0; // current length of string

  00053	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 2350 :     size_type _Myres  = 0; // current storage reserved for string

  0005a	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2926 :         if (_New_capacity < _New_size) {

  00061	39 75 fc	 cmp	 DWORD PTR __New_size$1$[ebp], esi
  00064	76 61		 jbe	 SHORT $LN21@operator

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00066	8b 75 fc	 mov	 esi, DWORD PTR __New_size$1$[ebp]
  00069	83 ce 0f	 or	 esi, 15			; 0000000fH
  0006c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00072	76 18		 jbe	 SHORT $LN36@operator

; 4885 :             return _Max;

  00074	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00079	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00084	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00087	83 c4 04	 add	 esp, 4
  0008a	eb 36		 jmp	 SHORT $LN51@operator
$LN36@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  0008c	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00091	3b f0		 cmp	 esi, eax
  00093	0f 42 f0	 cmovb	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2928 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00096	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00099	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0009e	72 0e		 jb	 SHORT $LN44@operator

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000a9	83 c4 04	 add	 esp, 4
  000ac	eb 14		 jmp	 SHORT $LN51@operator
$LN44@operator:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000ae	85 c0		 test	 eax, eax
  000b0	74 0e		 je	 SHORT $LN45@operator

; 77   :         return ::operator new(_Bytes);

  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  000b8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 77   :         return ::operator new(_Bytes);

  000bb	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000be	eb 02		 jmp	 SHORT $LN51@operator
$LN45@operator:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000c0	33 c0		 xor	 eax, eax
$LN51@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2930 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  000c2	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax
  000c5	89 01		 mov	 DWORD PTR [ecx], eax
$LN21@operator:

; 2931 : 
; 2932 : #if _HAS_CXX20
; 2933 :             if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2934 :                 _Traits::assign(_Ptr, _New_capacity + 1, _Elem());
; 2935 :             }
; 2936 : #endif // _HAS_CXX20
; 2937 :         }
; 2938 : 
; 2939 :         _My_data._Mysize = _New_size;

  000c7	8b 55 fc	 mov	 edx, DWORD PTR __New_size$1$[ebp]
  000ca	89 51 10	 mov	 DWORD PTR [ecx+16], edx

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cd	8b 55 0c	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  000d0	52		 push	 edx
  000d1	57		 push	 edi
  000d2	50		 push	 eax

; 2940 :         _My_data._Myres  = _New_capacity;

  000d3	89 71 14	 mov	 DWORD PTR [ecx+20], esi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d6	e8 00 00 00 00	 call	 _memcpy
  000db	ff 75 f8	 push	 DWORD PTR __Right_size$1$[ebp]

; 2942 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __Left_size$1$[ebp]
  000e1	8b 75 10	 mov	 esi, DWORD PTR __Ptr$1$[ebp]
  000e4	03 ce		 add	 ecx, esi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e6	53		 push	 ebx
  000e7	51		 push	 ecx
  000e8	e8 00 00 00 00	 call	 _memcpy

; 2943 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000ed	8b 45 fc	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000f0	83 c4 18	 add	 esp, 24			; 00000018H

; 5083 :     }
; 5084 : 
; 5085 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right.c_str(), _Right_size};

  000f3	5f		 pop	 edi

; 2943 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000f4	c6 04 06 00	 mov	 BYTE PTR [esi+eax], 0

; 5083 :     }
; 5084 : 
; 5085 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right.c_str(), _Right_size};

  000f8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx

; 5086 : }

  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c3		 ret	 0
$LN53@operator:

; 5082 :         _Xlen_string();

  00101	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN50@operator:
  00106	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
;	COMDAT ?LoadRaceData@CRaceData@@QAEHPBD@Z
_TEXT	SEGMENT
_pSmokeTokenVector$ = -348				; size = 4
_i$1$ = -344						; size = 4
_uLineCount$1$ = -344					; size = 4
_nLength$1$ = -340					; size = 4
_i$1$ = -340						; size = 4
tv5991 = -340						; size = 4
_dwShapeIndex$2 = -340					; size = 4
_this$GSCopy$1$ = -336					; size = 4
_i$1$ = -332						; size = 4
_i$1$ = -332						; size = 4
_uLine$1$ = -332					; size = 4
_dwShapeDataCount$3 = -332				; size = 4
tv5965 = -328						; size = 4
_dwHairDataCount$4 = -328				; size = 4
_dwShapeIndex$5 = -328					; size = 4
$T6 = -324						; size = 4
tv6011 = -324						; size = 4
$T7 = -324						; size = 4
$T8 = -320						; size = 4
tv6036 = -320						; size = 4
$T9 = -313						; size = 1
$T10 = -313						; size = 1
$T11 = -313						; size = 1
$T12 = -313						; size = 1
$T13 = -313						; size = 1
$T14 = -313						; size = 1
$T15 = -313						; size = 1
$T16 = -313						; size = 1
$T17 = -313						; size = 1
$T18 = -313						; size = 1
_TextFileLoader$ = -312					; size = 128
$T19 = -184						; size = 24
$T20 = -184						; size = 24
$T21 = -184						; size = 24
$T22 = -184						; size = 24
_strModel$23 = -160					; size = 24
_strTargetSkin$24 = -160				; size = 24
_strTargetSkin$25 = -136				; size = 24
$T26 = -136						; size = 24
_strPathName$27 = -136					; size = 24
_strSourceSkin$28 = -112				; size = 24
_strModel$29 = -112					; size = 24
$T30 = -112						; size = 24
_strPathName$31 = -88					; size = 24
$T32 = -88						; size = 24
$T33 = -88						; size = 24
$T34 = -88						; size = 24
$T35 = -88						; size = 24
$T36 = -88						; size = 24
$T37 = -64						; size = 24
$T38 = -64						; size = 24
$T39 = -64						; size = 24
$T40 = -64						; size = 24
$T41 = -64						; size = 24
_strSourceSkin$42 = -64					; size = 24
$T43 = -40						; size = 24
$T44 = -40						; size = 24
$T45 = -40						; size = 24
$T46 = -40						; size = 24
$T47 = -40						; size = 24
$T48 = -40						; size = 24
$T49 = -40						; size = 24
$T50 = -40						; size = 24
$T51 = -40						; size = 24
$T52 = -40						; size = 24
$T53 = -40						; size = 24
$T54 = -40						; size = 24
$T55 = -40						; size = 24
$T56 = -40						; size = 24
$T57 = -40						; size = 24
$T58 = -40						; size = 24
$T59 = -40						; size = 24
$T60 = -40						; size = 24
$T61 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadRaceData@CRaceData@@QAEHPBD@Z PROC			; CRaceData::LoadRaceData, COMDAT
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadRaceData@CRaceData@@QAEHPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	89 8d b0 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00033	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]

; 12   : 	CTextFileLoader TextFileLoader;

  00036	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0003c	33 ff		 xor	 edi, edi
  0003e	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  00044	e8 00 00 00 00	 call	 ??0CTextFileLoader@@QAE@XZ ; CTextFileLoader::CTextFileLoader

; 13   : 	if (!TextFileLoader.Load(c_szFileName))

  00049	56		 push	 esi
  0004a	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00050	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00053	e8 00 00 00 00	 call	 ?Load@CTextFileLoader@@QAE_NPBD@Z ; CTextFileLoader::Load
  00058	84 c0		 test	 al, al
  0005a	0f 84 16 03 00
	00		 je	 $LN124@LoadRaceDa

; 14   : 	{
; 15   : 		return FALSE;
; 16   : 	}
; 17   : 
; 18   : 	TextFileLoader.SetTop();

  00060	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00066	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop

; 20   : 	TextFileLoader.GetTokenString("basemodelfilename", &m_strBaseModelFileName);

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NDOIOPFI@basemodelfilename@
  00070	8d 4d d8	 lea	 ecx, DWORD PTR $T61[ebp]
  00073	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00078	8b b5 b0 fe ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  0007e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00084	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00088	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0008b	50		 push	 eax
  0008c	8d 45 d8	 lea	 eax, DWORD PTR $T61[ebp]
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00095	8b 4d ec	 mov	 ecx, DWORD PTR $T61[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 20   : 	TextFileLoader.GetTokenString("basemodelfilename", &m_strBaseModelFileName);

  00098	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0009c	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0009f	72 2c		 jb	 SHORT $LN886@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a1	8b 55 d8	 mov	 edx, DWORD PTR $T61[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  000a4	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000a7	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ad	72 14		 jb	 SHORT $LN896@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000af	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000b2	83 c1 23	 add	 ecx, 35			; 00000023H
  000b5	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000b7	83 c0 fc	 add	 eax, -4			; fffffffcH
  000ba	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000bd	0f 87 83 16 00
	00		 ja	 $LN264@LoadRaceDa
$LN896@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000c3	51		 push	 ecx
  000c4	52		 push	 edx
  000c5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ca	83 c4 08	 add	 esp, 8
$LN886@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 21   : 	TextFileLoader.GetTokenString("treefilename", &m_strTreeFileName);

  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FNBFCAFH@treefilename@
  000d2	8d 4d d8	 lea	 ecx, DWORD PTR $T60[ebp]
  000d5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	83 c6 38	 add	 esi, 56			; 00000038H
  000dd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000e1	56		 push	 esi
  000e2	8d 45 d8	 lea	 eax, DWORD PTR $T60[ebp]
  000e5	50		 push	 eax
  000e6	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  000ec	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  000f1	8b 4d ec	 mov	 ecx, DWORD PTR $T60[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 21   : 	TextFileLoader.GetTokenString("treefilename", &m_strTreeFileName);

  000f4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  000f8	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000fb	72 2c		 jb	 SHORT $LN913@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000fd	8b 55 d8	 mov	 edx, DWORD PTR $T60[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00100	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00101	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00103	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00109	72 14		 jb	 SHORT $LN923@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0010b	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0010e	83 c1 23	 add	 ecx, 35			; 00000023H
  00111	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00113	83 c0 fc	 add	 eax, -4			; fffffffcH
  00116	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00119	0f 87 2c 16 00
	00		 ja	 $LN1439@LoadRaceDa
$LN923@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0011f	51		 push	 ecx
  00120	52		 push	 edx
  00121	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00126	83 c4 08	 add	 esp, 8
$LN913@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 22   : 	TextFileLoader.GetTokenString("attributefilename", &m_strAttributeFileName);

  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KCFLFBNM@attributefilename@
  0012e	8d 4d d8	 lea	 ecx, DWORD PTR $T59[ebp]
  00131	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00136	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0013c	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00142	83 c0 50	 add	 eax, 80			; 00000050H
  00145	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00149	50		 push	 eax
  0014a	8d 45 d8	 lea	 eax, DWORD PTR $T59[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00153	8b 4d ec	 mov	 ecx, DWORD PTR $T59[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 22   : 	TextFileLoader.GetTokenString("attributefilename", &m_strAttributeFileName);

  00156	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0015a	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0015d	72 2c		 jb	 SHORT $LN940@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0015f	8b 55 d8	 mov	 edx, DWORD PTR $T59[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00162	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00163	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00165	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0016b	72 14		 jb	 SHORT $LN950@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0016d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00170	83 c1 23	 add	 ecx, 35			; 00000023H
  00173	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00175	83 c0 fc	 add	 eax, -4			; fffffffcH
  00178	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0017b	0f 87 cf 15 00
	00		 ja	 $LN1440@LoadRaceDa
$LN950@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00181	51		 push	 ecx
  00182	52		 push	 edx
  00183	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00188	83 c4 08	 add	 esp, 8
$LN940@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 23   : 	TextFileLoader.GetTokenString("smokebonename", &m_strSmokeBoneName);

  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OKJLKLAI@smokebonename@
  00190	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  00193	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00198	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0019e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  001a4	83 e8 80	 sub	 eax, -128		; ffffff80H
  001a7	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  001ab	50		 push	 eax
  001ac	8d 45 d8	 lea	 eax, DWORD PTR $T58[ebp]
  001af	50		 push	 eax
  001b0	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  001b5	8b 4d ec	 mov	 ecx, DWORD PTR $T58[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 23   : 	TextFileLoader.GetTokenString("smokebonename", &m_strSmokeBoneName);

  001b8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  001bc	83 f9 10	 cmp	 ecx, 16			; 00000010H
  001bf	72 2c		 jb	 SHORT $LN967@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001c1	8b 55 d8	 mov	 edx, DWORD PTR $T58[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  001c4	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001c5	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001c7	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  001cd	72 14		 jb	 SHORT $LN977@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001cf	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  001d2	83 c1 23	 add	 ecx, 35			; 00000023H
  001d5	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001d7	83 c0 fc	 add	 eax, -4			; fffffffcH
  001da	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001dd	0f 87 72 15 00
	00		 ja	 $LN1441@LoadRaceDa
$LN977@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  001e3	51		 push	 ecx
  001e4	52		 push	 edx
  001e5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001ea	83 c4 08	 add	 esp, 8
$LN967@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 24   : 	TextFileLoader.GetTokenString("motionlistfilename", &m_strMotionListFileName);

  001ed	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HKKNCHKI@motionlistfilename@
  001f2	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  001f5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001fa	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00200	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00206	83 c0 68	 add	 eax, 104		; 00000068H
  00209	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0020d	50		 push	 eax
  0020e	8d 45 d8	 lea	 eax, DWORD PTR $T57[ebp]
  00211	50		 push	 eax
  00212	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00217	8b 4d ec	 mov	 ecx, DWORD PTR $T57[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 24   : 	TextFileLoader.GetTokenString("motionlistfilename", &m_strMotionListFileName);

  0021a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0021e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00221	72 2c		 jb	 SHORT $LN994@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00223	8b 55 d8	 mov	 edx, DWORD PTR $T57[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00226	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00227	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00229	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0022f	72 14		 jb	 SHORT $LN1004@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00231	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00234	83 c1 23	 add	 ecx, 35			; 00000023H
  00237	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00239	83 c0 fc	 add	 eax, -4			; fffffffcH
  0023c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0023f	0f 87 15 15 00
	00		 ja	 $LN1442@LoadRaceDa
$LN1004@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00245	51		 push	 ecx
  00246	52		 push	 edx
  00247	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0024c	83 c4 08	 add	 esp, 8
$LN994@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 26   : 	if (!m_strTreeFileName.empty())

  0024f	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00255	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00259	0f 84 80 00 00
	00		 je	 $LN1195@LoadRaceDa
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h

; 106  : 		size_t nLength = str.length();		

  0025f	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]

; 107  : 
; 108  : 		for (size_t i = 0; i<nLength; ++i)

  00262	33 c0		 xor	 eax, eax
  00264	89 8d ac fe ff
	ff		 mov	 DWORD PTR _nLength$1$[ebp], ecx
  0026a	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  00270	85 c9		 test	 ecx, ecx
  00272	74 6b		 je	 SHORT $LN1195@LoadRaceDa
$LL1196@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2324 :         if (_Mysize <= _Off) {

  00274	39 46 10	 cmp	 DWORD PTR [esi+16], eax
  00277	0f 86 e7 14 00
	00		 jbe	 $LN1371@LoadRaceDa

; 2301 :         return _BUF_SIZE <= _Myres;

  0027d	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 2283 :         value_type* _Result = _Bx._Buf;

  00280	8b d6		 mov	 edx, esi

; 2284 :         if (_Large_string_engaged()) {

  00282	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00285	72 02		 jb	 SHORT $LN1408@LoadRaceDa

; 2285 :             _Result = _Unfancy(_Bx._Ptr);

  00287	8b 16		 mov	 edx, DWORD PTR [esi]
$LN1408@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h

; 110  : 			if (str.at(i) == '\\') {

  00289	80 3c 02 5c	 cmp	 BYTE PTR [edx+eax], 92	; 0000005cH
  0028d	8b d6		 mov	 edx, esi
  0028f	75 0d		 jne	 SHORT $LN1197@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2284 :         if (_Large_string_engaged()) {

  00291	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00294	72 02		 jb	 SHORT $LN1405@LoadRaceDa

; 2285 :             _Result = _Unfancy(_Bx._Ptr);

  00296	8b 16		 mov	 edx, DWORD PTR [esi]
$LN1405@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h

; 111  : 				str.at(i) = '/';

  00298	c6 04 02 2f	 mov	 BYTE PTR [edx+eax], 47	; 0000002fH

; 112  : 			} else {

  0029c	eb 32		 jmp	 SHORT $LN1194@LoadRaceDa
$LN1197@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2284 :         if (_Large_string_engaged()) {

  0029e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  002a1	72 02		 jb	 SHORT $LN1406@LoadRaceDa

; 2285 :             _Result = _Unfancy(_Bx._Ptr);

  002a3	8b 16		 mov	 edx, DWORD PTR [esi]
$LN1406@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h

; 113  : 				str.at(i) = static_cast<char>(tolower(str.at(i)));

  002a5	0f be 04 02	 movsx	 eax, BYTE PTR [edx+eax]
  002a9	50		 push	 eax
  002aa	e8 00 00 00 00	 call	 _tolower
  002af	8a d0		 mov	 dl, al
  002b1	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2324 :         if (_Mysize <= _Off) {

  002b4	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]
  002ba	39 46 10	 cmp	 DWORD PTR [esi+16], eax
  002bd	0f 86 a1 14 00
	00		 jbe	 $LN1371@LoadRaceDa

; 2284 :         if (_Large_string_engaged()) {

  002c3	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  002c7	8b ce		 mov	 ecx, esi
  002c9	72 02		 jb	 SHORT $LN1407@LoadRaceDa

; 2285 :             _Result = _Unfancy(_Bx._Ptr);

  002cb	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN1407@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\filename.h

; 113  : 				str.at(i) = static_cast<char>(tolower(str.at(i)));

  002cd	88 14 01	 mov	 BYTE PTR [ecx+eax], dl
$LN1194@LoadRaceDa:

; 107  : 
; 108  : 		for (size_t i = 0; i<nLength; ++i)

  002d0	40		 inc	 eax
  002d1	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  002d7	3b 85 ac fe ff
	ff		 cmp	 eax, DWORD PTR _nLength$1$[ebp]
  002dd	72 95		 jb	 SHORT $LL1196@LoadRaceDa
$LN1195@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 32   : 	if (TextFileLoader.GetTokenVector("smokefilename", &pSmokeTokenVector))

  002df	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OGIHOCKK@smokefilename@
  002e4	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  002e7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002ec	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _pSmokeTokenVector$[ebp]
  002f2	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  002f6	50		 push	 eax
  002f7	8d 45 d8	 lea	 eax, DWORD PTR $T56[ebp]
  002fa	50		 push	 eax
  002fb	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00301	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00306	8b 4d ec	 mov	 ecx, DWORD PTR $T56[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 32   : 	if (TextFileLoader.GetTokenVector("smokefilename", &pSmokeTokenVector))

  00309	8b f0		 mov	 esi, eax
  0030b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0030f	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00312	72 2c		 jb	 SHORT $LN1023@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00314	8b 55 d8	 mov	 edx, DWORD PTR $T56[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00317	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00318	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0031a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00320	72 14		 jb	 SHORT $LN1033@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00322	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00325	83 c1 23	 add	 ecx, 35			; 00000023H
  00328	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0032a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0032d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00330	0f 87 29 14 00
	00		 ja	 $LN1443@LoadRaceDa
$LN1033@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00336	51		 push	 ecx
  00337	52		 push	 edx
  00338	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0033d	83 c4 08	 add	 esp, 8
$LN1023@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 32   : 	if (TextFileLoader.GetTokenVector("smokefilename", &pSmokeTokenVector))

  00340	85 f6		 test	 esi, esi
  00342	0f 84 81 01 00
	00		 je	 $LN3@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00348	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR _pSmokeTokenVector$[ebp]
  0034e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00351	2b 08		 sub	 ecx, DWORD PTR [eax]
  00353	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00358	f7 e9		 imul	 ecx
  0035a	c1 fa 02	 sar	 edx, 2
  0035d	8b c2		 mov	 eax, edx
  0035f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00362	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 34   : 		if (pSmokeTokenVector->size() % 2 != 0)

  00364	a8 01		 test	 al, 1
  00366	74 3a		 je	 SHORT $LN17@LoadRaceDa

; 35   : 		{
; 36   : 			TraceError("SmokeFileName ArgCount[%d]%2==0", pSmokeTokenVector->size());

  00368	50		 push	 eax
  00369	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@
$LN1436@LoadRaceDa:
  0036e	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
$LN1437@LoadRaceDa:
  00373	83 c4 08	 add	 esp, 8
$LN124@LoadRaceDa:
  00376	33 f6		 xor	 esi, esi
$LN125@LoadRaceDa:

; 201  : 	}
; 202  : 
; 203  : 	return TRUE;

  00378	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0037e	e8 00 00 00 00	 call	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
  00383	8b c6		 mov	 eax, esi

; 204  : }

  00385	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00388	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0038f	59		 pop	 ecx
  00390	5f		 pop	 edi
  00391	5e		 pop	 esi
  00392	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00395	33 cd		 xor	 ecx, ebp
  00397	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0039c	8b e5		 mov	 esp, ebp
  0039e	5d		 pop	 ebp
  0039f	c2 04 00	 ret	 4
$LN17@LoadRaceDa:

; 37   : 			return FALSE;
; 38   : 		}
; 39   : 
; 40   : 		UINT uLineCount = pSmokeTokenVector->size() / 2;

  003a2	d1 e8		 shr	 eax, 1
  003a4	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _uLineCount$1$[ebp], eax

; 41   : 
; 42   : 		for (UINT uLine = 0; uLine < uLineCount; ++uLine)

  003aa	c7 85 b4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _uLine$1$[ebp], 0
  003b4	0f 84 0f 01 00
	00		 je	 $LN3@LoadRaceDa

; 37   : 			return FALSE;
; 38   : 		}
; 39   : 
; 40   : 		UINT uLineCount = pSmokeTokenVector->size() / 2;

  003ba	33 f6		 xor	 esi, esi
  003bc	c7 85 b8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv5965[ebp], 0
  003c6	89 b5 bc fe ff
	ff		 mov	 DWORD PTR tv6011[ebp], esi
  003cc	0f 1f 40 00	 npad	 4
$LL4@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1967 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  003d0	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR _pSmokeTokenVector$[ebp]
  003d6	8b 10		 mov	 edx, DWORD PTR [eax]
  003d8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003db	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  003e0	2b ca		 sub	 ecx, edx
  003e2	89 95 ac fe ff
	ff		 mov	 DWORD PTR tv5991[ebp], edx
  003e8	f7 e9		 imul	 ecx
  003ea	c1 fa 02	 sar	 edx, 2
  003ed	8b c2		 mov	 eax, edx
  003ef	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  003f2	03 c2		 add	 eax, edx
  003f4	3b 85 b8 fe ff
	ff		 cmp	 eax, DWORD PTR tv5965[ebp]
  003fa	0f 86 69 13 00
	00		 jbe	 $LN1374@LoadRaceDa

; 1969 :         }
; 1970 : 
; 1971 :         return _My_data._Myfirst[_Pos];

  00400	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR tv5991[ebp]
  00406	03 c6		 add	 eax, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00408	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0040c	72 02		 jb	 SHORT $LN571@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  0040e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN571@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 44   : 			int eSmoke = atoi(pSmokeTokenVector->at(uLine * 2 + 0).c_str());

  00410	50		 push	 eax
  00411	e8 00 00 00 00	 call	 __atoi64
  00416	8b f0		 mov	 esi, eax
  00418	83 c4 04	 add	 esp, 4

; 45   : 			if (eSmoke < 0 || eSmoke >= SMOKE_NUM)

  0041b	85 f6		 test	 esi, esi
  0041d	0f 88 40 04 00
	00		 js	 $LN19@LoadRaceDa
  00423	83 fe 04	 cmp	 esi, 4
  00426	0f 8d 37 04 00
	00		 jge	 $LN19@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1967 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0042c	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR _pSmokeTokenVector$[ebp]
  00432	8b 01		 mov	 eax, DWORD PTR [ecx]
  00434	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00437	2b c8		 sub	 ecx, eax
  00439	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv6036[ebp], eax
  0043f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00444	f7 e9		 imul	 ecx
  00446	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR tv5965[ebp]
  0044c	c1 fa 02	 sar	 edx, 2
  0044f	40		 inc	 eax
  00450	8b ca		 mov	 ecx, edx
  00452	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00455	03 ca		 add	 ecx, edx
  00457	3b c8		 cmp	 ecx, eax
  00459	0f 86 0a 13 00
	00		 jbe	 $LN1374@LoadRaceDa

; 1969 :         }
; 1970 : 
; 1971 :         return _My_data._Myfirst[_Pos];

  0045f	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR tv6011[ebp]
  00465	03 85 c0 fe ff
	ff		 add	 eax, DWORD PTR tv6036[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 53   : 			DWORD& rdwCRCEft = m_adwSmokeEffectID[eSmoke];

  0046b	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00471	83 c1 08	 add	 ecx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00474	83 78 2c 10	 cmp	 DWORD PTR [eax+44], 16	; 00000010H
  00478	8d 50 18	 lea	 edx, DWORD PTR [eax+24]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 53   : 			DWORD& rdwCRCEft = m_adwSmokeEffectID[eSmoke];

  0047b	8d 34 b1	 lea	 esi, DWORD PTR [ecx+esi*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  0047e	72 03		 jb	 SHORT $LN1409@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00480	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
$LN1409@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 54   : 			if (!CEffectManager::Instance().RegisterEffect2(c_rstrEffectFileName.c_str(), &rdwCRCEft))

  00483	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00489	6a 00		 push	 0
  0048b	56		 push	 esi
  0048c	52		 push	 edx
  0048d	e8 00 00 00 00	 call	 ?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z ; CEffectManager::RegisterEffect2
  00492	85 c0		 test	 eax, eax
  00494	0f 84 9c 03 00
	00		 je	 $LN1375@LoadRaceDa

; 41   : 
; 42   : 		for (UINT uLine = 0; uLine < uLineCount; ++uLine)

  0049a	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _uLine$1$[ebp]
  004a0	8b b5 bc fe ff
	ff		 mov	 esi, DWORD PTR tv6011[ebp]
  004a6	40		 inc	 eax
  004a7	83 85 b8 fe ff
	ff 02		 add	 DWORD PTR tv5965[ebp], 2
  004ae	83 c6 30	 add	 esi, 48			; 00000030H
  004b1	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _uLine$1$[ebp], eax
  004b7	89 b5 bc fe ff
	ff		 mov	 DWORD PTR tv6011[ebp], esi
  004bd	3b 85 a8 fe ff
	ff		 cmp	 eax, DWORD PTR _uLineCount$1$[ebp]
  004c3	0f 82 07 ff ff
	ff		 jb	 $LL4@LoadRaceDa
$LN3@LoadRaceDa:

; 59   : 			}
; 60   : 		}
; 61   : 	}
; 62   : 
; 63   : 	if (TextFileLoader.SetChildNode("shapedata"))

  004c9	68 00 00 00 00	 push	 OFFSET ??_C@_09IOJGLPMI@shapedata@
  004ce	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  004d4	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  004d9	85 c0		 test	 eax, eax
  004db	0f 84 fe 0a 00
	00		 je	 $LN230@LoadRaceDa
  004e1	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4998 :         _My_data._Mysize = 0;

  004e4	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strPathName$27[ebp+16], 0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  004eb	0f 11 85 78 ff
	ff ff		 movups	 XMMWORD PTR _strPathName$27[ebp], xmm0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  004f2	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strPathName$27[ebp+20], 15 ; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  004f9	c6 85 78 ff ff
	ff 00		 mov	 BYTE PTR _strPathName$27[ebp], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 67   : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  00500	68 00 00 00 00	 push	 OFFSET ??_C@_08PEIJGPHF@pathname@
  00505	8d 4d 90	 lea	 ecx, DWORD PTR $T30[ebp]
  00508	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0050c	c7 85 b4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwShapeDataCount$3[ebp], 0
  00516	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0051b	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$27[ebp]
  00521	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00525	50		 push	 eax
  00526	8d 45 90	 lea	 eax, DWORD PTR $T30[ebp]
  00529	bf 01 00 00 00	 mov	 edi, 1
  0052e	50		 push	 eax
  0052f	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00535	89 bd c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edi
  0053b	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  00541	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00546	85 c0		 test	 eax, eax
  00548	74 46		 je	 SHORT $LN39@LoadRaceDa
  0054a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDBLEP@shapedatacount@
  0054f	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  00552	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00557	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _dwShapeDataCount$3[ebp]
  0055d	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  00564	50		 push	 eax
  00565	8d 45 d8	 lea	 eax, DWORD PTR $T55[ebp]
  00568	bf 03 00 00 00	 mov	 edi, 3
  0056d	50		 push	 eax
  0056e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00574	89 bd c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edi
  0057a	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  00580	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  00585	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T18[ebp], 1
  0058c	85 c0		 test	 eax, eax
  0058e	75 07		 jne	 SHORT $LN40@LoadRaceDa
$LN39@LoadRaceDa:
  00590	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T18[ebp], 0
$LN40@LoadRaceDa:
  00597	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  0059d	a8 02		 test	 al, 2
  0059f	74 17		 je	 SHORT $LN63@LoadRaceDa
  005a1	83 e0 fd	 and	 eax, -3			; fffffffdH
  005a4	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  005a7	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  005ad	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  005b2	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN63@LoadRaceDa:
  005b8	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  005bf	a8 01		 test	 al, 1
  005c1	74 11		 je	 SHORT $LN64@LoadRaceDa
  005c3	83 e0 fe	 and	 eax, -2			; fffffffeH
  005c6	8d 4d 90	 lea	 ecx, DWORD PTR $T30[ebp]
  005c9	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  005cf	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN64@LoadRaceDa:
  005d4	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T18[ebp], 0
  005db	0f 84 b2 09 00
	00		 je	 $LN1412@LoadRaceDa

; 70   : 			for (DWORD i = 0; i < dwShapeDataCount; ++i)

  005e1	33 c9		 xor	 ecx, ecx
  005e3	89 8d ac fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  005e9	39 8d b4 fe ff
	ff		 cmp	 DWORD PTR _dwShapeDataCount$3[ebp], ecx
  005ef	0f 86 9e 09 00
	00		 jbe	 $LN1412@LoadRaceDa
  005f5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL7@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00600	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09IOJGLPMI@shapedata@+8
  00605	0f 57 c0	 xorps	 xmm0, xmm0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00608	0f 11 45 a8	 movups	 XMMWORD PTR $T36[ebp], xmm0

; 2749 :             _My_data._Mysize = _Count;

  0060c	c7 45 b8 09 00
	00 00		 mov	 DWORD PTR $T36[ebp+16], 9

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00613	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09IOJGLPMI@shapedata@

; 2750 :             _My_data._Myres  = _BUF_SIZE - 1;

  0061b	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T36[ebp+20], 15 ; 0000000fH

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00622	66 0f d6 45 a8	 movq	 QWORD PTR $T36[ebp], xmm0
  00627	88 45 b0	 mov	 BYTE PTR $T36[ebp+8], al

; 2756 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  0062a	c6 45 b1 00	 mov	 BYTE PTR $T36[ebp+9], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 72   : 				if (!TextFileLoader.SetChildNode("shapedata", i))

  0062e	51		 push	 ecx
  0062f	8d 45 a8	 lea	 eax, DWORD PTR $T36[ebp]
  00632	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00636	50		 push	 eax
  00637	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0063d	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00642	8b 4d bc	 mov	 ecx, DWORD PTR $T36[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 72   : 				if (!TextFileLoader.SetChildNode("shapedata", i))

  00645	85 c0		 test	 eax, eax
  00647	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0064b	0f 94 c0	 sete	 al
  0064e	88 85 c7 fe ff
	ff		 mov	 BYTE PTR $T17[ebp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00654	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00657	72 32		 jb	 SHORT $LN257@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00659	8b 55 a8	 mov	 edx, DWORD PTR $T36[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0065c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0065d	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0065f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00665	72 14		 jb	 SHORT $LN267@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00667	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0066a	83 c1 23	 add	 ecx, 35			; 00000023H
  0066d	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0066f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00672	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00675	0f 87 cb 10 00
	00		 ja	 $LN264@LoadRaceDa
$LN267@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0067b	51		 push	 ecx
  0067c	52		 push	 edx
  0067d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00682	8a 85 c7 fe ff
	ff		 mov	 al, BYTE PTR $T17[ebp]
  00688	83 c4 08	 add	 esp, 8
$LN257@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 72   : 				if (!TextFileLoader.SetChildNode("shapedata", i))

  0068b	84 c0		 test	 al, al
  0068d	0f 85 e7 08 00
	00		 jne	 $LN5@LoadRaceDa

; 78   : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  00693	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GCDLCIFI@specialpath@
  00698	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  0069b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006a0	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$27[ebp]
  006a6	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  006aa	50		 push	 eax
  006ab	8d 45 d8	 lea	 eax, DWORD PTR $T54[ebp]
  006ae	50		 push	 eax
  006af	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  006b5	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  006ba	8b 4d ec	 mov	 ecx, DWORD PTR $T54[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 78   : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  006bd	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  006c1	83 f9 10	 cmp	 ecx, 16			; 00000010H
  006c4	72 2c		 jb	 SHORT $LN683@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006c6	8b 55 d8	 mov	 edx, DWORD PTR $T54[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  006c9	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006ca	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  006cc	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  006d2	72 14		 jb	 SHORT $LN693@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  006d4	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  006d7	83 c1 23	 add	 ecx, 35			; 00000023H
  006da	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006dc	83 c0 fc	 add	 eax, -4			; fffffffcH
  006df	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  006e2	0f 87 5e 10 00
	00		 ja	 $LN264@LoadRaceDa
$LN693@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  006e8	51		 push	 ecx
  006e9	52		 push	 edx
  006ea	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  006ef	83 c4 08	 add	 esp, 8
$LN683@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 82   : 				if (!TextFileLoader.GetTokenDoubleWord("shapeindex", &dwShapeIndex))

  006f2	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BLAJFEIP@shapeindex@
  006f7	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  006fa	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006ff	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _dwShapeIndex$5[ebp]
  00705	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00709	50		 push	 eax
  0070a	8d 45 d8	 lea	 eax, DWORD PTR $T53[ebp]
  0070d	50		 push	 eax
  0070e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00714	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00719	8b 4d ec	 mov	 ecx, DWORD PTR $T53[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 82   : 				if (!TextFileLoader.GetTokenDoubleWord("shapeindex", &dwShapeIndex))

  0071c	85 c0		 test	 eax, eax
  0071e	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00722	0f 94 c0	 sete	 al
  00725	88 85 c7 fe ff
	ff		 mov	 BYTE PTR $T16[ebp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0072b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0072e	72 32		 jb	 SHORT $LN710@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00730	8b 55 d8	 mov	 edx, DWORD PTR $T53[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00733	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00734	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00736	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0073c	72 14		 jb	 SHORT $LN720@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0073e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00741	83 c1 23	 add	 ecx, 35			; 00000023H
  00744	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00746	83 c0 fc	 add	 eax, -4			; fffffffcH
  00749	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0074c	0f 87 f4 0f 00
	00		 ja	 $LN264@LoadRaceDa
$LN720@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00752	51		 push	 ecx
  00753	52		 push	 edx
  00754	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00759	8a 85 c7 fe ff
	ff		 mov	 al, BYTE PTR $T16[ebp]
  0075f	83 c4 08	 add	 esp, 8
$LN710@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 82   : 				if (!TextFileLoader.GetTokenDoubleWord("shapeindex", &dwShapeIndex))

  00762	84 c0		 test	 al, al
  00764	0f 85 10 08 00
	00		 jne	 $LN5@LoadRaceDa
  0076a	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4998 :         _My_data._Mysize = 0;

  0076d	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _strModel$29[ebp+16], 0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00774	0f 11 45 90	 movups	 XMMWORD PTR _strModel$29[ebp], xmm0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  00778	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR _strModel$29[ebp+20], 15 ; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0077f	88 45 90	 mov	 BYTE PTR _strModel$29[ebp], al
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 89   : 				if (TextFileLoader.GetTokenString("model", &strModel))

  00782	68 00 00 00 00	 push	 OFFSET ??_C@_05NCCFOPHA@model@
  00787	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  0078a	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  0078e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00793	8d 45 90	 lea	 eax, DWORD PTR _strModel$29[ebp]
  00796	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  0079a	50		 push	 eax
  0079b	8d 45 d8	 lea	 eax, DWORD PTR $T52[ebp]
  0079e	50		 push	 eax
  0079f	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  007a5	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  007aa	8b 4d ec	 mov	 ecx, DWORD PTR $T52[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 89   : 				if (TextFileLoader.GetTokenString("model", &strModel))

  007ad	8b f0		 mov	 esi, eax
  007af	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  007b3	83 f9 10	 cmp	 ecx, 16			; 00000010H
  007b6	72 2c		 jb	 SHORT $LN1076@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007b8	8b 55 d8	 mov	 edx, DWORD PTR $T52[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  007bb	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007bc	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  007be	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  007c4	72 14		 jb	 SHORT $LN1086@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  007c6	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  007c9	83 c1 23	 add	 ecx, 35			; 00000023H
  007cc	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  007ce	83 c0 fc	 add	 eax, -4			; fffffffcH
  007d1	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  007d4	0f 87 6c 0f 00
	00		 ja	 $LN264@LoadRaceDa
$LN1086@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  007da	51		 push	 ecx
  007db	52		 push	 edx
  007dc	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  007e1	83 c4 08	 add	 esp, 8
$LN1076@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 89   : 				if (TextFileLoader.GetTokenString("model", &strModel))

  007e4	85 f6		 test	 esi, esi
  007e6	0f 84 82 00 00
	00		 je	 $LN25@LoadRaceDa

; 91   : 					SetShapeModel(dwShapeIndex, (strPathName + strModel).c_str());

  007ec	8d 45 90	 lea	 eax, DWORD PTR _strModel$29[ebp]
  007ef	50		 push	 eax
  007f0	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$27[ebp]
  007f6	50		 push	 eax
  007f7	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T22[ebp]
  007fd	50		 push	 eax
  007fe	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00803	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00806	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 91   : 					SetShapeModel(dwShapeIndex, (strPathName + strModel).c_str());

  0080a	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  0080e	72 02		 jb	 SHORT $LN1286@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00810	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1286@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 91   : 					SetShapeModel(dwShapeIndex, (strPathName + strModel).c_str());

  00812	8b bd b0 fe ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  00818	8b cf		 mov	 ecx, edi
  0081a	50		 push	 eax
  0081b	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  00821	e8 00 00 00 00	 call	 ?SetShapeModel@CRaceData@@QAEXIPBD@Z ; CRaceData::SetShapeModel
  00826	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  0082c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 92   : 				}

  00831	e9 91 00 00 00	 jmp	 $LN26@LoadRaceDa
$LN1375@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  00836	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR tv6036[ebp]
  0083c	83 c0 18	 add	 eax, 24			; 00000018H
  0083f	03 85 bc fe ff
	ff		 add	 eax, DWORD PTR tv6011[ebp]
  00845	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  00849	72 02		 jb	 SHORT $LN1325@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  0084b	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1325@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 56   : 				TraceError("CRaceData::RegisterEffect2(%s) ERROR", c_rstrEffectFileName.c_str());

  0084d	50		 push	 eax
  0084e	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@
  00853	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError

; 57   : 				rdwCRCEft = 0;

  00858	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 58   : 				return false;

  0085e	e9 10 fb ff ff	 jmp	 $LN1437@LoadRaceDa
$LN19@LoadRaceDa:

; 46   : 			{
; 47   : 				TraceError("SmokeFileName SmokeNum[%d] OUT OF RANGE", eSmoke);

  00863	56		 push	 esi
  00864	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@
  00869	e9 00 fb ff ff	 jmp	 $LN1436@LoadRaceDa
$LN25@LoadRaceDa:

; 93   : 				else
; 94   : 				{
; 95   : 					if (!TextFileLoader.GetTokenString("local_model", &strModel))

  0086e	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NFFHMNPF@local_model@
  00873	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00876	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0087b	8d 45 90	 lea	 eax, DWORD PTR _strModel$29[ebp]
  0087e	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  00882	50		 push	 eax
  00883	8d 45 d8	 lea	 eax, DWORD PTR $T51[ebp]
  00886	50		 push	 eax
  00887	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0088d	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00892	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00895	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  00899	8b f0		 mov	 esi, eax
  0089b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  008a0	85 f6		 test	 esi, esi
  008a2	0f 84 9a 06 00
	00		 je	 $LN1433@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  008a8	83 7d a4 10	 cmp	 DWORD PTR _strModel$29[ebp+20], 16 ; 00000010H
  008ac	8d 45 90	 lea	 eax, DWORD PTR _strModel$29[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 100  : 					SetShapeModel(dwShapeIndex, strModel.c_str());

  008af	8b bd b0 fe ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  008b5	8b cf		 mov	 ecx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  008b7	0f 43 45 90	 cmovae	 eax, DWORD PTR _strModel$29[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 100  : 					SetShapeModel(dwShapeIndex, strModel.c_str());

  008bb	50		 push	 eax
  008bc	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  008c2	e8 00 00 00 00	 call	 ?SetShapeModel@CRaceData@@QAEXIPBD@Z ; CRaceData::SetShapeModel
$LN26@LoadRaceDa:
  008c7	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4998 :         _My_data._Mysize = 0;

  008ca	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$42[ebp+16], 0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  008d1	0f 11 45 c0	 movups	 XMMWORD PTR _strSourceSkin$42[ebp], xmm0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  008d5	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$42[ebp+20], 15 ; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008dc	c6 45 c0 00	 mov	 BYTE PTR _strSourceSkin$42[ebp], 0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  008e0	0f 11 85 60 ff
	ff ff		 movups	 XMMWORD PTR _strTargetSkin$24[ebp], xmm0

; 4998 :         _My_data._Mysize = 0;

  008e7	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strTargetSkin$24[ebp+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  008f1	c7 85 74 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _strTargetSkin$24[ebp+20], 15 ; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008fb	c6 85 60 ff ff
	ff 00		 mov	 BYTE PTR _strTargetSkin$24[ebp], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 113  : 				if (TextFileLoader.GetTokenString("local_sourceskin", &strSourceSkin) &&

  00902	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OAFGNDMP@local_sourceskin@
  00907	8d 4d a8	 lea	 ecx, DWORD PTR $T35[ebp]
  0090a	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0090e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00913	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00919	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0091f	83 c8 04	 or	 eax, 4
  00922	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  00926	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  0092c	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00932	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$42[ebp]
  00935	50		 push	 eax
  00936	8d 45 a8	 lea	 eax, DWORD PTR $T35[ebp]
  00939	50		 push	 eax
  0093a	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0093f	85 c0		 test	 eax, eax
  00941	74 4a		 je	 SHORT $LN41@LoadRaceDa
  00943	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CMMEEAHN@local_targetskin@
  00948	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  0094b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00950	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00956	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0095c	83 c8 08	 or	 eax, 8
  0095f	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 20 ; 00000014H
  00966	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  0096c	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00972	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$24[ebp]
  00978	50		 push	 eax
  00979	8d 45 d8	 lea	 eax, DWORD PTR $T50[ebp]
  0097c	50		 push	 eax
  0097d	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00982	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T15[ebp], 1
  00989	85 c0		 test	 eax, eax
  0098b	75 07		 jne	 SHORT $LN42@LoadRaceDa
$LN41@LoadRaceDa:
  0098d	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T15[ebp], 0
$LN42@LoadRaceDa:
  00994	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  0099a	a8 08		 test	 al, 8
  0099c	74 17		 je	 SHORT $LN78@LoadRaceDa
  0099e	83 e0 f7	 and	 eax, -9			; fffffff7H
  009a1	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  009a4	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  009aa	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  009af	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN78@LoadRaceDa:
  009b5	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  009bc	a8 04		 test	 al, 4
  009be	74 11		 je	 SHORT $LN79@LoadRaceDa
  009c0	83 e0 fb	 and	 eax, -5			; fffffffbH
  009c3	8d 4d a8	 lea	 ecx, DWORD PTR $T35[ebp]
  009c6	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  009cc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN79@LoadRaceDa:
  009d1	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T15[ebp], 0
  009d8	74 30		 je	 SHORT $LN28@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  009da	83 bd 74 ff ff
	ff 10		 cmp	 DWORD PTR _strTargetSkin$24[ebp+20], 16 ; 00000010H
  009e1	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _strTargetSkin$24[ebp]

; 2292 :         const value_type* _Result = _Bx._Buf;

  009e7	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$42[ebp]

; 2293 :         if (_Large_string_engaged()) {

  009ea	0f 43 8d 60 ff
	ff ff		 cmovae	 ecx, DWORD PTR _strTargetSkin$24[ebp]
  009f1	83 7d d4 10	 cmp	 DWORD PTR _strSourceSkin$42[ebp+20], 16 ; 00000010H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 116  : 					AppendShapeSkin(dwShapeIndex, 0, strSourceSkin.c_str(), strTargetSkin.c_str());

  009f5	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  009f6	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strSourceSkin$42[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 116  : 					AppendShapeSkin(dwShapeIndex, 0, strSourceSkin.c_str(), strTargetSkin.c_str());

  009fa	8b cf		 mov	 ecx, edi
  009fc	50		 push	 eax
  009fd	6a 00		 push	 0
  009ff	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  00a05	e8 00 00 00 00	 call	 ?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z ; CRaceData::AppendShapeSkin
$LN28@LoadRaceDa:

; 117  : 				}
; 118  : 				// END_OF_LOCAL_PATH_SUPPORT
; 119  : 
; 120  : 				if (TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  00a0a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ILFPKBGB@sourceskin@
  00a0f	8d 4d a8	 lea	 ecx, DWORD PTR $T34[ebp]
  00a12	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a17	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00a1d	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00a23	83 c8 10	 or	 eax, 16			; 00000010H
  00a26	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  00a2a	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00a30	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00a36	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$42[ebp]
  00a39	50		 push	 eax
  00a3a	8d 45 a8	 lea	 eax, DWORD PTR $T34[ebp]
  00a3d	50		 push	 eax
  00a3e	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00a43	85 c0		 test	 eax, eax
  00a45	74 4a		 je	 SHORT $LN43@LoadRaceDa
  00a47	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EHMNDCND@targetskin@
  00a4c	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00a4f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a54	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00a5a	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00a60	83 c8 20	 or	 eax, 32			; 00000020H
  00a63	c7 45 fc 16 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 22 ; 00000016H
  00a6a	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00a70	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00a76	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$24[ebp]
  00a7c	50		 push	 eax
  00a7d	8d 45 d8	 lea	 eax, DWORD PTR $T49[ebp]
  00a80	50		 push	 eax
  00a81	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00a86	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T14[ebp], 1
  00a8d	85 c0		 test	 eax, eax
  00a8f	75 07		 jne	 SHORT $LN44@LoadRaceDa
$LN43@LoadRaceDa:
  00a91	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T14[ebp], 0
$LN44@LoadRaceDa:
  00a98	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00a9e	a8 20		 test	 al, 32			; 00000020H
  00aa0	74 17		 je	 SHORT $LN84@LoadRaceDa
  00aa2	83 e0 df	 and	 eax, -33		; ffffffdfH
  00aa5	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00aa8	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00aae	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ab3	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN84@LoadRaceDa:
  00ab9	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00ac0	a8 10		 test	 al, 16			; 00000010H
  00ac2	74 11		 je	 SHORT $LN85@LoadRaceDa
  00ac4	83 e0 ef	 and	 eax, -17		; ffffffefH
  00ac7	8d 4d a8	 lea	 ecx, DWORD PTR $T34[ebp]
  00aca	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00ad0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN85@LoadRaceDa:
  00ad5	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T14[ebp], 0
  00adc	74 76		 je	 SHORT $LN29@LoadRaceDa

; 123  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00ade	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$24[ebp]
  00ae4	50		 push	 eax
  00ae5	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$27[ebp]
  00aeb	50		 push	 eax
  00aec	8d 45 d8	 lea	 eax, DWORD PTR $T48[ebp]
  00aef	50		 push	 eax
  00af0	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00af5	83 c4 0c	 add	 esp, 12			; 0000000cH
  00af8	8b f0		 mov	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00afa	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 123  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00afe	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00b02	72 02		 jb	 SHORT $LN1297@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00b04	8b 36		 mov	 esi, DWORD PTR [esi]
$LN1297@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 123  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00b06	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$42[ebp]
  00b09	50		 push	 eax
  00b0a	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$27[ebp]
  00b10	50		 push	 eax
  00b11	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T21[ebp]
  00b17	50		 push	 eax
  00b18	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00b1d	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00b20	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 123  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00b24	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00b28	72 02		 jb	 SHORT $LN1304@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00b2a	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1304@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 123  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00b2c	56		 push	 esi
  00b2d	50		 push	 eax
  00b2e	6a 00		 push	 0
  00b30	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  00b36	8b cf		 mov	 ecx, edi
  00b38	e8 00 00 00 00	 call	 ?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z ; CRaceData::AppendShapeSkin
  00b3d	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  00b43	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b48	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  00b4b	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00b4f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN29@LoadRaceDa:

; 126  : 				for (DWORD i = 2; i <= 9; i++)

  00b54	bf 02 00 00 00	 mov	 edi, 2
  00b59	89 bd a8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], edi
  00b5f	90		 npad	 1
$LL10@LoadRaceDa:

; 127  : 				{
; 128  : 					_snprintf(__szSkin1, sizeof(__szSkin1), "sourceskin%u", i);

  00b60	57		 push	 edi
  00b61	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LBPJELHP@sourceskin?$CFu@
  00b66	6a 0c		 push	 12			; 0000000cH
  00b68	68 00 00 00 00	 push	 OFFSET ?__szSkin1@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00b6d	e8 00 00 00 00	 call	 __snprintf

; 129  : 					_snprintf(__szSkin2, sizeof(__szSkin2), "targetskin%u", i);

  00b72	57		 push	 edi
  00b73	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OAMIJCJ@targetskin?$CFu@
  00b78	6a 0c		 push	 12			; 0000000cH
  00b7a	68 00 00 00 00	 push	 OFFSET ?__szSkin2@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00b7f	e8 00 00 00 00	 call	 __snprintf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  00b84	be 00 00 00 00	 mov	 esi, OFFSET ?__szSkin1@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA

; 2349 :     size_type _Mysize = 0; // current length of string

  00b89	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T33[ebp+16], 0
  00b90	0f 57 c0	 xorps	 xmm0, xmm0

; 2350 :     size_type _Myres  = 0; // current storage reserved for string

  00b93	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 129  : 					_snprintf(__szSkin2, sizeof(__szSkin2), "targetskin%u", i);

  00b9a	83 c4 20	 add	 esp, 32			; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00b9d	0f 11 45 a8	 movups	 XMMWORD PTR $T33[ebp], xmm0

; 415  :             return __builtin_strlen(_First);

  00ba1	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL1415@LoadRaceDa:
  00ba4	8a 06		 mov	 al, BYTE PTR [esi]
  00ba6	46		 inc	 esi
  00ba7	84 c0		 test	 al, al
  00ba9	75 f9		 jne	 SHORT $LL1415@LoadRaceDa
  00bab	2b f1		 sub	 esi, ecx

; 2740 :         if (_Count > max_size()) {

  00bad	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00bb3	0f 87 ba 0b 00
	00		 ja	 $LN1376@LoadRaceDa

; 2742 :         }
; 2743 : 
; 2744 :         auto& _Al       = _Getal();
; 2745 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2746 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2747 : 
; 2748 :         if (_Count < _BUF_SIZE) {

  00bb9	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 15 ; 0000000fH
  00bc0	83 fe 10	 cmp	 esi, 16			; 00000010H
  00bc3	73 1c		 jae	 SHORT $LN532@LoadRaceDa

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00bc5	56		 push	 esi
  00bc6	8d 45 a8	 lea	 eax, DWORD PTR $T33[ebp]

; 2749 :             _My_data._Mysize = _Count;

  00bc9	89 75 b8	 mov	 DWORD PTR $T33[ebp+16], esi

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00bcc	68 00 00 00 00	 push	 OFFSET ?__szSkin1@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00bd1	50		 push	 eax
  00bd2	e8 00 00 00 00	 call	 _memcpy

; 2756 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  00bd7	c6 44 35 a8 00	 mov	 BYTE PTR $T33[ebp+esi], 0

; 2757 :             } else { // _Strat == _Construct_strategy::_From_string
; 2758 : #ifdef _INSERT_STRING_ANNOTATION
; 2759 :                 _Traits::move(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2760 : #else // ^^^ _INSERT_STRING_ANNOTATION ^^^ // vvv !_INSERT_STRING_ANNOTATION vvv
; 2761 :                 _Traits::move(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2762 : #endif // !_INSERT_STRING_ANNOTATION
; 2763 :             }
; 2764 : 
; 2765 :             _ASAN_STRING_CREATE(*this);
; 2766 :             _Proxy._Release();
; 2767 :             return;

  00bdc	e9 7e 00 00 00	 jmp	 $LN1434@LoadRaceDa
$LN532@LoadRaceDa:

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00be1	8b fe		 mov	 edi, esi
  00be3	83 cf 0f	 or	 edi, 15			; 0000000fH
  00be6	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00bec	76 15		 jbe	 SHORT $LN539@LoadRaceDa

; 4885 :             return _Max;

  00bee	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00bf3	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00bf8	50		 push	 eax
  00bf9	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00bfe	83 c4 04	 add	 esp, 4
  00c01	eb 31		 jmp	 SHORT $LN1435@LoadRaceDa
$LN539@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4892 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00c03	83 ff 16	 cmp	 edi, 22			; 00000016H
  00c06	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00c0b	0f 42 f8	 cmovb	 edi, eax

; 2772 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00c0e	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00c11	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00c16	72 0b		 jb	 SHORT $LN547@LoadRaceDa

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00c18	50		 push	 eax
  00c19	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00c1e	83 c4 04	 add	 esp, 4
  00c21	eb 11		 jmp	 SHORT $LN1435@LoadRaceDa
$LN547@LoadRaceDa:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  00c23	85 c0		 test	 eax, eax
  00c25	74 0b		 je	 SHORT $LN548@LoadRaceDa

; 77   :         return ::operator new(_Bytes);

  00c27	50		 push	 eax
  00c28	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c2d	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00c30	eb 02		 jmp	 SHORT $LN1435@LoadRaceDa
$LN548@LoadRaceDa:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  00c32	33 c0		 xor	 eax, eax
$LN1435@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00c34	56		 push	 esi
  00c35	68 00 00 00 00	 push	 OFFSET ?__szSkin1@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00c3a	50		 push	 eax

; 2773 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00c3b	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  00c41	89 45 a8	 mov	 DWORD PTR $T33[ebp], eax

; 2774 : 
; 2775 : #if _HAS_CXX20
; 2776 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2777 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 2778 :         }
; 2779 : #endif // _HAS_CXX20
; 2780 : 
; 2781 :         _My_data._Mysize = _Count;

  00c44	89 75 b8	 mov	 DWORD PTR $T33[ebp+16], esi

; 2782 :         _My_data._Myres  = _New_capacity;

  00c47	89 7d bc	 mov	 DWORD PTR $T33[ebp+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00c4a	e8 00 00 00 00	 call	 _memcpy

; 2788 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  00c4f	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00c55	8b bd a8 fe ff
	ff		 mov	 edi, DWORD PTR _i$1$[ebp]
  00c5b	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0
$LN1434@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 130  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00c5f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c62	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00c68	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00c6e	83 c8 40	 or	 eax, 64			; 00000040H
  00c71	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00c75	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00c7b	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00c81	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$42[ebp]
  00c84	50		 push	 eax
  00c85	8d 45 a8	 lea	 eax, DWORD PTR $T33[ebp]
  00c88	50		 push	 eax
  00c89	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00c8e	85 c0		 test	 eax, eax
  00c90	74 4c		 je	 SHORT $LN45@LoadRaceDa
  00c92	68 00 00 00 00	 push	 OFFSET ?__szSkin2@?BO@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00c97	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  00c9a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00c9f	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00ca5	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00cab	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00cb0	c7 45 fc 1a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  00cb7	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00cbd	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00cc3	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$24[ebp]
  00cc9	50		 push	 eax
  00cca	8d 45 d8	 lea	 eax, DWORD PTR $T47[ebp]
  00ccd	50		 push	 eax
  00cce	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00cd3	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T13[ebp], 1
  00cda	85 c0		 test	 eax, eax
  00cdc	75 07		 jne	 SHORT $LN46@LoadRaceDa
$LN45@LoadRaceDa:
  00cde	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T13[ebp], 0
$LN46@LoadRaceDa:
  00ce5	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00ceb	c7 45 fc 19 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00cf2	84 c0		 test	 al, al
  00cf4	79 57		 jns	 SHORT $LN825@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00cf6	8b 4d ec	 mov	 ecx, DWORD PTR $T47[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 130  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00cf9	25 7f ff ff ff	 and	 eax, -129		; ffffff7fH
  00cfe	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00d04	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00d07	72 32		 jb	 SHORT $LN832@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d09	8b 55 d8	 mov	 edx, DWORD PTR $T47[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00d0c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d0d	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00d0f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00d15	72 14		 jb	 SHORT $LN842@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00d17	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00d1a	83 c1 23	 add	 ecx, 35			; 00000023H
  00d1d	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00d1f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00d22	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00d25	0f 87 1b 0a 00
	00		 ja	 $LN264@LoadRaceDa
$LN842@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00d2b	51		 push	 ecx
  00d2c	52		 push	 edx
  00d2d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00d32	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00d38	83 c4 08	 add	 esp, 8
$LN832@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00d3b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T47[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00d42	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T47[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00d49	c6 45 d8 00	 mov	 BYTE PTR $T47[ebp], 0
$LN825@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 130  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00d4d	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00d54	a8 40		 test	 al, 64			; 00000040H
  00d56	74 3d		 je	 SHORT $LN859@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00d58	8b 4d bc	 mov	 ecx, DWORD PTR $T33[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 130  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00d5b	83 e0 bf	 and	 eax, -65		; ffffffbfH
  00d5e	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00d64	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00d67	72 2c		 jb	 SHORT $LN859@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d69	8b 55 a8	 mov	 edx, DWORD PTR $T33[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00d6c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d6d	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00d6f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00d75	72 14		 jb	 SHORT $LN869@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00d77	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00d7a	83 c1 23	 add	 ecx, 35			; 00000023H
  00d7d	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00d7f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00d82	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00d85	0f 87 bb 09 00
	00		 ja	 $LN264@LoadRaceDa
$LN869@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00d8b	51		 push	 ecx
  00d8c	52		 push	 edx
  00d8d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00d92	83 c4 08	 add	 esp, 8
$LN859@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 130  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00d95	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T13[ebp], 0
  00d9c	0f 84 e2 00 00
	00		 je	 $LN8@LoadRaceDa

; 133  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00da2	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$24[ebp]
  00da8	50		 push	 eax
  00da9	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$27[ebp]
  00daf	50		 push	 eax
  00db0	8d 45 a8	 lea	 eax, DWORD PTR $T32[ebp]
  00db3	50		 push	 eax
  00db4	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00db9	83 c4 0c	 add	 esp, 12			; 0000000cH
  00dbc	8b f0		 mov	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00dbe	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 133  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00dc2	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00dc6	72 02		 jb	 SHORT $LN755@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00dc8	8b 36		 mov	 esi, DWORD PTR [esi]
$LN755@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 133  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00dca	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$42[ebp]
  00dcd	50		 push	 eax
  00dce	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$27[ebp]
  00dd4	50		 push	 eax
  00dd5	8d 45 d8	 lea	 eax, DWORD PTR $T46[ebp]
  00dd8	50		 push	 eax
  00dd9	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00dde	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00de1	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 133  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00de5	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00de9	72 02		 jb	 SHORT $LN816@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00deb	8b 00		 mov	 eax, DWORD PTR [eax]
$LN816@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 133  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00ded	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00df3	56		 push	 esi
  00df4	50		 push	 eax
  00df5	6a 00		 push	 0
  00df7	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  00dfd	e8 00 00 00 00	 call	 ?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z ; CRaceData::AppendShapeSkin
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00e02	8b 4d ec	 mov	 ecx, DWORD PTR $T46[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 133  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00e05	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00e09	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00e0c	72 2c		 jb	 SHORT $LN798@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e0e	8b 55 d8	 mov	 edx, DWORD PTR $T46[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00e11	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e12	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00e14	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00e1a	72 14		 jb	 SHORT $LN808@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00e1c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00e1f	83 c1 23	 add	 ecx, 35			; 00000023H
  00e22	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00e24	83 c0 fc	 add	 eax, -4			; fffffffcH
  00e27	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00e2a	0f 87 16 09 00
	00		 ja	 $LN264@LoadRaceDa
$LN808@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00e30	51		 push	 ecx
  00e31	52		 push	 edx
  00e32	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00e37	83 c4 08	 add	 esp, 8
$LN798@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00e3a	8b 4d bc	 mov	 ecx, DWORD PTR $T32[ebp+20]

; 5019 :         _My_data._Mysize = 0;

  00e3d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T46[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00e44	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T46[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00e4b	c6 45 d8 00	 mov	 BYTE PTR $T46[ebp], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 133  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00e4f	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00e53	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00e56	72 2c		 jb	 SHORT $LN8@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e58	8b 55 a8	 mov	 edx, DWORD PTR $T32[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00e5b	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e5c	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00e5e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00e64	72 14		 jb	 SHORT $LN781@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00e66	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00e69	83 c1 23	 add	 ecx, 35			; 00000023H
  00e6c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00e6e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00e71	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00e74	0f 87 cc 08 00
	00		 ja	 $LN264@LoadRaceDa
$LN781@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00e7a	51		 push	 ecx
  00e7b	52		 push	 edx
  00e7c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00e81	83 c4 08	 add	 esp, 8
$LN8@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 126  : 				for (DWORD i = 2; i <= 9; i++)

  00e84	47		 inc	 edi
  00e85	89 bd a8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], edi
  00e8b	83 ff 09	 cmp	 edi, 9
  00e8e	0f 86 cc fc ff
	ff		 jbe	 $LL10@LoadRaceDa

; 134  : 					}
; 135  : 				}
; 136  : #else
; 137  : 				if (TextFileLoader.GetTokenString("sourceskin2", &strSourceSkin) &&
; 138  : 						TextFileLoader.GetTokenString("targetskin2", &strTargetSkin))
; 139  : 				{
; 140  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());
; 141  : 				}
; 142  : #endif
; 143  : 				TextFileLoader.SetParentNode();

  00e94	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00e9a	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00e9f	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _strTargetSkin$24[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 144  : 			}

  00ea5	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00ea9	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00eac	72 2f		 jb	 SHORT $LN503@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00eae	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _strTargetSkin$24[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00eb4	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00eb5	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00eb7	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00ebd	72 14		 jb	 SHORT $LN513@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00ebf	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00ec2	83 c1 23	 add	 ecx, 35			; 00000023H
  00ec5	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00ec7	83 c0 fc	 add	 eax, -4			; fffffffcH
  00eca	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00ecd	0f 87 73 08 00
	00		 ja	 $LN264@LoadRaceDa
$LN513@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00ed3	51		 push	 ecx
  00ed4	52		 push	 edx
  00ed5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00eda	83 c4 08	 add	 esp, 8
$LN503@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00edd	8b 4d d4	 mov	 ecx, DWORD PTR _strSourceSkin$42[ebp+20]

; 5019 :         _My_data._Mysize = 0;

  00ee0	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strTargetSkin$24[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00eea	c7 85 74 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _strTargetSkin$24[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00ef4	c6 85 60 ff ff
	ff 00		 mov	 BYTE PTR _strTargetSkin$24[ebp], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 144  : 			}

  00efb	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00eff	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00f02	72 2c		 jb	 SHORT $LN476@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f04	8b 55 c0	 mov	 edx, DWORD PTR _strSourceSkin$42[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00f07	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f08	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00f0a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00f10	72 14		 jb	 SHORT $LN486@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00f12	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00f15	83 c1 23	 add	 ecx, 35			; 00000023H
  00f18	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00f1a	83 c0 fc	 add	 eax, -4			; fffffffcH
  00f1d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00f20	0f 87 20 08 00
	00		 ja	 $LN264@LoadRaceDa
$LN486@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00f26	51		 push	 ecx
  00f27	52		 push	 edx
  00f28	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00f2d	83 c4 08	 add	 esp, 8
$LN476@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00f30	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$42[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00f37	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$42[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00f3e	c6 45 c0 00	 mov	 BYTE PTR _strSourceSkin$42[ebp], 0
$LN1433@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 70   : 			for (DWORD i = 0; i < dwShapeDataCount; ++i)

  00f42	8b 4d a4	 mov	 ecx, DWORD PTR _strModel$29[ebp+20]
  00f45	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00f49	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00f4c	72 2c		 jb	 SHORT $LN5@LoadRaceDa
  00f4e	8b 55 90	 mov	 edx, DWORD PTR _strModel$29[ebp]
  00f51	41		 inc	 ecx
  00f52	8b c2		 mov	 eax, edx
  00f54	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00f5a	72 14		 jb	 SHORT $LN459@LoadRaceDa
  00f5c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00f5f	83 c1 23	 add	 ecx, 35			; 00000023H
  00f62	2b c2		 sub	 eax, edx
  00f64	83 c0 fc	 add	 eax, -4			; fffffffcH
  00f67	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00f6a	0f 87 d6 07 00
	00		 ja	 $LN264@LoadRaceDa
$LN459@LoadRaceDa:
  00f70	51		 push	 ecx
  00f71	52		 push	 edx
  00f72	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00f77	83 c4 08	 add	 esp, 8
$LN5@LoadRaceDa:
  00f7a	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  00f80	41		 inc	 ecx
  00f81	89 8d ac fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  00f87	3b 8d b4 fe ff
	ff		 cmp	 ecx, DWORD PTR _dwShapeDataCount$3[ebp]
  00f8d	0f 82 6d f6 ff
	ff		 jb	 $LL7@LoadRaceDa
$LN1412@LoadRaceDa:

; 145  : 		}
; 146  : 
; 147  : 		TextFileLoader.SetParentNode();

  00f93	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00f99	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00f9e	8b 4d 8c	 mov	 ecx, DWORD PTR _strPathName$27[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 148  : 	}

  00fa1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00fa5	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00fa8	72 2f		 jb	 SHORT $LN1426@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00faa	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _strPathName$27[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00fb0	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00fb1	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00fb3	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00fb9	72 14		 jb	 SHORT $LN240@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00fbb	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00fbe	83 c1 23	 add	 ecx, 35			; 00000023H
  00fc1	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00fc3	83 c0 fc	 add	 eax, -4			; fffffffcH
  00fc6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00fc9	0f 87 9f 07 00
	00		 ja	 $LN1444@LoadRaceDa
$LN240@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00fcf	51		 push	 ecx
  00fd0	52		 push	 edx
  00fd1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00fd6	83 c4 08	 add	 esp, 8
$LN1426@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 150  : 	if (TextFileLoader.SetChildNode("hairdata"))

  00fd9	8b bd c0 fe ff
	ff		 mov	 edi, DWORD PTR $T8[ebp]
$LN230@LoadRaceDa:
  00fdf	68 00 00 00 00	 push	 OFFSET ??_C@_08HKPOBGLF@hairdata@
  00fe4	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00fea	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  00fef	85 c0		 test	 eax, eax
  00ff1	0f 84 03 07 00
	00		 je	 $LN138@LoadRaceDa
  00ff7	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4998 :         _My_data._Mysize = 0;

  00ffa	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strPathName$31[ebp+16], 0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  01001	0f 11 45 a8	 movups	 XMMWORD PTR _strPathName$31[ebp], xmm0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  01005	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strPathName$31[ebp+20], 15 ; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0100c	c6 45 a8 00	 mov	 BYTE PTR _strPathName$31[ebp], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 154  : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  01010	68 00 00 00 00	 push	 OFFSET ??_C@_08PEIJGPHF@pathname@
  01015	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  0101b	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  0101f	c7 85 b8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwHairDataCount$4[ebp], 0
  01029	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0102e	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$31[ebp]
  01031	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  01035	50		 push	 eax
  01036	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR $T26[ebp]
  0103c	81 cf 00 01 00
	00		 or	 edi, 256		; 00000100H
  01042	50		 push	 eax
  01043	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01049	89 bd c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edi
  0104f	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  01055	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0105a	85 c0		 test	 eax, eax
  0105c	74 47		 je	 SHORT $LN47@LoadRaceDa
  0105e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HCGNHJP@hairdatacount@
  01063	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  01066	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0106b	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _dwHairDataCount$4[ebp]
  01071	c7 45 fc 1f 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 31 ; 0000001fH
  01078	50		 push	 eax
  01079	8d 45 d8	 lea	 eax, DWORD PTR $T45[ebp]
  0107c	81 cf 00 02 00
	00		 or	 edi, 512		; 00000200H
  01082	50		 push	 eax
  01083	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01089	89 bd c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edi
  0108f	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  01095	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  0109a	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T12[ebp], 1
  010a1	85 c0		 test	 eax, eax
  010a3	75 07		 jne	 SHORT $LN48@LoadRaceDa
$LN47@LoadRaceDa:
  010a5	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T12[ebp], 0
$LN48@LoadRaceDa:
  010ac	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  010b2	a9 00 02 00 00	 test	 eax, 512		; 00000200H
  010b7	74 19		 je	 SHORT $LN101@LoadRaceDa
  010b9	25 ff fd ff ff	 and	 eax, -513		; fffffdffH
  010be	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  010c1	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  010c7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  010cc	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN101@LoadRaceDa:
  010d2	c7 45 fc 1d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  010d9	a9 00 01 00 00	 test	 eax, 256		; 00000100H
  010de	74 16		 je	 SHORT $LN102@LoadRaceDa
  010e0	25 ff fe ff ff	 and	 eax, -257		; fffffeffH
  010e5	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  010eb	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  010f1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN102@LoadRaceDa:
  010f6	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T12[ebp], 0
  010fd	0f 84 b4 05 00
	00		 je	 $LN1413@LoadRaceDa

; 158  : 			for (DWORD i = 0; i < dwHairDataCount; ++i)

  01103	33 f6		 xor	 esi, esi
  01105	89 b5 b4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  0110b	39 b5 b8 fe ff
	ff		 cmp	 DWORD PTR _dwHairDataCount$4[ebp], esi
  01111	0f 86 a0 05 00
	00		 jbe	 $LN1413@LoadRaceDa
  01117	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL13@LoadRaceDa:
  01120	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2749 :             _My_data._Mysize = _Count;

  01123	c7 45 d0 08 00
	00 00		 mov	 DWORD PTR $T41[ebp+16], 8

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0112a	0f 11 45 c0	 movups	 XMMWORD PTR $T41[ebp], xmm0

; 2750 :             _My_data._Myres  = _BUF_SIZE - 1;

  0112e	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T41[ebp+20], 15 ; 0000000fH

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  01135	c7 45 c0 68 61
	69 72		 mov	 DWORD PTR $T41[ebp], 1919508840 ; 72696168H
  0113c	c7 45 c4 64 61
	74 61		 mov	 DWORD PTR $T41[ebp+4], 1635017060 ; 61746164H

; 2756 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  01143	c6 45 c8 00	 mov	 BYTE PTR $T41[ebp+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 160  : 				if (!TextFileLoader.SetChildNode("hairdata", i))

  01147	56		 push	 esi
  01148	8d 45 c0	 lea	 eax, DWORD PTR $T41[ebp]
  0114b	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
  0114f	50		 push	 eax
  01150	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01156	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0115b	8b 4d d4	 mov	 ecx, DWORD PTR $T41[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 160  : 				if (!TextFileLoader.SetChildNode("hairdata", i))

  0115e	85 c0		 test	 eax, eax
  01160	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  01164	0f 94 c0	 sete	 al
  01167	88 85 c7 fe ff
	ff		 mov	 BYTE PTR $T11[ebp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0116d	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01170	72 32		 jb	 SHORT $LN203@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01172	8b 55 c0	 mov	 edx, DWORD PTR $T41[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  01175	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01176	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01178	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0117e	72 14		 jb	 SHORT $LN213@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01180	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  01183	83 c1 23	 add	 ecx, 35			; 00000023H
  01186	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01188	83 c0 fc	 add	 eax, -4			; fffffffcH
  0118b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0118e	0f 87 b2 05 00
	00		 ja	 $LN264@LoadRaceDa
$LN213@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  01194	51		 push	 ecx
  01195	52		 push	 edx
  01196	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0119b	8a 85 c7 fe ff
	ff		 mov	 al, BYTE PTR $T11[ebp]
  011a1	83 c4 08	 add	 esp, 8
$LN203@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 160  : 				if (!TextFileLoader.SetChildNode("hairdata", i))

  011a4	84 c0		 test	 al, al
  011a6	0f 85 f8 04 00
	00		 jne	 $LN11@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  011ac	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@GCDLCIFI@specialpath@+8
  011b2	0f 57 c0	 xorps	 xmm0, xmm0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  011b5	0f 11 45 c0	 movups	 XMMWORD PTR $T40[ebp], xmm0

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  011b9	66 89 45 c8	 mov	 WORD PTR $T40[ebp+8], ax
  011bd	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@GCDLCIFI@specialpath@
  011c5	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@GCDLCIFI@specialpath@+10

; 2749 :             _My_data._Mysize = _Count;

  011ca	c7 45 d0 0b 00
	00 00		 mov	 DWORD PTR $T40[ebp+16], 11 ; 0000000bH

; 2750 :             _My_data._Myres  = _BUF_SIZE - 1;

  011d1	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T40[ebp+20], 15 ; 0000000fH

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  011d8	66 0f d6 45 c0	 movq	 QWORD PTR $T40[ebp], xmm0
  011dd	88 45 ca	 mov	 BYTE PTR $T40[ebp+10], al

; 2756 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  011e0	c6 45 cb 00	 mov	 BYTE PTR $T40[ebp+11], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 166  : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  011e4	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$31[ebp]
  011e7	c6 45 fc 21	 mov	 BYTE PTR __$EHRec$[ebp+8], 33 ; 00000021H
  011eb	50		 push	 eax
  011ec	8d 45 c0	 lea	 eax, DWORD PTR $T40[ebp]
  011ef	50		 push	 eax
  011f0	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  011f6	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  011fb	8b 4d d4	 mov	 ecx, DWORD PTR $T40[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 166  : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  011fe	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  01202	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01205	72 2c		 jb	 SHORT $LN422@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01207	8b 55 c0	 mov	 edx, DWORD PTR $T40[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0120a	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0120b	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0120d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  01213	72 14		 jb	 SHORT $LN432@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01215	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  01218	83 c1 23	 add	 ecx, 35			; 00000023H
  0121b	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0121d	83 c0 fc	 add	 eax, -4			; fffffffcH
  01220	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01223	0f 87 1d 05 00
	00		 ja	 $LN264@LoadRaceDa
$LN432@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  01229	51		 push	 ecx
  0122a	52		 push	 edx
  0122b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01230	83 c4 08	 add	 esp, 8
$LN422@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  01233	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09DFEJDBKH@hairindex@+8
  01238	0f 57 c0	 xorps	 xmm0, xmm0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0123b	0f 11 45 c0	 movups	 XMMWORD PTR $T39[ebp], xmm0

; 2749 :             _My_data._Mysize = _Count;

  0123f	c7 45 d0 09 00
	00 00		 mov	 DWORD PTR $T39[ebp+16], 9

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  01246	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09DFEJDBKH@hairindex@

; 2750 :             _My_data._Myres  = _BUF_SIZE - 1;

  0124e	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T39[ebp+20], 15 ; 0000000fH

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  01255	66 0f d6 45 c0	 movq	 QWORD PTR $T39[ebp], xmm0
  0125a	88 45 c8	 mov	 BYTE PTR $T39[ebp+8], al

; 2756 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  0125d	c6 45 c9 00	 mov	 BYTE PTR $T39[ebp+9], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 170  : 				if (!TextFileLoader.GetTokenDoubleWord("hairindex", &dwShapeIndex))

  01261	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _dwShapeIndex$2[ebp]
  01267	c6 45 fc 22	 mov	 BYTE PTR __$EHRec$[ebp+8], 34 ; 00000022H
  0126b	50		 push	 eax
  0126c	8d 45 c0	 lea	 eax, DWORD PTR $T39[ebp]
  0126f	50		 push	 eax
  01270	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01276	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0127b	8b 4d d4	 mov	 ecx, DWORD PTR $T39[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 170  : 				if (!TextFileLoader.GetTokenDoubleWord("hairindex", &dwShapeIndex))

  0127e	85 c0		 test	 eax, eax
  01280	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  01284	0f 94 c0	 sete	 al
  01287	88 85 c7 fe ff
	ff		 mov	 BYTE PTR $T10[ebp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0128d	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01290	72 32		 jb	 SHORT $LN358@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01292	8b 55 c0	 mov	 edx, DWORD PTR $T39[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  01295	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01296	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01298	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0129e	72 14		 jb	 SHORT $LN368@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  012a0	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  012a3	83 c1 23	 add	 ecx, 35			; 00000023H
  012a6	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  012a8	83 c0 fc	 add	 eax, -4			; fffffffcH
  012ab	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  012ae	0f 87 92 04 00
	00		 ja	 $LN264@LoadRaceDa
$LN368@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  012b4	51		 push	 ecx
  012b5	52		 push	 edx
  012b6	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  012bb	8a 85 c7 fe ff
	ff		 mov	 al, BYTE PTR $T10[ebp]
  012c1	83 c4 08	 add	 esp, 8
$LN358@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 170  : 				if (!TextFileLoader.GetTokenDoubleWord("hairindex", &dwShapeIndex))

  012c4	84 c0		 test	 al, al
  012c6	0f 85 d8 03 00
	00		 jne	 $LN11@LoadRaceDa
  012cc	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4998 :         _My_data._Mysize = 0;

  012cf	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strModel$23[ebp+16], 0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  012d9	0f 11 85 60 ff
	ff ff		 movups	 XMMWORD PTR _strModel$23[ebp], xmm0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  012e0	c7 85 74 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _strModel$23[ebp+20], 15 ; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  012ea	88 85 60 ff ff
	ff		 mov	 BYTE PTR _strModel$23[ebp], al

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  012f0	0f 11 45 90	 movups	 XMMWORD PTR _strSourceSkin$28[ebp], xmm0

; 4998 :         _My_data._Mysize = 0;

  012f4	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$28[ebp+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  012fb	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$28[ebp+20], 15 ; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01302	88 45 90	 mov	 BYTE PTR _strSourceSkin$28[ebp], al

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  01305	0f 11 85 78 ff
	ff ff		 movups	 XMMWORD PTR _strTargetSkin$25[ebp], xmm0

; 4998 :         _My_data._Mysize = 0;

  0130c	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$25[ebp+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  01313	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strTargetSkin$25[ebp+20], 15 ; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0131a	88 85 78 ff ff
	ff		 mov	 BYTE PTR _strTargetSkin$25[ebp], al
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 179  : 						TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  01320	68 00 00 00 00	 push	 OFFSET ??_C@_05NCCFOPHA@model@
  01325	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  01328	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
  0132c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01331	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  01337	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0133d	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  01342	c6 45 fc 26	 mov	 BYTE PTR __$EHRec$[ebp+8], 38 ; 00000026H
  01346	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  0134c	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  01352	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strModel$23[ebp]
  01358	50		 push	 eax
  01359	8d 45 d8	 lea	 eax, DWORD PTR $T44[ebp]
  0135c	50		 push	 eax
  0135d	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  01362	85 c0		 test	 eax, eax
  01364	0f 84 94 00 00
	00		 je	 $LN49@LoadRaceDa
  0136a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ILFPKBGB@sourceskin@
  0136f	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  01375	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0137a	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  01380	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01386	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  0138b	c7 45 fc 27 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 39 ; 00000027H
  01392	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  01398	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  0139e	8d 45 90	 lea	 eax, DWORD PTR _strSourceSkin$28[ebp]
  013a1	50		 push	 eax
  013a2	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T20[ebp]
  013a8	50		 push	 eax
  013a9	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  013ae	85 c0		 test	 eax, eax
  013b0	74 4c		 je	 SHORT $LN49@LoadRaceDa
  013b2	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EHMNDCND@targetskin@
  013b7	8d 4d c0	 lea	 ecx, DWORD PTR $T38[ebp]
  013ba	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  013bf	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  013c5	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  013cb	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  013d0	c7 45 fc 28 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 40 ; 00000028H
  013d7	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  013dd	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  013e3	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$25[ebp]
  013e9	50		 push	 eax
  013ea	8d 45 c0	 lea	 eax, DWORD PTR $T38[ebp]
  013ed	50		 push	 eax
  013ee	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  013f3	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T9[ebp], 1
  013fa	85 c0		 test	 eax, eax
  013fc	75 07		 jne	 SHORT $LN50@LoadRaceDa
$LN49@LoadRaceDa:
  013fe	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T9[ebp], 0
$LN50@LoadRaceDa:
  01405	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  0140b	a9 00 10 00 00	 test	 eax, 4096		; 00001000H
  01410	74 19		 je	 SHORT $LN115@LoadRaceDa
  01412	25 ff ef ff ff	 and	 eax, -4097		; ffffefffH
  01417	8d 4d c0	 lea	 ecx, DWORD PTR $T38[ebp]
  0141a	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  01420	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  01425	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN115@LoadRaceDa:
  0142b	a9 00 08 00 00	 test	 eax, 2048		; 00000800H
  01430	74 1c		 je	 SHORT $LN116@LoadRaceDa
  01432	25 ff f7 ff ff	 and	 eax, -2049		; fffff7ffH
  01437	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  0143d	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  01443	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  01448	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN116@LoadRaceDa:
  0144e	c7 45 fc 25 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 37 ; 00000025H
  01455	a9 00 04 00 00	 test	 eax, 1024		; 00000400H
  0145a	74 3f		 je	 SHORT $LN1110@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0145c	8b 4d ec	 mov	 ecx, DWORD PTR $T44[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 179  : 						TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  0145f	25 ff fb ff ff	 and	 eax, -1025		; fffffbffH
  01464	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0146a	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0146d	72 2c		 jb	 SHORT $LN1110@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0146f	8b 55 d8	 mov	 edx, DWORD PTR $T44[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  01472	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01473	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01475	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0147b	72 14		 jb	 SHORT $LN1120@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0147d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  01480	83 c1 23	 add	 ecx, 35			; 00000023H
  01483	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01485	83 c0 fc	 add	 eax, -4			; fffffffcH
  01488	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0148b	0f 87 b5 02 00
	00		 ja	 $LN264@LoadRaceDa
$LN1120@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  01491	51		 push	 ecx
  01492	52		 push	 edx
  01493	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01498	83 c4 08	 add	 esp, 8
$LN1110@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 179  : 						TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  0149b	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T9[ebp], 0
  014a2	0f 84 19 01 00
	00		 je	 $LN1137@LoadRaceDa

; 182  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  014a8	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$25[ebp]
  014ae	50		 push	 eax
  014af	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$31[ebp]
  014b2	50		 push	 eax
  014b3	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T19[ebp]
  014b9	50		 push	 eax
  014ba	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  014bf	83 c4 0c	 add	 esp, 12			; 0000000cH
  014c2	8b f0		 mov	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  014c4	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 182  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  014c8	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  014cc	72 02		 jb	 SHORT $LN1189@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  014ce	8b 36		 mov	 esi, DWORD PTR [esi]
$LN1189@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 182  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  014d0	8d 45 90	 lea	 eax, DWORD PTR _strSourceSkin$28[ebp]
  014d3	50		 push	 eax
  014d4	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$31[ebp]
  014d7	50		 push	 eax
  014d8	8d 45 d8	 lea	 eax, DWORD PTR $T43[ebp]
  014db	50		 push	 eax
  014dc	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  014e1	83 c4 0c	 add	 esp, 12			; 0000000cH
  014e4	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  014e6	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 182  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  014ea	c6 45 fc 2a	 mov	 BYTE PTR __$EHRec$[ebp+8], 42 ; 0000002aH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  014ee	72 02		 jb	 SHORT $LN1182@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  014f0	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN1182@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 182  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  014f2	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strModel$23[ebp]
  014f8	50		 push	 eax
  014f9	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$31[ebp]
  014fc	50		 push	 eax
  014fd	8d 45 c0	 lea	 eax, DWORD PTR $T37[ebp]
  01500	50		 push	 eax
  01501	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  01506	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  01509	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 182  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  0150d	c6 45 fc 2b	 mov	 BYTE PTR __$EHRec$[ebp+8], 43 ; 0000002bH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  01511	72 02		 jb	 SHORT $LN1094@LoadRaceDa

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  01513	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1094@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 182  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  01515	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0151b	56		 push	 esi
  0151c	57		 push	 edi
  0151d	50		 push	 eax
  0151e	6a 00		 push	 0
  01520	ff b5 ac fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$2[ebp]
  01526	e8 00 00 00 00	 call	 ?SetHairSkin@CRaceData@@QAEXIIPBD00@Z ; CRaceData::SetHairSkin
  0152b	8d 4d c0	 lea	 ecx, DWORD PTR $T37[ebp]
  0152e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  01533	8b 4d ec	 mov	 ecx, DWORD PTR $T43[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 182  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  01536	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0153a	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0153d	72 2c		 jb	 SHORT $LN1164@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0153f	8b 55 d8	 mov	 edx, DWORD PTR $T43[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  01542	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01543	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01545	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0154b	72 14		 jb	 SHORT $LN1174@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0154d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  01550	83 c1 23	 add	 ecx, 35			; 00000023H
  01553	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01555	83 c0 fc	 add	 eax, -4			; fffffffcH
  01558	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0155b	0f 87 e5 01 00
	00		 ja	 $LN264@LoadRaceDa
$LN1174@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  01561	51		 push	 ecx
  01562	52		 push	 edx
  01563	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01568	83 c4 08	 add	 esp, 8
$LN1164@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0156b	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR $T19[ebp+20]

; 5019 :         _My_data._Mysize = 0;

  01571	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T43[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  01578	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T43[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0157f	c6 45 d8 00	 mov	 BYTE PTR $T43[ebp], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 182  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  01583	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  01587	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0158a	72 2f		 jb	 SHORT $LN1427@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0158c	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR $T19[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  01592	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01593	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01595	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0159b	72 14		 jb	 SHORT $LN1147@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0159d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  015a0	83 c1 23	 add	 ecx, 35			; 00000023H
  015a3	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  015a5	83 c0 fc	 add	 eax, -4			; fffffffcH
  015a8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  015ab	0f 87 95 01 00
	00		 ja	 $LN264@LoadRaceDa
$LN1147@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  015b1	51		 push	 ecx
  015b2	52		 push	 edx
  015b3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  015b8	83 c4 08	 add	 esp, 8
$LN1427@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 185  : 				TextFileLoader.SetParentNode();

  015bb	8b b5 b4 fe ff
	ff		 mov	 esi, DWORD PTR _i$1$[ebp]
$LN1137@LoadRaceDa:
  015c1	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  015c7	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  015cc	8b 4d 8c	 mov	 ecx, DWORD PTR _strTargetSkin$25[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 186  : 			}

  015cf	c6 45 fc 24	 mov	 BYTE PTR __$EHRec$[ebp+8], 36 ; 00000024H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  015d3	83 f9 10	 cmp	 ecx, 16			; 00000010H
  015d6	72 2f		 jb	 SHORT $LN617@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  015d8	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _strTargetSkin$25[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  015de	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  015df	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  015e1	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  015e7	72 14		 jb	 SHORT $LN627@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  015e9	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  015ec	83 c1 23	 add	 ecx, 35			; 00000023H
  015ef	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  015f1	83 c0 fc	 add	 eax, -4			; fffffffcH
  015f4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  015f7	0f 87 49 01 00
	00		 ja	 $LN264@LoadRaceDa
$LN627@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  015fd	51		 push	 ecx
  015fe	52		 push	 edx
  015ff	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01604	83 c4 08	 add	 esp, 8
$LN617@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  01607	8b 4d a4	 mov	 ecx, DWORD PTR _strSourceSkin$28[ebp+20]

; 5019 :         _My_data._Mysize = 0;

  0160a	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$25[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  01611	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strTargetSkin$25[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01618	c6 85 78 ff ff
	ff 00		 mov	 BYTE PTR _strTargetSkin$25[ebp], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 186  : 			}

  0161f	c6 45 fc 23	 mov	 BYTE PTR __$EHRec$[ebp+8], 35 ; 00000023H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  01623	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01626	72 2c		 jb	 SHORT $LN590@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01628	8b 55 90	 mov	 edx, DWORD PTR _strSourceSkin$28[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0162b	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0162c	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0162e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  01634	72 14		 jb	 SHORT $LN600@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01636	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  01639	83 c1 23	 add	 ecx, 35			; 00000023H
  0163c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0163e	83 c0 fc	 add	 eax, -4			; fffffffcH
  01641	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01644	0f 87 fc 00 00
	00		 ja	 $LN264@LoadRaceDa
$LN600@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0164a	51		 push	 ecx
  0164b	52		 push	 edx
  0164c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01651	83 c4 08	 add	 esp, 8
$LN590@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  01654	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _strModel$23[ebp+20]

; 5019 :         _My_data._Mysize = 0;

  0165a	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$28[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  01661	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$28[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01668	c6 45 90 00	 mov	 BYTE PTR _strSourceSkin$28[ebp], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 186  : 			}

  0166c	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  01670	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01673	72 2f		 jb	 SHORT $LN11@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01675	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _strModel$23[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0167b	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0167c	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0167e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  01684	72 14		 jb	 SHORT $LN747@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01686	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  01689	83 c1 23	 add	 ecx, 35			; 00000023H
  0168c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0168e	83 c0 fc	 add	 eax, -4			; fffffffcH
  01691	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01694	0f 87 ac 00 00
	00		 ja	 $LN264@LoadRaceDa
$LN747@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0169a	51		 push	 ecx
  0169b	52		 push	 edx
  0169c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  016a1	83 c4 08	 add	 esp, 8
$LN11@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 158  : 			for (DWORD i = 0; i < dwHairDataCount; ++i)

  016a4	46		 inc	 esi
  016a5	89 b5 b4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  016ab	3b b5 b8 fe ff
	ff		 cmp	 esi, DWORD PTR _dwHairDataCount$4[ebp]
  016b1	0f 82 69 fa ff
	ff		 jb	 $LL13@LoadRaceDa
$LN1413@LoadRaceDa:

; 187  : 		}
; 188  : 
; 189  : 		TextFileLoader.SetParentNode();

  016b7	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  016bd	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  016c2	8b 4d bc	 mov	 ecx, DWORD PTR _strPathName$31[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 190  : 	}

  016c5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  016c9	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  016cc	72 2c		 jb	 SHORT $LN138@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  016ce	8b 55 a8	 mov	 edx, DWORD PTR _strPathName$31[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  016d1	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  016d2	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  016d4	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  016da	72 14		 jb	 SHORT $LN148@LoadRaceDa

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  016dc	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  016df	83 c1 23	 add	 ecx, 35			; 00000023H
  016e2	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  016e4	83 c0 fc	 add	 eax, -4			; fffffffcH
  016e7	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  016ea	0f 87 88 00 00
	00		 ja	 $LN1445@LoadRaceDa
$LN148@LoadRaceDa:

; 255  :         ::operator delete(_Ptr, _Bytes);

  016f0	51		 push	 ecx
  016f1	52		 push	 edx
  016f2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  016f7	83 c4 08	 add	 esp, 8
$LN138@LoadRaceDa:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp

; 193  : 	if (TextFileLoader.SetChildNode("attachingdata"))

  016fa	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OPEMPJIC@attachingdata@
  016ff	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01705	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  0170a	85 c0		 test	 eax, eax
  0170c	74 2e		 je	 SHORT $LN36@LoadRaceDa

; 194  : 	{
; 195  : 		if (!NRaceData::LoadAttachingData(TextFileLoader, &m_AttachingDataVector))

  0170e	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  01714	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  01719	50		 push	 eax
  0171a	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _TextFileLoader$[ebp]
  01720	50		 push	 eax
  01721	e8 00 00 00 00	 call	 ?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ; NRaceData::LoadAttachingData
  01726	83 c4 08	 add	 esp, 8
  01729	85 c0		 test	 eax, eax
  0172b	0f 84 45 ec ff
	ff		 je	 $LN124@LoadRaceDa

; 196  : 		{
; 197  : 			return FALSE;
; 198  : 		}
; 199  : 
; 200  : 		TextFileLoader.SetParentNode();

  01731	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01737	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN36@LoadRaceDa:

; 201  : 	}
; 202  : 
; 203  : 	return TRUE;

  0173c	be 01 00 00 00	 mov	 esi, 1
  01741	e9 32 ec ff ff	 jmp	 $LN125@LoadRaceDa
$LN264@LoadRaceDa:

; 204  : }

  01746	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1439@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0174b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1440@LoadRaceDa:
  01750	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1441@LoadRaceDa:
  01755	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1442@LoadRaceDa:
  0175a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1443@LoadRaceDa:
  0175f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1371@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2325 :             _Xran();

  01764	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN1374@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1968 :             _Xrange();

  01769	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN1444@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0176e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1376@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2741 :             _Xlen_string(); // result too long

  01773	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN1445@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01778	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1429@LoadRaceDa:
  0177d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$0:
  00000	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$1:
  0000b	8d 4d d8	 lea	 ecx, DWORD PTR $T61[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$2:
  00013	8d 4d d8	 lea	 ecx, DWORD PTR $T60[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$3:
  0001b	8d 4d d8	 lea	 ecx, DWORD PTR $T59[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$4:
  00023	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$5:
  0002b	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  0002e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$6:
  00033	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  00036	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$7:
  0003b	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strPathName$27[ebp]
  00041	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$8:
  00046	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  0004c	83 e0 01	 and	 eax, 1
  0004f	0f 84 0f 00 00
	00		 je	 $LN60@LoadRaceDa
  00055	83 a5 bc fe ff
	ff fe		 and	 DWORD PTR $T7[ebp], -2	; fffffffeH
  0005c	8d 4d 90	 lea	 ecx, DWORD PTR $T30[ebp]
  0005f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN60@LoadRaceDa:
  00064	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$9:
  00065	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  0006b	83 e0 02	 and	 eax, 2
  0006e	0f 84 0f 00 00
	00		 je	 $LN62@LoadRaceDa
  00074	83 a5 bc fe ff
	ff fd		 and	 DWORD PTR $T7[ebp], -3	; fffffffdH
  0007b	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  0007e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN62@LoadRaceDa:
  00083	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$10:
  00084	8d 4d a8	 lea	 ecx, DWORD PTR $T36[ebp]
  00087	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$11:
  0008c	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  0008f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$12:
  00094	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  00097	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$13:
  0009c	8d 4d 90	 lea	 ecx, DWORD PTR _strModel$29[ebp]
  0009f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$14:
  000a4	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  000a7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$15:
  000ac	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  000b2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$16:
  000b7	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  000ba	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$17:
  000bf	8d 4d c0	 lea	 ecx, DWORD PTR _strSourceSkin$42[ebp]
  000c2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$18:
  000c7	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _strTargetSkin$24[ebp]
  000cd	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$19:
  000d2	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  000d8	83 e0 04	 and	 eax, 4
  000db	0f 84 0f 00 00
	00		 je	 $LN75@LoadRaceDa
  000e1	83 a5 bc fe ff
	ff fb		 and	 DWORD PTR $T7[ebp], -5	; fffffffbH
  000e8	8d 4d a8	 lea	 ecx, DWORD PTR $T35[ebp]
  000eb	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN75@LoadRaceDa:
  000f0	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$20:
  000f1	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  000f7	83 e0 08	 and	 eax, 8
  000fa	0f 84 0f 00 00
	00		 je	 $LN77@LoadRaceDa
  00100	83 a5 bc fe ff
	ff f7		 and	 DWORD PTR $T7[ebp], -9	; fffffff7H
  00107	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  0010a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN77@LoadRaceDa:
  0010f	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$21:
  00110	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00116	83 e0 10	 and	 eax, 16			; 00000010H
  00119	0f 84 0f 00 00
	00		 je	 $LN81@LoadRaceDa
  0011f	83 a5 bc fe ff
	ff ef		 and	 DWORD PTR $T7[ebp], -17	; ffffffefH
  00126	8d 4d a8	 lea	 ecx, DWORD PTR $T34[ebp]
  00129	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN81@LoadRaceDa:
  0012e	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$22:
  0012f	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00135	83 e0 20	 and	 eax, 32			; 00000020H
  00138	0f 84 0f 00 00
	00		 je	 $LN83@LoadRaceDa
  0013e	83 a5 bc fe ff
	ff df		 and	 DWORD PTR $T7[ebp], -33	; ffffffdfH
  00145	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00148	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN83@LoadRaceDa:
  0014d	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$23:
  0014e	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  00151	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$24:
  00156	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  0015c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$25:
  00161	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00167	83 e0 40	 and	 eax, 64			; 00000040H
  0016a	0f 84 0f 00 00
	00		 je	 $LN89@LoadRaceDa
  00170	83 a5 bc fe ff
	ff bf		 and	 DWORD PTR $T7[ebp], -65	; ffffffbfH
  00177	8d 4d a8	 lea	 ecx, DWORD PTR $T33[ebp]
  0017a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN89@LoadRaceDa:
  0017f	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$26:
  00180	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00186	25 80 00 00 00	 and	 eax, 128		; 00000080H
  0018b	0f 84 12 00 00
	00		 je	 $LN91@LoadRaceDa
  00191	81 a5 bc fe ff
	ff 7f ff ff ff	 and	 DWORD PTR $T7[ebp], -129 ; ffffff7fH
  0019b	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  0019e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN91@LoadRaceDa:
  001a3	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$27:
  001a4	8d 4d a8	 lea	 ecx, DWORD PTR $T32[ebp]
  001a7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$28:
  001ac	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  001af	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$29:
  001b4	8d 4d a8	 lea	 ecx, DWORD PTR _strPathName$31[ebp]
  001b7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$30:
  001bc	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  001c2	25 00 01 00 00	 and	 eax, 256		; 00000100H
  001c7	0f 84 15 00 00
	00		 je	 $LN98@LoadRaceDa
  001cd	81 a5 bc fe ff
	ff ff fe ff ff	 and	 DWORD PTR $T7[ebp], -257 ; fffffeffH
  001d7	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  001dd	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN98@LoadRaceDa:
  001e2	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$31:
  001e3	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  001e9	25 00 02 00 00	 and	 eax, 512		; 00000200H
  001ee	0f 84 12 00 00
	00		 je	 $LN100@LoadRaceDa
  001f4	81 a5 bc fe ff
	ff ff fd ff ff	 and	 DWORD PTR $T7[ebp], -513 ; fffffdffH
  001fe	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00201	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN100@LoadRaceDa:
  00206	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$32:
  00207	8d 4d c0	 lea	 ecx, DWORD PTR $T41[ebp]
  0020a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$33:
  0020f	8d 4d c0	 lea	 ecx, DWORD PTR $T40[ebp]
  00212	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$34:
  00217	8d 4d c0	 lea	 ecx, DWORD PTR $T39[ebp]
  0021a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$35:
  0021f	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _strModel$23[ebp]
  00225	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$36:
  0022a	8d 4d 90	 lea	 ecx, DWORD PTR _strSourceSkin$28[ebp]
  0022d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$37:
  00232	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strTargetSkin$25[ebp]
  00238	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$38:
  0023d	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00243	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00248	0f 84 12 00 00
	00		 je	 $LN110@LoadRaceDa
  0024e	81 a5 bc fe ff
	ff ff fb ff ff	 and	 DWORD PTR $T7[ebp], -1025 ; fffffbffH
  00258	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  0025b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN110@LoadRaceDa:
  00260	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$39:
  00261	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00267	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  0026c	0f 84 15 00 00
	00		 je	 $LN112@LoadRaceDa
  00272	81 a5 bc fe ff
	ff ff f7 ff ff	 and	 DWORD PTR $T7[ebp], -2049 ; fffff7ffH
  0027c	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  00282	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN112@LoadRaceDa:
  00287	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$40:
  00288	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  0028e	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00293	0f 84 12 00 00
	00		 je	 $LN114@LoadRaceDa
  00299	81 a5 bc fe ff
	ff ff ef ff ff	 and	 DWORD PTR $T7[ebp], -4097 ; ffffefffH
  002a3	8d 4d c0	 lea	 ecx, DWORD PTR $T38[ebp]
  002a6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN114@LoadRaceDa:
  002ab	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$41:
  002ac	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T19[ebp]
  002b2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$42:
  002b7	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  002ba	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$43:
  002bf	8d 4d c0	 lea	 ecx, DWORD PTR $T37[ebp]
  002c2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002c7	cc		 int	 3
  002c8	cc		 int	 3
  002c9	cc		 int	 3
  002ca	cc		 int	 3
  002cb	cc		 int	 3
__ehhandler$?LoadRaceData@CRaceData@@QAEHPBD@Z:
  002cc	90		 npad	 1
  002cd	90		 npad	 1
  002ce	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  002d2	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  002d5	8b 8a a4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-348]
  002db	33 c8		 xor	 ecx, eax
  002dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002e2	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  002e5	33 c8		 xor	 ecx, eax
  002e7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ec	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadRaceData@CRaceData@@QAEHPBD@Z
  002f1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadRaceData@CRaceData@@QAEHPBD@Z ENDP			; CRaceData::LoadRaceData
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 2205 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3270 :     _CONSTEXPR20 ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2301 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3278 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2674 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b d9		 mov	 ebx, ecx
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	57		 push	 edi

; 415  :             return __builtin_strlen(_First);

  0000c	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  0000f	8b f7		 mov	 esi, edi

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00011	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0

; 2349 :     size_type _Mysize = 0; // current length of string

  00014	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0

; 2350 :     size_type _Myres  = 0; // current storage reserved for string

  0001b	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0

; 415  :             return __builtin_strlen(_First);

  00022	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL39@basic_stri:
  00025	8a 06		 mov	 al, BYTE PTR [esi]
  00027	46		 inc	 esi
  00028	84 c0		 test	 al, al
  0002a	75 f9		 jne	 SHORT $LL39@basic_stri
  0002c	2b f1		 sub	 esi, ecx

; 2740 :         if (_Count > max_size()) {

  0002e	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00034	0f 87 a5 00 00
	00		 ja	 $LN44@basic_stri

; 2742 :         }
; 2743 : 
; 2744 :         auto& _Al       = _Getal();
; 2745 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2746 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2747 : 
; 2748 :         if (_Count < _BUF_SIZE) {

  0003a	c7 43 14 0f 00
	00 00		 mov	 DWORD PTR [ebx+20], 15	; 0000000fH
  00041	83 fe 10	 cmp	 esi, 16			; 00000010H
  00044	73 1d		 jae	 SHORT $LN15@basic_stri

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00046	56		 push	 esi
  00047	57		 push	 edi
  00048	53		 push	 ebx

; 2749 :             _My_data._Mysize = _Count;

  00049	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0004c	e8 00 00 00 00	 call	 _memmove

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2756 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  00054	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  00058	8b c3		 mov	 eax, ebx
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
$LN15@basic_stri:

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00063	8b fe		 mov	 edi, esi
  00065	83 cf 0f	 or	 edi, 15			; 0000000fH
  00068	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006e	76 15		 jbe	 SHORT $LN22@basic_stri

; 4885 :             return _Max;

  00070	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00075	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00080	83 c4 04	 add	 esp, 4
  00083	eb 30		 jmp	 SHORT $LN42@basic_stri
$LN22@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  00085	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  0008a	3b f8		 cmp	 edi, eax
  0008c	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2772 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0008f	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00092	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00097	72 0b		 jb	 SHORT $LN30@basic_stri

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0009f	83 c4 04	 add	 esp, 4
  000a2	eb 11		 jmp	 SHORT $LN42@basic_stri
$LN30@basic_stri:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000a4	85 c0		 test	 eax, eax
  000a6	74 0b		 je	 SHORT $LN31@basic_stri

; 77   :         return ::operator new(_Bytes);

  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ae	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000b1	eb 02		 jmp	 SHORT $LN42@basic_stri
$LN31@basic_stri:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000b3	33 c0		 xor	 eax, eax
$LN42@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000b5	56		 push	 esi
  000b6	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2773 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000b9	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000bc	50		 push	 eax

; 2773 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000bd	89 03		 mov	 DWORD PTR [ebx], eax

; 2774 : 
; 2775 : #if _HAS_CXX20
; 2776 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2777 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 2778 :         }
; 2779 : #endif // _HAS_CXX20
; 2780 : 
; 2781 :         _My_data._Mysize = _Count;

  000bf	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 2782 :         _My_data._Myres  = _New_capacity;

  000c2	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c5	e8 00 00 00 00	 call	 _memcpy

; 2788 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000ca	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	5f		 pop	 edi

; 2788 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000d1	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  000d5	8b c3		 mov	 eax, ebx
  000d7	5e		 pop	 esi
  000d8	5b		 pop	 ebx
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c2 04 00	 ret	 4
$LN44@basic_stri:

; 2741 :             _Xlen_string(); // result too long

  000df	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN40@basic_stri:
  000e4	cc		 int	 3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2330 :         _Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xran:
  0000a	cc		 int	 3
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2368 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 324  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1947 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1948 :         int _Result;
; 1949 :         va_list _ArgList;
; 1950 :         __crt_va_start(_ArgList, _Format);
; 1951 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1952 :         __crt_va_end(_ArgList);
; 1953 :         return _Result;
; 1954 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\RaceDataFile.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
