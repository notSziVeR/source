; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\Distribute\ActorInstanceEvent.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?_Fake_alloc@std@@3U_Fake_allocator@1@B		; std::_Fake_alloc
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?_Fake_alloc@std@@3U_Fake_allocator@1@B
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV12@XZ ; CActorInstance::IEventHandler::GetEmptyPtr
PUBLIC	??1IEventHandler@CActorInstance@@UAE@XZ		; CActorInstance::IEventHandler::~IEventHandler
PUBLIC	??_GIEventHandler@CActorInstance@@UAEPAXI@Z	; CActorInstance::IEventHandler::`scalar deleting destructor'
PUBLIC	?SetEventHandler@CActorInstance@@QAEXPAVIEventHandler@1@@Z ; CActorInstance::SetEventHandler
PUBLIC	?__GetEventHandlerPtr@CActorInstance@@QAEPAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerPtr
PUBLIC	?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef
PUBLIC	?__OnSyncing@CActorInstance@@QAEXXZ		; CActorInstance::__OnSyncing
PUBLIC	?__OnWaiting@CActorInstance@@QAEXXZ		; CActorInstance::__OnWaiting
PUBLIC	?__OnMoving@CActorInstance@@QAEXXZ		; CActorInstance::__OnMoving
PUBLIC	?__OnMove@CActorInstance@@QAEXXZ		; CActorInstance::__OnMove
PUBLIC	?__OnStop@CActorInstance@@QAEXXZ		; CActorInstance::__OnStop
PUBLIC	?__OnWarp@CActorInstance@@QAEXXZ		; CActorInstance::__OnWarp
PUBLIC	?__OnClearAffects@CActorInstance@@QAEXXZ	; CActorInstance::__OnClearAffects
PUBLIC	?__OnSetAffect@CActorInstance@@QAEXI@Z		; CActorInstance::__OnSetAffect
PUBLIC	?__OnResetAffect@CActorInstance@@QAEXI@Z	; CActorInstance::__OnResetAffect
PUBLIC	?__OnAttack@CActorInstance@@QAEXG@Z		; CActorInstance::__OnAttack
PUBLIC	?__OnUseSkill@CActorInstance@@QAEXII_N@Z	; CActorInstance::__OnUseSkill
PUBLIC	?__OnHit@CActorInstance@@IAEXIAAV1@H@Z		; CActorInstance::__OnHit
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	??_7IEventHandler@CActorInstance@@6B@		; CActorInstance::IEventHandler::`vftable'
PUBLIC	??_R4IEventHandler@CActorInstance@@6B@		; CActorInstance::IEventHandler::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIEventHandler@CActorInstance@@@8	; CActorInstance::IEventHandler `RTTI Type Descriptor'
PUBLIC	??_R3IEventHandler@CActorInstance@@8		; CActorInstance::IEventHandler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IEventHandler@CActorInstance@@8		; CActorInstance::IEventHandler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IEventHandler@CActorInstance@@8	; CActorInstance::IEventHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@447a0000
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	??_EIEventHandler@CActorInstance@@UAEPAXI@Z:PROC ; CActorInstance::IEventHandler::`vector deleting destructor'
EXTRN	?NEW_GetCurPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ:PROC ; CActorInstance::NEW_GetCurPixelPositionRef
EXTRN	?NEW_GetDstPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ:PROC ; CActorInstance::NEW_GetDstPixelPositionRef
EXTRN	?GetTargetRotation@CActorInstance@@QAEMXZ:PROC	; CActorInstance::GetTargetRotation
EXTRN	?GetAdvancingRotation@CActorInstance@@QAEMXZ:PROC ; CActorInstance::GetAdvancingRotation
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?$TSS0@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4HA DD 01H DUP (?) ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::$TSS0
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8 DD FLAT:??_R0?AVCEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@@8 ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8
rdata$r	ENDS
;	COMDAT ??_R2CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8
rdata$r	SEGMENT
??_R2CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8 DD FLAT:??_R1A@?0A@EA@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8 ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IEventHandler@CActorInstance@@8
rdata$r	ENDS
;	COMDAT ??_R3CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8
rdata$r	SEGMENT
??_R3CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8 DD 00H ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@@8
data$rs	SEGMENT
??_R0?AVCEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@@8 DD FLAT:??_7type_info@@6B@ ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CAc'
	DB	'torInstance@@SAPAV23@XZ@', 00H
data$rs	ENDS
;	COMDAT ??_R4CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@6B@
rdata$r	SEGMENT
??_R4CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@6B@ DD 00H ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@@8
	DD	FLAT:??_R3CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IEventHandler@CActorInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IEventHandler@CActorInstance@@8 DD FLAT:??_R0?AVIEventHandler@CActorInstance@@@8 ; CActorInstance::IEventHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IEventHandler@CActorInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2IEventHandler@CActorInstance@@8
rdata$r	SEGMENT
??_R2IEventHandler@CActorInstance@@8 DD FLAT:??_R1A@?0A@EA@IEventHandler@CActorInstance@@8 ; CActorInstance::IEventHandler::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IEventHandler@CActorInstance@@8
rdata$r	SEGMENT
??_R3IEventHandler@CActorInstance@@8 DD 00H		; CActorInstance::IEventHandler::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IEventHandler@CActorInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIEventHandler@CActorInstance@@@8
data$rs	SEGMENT
??_R0?AVIEventHandler@CActorInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CActorInstance::IEventHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIEventHandler@CActorInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R4IEventHandler@CActorInstance@@6B@
rdata$r	SEGMENT
??_R4IEventHandler@CActorInstance@@6B@ DD 00H		; CActorInstance::IEventHandler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIEventHandler@CActorInstance@@@8
	DD	FLAT:??_R3IEventHandler@CActorInstance@@8
rdata$r	ENDS
;	COMDAT ?s_kEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4VCEmptyEventHandler@?1??123@SAPAV23@XZ@A
_DATA	SEGMENT
?s_kEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4VCEmptyEventHandler@?1??123@SAPAV23@XZ@A DD FLAT:??_7CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@6B@ ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::s_kEmptyEventHandler
_DATA	ENDS
;	COMDAT ??_7CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@6B@
CONST	SEGMENT
??_7CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@6B@ DD FLAT:??_R4CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@6B@ ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::`vftable'
	DD	FLAT:??_GCEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@UAEPAXI@Z
	DD	FLAT:?OnSyncing@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
	DD	FLAT:?OnWaiting@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
	DD	FLAT:?OnMoving@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
	DD	FLAT:?OnMove@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
	DD	FLAT:?OnStop@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
	DD	FLAT:?OnWarp@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
	DD	FLAT:?OnSetAffect@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXI@Z
	DD	FLAT:?OnResetAffect@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXI@Z
	DD	FLAT:?OnClearAffects@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXXZ
	DD	FLAT:?OnAttack@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@G@Z
	DD	FLAT:?OnUseSkill@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@II@Z
	DD	FLAT:?OnHit@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXIAAV4@H@Z
	DD	FLAT:?OnChangeShape@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXXZ
CONST	ENDS
;	COMDAT ??_7IEventHandler@CActorInstance@@6B@
CONST	SEGMENT
??_7IEventHandler@CActorInstance@@6B@ DD FLAT:??_R4IEventHandler@CActorInstance@@6B@ ; CActorInstance::IEventHandler::`vftable'
	DD	FLAT:??_EIEventHandler@CActorInstance@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??__Fs_kEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV12@XZ@YAXXZ
text$yd	SEGMENT
??__Fs_kEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV12@XZ@YAXXZ PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::`dynamic atexit destructor for 's_kEmptyEventHandler'', COMDAT
  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4VCEmptyEventHandler@?1??123@SAPAV23@XZ@A, OFFSET ??_7IEventHandler@CActorInstance@@6B@
  0000a	c3		 ret	 0
??__Fs_kEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV12@XZ@YAXXZ ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::`dynamic atexit destructor for 's_kEmptyEventHandler''
text$yd	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@UAEPAXI@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7IEventHandler@CActorInstance@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GCEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@UAEPAXI@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnChangeShape@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXXZ
_TEXT	SEGMENT
?OnChangeShape@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXXZ PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnChangeShape, COMDAT
; _this$ = ecx

; 177  : 		virtual void OnChangeShape() {}

  00000	c2 00 00	 ret	 0
?OnChangeShape@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXXZ ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnChangeShape
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnHit@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXIAAV4@H@Z
_TEXT	SEGMENT
_uMotAttack$ = 8					; size = 4
_rkActorVictim$ = 12					; size = 4
_isSendPacket$ = 16					; size = 4
?OnHit@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXIAAV4@H@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnHit, COMDAT
; _this$ = ecx

; 175  : 		virtual void OnHit(UINT uMotAttack, CActorInstance& rkActorVictim, BOOL isSendPacket) {}

  00000	c2 0c 00	 ret	 12			; 0000000cH
?OnHit@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXIAAV4@H@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnHit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnUseSkill@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@II@Z
_TEXT	SEGMENT
_c_rkState$ = 8						; size = 4
_uMotSkill$ = 12					; size = 4
_uMotLoopCount$ = 16					; size = 4
?OnUseSkill@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@II@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnUseSkill, COMDAT
; _this$ = ecx

; 173  : 		virtual void OnUseSkill(const SState& c_rkState, UINT uMotSkill, UINT uMotLoopCount) {}

  00000	c2 0c 00	 ret	 12			; 0000000cH
?OnUseSkill@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@II@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnUseSkill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnAttack@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@G@Z
_TEXT	SEGMENT
_c_rkState$ = 8						; size = 4
_wMotionIndex$ = 12					; size = 2
?OnAttack@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@G@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnAttack, COMDAT
; _this$ = ecx

; 172  : 		virtual void OnAttack(const SState& c_rkState, WORD wMotionIndex) {}

  00000	c2 08 00	 ret	 8
?OnAttack@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@G@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnResetAffect@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXI@Z
_TEXT	SEGMENT
_uAffect$ = 8						; size = 4
?OnResetAffect@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXI@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnResetAffect, COMDAT
; _this$ = ecx

; 170  : 		virtual void OnResetAffect(UINT uAffect) {}

  00000	c2 04 00	 ret	 4
?OnResetAffect@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXI@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnResetAffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnSetAffect@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXI@Z
_TEXT	SEGMENT
_uAffect$ = 8						; size = 4
?OnSetAffect@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXI@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnSetAffect, COMDAT
; _this$ = ecx

; 169  : 		virtual void OnSetAffect(UINT uAffect) {}

  00000	c2 04 00	 ret	 4
?OnSetAffect@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXI@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnSetAffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnClearAffects@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXXZ
_TEXT	SEGMENT
?OnClearAffects@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXXZ PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnClearAffects, COMDAT
; _this$ = ecx

; 168  : 		virtual void OnClearAffects() {}

  00000	c2 00 00	 ret	 0
?OnClearAffects@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXXZ ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnClearAffects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnWarp@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
_TEXT	SEGMENT
_c_rkState$ = 8						; size = 4
?OnWarp@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnWarp, COMDAT
; _this$ = ecx

; 166  : 		virtual void OnWarp(const SState& c_rkState) {}

  00000	c2 04 00	 ret	 4
?OnWarp@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnWarp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnStop@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
_TEXT	SEGMENT
_c_rkState$ = 8						; size = 4
?OnStop@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnStop, COMDAT
; _this$ = ecx

; 165  : 		virtual void OnStop(const SState& c_rkState) {}

  00000	c2 04 00	 ret	 4
?OnStop@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnStop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnMove@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
_TEXT	SEGMENT
_c_rkState$ = 8						; size = 4
?OnMove@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnMove, COMDAT
; _this$ = ecx

; 164  : 		virtual void OnMove(const SState& c_rkState) {}

  00000	c2 04 00	 ret	 4
?OnMove@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnMoving@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
_TEXT	SEGMENT
_c_rkState$ = 8						; size = 4
?OnMoving@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnMoving, COMDAT
; _this$ = ecx

; 163  : 		virtual void OnMoving(const SState& c_rkState) {}

  00000	c2 04 00	 ret	 4
?OnMoving@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnMoving
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnWaiting@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
_TEXT	SEGMENT
_c_rkState$ = 8						; size = 4
?OnWaiting@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnWaiting, COMDAT
; _this$ = ecx

; 162  : 		virtual void OnWaiting(const SState& c_rkState) {}

  00000	c2 04 00	 ret	 4
?OnWaiting@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnWaiting
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?OnSyncing@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z
_TEXT	SEGMENT
_c_rkState$ = 8						; size = 4
?OnSyncing@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnSyncing, COMDAT
; _this$ = ecx

; 161  : 		virtual void OnSyncing(const SState& c_rkState) {}

  00000	c2 04 00	 ret	 4
?OnSyncing@CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV34@XZ@UAEXABUSState@34@@Z ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::OnSyncing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ??1CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@UAE@XZ
_TEXT	SEGMENT
??1CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@UAE@XZ PROC ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::~CEmptyEventHandler, COMDAT
; _this$ = ecx

; 159  : 		virtual ~CEmptyEventHandler() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IEventHandler@CActorInstance@@6B@
  00006	c3		 ret	 0
??1CEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@UAE@XZ ENDP ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::CEmptyEventHandler::~CEmptyEventHandler
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnHit@CActorInstance@@IAEXIAAV1@H@Z
_TEXT	SEGMENT
_uSkill$ = 8						; size = 4
_rkActorVictm$ = 12					; size = 4
_isSendPacket$ = 16					; size = 4
?__OnHit@CActorInstance@@IAEXIAAV1@H@Z PROC		; CActorInstance::__OnHit, COMDAT
; _this$ = ecx

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00003	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 115  : 	rkEventHandler.OnHit(uSkill, rkActorVictm, isSendPacket);

  00008	8b 10		 mov	 edx, DWORD PTR [eax]
  0000a	8b c8		 mov	 ecx, eax

; 116  : }

  0000c	5d		 pop	 ebp

; 115  : 	rkEventHandler.OnHit(uSkill, rkActorVictm, isSendPacket);

  0000d	ff 62 30	 jmp	 DWORD PTR [edx+48]
?__OnHit@CActorInstance@@IAEXIAAV1@H@Z ENDP		; CActorInstance::__OnHit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnUseSkill@CActorInstance@@QAEXII_N@Z
_TEXT	SEGMENT
_kState$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_uMotSkill$ = 8						; size = 4
_uLoopCount$ = 12					; size = 4
_isMovingSkill$ = 16					; size = 1
?__OnUseSkill@CActorInstance@@QAEXII_N@Z PROC		; CActorInstance::__OnUseSkill, COMDAT
; _this$ = ecx

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b f1		 mov	 esi, ecx

; 97   : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00014	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 98   : 
; 99   : 	IEventHandler::SState kState;
; 100  : 	kState.kPPosSelf = NEW_GetCurPixelPositionRef();

  00019	8b ce		 mov	 ecx, esi
  0001b	8b f8		 mov	 edi, eax
  0001d	e8 00 00 00 00	 call	 ?NEW_GetCurPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ ; CActorInstance::NEW_GetCurPixelPositionRef

; 101  : 	kState.fAdvRotSelf = GetAdvancingRotation();

  00022	8b ce		 mov	 ecx, esi
  00024	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00028	66 0f d6 45 ec	 movq	 QWORD PTR _kState$[ebp], xmm0
  0002d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00030	89 55 f4	 mov	 DWORD PTR _kState$[ebp+8], edx
  00033	e8 00 00 00 00	 call	 ?GetAdvancingRotation@CActorInstance@@QAEMXZ ; CActorInstance::GetAdvancingRotation

; 102  : 
; 103  : 	UINT uArg = uLoopCount;
; 104  : 	if (isMovingSkill)
; 105  : 	{
; 106  : 		uArg |= 1 << 4;
; 107  : 	}
; 108  : 
; 109  : 	rkEventHandler.OnUseSkill(kState, uMotSkill, uArg);

  00038	8b 4d 0c	 mov	 ecx, DWORD PTR _uLoopCount$[ebp]
  0003b	8d 45 ec	 lea	 eax, DWORD PTR _kState$[ebp]
  0003e	83 c9 10	 or	 ecx, 16			; 00000010H
  00041	80 7d 10 00	 cmp	 BYTE PTR _isMovingSkill$[ebp], 0
  00045	d9 5d f8	 fstp	 DWORD PTR _kState$[ebp+12]
  00048	0f 44 4d 0c	 cmove	 ecx, DWORD PTR _uLoopCount$[ebp]
  0004c	8b 17		 mov	 edx, DWORD PTR [edi]
  0004e	51		 push	 ecx
  0004f	ff 75 08	 push	 DWORD PTR _uMotSkill$[ebp]
  00052	8b cf		 mov	 ecx, edi
  00054	50		 push	 eax
  00055	ff 52 2c	 call	 DWORD PTR [edx+44]

; 110  : }

  00058	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005b	5f		 pop	 edi
  0005c	33 cd		 xor	 ecx, ebp
  0005e	5e		 pop	 esi
  0005f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 0c 00	 ret	 12			; 0000000cH
?__OnUseSkill@CActorInstance@@QAEXII_N@Z ENDP		; CActorInstance::__OnUseSkill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnAttack@CActorInstance@@QAEXG@Z
_TEXT	SEGMENT
_kState$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_wMotionIndex$ = 8					; size = 2
?__OnAttack@CActorInstance@@QAEXG@Z PROC		; CActorInstance::__OnAttack, COMDAT
; _this$ = ecx

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b f1		 mov	 esi, ecx

; 87   : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00014	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 88   : 
; 89   : 	IEventHandler::SState kState;
; 90   : 	kState.kPPosSelf = NEW_GetCurPixelPositionRef();

  00019	8b ce		 mov	 ecx, esi
  0001b	8b f8		 mov	 edi, eax
  0001d	e8 00 00 00 00	 call	 ?NEW_GetCurPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ ; CActorInstance::NEW_GetCurPixelPositionRef

; 91   : 	kState.fAdvRotSelf = GetTargetRotation();

  00022	8b ce		 mov	 ecx, esi
  00024	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00028	66 0f d6 45 ec	 movq	 QWORD PTR _kState$[ebp], xmm0
  0002d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00030	89 55 f4	 mov	 DWORD PTR _kState$[ebp+8], edx
  00033	e8 00 00 00 00	 call	 ?GetTargetRotation@CActorInstance@@QAEMXZ ; CActorInstance::GetTargetRotation

; 92   : 	rkEventHandler.OnAttack(kState, wMotionIndex);

  00038	ff 75 08	 push	 DWORD PTR _wMotionIndex$[ebp]
  0003b	d9 5d f8	 fstp	 DWORD PTR _kState$[ebp+12]
  0003e	8b 07		 mov	 eax, DWORD PTR [edi]
  00040	8d 4d ec	 lea	 ecx, DWORD PTR _kState$[ebp]
  00043	51		 push	 ecx
  00044	8b cf		 mov	 ecx, edi
  00046	ff 50 28	 call	 DWORD PTR [eax+40]

; 93   : }

  00049	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004c	5f		 pop	 edi
  0004d	33 cd		 xor	 ecx, ebp
  0004f	5e		 pop	 esi
  00050	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?__OnAttack@CActorInstance@@QAEXG@Z ENDP		; CActorInstance::__OnAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnResetAffect@CActorInstance@@QAEXI@Z
_TEXT	SEGMENT
_uAffect$ = 8						; size = 4
?__OnResetAffect@CActorInstance@@QAEXI@Z PROC		; CActorInstance::__OnResetAffect, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 132  : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00003	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 133  : 	rkEventHandler.OnResetAffect(uAffect);

  00008	8b 10		 mov	 edx, DWORD PTR [eax]
  0000a	8b c8		 mov	 ecx, eax

; 134  : }

  0000c	5d		 pop	 ebp

; 133  : 	rkEventHandler.OnResetAffect(uAffect);

  0000d	ff 62 20	 jmp	 DWORD PTR [edx+32]
?__OnResetAffect@CActorInstance@@QAEXI@Z ENDP		; CActorInstance::__OnResetAffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnSetAffect@CActorInstance@@QAEXI@Z
_TEXT	SEGMENT
_uAffect$ = 8						; size = 4
?__OnSetAffect@CActorInstance@@QAEXI@Z PROC		; CActorInstance::__OnSetAffect, COMDAT
; _this$ = ecx

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 126  : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00003	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 127  : 	rkEventHandler.OnSetAffect(uAffect);

  00008	8b 10		 mov	 edx, DWORD PTR [eax]
  0000a	8b c8		 mov	 ecx, eax

; 128  : }

  0000c	5d		 pop	 ebp

; 127  : 	rkEventHandler.OnSetAffect(uAffect);

  0000d	ff 62 1c	 jmp	 DWORD PTR [edx+28]
?__OnSetAffect@CActorInstance@@QAEXI@Z ENDP		; CActorInstance::__OnSetAffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnClearAffects@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
?__OnClearAffects@CActorInstance@@QAEXXZ PROC		; CActorInstance::__OnClearAffects, COMDAT
; _this$ = ecx

; 120  : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00000	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 121  : 	rkEventHandler.OnClearAffects();

  00005	8b c8		 mov	 ecx, eax
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	ff 62 24	 jmp	 DWORD PTR [edx+36]
?__OnClearAffects@CActorInstance@@QAEXXZ ENDP		; CActorInstance::__OnClearAffects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnWarp@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
_kState$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?__OnWarp@CActorInstance@@QAEXXZ PROC			; CActorInstance::__OnWarp, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b f1		 mov	 esi, ecx

; 77   : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00014	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 78   : 
; 79   : 	IEventHandler::SState kState;
; 80   : 	kState.kPPosSelf = NEW_GetCurPixelPositionRef();

  00019	8b ce		 mov	 ecx, esi
  0001b	8b f8		 mov	 edi, eax
  0001d	e8 00 00 00 00	 call	 ?NEW_GetCurPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ ; CActorInstance::NEW_GetCurPixelPositionRef

; 81   : 	kState.fAdvRotSelf = GetAdvancingRotation();

  00022	8b ce		 mov	 ecx, esi
  00024	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00028	66 0f d6 45 ec	 movq	 QWORD PTR _kState$[ebp], xmm0
  0002d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00030	89 55 f4	 mov	 DWORD PTR _kState$[ebp+8], edx
  00033	e8 00 00 00 00	 call	 ?GetAdvancingRotation@CActorInstance@@QAEMXZ ; CActorInstance::GetAdvancingRotation
  00038	d9 5d f8	 fstp	 DWORD PTR _kState$[ebp+12]

; 82   : 	rkEventHandler.OnWarp(kState);

  0003b	8b 07		 mov	 eax, DWORD PTR [edi]
  0003d	8d 4d ec	 lea	 ecx, DWORD PTR _kState$[ebp]
  00040	51		 push	 ecx
  00041	8b cf		 mov	 ecx, edi
  00043	ff 50 18	 call	 DWORD PTR [eax+24]

; 83   : }

  00046	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00049	5f		 pop	 edi
  0004a	33 cd		 xor	 ecx, ebp
  0004c	5e		 pop	 esi
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?__OnWarp@CActorInstance@@QAEXXZ ENDP			; CActorInstance::__OnWarp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnStop@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
_kState$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?__OnStop@CActorInstance@@QAEXXZ PROC			; CActorInstance::__OnStop, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b f1		 mov	 esi, ecx

; 67   : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00014	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 68   : 
; 69   : 	IEventHandler::SState kState;
; 70   : 	kState.kPPosSelf = NEW_GetCurPixelPositionRef();

  00019	8b ce		 mov	 ecx, esi
  0001b	8b f8		 mov	 edi, eax
  0001d	e8 00 00 00 00	 call	 ?NEW_GetCurPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ ; CActorInstance::NEW_GetCurPixelPositionRef

; 71   : 	kState.fAdvRotSelf = GetAdvancingRotation();

  00022	8b ce		 mov	 ecx, esi
  00024	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00028	66 0f d6 45 ec	 movq	 QWORD PTR _kState$[ebp], xmm0
  0002d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00030	89 55 f4	 mov	 DWORD PTR _kState$[ebp+8], edx
  00033	e8 00 00 00 00	 call	 ?GetAdvancingRotation@CActorInstance@@QAEMXZ ; CActorInstance::GetAdvancingRotation
  00038	d9 5d f8	 fstp	 DWORD PTR _kState$[ebp+12]

; 72   : 	rkEventHandler.OnStop(kState);

  0003b	8b 07		 mov	 eax, DWORD PTR [edi]
  0003d	8d 4d ec	 lea	 ecx, DWORD PTR _kState$[ebp]
  00040	51		 push	 ecx
  00041	8b cf		 mov	 ecx, edi
  00043	ff 50 14	 call	 DWORD PTR [eax+20]

; 73   : }

  00046	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00049	5f		 pop	 edi
  0004a	33 cd		 xor	 ecx, ebp
  0004c	5e		 pop	 esi
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?__OnStop@CActorInstance@@QAEXXZ ENDP			; CActorInstance::__OnStop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnMove@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
_kState$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?__OnMove@CActorInstance@@QAEXXZ PROC			; CActorInstance::__OnMove, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b f1		 mov	 esi, ecx

; 57   : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00014	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 58   : 
; 59   : 	IEventHandler::SState kState;
; 60   : 	kState.kPPosSelf = NEW_GetCurPixelPositionRef();

  00019	8b ce		 mov	 ecx, esi
  0001b	8b f8		 mov	 edi, eax
  0001d	e8 00 00 00 00	 call	 ?NEW_GetCurPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ ; CActorInstance::NEW_GetCurPixelPositionRef

; 61   : 	kState.fAdvRotSelf = GetAdvancingRotation();

  00022	8b ce		 mov	 ecx, esi
  00024	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00028	66 0f d6 45 ec	 movq	 QWORD PTR _kState$[ebp], xmm0
  0002d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00030	89 55 f4	 mov	 DWORD PTR _kState$[ebp+8], edx
  00033	e8 00 00 00 00	 call	 ?GetAdvancingRotation@CActorInstance@@QAEMXZ ; CActorInstance::GetAdvancingRotation
  00038	d9 5d f8	 fstp	 DWORD PTR _kState$[ebp+12]

; 62   : 	rkEventHandler.OnMove(kState);

  0003b	8b 07		 mov	 eax, DWORD PTR [edi]
  0003d	8d 4d ec	 lea	 ecx, DWORD PTR _kState$[ebp]
  00040	51		 push	 ecx
  00041	8b cf		 mov	 ecx, edi
  00043	ff 50 10	 call	 DWORD PTR [eax+16]

; 63   : }

  00046	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00049	5f		 pop	 edi
  0004a	33 cd		 xor	 ecx, ebp
  0004c	5e		 pop	 esi
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?__OnMove@CActorInstance@@QAEXXZ ENDP			; CActorInstance::__OnMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnMoving@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
_this$GSCopy$1$ = -36					; size = 4
_kPPosDir$ = -32					; size = 12
_kState$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?__OnMoving@CActorInstance@@QAEXXZ PROC			; CActorInstance::__OnMoving, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 24	 sub	 esp, 36			; 00000024H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 20	 mov	 DWORD PTR __$ArrayPad$[esp+36], eax
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	57		 push	 edi
  00019	89 74 24 0c	 mov	 DWORD PTR _this$GSCopy$1$[esp+48], esi

; 28   : 	assert(!IsPushing());
; 29   : 
; 30   : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  0001d	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 31   : 
; 32   : 	const TPixelPosition& c_rkPPosCur = NEW_GetCurPixelPositionRef();

  00022	8b ce		 mov	 ecx, esi
  00024	8b d8		 mov	 ebx, eax
  00026	e8 00 00 00 00	 call	 ?NEW_GetCurPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ ; CActorInstance::NEW_GetCurPixelPositionRef

; 33   : 	const TPixelPosition& c_rkPPosDst = NEW_GetDstPixelPositionRef();

  0002b	8b ce		 mov	 ecx, esi
  0002d	8b f8		 mov	 edi, eax
  0002f	e8 00 00 00 00	 call	 ?NEW_GetDstPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ ; CActorInstance::NEW_GetDstPixelPositionRef
  00034	8b f0		 mov	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00036	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
  0003a	f3 0f 10 56 04	 movss	 xmm2, DWORD PTR [esi+4]
  0003f	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00043	f3 0f 5c 57 04	 subss	 xmm2, DWORD PTR [edi+4]
  00048	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  0004d	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 304  :     x = fx;

  00052	f3 0f 11 4c 24
	10		 movss	 DWORD PTR _kPPosDir$[esp+48], xmm1

; 305  :     y = fy;

  00058	f3 0f 11 54 24
	14		 movss	 DWORD PTR _kPPosDir$[esp+52], xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp

; 36   : 	float distance = sqrt(kPPosDir.x * kPPosDir.x + kPPosDir.y * kPPosDir.y);

  0005e	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 306  :     z = fz;

  00062	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00066	f3 0f 11 44 24
	18		 movss	 DWORD PTR _kPPosDir$[esp+56], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp

; 36   : 	float distance = sqrt(kPPosDir.x * kPPosDir.x + kPPosDir.y * kPPosDir.y);

  0006c	f3 0f 58 ca	 addss	 xmm1, xmm2
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  00070	0f 5a c1	 cvtps2pd xmm0, xmm1
  00073	0f 57 c9	 xorps	 xmm1, xmm1
  00076	66 0f 2e c8	 ucomisd xmm1, xmm0
  0007a	77 06		 ja	 SHORT $LN17@OnMoving
  0007c	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00080	eb 05		 jmp	 SHORT $LN18@OnMoving
$LN17@OnMoving:
  00082	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN18@OnMoving:
  00087	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp

; 40   : 	if (distance > 1000.0f)

  0008b	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@447a0000
  00092	76 65		 jbe	 SHORT $LN2@OnMoving

; 41   : 	{
; 42   : 		D3DXVec3Normalize(&kPPosDir, &kPPosDir);

  00094	8d 44 24 10	 lea	 eax, DWORD PTR _kPPosDir$[esp+48]
  00098	50		 push	 eax
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 2079 :     pOut->x = pV->x * s;

  0009f	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@447a0000
  000a7	f3 0f 10 54 24
	10		 movss	 xmm2, DWORD PTR _kPPosDir$[esp+48]

; 2080 :     pOut->y = pV->y * s;

  000ad	f3 0f 10 4c 24
	14		 movss	 xmm1, DWORD PTR _kPPosDir$[esp+52]

; 2081 :     pOut->z = pV->z * s;

  000b3	f3 0f 10 44 24
	18		 movss	 xmm0, DWORD PTR _kPPosDir$[esp+56]
  000b9	f3 0f 59 d3	 mulss	 xmm2, xmm3
  000bd	f3 0f 59 cb	 mulss	 xmm1, xmm3
  000c1	f3 0f 59 c3	 mulss	 xmm0, xmm3
  000c5	f3 0f 11 54 24
	10		 movss	 DWORD PTR _kPPosDir$[esp+48], xmm2
  000cb	f3 0f 11 4c 24
	14		 movss	 DWORD PTR _kPPosDir$[esp+52], xmm1
  000d1	f3 0f 11 44 24
	18		 movss	 DWORD PTR _kPPosDir$[esp+56], xmm0

; 1967 :     pOut->x = pV1->x + pV2->x;

  000d7	f3 0f 58 17	 addss	 xmm2, DWORD PTR [edi]
  000db	f3 0f 11 54 24
	1c		 movss	 DWORD PTR _kState$[esp+48], xmm2

; 1968 :     pOut->y = pV1->y + pV2->y;

  000e1	f3 0f 58 4f 04	 addss	 xmm1, DWORD PTR [edi+4]
  000e6	f3 0f 11 4c 24
	20		 movss	 DWORD PTR _kState$[esp+52], xmm1

; 1969 :     pOut->z = pV1->z + pV2->z;

  000ec	f3 0f 58 47 08	 addss	 xmm0, DWORD PTR [edi+8]
  000f1	f3 0f 11 44 24
	24		 movss	 DWORD PTR _kState$[esp+56], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp

; 45   : 	}

  000f7	eb 11		 jmp	 SHORT $LN3@OnMoving
$LN2@OnMoving:

; 46   : 	else
; 47   : 	{
; 48   : 		kState.kPPosSelf = c_rkPPosDst;

  000f9	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  000fd	66 0f d6 44 24
	1c		 movq	 QWORD PTR _kState$[esp+48], xmm0
  00103	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00106	89 44 24 24	 mov	 DWORD PTR _kState$[esp+56], eax
$LN3@OnMoving:

; 49   : 	}
; 50   : 	kState.fAdvRotSelf = GetAdvancingRotation();

  0010a	8b 4c 24 0c	 mov	 ecx, DWORD PTR _this$GSCopy$1$[esp+48]
  0010e	e8 00 00 00 00	 call	 ?GetAdvancingRotation@CActorInstance@@QAEMXZ ; CActorInstance::GetAdvancingRotation
  00113	d9 5c 24 28	 fstp	 DWORD PTR _kState$[esp+60]

; 51   : 	rkEventHandler.OnMoving(kState);

  00117	8b 03		 mov	 eax, DWORD PTR [ebx]
  00119	8d 4c 24 1c	 lea	 ecx, DWORD PTR _kState$[esp+48]
  0011d	51		 push	 ecx
  0011e	8b cb		 mov	 ecx, ebx
  00120	ff 50 0c	 call	 DWORD PTR [eax+12]

; 52   : }

  00123	8b 4c 24 2c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+48]
  00127	5f		 pop	 edi
  00128	5e		 pop	 esi
  00129	5b		 pop	 ebx
  0012a	33 cc		 xor	 ecx, esp
  0012c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c3		 ret	 0
?__OnMoving@CActorInstance@@QAEXXZ ENDP			; CActorInstance::__OnMoving
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnWaiting@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
_kState$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?__OnWaiting@CActorInstance@@QAEXXZ PROC		; CActorInstance::__OnWaiting, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b f1		 mov	 esi, ecx

; 16   : 	assert(!IsPushing());
; 17   : 
; 18   : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00014	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 19   : 
; 20   : 	IEventHandler::SState kState;
; 21   : 	kState.kPPosSelf = NEW_GetCurPixelPositionRef();

  00019	8b ce		 mov	 ecx, esi
  0001b	8b f8		 mov	 edi, eax
  0001d	e8 00 00 00 00	 call	 ?NEW_GetCurPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ ; CActorInstance::NEW_GetCurPixelPositionRef

; 22   : 	kState.fAdvRotSelf = GetAdvancingRotation();

  00022	8b ce		 mov	 ecx, esi
  00024	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00028	66 0f d6 45 ec	 movq	 QWORD PTR _kState$[ebp], xmm0
  0002d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00030	89 55 f4	 mov	 DWORD PTR _kState$[ebp+8], edx
  00033	e8 00 00 00 00	 call	 ?GetAdvancingRotation@CActorInstance@@QAEMXZ ; CActorInstance::GetAdvancingRotation
  00038	d9 5d f8	 fstp	 DWORD PTR _kState$[ebp+12]

; 23   : 	rkEventHandler.OnWaiting(kState);

  0003b	8b 07		 mov	 eax, DWORD PTR [edi]
  0003d	8d 4d ec	 lea	 ecx, DWORD PTR _kState$[ebp]
  00040	51		 push	 ecx
  00041	8b cf		 mov	 ecx, edi
  00043	ff 50 08	 call	 DWORD PTR [eax+8]

; 24   : }

  00046	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00049	5f		 pop	 edi
  0004a	33 cd		 xor	 ecx, ebp
  0004c	5e		 pop	 esi
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?__OnWaiting@CActorInstance@@QAEXXZ ENDP		; CActorInstance::__OnWaiting
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__OnSyncing@CActorInstance@@QAEXXZ
_TEXT	SEGMENT
_kState$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?__OnSyncing@CActorInstance@@QAEXXZ PROC		; CActorInstance::__OnSyncing, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b f1		 mov	 esi, ecx

; 6    : 	IEventHandler& rkEventHandler = __GetEventHandlerRef();

  00014	e8 00 00 00 00	 call	 ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ; CActorInstance::__GetEventHandlerRef

; 7    : 
; 8    : 	IEventHandler::SState kState;
; 9    : 	kState.kPPosSelf = NEW_GetCurPixelPositionRef();

  00019	8b ce		 mov	 ecx, esi
  0001b	8b f8		 mov	 edi, eax
  0001d	e8 00 00 00 00	 call	 ?NEW_GetCurPixelPositionRef@CActorInstance@@QAEABUD3DXVECTOR3@@XZ ; CActorInstance::NEW_GetCurPixelPositionRef

; 10   : 	kState.fAdvRotSelf = GetAdvancingRotation();

  00022	8b ce		 mov	 ecx, esi
  00024	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00028	66 0f d6 45 ec	 movq	 QWORD PTR _kState$[ebp], xmm0
  0002d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00030	89 55 f4	 mov	 DWORD PTR _kState$[ebp+8], edx
  00033	e8 00 00 00 00	 call	 ?GetAdvancingRotation@CActorInstance@@QAEMXZ ; CActorInstance::GetAdvancingRotation
  00038	d9 5d f8	 fstp	 DWORD PTR _kState$[ebp+12]

; 11   : 	rkEventHandler.OnSyncing(kState);

  0003b	8b 07		 mov	 eax, DWORD PTR [edi]
  0003d	8d 4d ec	 lea	 ecx, DWORD PTR _kState$[ebp]
  00040	51		 push	 ecx
  00041	8b cf		 mov	 ecx, edi
  00043	ff 50 04	 call	 DWORD PTR [eax+4]

; 12   : }

  00046	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00049	5f		 pop	 edi
  0004a	33 cd		 xor	 ecx, ebp
  0004c	5e		 pop	 esi
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?__OnSyncing@CActorInstance@@QAEXXZ ENDP		; CActorInstance::__OnSyncing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ
_TEXT	SEGMENT
?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ PROC ; CActorInstance::__GetEventHandlerRef, COMDAT
; _this$ = ecx

; 139  : 	assert(m_pkEventHandler != NULL && "CActorInstance::GetEventHandlerRef");
; 140  : 	return *m_pkEventHandler;

  00000	8b 81 c0 05 00
	00		 mov	 eax, DWORD PTR [ecx+1472]

; 141  : }

  00006	c3		 ret	 0
?__GetEventHandlerRef@CActorInstance@@QAEAAVIEventHandler@1@XZ ENDP ; CActorInstance::__GetEventHandlerRef
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__GetEventHandlerPtr@CActorInstance@@QAEPAVIEventHandler@1@XZ
_TEXT	SEGMENT
?__GetEventHandlerPtr@CActorInstance@@QAEPAVIEventHandler@1@XZ PROC ; CActorInstance::__GetEventHandlerPtr, COMDAT
; _this$ = ecx

; 145  : 	return m_pkEventHandler;

  00000	8b 81 c0 05 00
	00		 mov	 eax, DWORD PTR [ecx+1472]

; 146  : }

  00006	c3		 ret	 0
?__GetEventHandlerPtr@CActorInstance@@QAEPAVIEventHandler@1@XZ ENDP ; CActorInstance::__GetEventHandlerPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?SetEventHandler@CActorInstance@@QAEXPAVIEventHandler@1@@Z
_TEXT	SEGMENT
_pkEventHandler$ = 8					; size = 4
?SetEventHandler@CActorInstance@@QAEXPAVIEventHandler@1@@Z PROC ; CActorInstance::SetEventHandler, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 150  : 	m_pkEventHandler = pkEventHandler;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pkEventHandler$[ebp]
  00006	89 81 c0 05 00
	00		 mov	 DWORD PTR [ecx+1472], eax

; 151  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetEventHandler@CActorInstance@@QAEXPAVIEventHandler@1@@Z ENDP ; CActorInstance::SetEventHandler
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GIEventHandler@CActorInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIEventHandler@CActorInstance@@UAEPAXI@Z PROC	; CActorInstance::IEventHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7IEventHandler@CActorInstance@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GIEventHandler@CActorInstance@@UAEPAXI@Z ENDP	; CActorInstance::IEventHandler::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstance.h
;	COMDAT ??1IEventHandler@CActorInstance@@UAE@XZ
_TEXT	SEGMENT
??1IEventHandler@CActorInstance@@UAE@XZ PROC		; CActorInstance::IEventHandler::~IEventHandler, COMDAT
; _this$ = ecx

; 46   : 		virtual ~IEventHandler() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IEventHandler@CActorInstance@@6B@
  00006	c3		 ret	 0
??1IEventHandler@CActorInstance@@UAE@XZ ENDP		; CActorInstance::IEventHandler::~IEventHandler
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV12@XZ
_TEXT	SEGMENT
?GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV12@XZ PROC ; CActorInstance::IEventHandler::GetEmptyPtr, COMDAT

; 155  : 	static class CEmptyEventHandler : public IEventHandler
; 156  : 	{
; 157  : 	public:
; 158  : 		CEmptyEventHandler() {}
; 159  : 		virtual ~CEmptyEventHandler() {}
; 160  : 
; 161  : 		virtual void OnSyncing(const SState& c_rkState) {}
; 162  : 		virtual void OnWaiting(const SState& c_rkState) {}
; 163  : 		virtual void OnMoving(const SState& c_rkState) {}
; 164  : 		virtual void OnMove(const SState& c_rkState) {}
; 165  : 		virtual void OnStop(const SState& c_rkState) {}
; 166  : 		virtual void OnWarp(const SState& c_rkState) {}
; 167  : 
; 168  : 		virtual void OnClearAffects() {}
; 169  : 		virtual void OnSetAffect(UINT uAffect) {}
; 170  : 		virtual void OnResetAffect(UINT uAffect) {}
; 171  : 
; 172  : 		virtual void OnAttack(const SState& c_rkState, WORD wMotionIndex) {}
; 173  : 		virtual void OnUseSkill(const SState& c_rkState, UINT uMotSkill, UINT uMotLoopCount) {}
; 174  : 
; 175  : 		virtual void OnHit(UINT uMotAttack, CActorInstance& rkActorVictim, BOOL isSendPacket) {}
; 176  : 
; 177  : 		virtual void OnChangeShape() {}
; 178  : 
; 179  : 	} s_kEmptyEventHandler;

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0000c	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4HA
  00014	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0001a	7f 06		 jg	 SHORT $LN12@GetEmptyPt
$LN9@GetEmptyPt:

; 180  : 
; 181  : 	return &s_kEmptyEventHandler;
; 182  : }

  0001c	b8 00 00 00 00	 mov	 eax, OFFSET ?s_kEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4VCEmptyEventHandler@?1??123@SAPAV23@XZ@A
  00021	c3		 ret	 0
$LN12@GetEmptyPt:

; 155  : 	static class CEmptyEventHandler : public IEventHandler
; 156  : 	{
; 157  : 	public:
; 158  : 		CEmptyEventHandler() {}
; 159  : 		virtual ~CEmptyEventHandler() {}
; 160  : 
; 161  : 		virtual void OnSyncing(const SState& c_rkState) {}
; 162  : 		virtual void OnWaiting(const SState& c_rkState) {}
; 163  : 		virtual void OnMoving(const SState& c_rkState) {}
; 164  : 		virtual void OnMove(const SState& c_rkState) {}
; 165  : 		virtual void OnStop(const SState& c_rkState) {}
; 166  : 		virtual void OnWarp(const SState& c_rkState) {}
; 167  : 
; 168  : 		virtual void OnClearAffects() {}
; 169  : 		virtual void OnSetAffect(UINT uAffect) {}
; 170  : 		virtual void OnResetAffect(UINT uAffect) {}
; 171  : 
; 172  : 		virtual void OnAttack(const SState& c_rkState, WORD wMotionIndex) {}
; 173  : 		virtual void OnUseSkill(const SState& c_rkState, UINT uMotSkill, UINT uMotLoopCount) {}
; 174  : 
; 175  : 		virtual void OnHit(UINT uMotAttack, CActorInstance& rkActorVictim, BOOL isSendPacket) {}
; 176  : 
; 177  : 		virtual void OnChangeShape() {}
; 178  : 
; 179  : 	} s_kEmptyEventHandler;

  00022	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4HA
  00027	e8 00 00 00 00	 call	 __Init_thread_header
  0002c	83 c4 04	 add	 esp, 4
  0002f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4HA, -1
  00036	75 e4		 jne	 SHORT $LN9@GetEmptyPt
  00038	68 00 00 00 00	 push	 OFFSET ??__Fs_kEmptyEventHandler@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV12@XZ@YAXXZ ; `CActorInstance::IEventHandler::GetEmptyPtr'::`2'::`dynamic atexit destructor for 's_kEmptyEventHandler''
  0003d	e8 00 00 00 00	 call	 _atexit
  00042	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV23@XZ@4HA
  00047	e8 00 00 00 00	 call	 __Init_thread_footer
  0004c	83 c4 08	 add	 esp, 8
  0004f	eb cb		 jmp	 SHORT $LN9@GetEmptyPt
?GetEmptyPtr@IEventHandler@CActorInstance@@SAPAV12@XZ ENDP ; CActorInstance::IEventHandler::GetEmptyPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\ActorInstanceEvent.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
