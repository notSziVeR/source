; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\Distribute\DungeonBlock.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?OnClear@CGraphicObjectInstance@@UAEXXZ		; CGraphicObjectInstance::OnClear
PUBLIC	?OnUpdate@CGraphicObjectInstance@@UAEXXZ	; CGraphicObjectInstance::OnUpdate
PUBLIC	?OnDeform@CGraphicObjectInstance@@UAEXXZ	; CGraphicObjectInstance::OnDeform
PUBLIC	?GetType@CDungeonBlock@@UBEHXZ			; CDungeonBlock::GetType
PUBLIC	??0CDungeonBlock@@QAE@XZ			; CDungeonBlock::CDungeonBlock
PUBLIC	??1CDungeonBlock@@UAE@XZ			; CDungeonBlock::~CDungeonBlock
PUBLIC	?Destroy@CDungeonBlock@@QAEXXZ			; CDungeonBlock::Destroy
PUBLIC	?BuildBoundingSphere@CDungeonBlock@@QAEXXZ	; CDungeonBlock::BuildBoundingSphere
PUBLIC	?Load@CDungeonBlock@@QAE_NPBD@Z			; CDungeonBlock::Load
PUBLIC	?Intersect@CDungeonBlock@@QAE_NPAM00@Z		; CDungeonBlock::Intersect
PUBLIC	?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z ; CDungeonBlock::GetBoundBox
PUBLIC	?Update@CDungeonBlock@@QAEXXZ			; CDungeonBlock::Update
PUBLIC	?Render@CDungeonBlock@@QAEXXZ			; CDungeonBlock::Render
PUBLIC	?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z ; CDungeonBlock::GetBoundingSphere
PUBLIC	?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ; CDungeonBlock::OnUpdateCollisionData
PUBLIC	?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z ; CDungeonBlock::OnUpdateHeighInstance
PUBLIC	?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z	; CDungeonBlock::OnGetObjectHeight
PUBLIC	?OnRender@CDungeonBlock@@UAEXXZ			; CDungeonBlock::OnRender
PUBLIC	?OnBlendRender@CDungeonBlock@@UAEXXZ		; CDungeonBlock::OnBlendRender
PUBLIC	?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ	; CDungeonBlock::OnRenderToShadowMap
PUBLIC	?OnRenderShadow@CDungeonBlock@@UAEXXZ		; CDungeonBlock::OnRenderShadow
PUBLIC	?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ	; CDungeonBlock::OnRenderPCBlocker
PUBLIC	?__Initialize@CDungeonBlock@@IAEXXZ		; CDungeonBlock::__Initialize
PUBLIC	??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >
PUBLIC	?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly
PUBLIC	?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
PUBLIC	??_GCDungeonBlock@@UAEPAXI@Z			; CDungeonBlock::`scalar deleting destructor'
PUBLIC	??1CDungeonModelInstance@@UAE@XZ		; CDungeonModelInstance::~CDungeonModelInstance
PUBLIC	??_GCDungeonModelInstance@@UAEPAXI@Z		; CDungeonModelInstance::`scalar deleting destructor'
PUBLIC	??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>
PUBLIC	??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	??_7CDungeonBlock@@6B@				; CDungeonBlock::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_7CDungeonModelInstance@@6B@			; CDungeonModelInstance::`vftable'
PUBLIC	??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CDungeonModelInstance@@6B@			; CDungeonModelInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDungeonModelInstance@@@8		; CDungeonModelInstance `RTTI Type Descriptor'
PUBLIC	??_R3CDungeonModelInstance@@8			; CDungeonModelInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDungeonModelInstance@@8			; CDungeonModelInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDungeonModelInstance@@8		; CDungeonModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGrannyModelInstance@@8		; CGrannyModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGrannyModelInstance@@@8		; CGrannyModelInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGrannyModelInstance@@8			; CGrannyModelInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGrannyModelInstance@@8			; CGrannyModelInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	??_R4CDungeonBlock@@6B@				; CDungeonBlock::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDungeonBlock@@@8			; CDungeonBlock `RTTI Type Descriptor'
PUBLIC	??_R3CDungeonBlock@@8				; CDungeonBlock::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDungeonBlock@@8				; CDungeonBlock::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDungeonBlock@@8			; CDungeonBlock::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicObjectInstance@@8		; CGraphicObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicObjectInstance@@@8		; CGraphicObjectInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicObjectInstance@@8			; CGraphicObjectInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicObjectInstance@@8			; CGraphicObjectInstance::`RTTI Base Class Array'
PUBLIC	__real@3f000000
PUBLIC	__real@43160000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	??0CGraphicVertexBuffer@@QAE@XZ:PROC		; CGraphicVertexBuffer::CGraphicVertexBuffer
EXTRN	??1CGraphicVertexBuffer@@UAE@XZ:PROC		; CGraphicVertexBuffer::~CGraphicVertexBuffer
EXTRN	?Destroy@CGraphicVertexBuffer@@QAEXXZ:PROC	; CGraphicVertexBuffer::Destroy
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetHeight@CAttributeInstance@@QAEHMMPAM@Z:PROC	; CAttributeInstance::GetHeight
EXTRN	??0CGraphicObjectInstance@@QAE@XZ:PROC		; CGraphicObjectInstance::CGraphicObjectInstance
EXTRN	??1CGraphicObjectInstance@@UAE@XZ:PROC		; CGraphicObjectInstance::~CGraphicObjectInstance
EXTRN	?Transform@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Transform
EXTRN	?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ:PROC ; CGraphicObjectInstance::GetTransform
EXTRN	?OnInitialize@CGraphicObjectInstance@@UAEXXZ:PROC ; CGraphicObjectInstance::OnInitialize
EXTRN	?AddCollision@CGraphicObjectInstance@@QAEXPBVCStaticCollisionData@@PBUD3DXMATRIX@@@Z:PROC ; CGraphicObjectInstance::AddCollision
EXTRN	?SetHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z:PROC ; CGraphicObjectInstance::SetHeightInstance
EXTRN	?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer9@@XZ:PROC ; CGrannyModel::GetPNTD3DVertexBuffer
EXTRN	??0CGrannyModelInstance@@QAE@XZ:PROC		; CGrannyModelInstance::CGrannyModelInstance
EXTRN	??1CGrannyModelInstance@@UAE@XZ:PROC		; CGrannyModelInstance::~CGrannyModelInstance
EXTRN	?IsEmpty@CGrannyModelInstance@@QAE_NXZ:PROC	; CGrannyModelInstance::IsEmpty
EXTRN	?Update@CGrannyModelInstance@@QAEXK@Z:PROC	; CGrannyModelInstance::Update
EXTRN	?UpdateLocalTime@CGrannyModelInstance@@QAEXM@Z:PROC ; CGrannyModelInstance::UpdateLocalTime
EXTRN	?Deform@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z:PROC ; CGrannyModelInstance::Deform
EXTRN	?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z:PROC ; CGrannyModelInstance::SetMainModelPointer
EXTRN	?GetVertexCount@CGrannyModelInstance@@QAEKXZ:PROC ; CGrannyModelInstance::GetVertexCount
EXTRN	?Intersect@CGrannyModelInstance@@QAE_NPBUD3DXMATRIX@@PAM11@Z:PROC ; CGrannyModelInstance::Intersect
EXTRN	?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z:PROC ; CGrannyModelInstance::GetBoundBox
EXTRN	?RenderMeshNodeListWithTwoTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z:PROC ; CGrannyModelInstance::RenderMeshNodeListWithTwoTexture
EXTRN	?RenderMeshNodeListWithoutTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z:PROC ; CGrannyModelInstance::RenderMeshNodeListWithoutTexture
EXTRN	?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z:PROC ; CGraphicThing::GetModelPointer
EXTRN	?GetModelCount@CGraphicThing@@QBEHXZ:PROC	; CGraphicThing::GetModelCount
EXTRN	??_ECDungeonBlock@@UAEPAXI@Z:PROC		; CDungeonBlock::`vector deleting destructor'
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SaveTextureStageState
EXTRN	?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z:PROC ; CStateManager::RestoreTextureStageState
EXTRN	?SetFVF@CStateManager@@QAEXK@Z:PROC		; CStateManager::SetFVF
EXTRN	?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer9@@I@Z:PROC ; CStateManager::SetStreamSource
EXTRN	??_ECDungeonModelInstance@@UAEPAXI@Z:PROC	; CDungeonModelInstance::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_pnt2VS@CGraphicBase@@1KA:DWORD		; CGraphicBase::ms_pnt2VS
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT __real@43160000
CONST	SEGMENT
__real@43160000 DD 043160000r			; 150
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R2CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R2CGraphicObjectInstance@@8 DD FLAT:??_R1A@?0A@EA@CGraphicObjectInstance@@8 ; CGraphicObjectInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R3CGraphicObjectInstance@@8 DD 00H			; CGraphicObjectInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGraphicObjectInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicObjectInstance@@@8
data$rs	SEGMENT
??_R0?AVCGraphicObjectInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicObjectInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicObjectInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicObjectInstance@@8 DD FLAT:??_R0?AVCGraphicObjectInstance@@@8 ; CGraphicObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicObjectInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDungeonBlock@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDungeonBlock@@8 DD FLAT:??_R0?AVCDungeonBlock@@@8 ; CDungeonBlock::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDungeonBlock@@8
rdata$r	ENDS
;	COMDAT ??_R2CDungeonBlock@@8
rdata$r	SEGMENT
??_R2CDungeonBlock@@8 DD FLAT:??_R1A@?0A@EA@CDungeonBlock@@8 ; CDungeonBlock::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicObjectInstance@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CDungeonBlock@@8
rdata$r	SEGMENT
??_R3CDungeonBlock@@8 DD 00H				; CDungeonBlock::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDungeonBlock@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDungeonBlock@@@8
data$rs	SEGMENT
??_R0?AVCDungeonBlock@@@8 DD FLAT:??_7type_info@@6B@	; CDungeonBlock `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDungeonBlock@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDungeonBlock@@6B@
rdata$r	SEGMENT
??_R4CDungeonBlock@@6B@ DD 00H				; CDungeonBlock::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDungeonBlock@@@8
	DD	FLAT:??_R3CDungeonBlock@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$rs	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$rs	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGrannyModelInstance@@8
rdata$r	SEGMENT
??_R2CGrannyModelInstance@@8 DD FLAT:??_R1A@?0A@EA@CGrannyModelInstance@@8 ; CGrannyModelInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGrannyModelInstance@@8
rdata$r	SEGMENT
??_R3CGrannyModelInstance@@8 DD 00H			; CGrannyModelInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGrannyModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGrannyModelInstance@@@8
data$rs	SEGMENT
??_R0?AVCGrannyModelInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGrannyModelInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGrannyModelInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGrannyModelInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGrannyModelInstance@@8 DD FLAT:??_R0?AVCGrannyModelInstance@@@8 ; CGrannyModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGrannyModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDungeonModelInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDungeonModelInstance@@8 DD FLAT:??_R0?AVCDungeonModelInstance@@@8 ; CDungeonModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDungeonModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CDungeonModelInstance@@8
rdata$r	SEGMENT
??_R2CDungeonModelInstance@@8 DD FLAT:??_R1A@?0A@EA@CDungeonModelInstance@@8 ; CDungeonModelInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGrannyModelInstance@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CDungeonModelInstance@@8
rdata$r	SEGMENT
??_R3CDungeonModelInstance@@8 DD 00H			; CDungeonModelInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDungeonModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDungeonModelInstance@@@8
data$rs	SEGMENT
??_R0?AVCDungeonModelInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CDungeonModelInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDungeonModelInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDungeonModelInstance@@6B@
rdata$r	SEGMENT
??_R4CDungeonModelInstance@@6B@ DD 00H			; CDungeonModelInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDungeonModelInstance@@@8
	DD	FLAT:??_R3CDungeonModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@
CONST	SEGMENT
??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@ DB 'CDunge'
	DB	'onBlock::Load(filename=%s) - model count is %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CDungeonModelInstance@@6B@
CONST	SEGMENT
??_7CDungeonModelInstance@@6B@ DD FLAT:??_R4CDungeonModelInstance@@6B@ ; CDungeonModelInstance::`vftable'
	DD	FLAT:??_ECDungeonModelInstance@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CDungeonBlock@@6B@
CONST	SEGMENT
??_7CDungeonBlock@@6B@ DD FLAT:??_R4CDungeonBlock@@6B@	; CDungeonBlock::`vftable'
	DD	FLAT:??_ECDungeonBlock@@UAEPAXI@Z
	DD	FLAT:?GetType@CDungeonBlock@@UBEHXZ
	DD	FLAT:?OnInitialize@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z
	DD	FLAT:?OnRender@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnBlendRender@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnRenderShadow@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnClear@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?OnUpdate@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?OnDeform@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z
	DD	FLAT:?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z
	DD	FLAT:?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@CDungeonBlock@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@CDungeonBlock@@QAE_NPBD@Z$0
__ehfuncinfo$?Load@CDungeonBlock@@QAE_NPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Load@CDungeonBlock@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CDungeonBlock@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDungeonBlock@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDungeonBlock@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDungeonBlock@@QAE@XZ$1
__ehfuncinfo$??0CDungeonBlock@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDungeonBlock@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv495 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	2b c2		 sub	 eax, edx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	2b c2		 sub	 eax, edx
  0001d	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 d2 00 00
	00		 je	 $LN66@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b ca		 sub	 ecx, edx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 f9 02	 sar	 ecx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b d1		 mov	 edx, ecx
  00040	d1 ea		 shr	 edx, 1
  00042	2b c2		 sub	 eax, edx
  00044	3b c8		 cmp	 ecx, eax
  00046	76 17		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00048	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  0004d	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00058	83 c4 04	 add	 esp, 4
  0005b	8b f8		 mov	 edi, eax
  0005d	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00062	8b f7		 mov	 esi, edi
  00064	3b c7		 cmp	 eax, edi
  00066	0f 43 f0	 cmovae	 esi, eax
  00069	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0006f	0f 87 8d 00 00
	00		 ja	 $LN67@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00075	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b f8		 mov	 edi, eax
  0008e	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  00090	85 c0		 test	 eax, eax
  00092	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009a	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009d	8b f8		 mov	 edi, eax
  0009f	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000a1	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000a6	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000ac	89 4d fc	 mov	 DWORD PTR tv495[ebp], ecx
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	89 01		 mov	 DWORD PTR [ecx], eax

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b6	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000bb	3b c1		 cmp	 eax, ecx
  000bd	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bf	8b c7		 mov	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000c1	eb 17		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c3	57		 push	 edi
  000c4	50		 push	 eax
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	83 c0 04	 add	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d7	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000e5	8b cb		 mov	 ecx, ebx
  000e7	56		 push	 esi
  000e8	ff 75 f8	 push	 DWORD PTR __Newsize$1$[ebp]
  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Change_array

; 920  :         return _Newvec + _Whereoff;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR tv495[ebp]
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx

; 921  :     }

  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
$LN66@Emplace_re:

; 888  :             _Xlength();

  000fd	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
$LN67@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00102	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN64@Emplace_re:
  00107	cc		 int	 3
??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ??_GCDungeonModelInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDungeonModelInstance@@UAEPAXI@Z PROC		; CDungeonModelInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 10   : 	virtual ~CDungeonModelInstance() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDungeonModelInstance@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGrannyModelInstance@@UAE@XZ ; CGrannyModelInstance::~CGrannyModelInstance
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0b		 je	 SHORT $LN7@scalar
  00017	6a 78		 push	 120			; 00000078H
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00022	8b c6		 mov	 eax, esi
  00024	5e		 pop	 esi
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GCDungeonModelInstance@@UAEPAXI@Z ENDP		; CDungeonModelInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ??1CDungeonModelInstance@@UAE@XZ
_TEXT	SEGMENT
??1CDungeonModelInstance@@UAE@XZ PROC			; CDungeonModelInstance::~CDungeonModelInstance, COMDAT
; _this$ = ecx

; 10   : 	virtual ~CDungeonModelInstance() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDungeonModelInstance@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CGrannyModelInstance@@UAE@XZ ; CGrannyModelInstance::~CGrannyModelInstance
??1CDungeonModelInstance@@UAE@XZ ENDP			; CDungeonModelInstance::~CDungeonModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDungeonBlock@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDungeonBlock@@UAEPAXI@Z PROC			; CDungeonBlock::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDungeonBlock@@UAE@XZ ; CDungeonBlock::~CDungeonBlock
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 cc 02 00 00	 push	 716			; 000002ccH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCDungeonBlock@@UAEPAXI@Z ENDP			; CDungeonBlock::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Change_array, COMDAT
; _this$ = ecx

; 2076 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2077 :         // orphan all iterators, discard old array, acquire new array
; 2078 :         auto& _Al         = _Getal();
; 2079 :         auto& _My_data    = _Mypair._Myval2;
; 2080 :         pointer& _Myfirst = _My_data._Myfirst;
; 2081 :         pointer& _Mylast  = _My_data._Mylast;
; 2082 :         pointer& _Myend   = _My_data._Myend;
; 2083 : 
; 2084 :         _My_data._Orphan_all();
; 2085 : 
; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN8@Change_arr

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN18@Change_arr

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN15@Change_arr

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN18@Change_arr:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2092 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 2096 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Size$1$ = -4						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1664 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 1665 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1666 :         auto& _Al         = _Getal();
; 1667 :         auto& _My_data    = _Mypair._Myval2;
; 1668 :         pointer& _Myfirst = _My_data._Myfirst;
; 1669 :         pointer& _Mylast  = _My_data._Mylast;
; 1670 : 
; 1671 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000f	2b 06		 sub	 eax, DWORD PTR [esi]
  00011	c1 f8 02	 sar	 eax, 2
  00014	89 45 fc	 mov	 DWORD PTR __Size$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00017	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0001d	0f 87 8a 00 00
	00		 ja	 $LN55@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00023	c1 e3 02	 shl	 ebx, 2

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  0002c	72 0d		 jb	 SHORT $LN15@Reallocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00034	83 c4 04	 add	 esp, 4
  00037	8b f8		 mov	 edi, eax
  00039	eb 13		 jmp	 SHORT $LN14@Reallocate
$LN15@Reallocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0003b	85 db		 test	 ebx, ebx
  0003d	74 0d		 je	 SHORT $LN16@Reallocate

; 77   :         return ::operator new(_Bytes);

  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00045	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00048	8b f8		 mov	 edi, eax
  0004a	eb 02		 jmp	 SHORT $LN14@Reallocate
$LN16@Reallocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0004c	33 ff		 xor	 edi, edi
$LN14@Reallocate:

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004e	57		 push	 edi
  0004f	ff 76 04	 push	 DWORD PTR [esi+4]
  00052	ff 36		 push	 DWORD PTR [esi]
  00054	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00059	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 2c		 je	 SHORT $LN39@Reallocate

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN49@Reallocate

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 26		 ja	 SHORT $LN46@Reallocate

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN49@Reallocate:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008b	83 c4 08	 add	 esp, 8
$LN39@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR __Size$1$[ebp]
  00091	89 3e		 mov	 DWORD PTR [esi], edi
  00093	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00099	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  0009c	5f		 pop	 edi
  0009d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 1687 :     }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
$LN46@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN55@Reallocate:

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000ad	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN53@Reallocate:
  000b2	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN4@vector

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN20@vector

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN17@vector

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN20@vector:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2114 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00049	5e		 pop	 esi

; 835  :     }

  0004a	c3		 ret	 0
$LN17@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00050	cc		 int	 3
??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?__Initialize@CDungeonBlock@@IAEXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?__Initialize@CDungeonBlock@@IAEXXZ PROC		; CDungeonBlock::__Initialize, COMDAT
; _this$ = ecx

; 246  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 306  :     z = fz;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 247  : 	m_v3Center = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00010	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp+8]
  00013	0f 14 c0	 unpcklps xmm0, xmm0
  00016	66 0f d6 81 8c
	02 00 00	 movq	 QWORD PTR [ecx+652], xmm0
  0001e	89 81 94 02 00
	00		 mov	 DWORD PTR [ecx+660], eax

; 248  : 	m_fRadius = 0.0f;

  00024	c7 81 98 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+664], 0

; 249  : 
; 250  : 	m_pThing = NULL;

  0002e	c7 81 9c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+668], 0

; 251  : }

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?__Initialize@CDungeonBlock@@IAEXXZ ENDP		; CDungeonBlock::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.h
;	COMDAT ?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnRenderPCBlocker, COMDAT
; _this$ = ecx

; 44   : 	void OnRenderPCBlocker() {}

  00000	c2 00 00	 ret	 0
?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnRenderPCBlocker
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?OnRenderShadow@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnRenderShadow@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnRenderShadow, COMDAT
; _this$ = ecx

; 109  : {

  00000	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 a4 02 00
	00		 mov	 ebx, DWORD PTR [ecx+676]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 109  : {

  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 a0 02 00
	00		 mov	 esi, DWORD PTR [ecx+672]
  0000e	3b f3		 cmp	 esi, ebx
  00010	0f 84 19 01 00
	00		 je	 $LN17@OnRenderSh
  00016	57		 push	 edi
$LL18@OnRenderSh:

; 266  :         _Func(*_UFirst);

  00017	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 30   : 		if (IsEmpty())

  00019	8b cf		 mov	 ecx, edi
  0001b	e8 00 00 00 00	 call	 ?IsEmpty@CGrannyModelInstance@@QAE_NXZ ; CGrannyModelInstance::IsEmpty
  00020	84 c0		 test	 al, al
  00022	0f 85 fb 00 00
	00		 jne	 $LN16@OnRenderSh

; 31   : 		{
; 32   : 			return;
; 33   : 		}
; 34   : 
; 35   : 		STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, 0xffffffff);

  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002e	6a ff		 push	 -1
  00030	6a 3c		 push	 60			; 0000003cH
  00032	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 36   : 		STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TFACTOR);

  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003d	6a 03		 push	 3
  0003f	6a 02		 push	 2
  00041	6a 00		 push	 0
  00043	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 37   : 		STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  00048	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004e	6a 02		 push	 2
  00050	6a 01		 push	 1
  00052	6a 00		 push	 0
  00054	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 38   : 		STATEMANAGER.SaveTextureStageState(0, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005f	6a 01		 push	 1
  00061	6a 04		 push	 4
  00063	6a 00		 push	 0
  00065	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 39   : 		STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00070	6a 01		 push	 1
  00072	6a 1b		 push	 27			; 0000001bH
  00074	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 40   : 		STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_ZERO);

  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007f	6a 01		 push	 1
  00081	6a 13		 push	 19			; 00000013H
  00083	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 41   : 		STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_SRCCOLOR);

  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0008e	6a 03		 push	 3
  00090	6a 14		 push	 20			; 00000014H
  00092	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 42   : 
; 43   : 		STATEMANAGER.SetFVF(ms_pnt2VS);

  00097	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_pnt2VS@CGraphicBase@@1KA ; CGraphicBase::ms_pnt2VS
  0009d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a3	e8 00 00 00 00	 call	 ?SetFVF@CStateManager@@QAEXK@Z ; CStateManager::SetFVF

; 44   : 		LPDIRECT3DVERTEXBUFFER9 lpd3dRigidPNTVtxBuf = m_pModel->GetPNTD3DVertexBuffer();

  000a8	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000ab	e8 00 00 00 00	 call	 ?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer9@@XZ ; CGrannyModel::GetPNTD3DVertexBuffer

; 45   : 
; 46   : 		if (lpd3dRigidPNTVtxBuf)

  000b0	85 c0		 test	 eax, eax
  000b2	74 1b		 je	 SHORT $LN24@OnRenderSh

; 47   : 		{
; 48   : 			STATEMANAGER.SetStreamSource(0, lpd3dRigidPNTVtxBuf, sizeof(TPNT2Vertex));

  000b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ba	6a 28		 push	 40			; 00000028H
  000bc	50		 push	 eax
  000bd	6a 00		 push	 0
  000bf	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer9@@I@Z ; CStateManager::SetStreamSource

; 49   : 			RenderMeshNodeListWithoutTexture(CGrannyMesh::TYPE_RIGID, CGrannyMaterial::TYPE_BLEND_PNT);

  000c4	6a 01		 push	 1
  000c6	6a 00		 push	 0
  000c8	8b cf		 mov	 ecx, edi
  000ca	e8 00 00 00 00	 call	 ?RenderMeshNodeListWithoutTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z ; CGrannyModelInstance::RenderMeshNodeListWithoutTexture
$LN24@OnRenderSh:

; 50   : 		}
; 51   : 
; 52   : 		STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLORARG1);

  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d5	6a 02		 push	 2
  000d7	6a 00		 push	 0
  000d9	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 53   : 		STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLOROP);

  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e4	6a 01		 push	 1
  000e6	6a 00		 push	 0
  000e8	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 54   : 		STATEMANAGER.RestoreTextureStageState(0, D3DTSS_ALPHAOP);

  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f3	6a 04		 push	 4
  000f5	6a 00		 push	 0
  000f7	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 55   : 		STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  000fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00102	6a 1b		 push	 27			; 0000001bH
  00104	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 56   : 		STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  00109	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0010f	6a 13		 push	 19			; 00000013H
  00111	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 57   : 		STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0011c	6a 14		 push	 20			; 00000014H
  0011e	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN16@OnRenderSh:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00123	83 c6 04	 add	 esi, 4
  00126	3b f3		 cmp	 esi, ebx
  00128	0f 85 e9 fe ff
	ff		 jne	 $LL18@OnRenderSh
  0012e	5f		 pop	 edi
$LN17@OnRenderSh:
  0012f	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 111  : }

  00130	5b		 pop	 ebx
  00131	c3		 ret	 0
?OnRenderShadow@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnRenderShadow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.h
;	COMDAT ?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnRenderToShadowMap, COMDAT
; _this$ = ecx

; 42   : 	void OnRenderToShadowMap() {}

  00000	c2 00 00	 ret	 0
?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnRenderToShadowMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.h
;	COMDAT ?OnBlendRender@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnBlendRender@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnBlendRender, COMDAT
; _this$ = ecx

; 41   : 	void OnBlendRender() {}

  00000	c2 00 00	 ret	 0
?OnBlendRender@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnBlendRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.h
;	COMDAT ?OnRender@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CDungeonBlock@@UAEXXZ PROC			; CDungeonBlock::OnRender, COMDAT
; _this$ = ecx

; 40   : 	void OnRender() {}

  00000	c2 00 00	 ret	 0
?OnRender@CDungeonBlock@@UAEXXZ ENDP			; CDungeonBlock::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z
_TEXT	SEGMENT
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_pfHeight$ = 16						; size = 4
?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z PROC	; CDungeonBlock::OnGetObjectHeight, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 155  : 	if (m_pHeightAttributeInstance && m_pHeightAttributeInstance->GetHeight(fX, fY, pfHeight))

  00003	8b 89 b8 01 00
	00		 mov	 ecx, DWORD PTR [ecx+440]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 29		 je	 SHORT $LN2@OnGetObjec
  0000d	ff 75 10	 push	 DWORD PTR _pfHeight$[ebp]
  00010	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$[ebp]
  00015	83 ec 08	 sub	 esp, 8
  00018	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	e8 00 00 00 00	 call	 ?GetHeight@CAttributeInstance@@QAEHMMPAM@Z ; CAttributeInstance::GetHeight
  0002d	85 c0		 test	 eax, eax
  0002f	0f 95 c0	 setne	 al

; 160  : }

  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
$LN2@OnGetObjec:

; 156  : 	{
; 157  : 		return true;
; 158  : 	}
; 159  : 	return false;

  00036	32 c0		 xor	 al, al

; 160  : }

  00038	5d		 pop	 ebp
  00039	c2 0c 00	 ret	 12			; 0000000cH
?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z ENDP	; CDungeonBlock::OnGetObjectHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z
_TEXT	SEGMENT
_pAttributeInstance$ = 8				; size = 4
?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z PROC ; CDungeonBlock::OnUpdateHeighInstance, COMDAT
; _this$ = ecx

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 151  : }

  00003	5d		 pop	 ebp

; 149  : 	assert(pAttributeInstance);
; 150  : 	SetHeightInstance(pAttributeInstance);

  00004	e9 00 00 00 00	 jmp	 ?SetHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z ; CGraphicObjectInstance::SetHeightInstance
?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z ENDP ; CDungeonBlock::OnUpdateHeighInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z
_TEXT	SEGMENT
_pscdVector$ = 8					; size = 4
?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z PROC ; CDungeonBlock::OnUpdateCollisionData, COMDAT
; _this$ = ecx

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _pscdVector$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 138  : {

  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 33		 mov	 esi, DWORD PTR [ebx]
  0000d	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 141  : 	for (it = pscdVector->begin(); it != pscdVector->end(); ++it)

  00010	74 18		 je	 SHORT $LN3@OnUpdateCo
$LL15@OnUpdateCo:

; 142  : 	{
; 143  : 		AddCollision(&(*it), &GetTransform());

  00012	8b cf		 mov	 ecx, edi
  00014	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	8b cf		 mov	 ecx, edi
  0001d	e8 00 00 00 00	 call	 ?AddCollision@CGraphicObjectInstance@@QAEXPBVCStaticCollisionData@@PBUD3DXMATRIX@@@Z ; CGraphicObjectInstance::AddCollision
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  00022	83 c6 50	 add	 esi, 80			; 00000050H

; 156  :         return _Ptr == _Right._Ptr;

  00025	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 141  : 	for (it = pscdVector->begin(); it != pscdVector->end(); ++it)

  00028	75 e8		 jne	 SHORT $LL15@OnUpdateCo
$LN3@OnUpdateCo:
  0002a	5f		 pop	 edi

; 144  : 	}
; 145  : }

  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ENDP ; CDungeonBlock::OnUpdateCollisionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z
_TEXT	SEGMENT
_v3Center$ = 8						; size = 4
_fRadius$ = 12						; size = 4
?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z PROC ; CDungeonBlock::GetBoundingSphere, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 131  : 	v3Center = m_v3Center;

  00003	f3 0f 7e 81 8c
	02 00 00	 movq	 xmm0, QWORD PTR [ecx+652]
  0000b	56		 push	 esi
  0000c	8b 75 08	 mov	 esi, DWORD PTR _v3Center$[ebp]
  0000f	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  00013	8b 81 94 02 00
	00		 mov	 eax, DWORD PTR [ecx+660]
  00019	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 132  : 	fRadius = m_fRadius;

  0001c	8b 45 0c	 mov	 eax, DWORD PTR _fRadius$[ebp]
  0001f	8b 91 98 02 00
	00		 mov	 edx, DWORD PTR [ecx+664]
  00025	89 10		 mov	 DWORD PTR [eax], edx

; 133  : 	D3DXVec3TransformCoord(&v3Center, &v3Center, &GetTransform());

  00027	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  0002c	50		 push	 eax
  0002d	56		 push	 esi
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 134  : 	return true;

  00034	b0 01		 mov	 al, 1
  00036	5e		 pop	 esi

; 135  : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z ENDP ; CDungeonBlock::GetBoundingSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?Render@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
?Render@CDungeonBlock@@QAEXXZ PROC			; CDungeonBlock::Render, COMDAT
; _this$ = ecx

; 93   : {

  00000	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00001	8b 99 a4 02 00
	00		 mov	 ebx, DWORD PTR [ecx+676]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 93   : {

  00007	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b b1 a0 02 00
	00		 mov	 esi, DWORD PTR [ecx+672]
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 4e		 je	 SHORT $LN17@Render
  00012	57		 push	 edi
$LL18@Render:

; 266  :         _Func(*_UFirst);

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 14   : 		if (IsEmpty())

  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?IsEmpty@CGrannyModelInstance@@QAE_NXZ ; CGrannyModelInstance::IsEmpty
  0001c	84 c0		 test	 al, al
  0001e	75 38		 jne	 SHORT $LN16@Render

; 15   : 		{
; 16   : 			return;
; 17   : 		}
; 18   : 
; 19   : 		STATEMANAGER.SetFVF(ms_pnt2VS);

  00020	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_pnt2VS@CGraphicBase@@1KA ; CGraphicBase::ms_pnt2VS
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002c	e8 00 00 00 00	 call	 ?SetFVF@CStateManager@@QAEXK@Z ; CStateManager::SetFVF

; 20   : 		LPDIRECT3DVERTEXBUFFER9 lpd3dRigidPNTVtxBuf = m_pModel->GetPNTD3DVertexBuffer();

  00031	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00034	e8 00 00 00 00	 call	 ?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer9@@XZ ; CGrannyModel::GetPNTD3DVertexBuffer

; 21   : 		if (lpd3dRigidPNTVtxBuf)

  00039	85 c0		 test	 eax, eax
  0003b	74 1b		 je	 SHORT $LN16@Render

; 22   : 		{
; 23   : 			STATEMANAGER.SetStreamSource(0, lpd3dRigidPNTVtxBuf, sizeof(TPNT2Vertex));

  0003d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00043	6a 28		 push	 40			; 00000028H
  00045	50		 push	 eax
  00046	6a 00		 push	 0
  00048	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer9@@I@Z ; CStateManager::SetStreamSource

; 24   : 			RenderMeshNodeListWithTwoTexture(CGrannyMesh::TYPE_RIGID, CGrannyMaterial::TYPE_BLEND_PNT);

  0004d	6a 01		 push	 1
  0004f	6a 00		 push	 0
  00051	8b cf		 mov	 ecx, edi
  00053	e8 00 00 00 00	 call	 ?RenderMeshNodeListWithTwoTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z ; CGrannyModelInstance::RenderMeshNodeListWithTwoTexture
$LN16@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00058	83 c6 04	 add	 esi, 4
  0005b	3b f3		 cmp	 esi, ebx
  0005d	75 b4		 jne	 SHORT $LL18@Render
  0005f	5f		 pop	 edi
$LN17@Render:
  00060	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 98   : }

  00061	5b		 pop	 ebx
  00062	c3		 ret	 0
?Render@CDungeonBlock@@QAEXXZ ENDP			; CDungeonBlock::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?Update@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
_Update$$sroa$160$1$ = -4				; size = 4
?Update@CDungeonBlock@@QAEXXZ PROC			; CDungeonBlock::Update, COMDAT
; _this$ = ecx

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f1		 mov	 esi, ecx

; 76   : 	Transform();

  00009	e8 00 00 00 00	 call	 ?Transform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Transform
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000e	8b 9e a4 02 00
	00		 mov	 ebx, DWORD PTR [esi+676]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 80   : 	Update.pmatWorld = &m_worldMatrix;

  00014	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00017	8b be a0 02 00
	00		 mov	 edi, DWORD PTR [esi+672]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 80   : 	Update.pmatWorld = &m_worldMatrix;

  0001d	89 45 fc	 mov	 DWORD PTR _Update$$sroa$160$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00020	3b fb		 cmp	 edi, ebx
  00022	74 2b		 je	 SHORT $LN17@Update
$LL18@Update:

; 266  :         _Func(*_UFirst);

  00024	8b 37		 mov	 esi, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 68   : 		pInstance->Update(CGrannyModelInstance::ANIFPS_MIN);

  00026	8b ce		 mov	 ecx, esi
  00028	6a 1e		 push	 30			; 0000001eH
  0002a	e8 00 00 00 00	 call	 ?Update@CGrannyModelInstance@@QAEXK@Z ; CGrannyModelInstance::Update

; 69   : 		pInstance->UpdateLocalTime(fElapsedTime);

  0002f	51		 push	 ecx
  00030	8b ce		 mov	 ecx, esi
  00032	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00039	e8 00 00 00 00	 call	 ?UpdateLocalTime@CGrannyModelInstance@@QAEXM@Z ; CGrannyModelInstance::UpdateLocalTime

; 70   : 		pInstance->Deform(pmatWorld);

  0003e	ff 75 fc	 push	 DWORD PTR _Update$$sroa$160$1$[ebp]
  00041	8b ce		 mov	 ecx, esi
  00043	e8 00 00 00 00	 call	 ?Deform@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyModelInstance::Deform
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00048	83 c7 04	 add	 edi, 4
  0004b	3b fb		 cmp	 edi, ebx
  0004d	75 d5		 jne	 SHORT $LL18@Update
$LN17@Update:
  0004f	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 82   : }

  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?Update@CDungeonBlock@@QAEXXZ ENDP			; CDungeonBlock::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_this$1$ = -32						; size = 4
_v3Max$1 = -28						; size = 12
_v3Min$2 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pv3Min$ = 8						; size = 4
_pv3Max$ = 12						; size = 4
?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z PROC ; CDungeonBlock::GetBoundBox, COMDAT
; _this$ = ecx

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _pv3Max$[ebp]
  00014	8b c1		 mov	 eax, ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7d 08	 mov	 edi, DWORD PTR _pv3Min$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001b	8b b0 a0 02 00
	00		 mov	 esi, DWORD PTR [eax+672]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 187  : {

  00021	89 45 e0	 mov	 DWORD PTR _this$1$[ebp], eax

; 188  : 	pv3Min->x = +10000000.0f;

  00024	c7 07 80 96 18
	4b		 mov	 DWORD PTR [edi], 1259902592 ; 4b189680H

; 189  : 	pv3Min->y = +10000000.0f;

  0002a	c7 47 04 80 96
	18 4b		 mov	 DWORD PTR [edi+4], 1259902592 ; 4b189680H

; 190  : 	pv3Min->z = +10000000.0f;

  00031	c7 47 08 80 96
	18 4b		 mov	 DWORD PTR [edi+8], 1259902592 ; 4b189680H

; 191  : 	pv3Max->x = -10000000.0f;

  00038	c7 03 80 96 18
	cb		 mov	 DWORD PTR [ebx], -887581056 ; cb189680H

; 192  : 	pv3Max->y = -10000000.0f;

  0003e	c7 43 04 80 96
	18 cb		 mov	 DWORD PTR [ebx+4], -887581056 ; cb189680H

; 193  : 	pv3Max->z = -10000000.0f;

  00045	c7 43 08 80 96
	18 cb		 mov	 DWORD PTR [ebx+8], -887581056 ; cb189680H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0004c	3b b0 a4 02 00
	00		 cmp	 esi, DWORD PTR [eax+676]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 196  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  00052	74 6b		 je	 SHORT $LN3@GetBoundBo
$LL31@GetBoundBo:

; 197  : 	{
; 198  : 		CDungeonModelInstance * pInstance = *itor;
; 199  : 
; 200  : 		D3DXVECTOR3 v3Min;
; 201  : 		D3DXVECTOR3 v3Max;
; 202  : 		pInstance->GetBoundBox(&v3Min, &v3Max);

  00054	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00056	8d 45 e4	 lea	 eax, DWORD PTR _v3Max$1[ebp]
  00059	50		 push	 eax
  0005a	8d 45 f0	 lea	 eax, DWORD PTR _v3Min$2[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox

; 204  : 		pv3Min->x = min(v3Min.x, pv3Min->x);

  00063	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _v3Min$2[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  00068	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 204  : 		pv3Min->x = min(v3Min.x, pv3Min->x);

  0006b	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  0006e	8b 45 e0	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 204  : 		pv3Min->x = min(v3Min.x, pv3Min->x);

  00071	f3 0f 5d 07	 minss	 xmm0, DWORD PTR [edi]
  00075	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0

; 205  : 		pv3Min->y = min(v3Min.x, pv3Min->y);

  00079	0f 28 c1	 movaps	 xmm0, xmm1
  0007c	f3 0f 5d 47 04	 minss	 xmm0, DWORD PTR [edi+4]

; 206  : 		pv3Min->z = min(v3Min.x, pv3Min->z);

  00081	f3 0f 5d 4f 08	 minss	 xmm1, DWORD PTR [edi+8]
  00086	f3 0f 11 47 04	 movss	 DWORD PTR [edi+4], xmm0
  0008b	f3 0f 11 4f 08	 movss	 DWORD PTR [edi+8], xmm1

; 207  : 		pv3Max->x = max(v3Max.x, pv3Max->x);

  00090	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _v3Max$1[ebp]
  00095	0f 28 c1	 movaps	 xmm0, xmm1
  00098	f3 0f 5f 03	 maxss	 xmm0, DWORD PTR [ebx]
  0009c	f3 0f 11 03	 movss	 DWORD PTR [ebx], xmm0

; 208  : 		pv3Max->y = max(v3Max.x, pv3Max->y);

  000a0	0f 28 c1	 movaps	 xmm0, xmm1
  000a3	f3 0f 5f 43 04	 maxss	 xmm0, DWORD PTR [ebx+4]

; 209  : 		pv3Max->z = max(v3Max.x, pv3Max->z);

  000a8	f3 0f 5f 4b 08	 maxss	 xmm1, DWORD PTR [ebx+8]
  000ad	f3 0f 11 43 04	 movss	 DWORD PTR [ebx+4], xmm0
  000b2	f3 0f 11 4b 08	 movss	 DWORD PTR [ebx+8], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  000b7	3b b0 a4 02 00
	00		 cmp	 esi, DWORD PTR [eax+676]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 196  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  000bd	75 95		 jne	 SHORT $LL31@GetBoundBo
$LN3@GetBoundBo:

; 210  : 	}
; 211  : }

  000bf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	33 cd		 xor	 ecx, ebp
  000c6	5b		 pop	 ebx
  000c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 08 00	 ret	 8
?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z ENDP ; CDungeonBlock::GetBoundBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?Intersect@CDungeonBlock@@QAE_NPAM00@Z
_TEXT	SEGMENT
_pfu$ = 8						; size = 4
_pfv$ = 12						; size = 4
_pft$ = 16						; size = 4
?Intersect@CDungeonBlock@@QAE_NPAM00@Z PROC		; CDungeonBlock::Intersect, COMDAT
; _this$ = ecx

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
  00007	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b b3 a0 02 00
	00		 mov	 esi, DWORD PTR [ebx+672]
  0000e	3b b3 a4 02 00
	00		 cmp	 esi, DWORD PTR [ebx+676]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 174  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  00014	74 29		 je	 SHORT $LN3@Intersect
$LL20@Intersect:

; 175  : 	{
; 176  : 		CDungeonModelInstance * pInstance = *itor;
; 177  : 		if (pInstance->Intersect(&CGraphicObjectInstance::GetTransform(), pfu, pfv, pft))

  00016	ff 75 10	 push	 DWORD PTR _pft$[ebp]
  00019	8b 3e		 mov	 edi, DWORD PTR [esi]
  0001b	8b cb		 mov	 ecx, ebx
  0001d	ff 75 0c	 push	 DWORD PTR _pfv$[ebp]
  00020	ff 75 08	 push	 DWORD PTR _pfu$[ebp]
  00023	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  00028	50		 push	 eax
  00029	8b cf		 mov	 ecx, edi
  0002b	e8 00 00 00 00	 call	 ?Intersect@CGrannyModelInstance@@QAE_NPBUD3DXMATRIX@@PAM11@Z ; CGrannyModelInstance::Intersect
  00030	84 c0		 test	 al, al
  00032	75 14		 jne	 SHORT $LN28@Intersect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  00034	83 c6 04	 add	 esi, 4

; 156  :         return _Ptr == _Right._Ptr;

  00037	3b b3 a4 02 00
	00		 cmp	 esi, DWORD PTR [ebx+676]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 174  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  0003d	75 d7		 jne	 SHORT $LL20@Intersect
$LN3@Intersect:
  0003f	5f		 pop	 edi

; 178  : 		{
; 179  : 			return true;
; 180  : 		}
; 181  : 	}
; 182  : 
; 183  : 	return false;
; 184  : }

  00040	5e		 pop	 esi
  00041	32 c0		 xor	 al, al
  00043	5b		 pop	 ebx
  00044	5d		 pop	 ebp
  00045	c2 0c 00	 ret	 12			; 0000000cH
$LN28@Intersect:
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	b0 01		 mov	 al, 1
  0004c	5b		 pop	 ebx
  0004d	5d		 pop	 ebp
  0004e	c2 0c 00	 ret	 12			; 0000000cH
?Intersect@CDungeonBlock@@QAE_NPAM00@Z ENDP		; CDungeonBlock::Intersect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?Load@CDungeonBlock@@QAE_NPBD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_pModelInstance$3 = -24					; size = 4
_this$1$ = -20						; size = 4
_i$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
tv352 = 8						; size = 4
_c_szFileName$ = 8					; size = 4
?Load@CDungeonBlock@@QAE_NPBD@Z PROC			; CDungeonBlock::Load, COMDAT
; _this$ = ecx

; 214  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@CDungeonBlock@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 ec	 mov	 DWORD PTR _this$1$[ebp], esi

; 215  : 	Destroy();

  0002d	e8 00 00 00 00	 call	 ?Destroy@CDungeonBlock@@QAEXXZ ; CDungeonBlock::Destroy

; 216  : 
; 217  : 	m_pThing = (CGraphicThing *)CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00032	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]
  00035	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0003b	57		 push	 edi
  0003c	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer

; 218  : 
; 219  : 	m_pThing->AddReference();

  00041	8b c8		 mov	 ecx, eax
  00043	89 86 9c 02 00
	00		 mov	 DWORD PTR [esi+668], eax
  00049	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 220  : 	if (m_pThing->GetModelCount() <= 0)

  0004e	8b 8e 9c 02 00
	00		 mov	 ecx, DWORD PTR [esi+668]
  00054	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  00059	8b 8e 9c 02 00
	00		 mov	 ecx, DWORD PTR [esi+668]
  0005f	85 c0		 test	 eax, eax
  00061	7f 2a		 jg	 SHORT $LN5@Load

; 221  : 	{
; 222  : 		TraceError("CDungeonBlock::Load(filename=%s) - model count is %d\n", c_szFileName, m_pThing->GetModelCount());

  00063	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  00068	50		 push	 eax
  00069	57		 push	 edi
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@
  0006f	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH

; 223  : 		return false;

  00077	32 c0		 xor	 al, al

; 243  : }

  00079	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00083	59		 pop	 ecx
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
$LN5@Load:

; 224  : 	}
; 225  : 
; 226  : 	m_ModelInstanceContainer.reserve(m_pThing->GetModelCount());

  0008d	8d 9e a0 02 00
	00		 lea	 ebx, DWORD PTR [esi+672]
  00093	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00098	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0009b	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  0009d	c1 f9 02	 sar	 ecx, 2

; 1743 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  000a0	3b c1		 cmp	 eax, ecx
  000a2	76 13		 jbe	 SHORT $LN21@Load

; 1744 :             if (_Newcapacity > max_size()) {

  000a4	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  000a9	0f 87 ec 00 00
	00		 ja	 $LN34@Load

; 1746 :             }
; 1747 : 
; 1748 :             _Reallocate_exactly(_Newcapacity);

  000af	50		 push	 eax
  000b0	8b cb		 mov	 ecx, ebx
  000b2	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly
$LN21@Load:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 228  : 	for (int i = 0; i < m_pThing->GetModelCount(); ++i)

  000b7	8b 8e 9c 02 00
	00		 mov	 ecx, DWORD PTR [esi+668]
  000bd	33 ff		 xor	 edi, edi
  000bf	89 7d f0	 mov	 DWORD PTR _i$1$[ebp], edi
  000c2	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  000c7	85 c0		 test	 eax, eax
  000c9	0f 8e b6 00 00
	00		 jle	 $LN3@Load
  000cf	8d 86 ac 02 00
	00		 lea	 eax, DWORD PTR [esi+684]
  000d5	89 45 08	 mov	 DWORD PTR tv352[ebp], eax
$LL4@Load:

; 229  : 	{
; 230  : 		CDungeonModelInstance * pModelInstance = new CDungeonModelInstance;

  000d8	6a 78		 push	 120			; 00000078H
  000da	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000df	8b f0		 mov	 esi, eax
  000e1	83 c4 04	 add	 esp, 4
  000e4	89 75 e4	 mov	 DWORD PTR $T2[ebp], esi
  000e7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ee	85 f6		 test	 esi, esi
  000f0	74 0f		 je	 SHORT $LN7@Load

; 9    : 	CDungeonModelInstance() {}

  000f2	8b ce		 mov	 ecx, esi
  000f4	e8 00 00 00 00	 call	 ??0CGrannyModelInstance@@QAE@XZ ; CGrannyModelInstance::CGrannyModelInstance
  000f9	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDungeonModelInstance@@6B@

; 229  : 	{
; 230  : 		CDungeonModelInstance * pModelInstance = new CDungeonModelInstance;

  000ff	eb 02		 jmp	 SHORT $LN8@Load
$LN7@Load:
  00101	33 f6		 xor	 esi, esi
$LN8@Load:

; 231  : 		pModelInstance->SetMainModelPointer(m_pThing->GetModelPointer(i), &m_kDeformableVertexBuffer);

  00103	8b 4d ec	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00106	57		 push	 edi
  00107	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010e	89 75 e8	 mov	 DWORD PTR _pModelInstance$3[ebp], esi
  00111	8b 89 9c 02 00
	00		 mov	 ecx, DWORD PTR [ecx+668]
  00117	e8 00 00 00 00	 call	 ?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z ; CGraphicThing::GetModelPointer
  0011c	ff 75 08	 push	 DWORD PTR tv352[ebp]
  0011f	8b ce		 mov	 ecx, esi
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 ?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z ; CGrannyModelInstance::SetMainModelPointer

; 232  : 		DWORD dwVertexCount = pModelInstance->GetVertexCount();

  00127	8b ce		 mov	 ecx, esi
  00129	e8 00 00 00 00	 call	 ?GetVertexCount@CGrannyModelInstance@@QAEKXZ ; CGrannyModelInstance::GetVertexCount

; 233  : 		m_kDeformableVertexBuffer.Destroy();

  0012e	8b 4d 08	 mov	 ecx, DWORD PTR tv352[ebp]
  00131	8b f8		 mov	 edi, eax
  00133	e8 00 00 00 00	 call	 ?Destroy@CGraphicVertexBuffer@@QAEXXZ ; CGraphicVertexBuffer::Destroy

; 234  : 		m_kDeformableVertexBuffer.Create(

  00138	8b 45 08	 mov	 eax, DWORD PTR tv352[ebp]
  0013b	8b c8		 mov	 ecx, eax
  0013d	6a 01		 push	 1
  0013f	6a 08		 push	 8
  00141	68 12 01 00 00	 push	 274			; 00000112H
  00146	8b 10		 mov	 edx, DWORD PTR [eax]
  00148	57		 push	 edi
  00149	ff 52 04	 call	 DWORD PTR [edx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0014c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0014f	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  00152	74 08		 je	 SHORT $LN13@Load

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00154	89 30		 mov	 DWORD PTR [eax], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00156	83 43 04 04	 add	 DWORD PTR [ebx+4], 4

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0015a	eb 0c		 jmp	 SHORT $LN2@Load
$LN13@Load:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0015c	8d 4d e8	 lea	 ecx, DWORD PTR _pModelInstance$3[ebp]
  0015f	51		 push	 ecx
  00160	50		 push	 eax
  00161	8b cb		 mov	 ecx, ebx
  00163	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>
$LN2@Load:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 228  : 	for (int i = 0; i < m_pThing->GetModelCount(); ++i)

  00168	8b 45 ec	 mov	 eax, DWORD PTR _this$1$[ebp]
  0016b	8b 7d f0	 mov	 edi, DWORD PTR _i$1$[ebp]
  0016e	47		 inc	 edi
  0016f	89 7d f0	 mov	 DWORD PTR _i$1$[ebp], edi
  00172	8b 88 9c 02 00
	00		 mov	 ecx, DWORD PTR [eax+668]
  00178	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  0017d	3b f8		 cmp	 edi, eax
  0017f	0f 8c 53 ff ff
	ff		 jl	 $LL4@Load
$LN3@Load:

; 235  : 			dwVertexCount,
; 236  : 			D3DFVF_XYZ | D3DFVF_NORMAL | D3DFVF_TEX1,
; 237  : 			D3DUSAGE_WRITEONLY,
; 238  : 			D3DPOOL_MANAGED);
; 239  : 		m_ModelInstanceContainer.push_back(pModelInstance);
; 240  : 	}
; 241  : 
; 242  : 	return true;

  00185	b0 01		 mov	 al, 1

; 243  : }

  00187	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0018a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00191	59		 pop	 ecx
  00192	5f		 pop	 edi
  00193	5e		 pop	 esi
  00194	5b		 pop	 ebx
  00195	8b e5		 mov	 esp, ebp
  00197	5d		 pop	 ebp
  00198	c2 04 00	 ret	 4
$LN34@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1745 :                 _Xlength();

  0019b	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
$LN32@Load:
  001a0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@CDungeonBlock@@QAE_NPBD@Z$0:
  00000	6a 78		 push	 120			; 00000078H
  00002	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?Load@CDungeonBlock@@QAE_NPBD@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@CDungeonBlock@@QAE_NPBD@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@CDungeonBlock@@QAE_NPBD@Z ENDP			; CDungeonBlock::Load
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?BuildBoundingSphere@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
_this$GSCopy$1$ = -32					; size = 4
$T2 = -28						; size = 12
_v3Min$ = -28						; size = 12
_v3Max$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?BuildBoundingSphere@CDungeonBlock@@QAEXXZ PROC		; CDungeonBlock::BuildBoundingSphere, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 20	 sub	 esp, 32			; 00000020H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 1c	 mov	 DWORD PTR __$ArrayPad$[esp+32], eax
  00014	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00015	8b b1 a0 02 00
	00		 mov	 esi, DWORD PTR [ecx+672]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 163  : {

  0001b	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001c	8b b9 a4 02 00
	00		 mov	 edi, DWORD PTR [ecx+676]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 163  : {

  00022	89 4c 24 08	 mov	 DWORD PTR _this$GSCopy$1$[esp+40], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00026	3b f7		 cmp	 esi, edi
  00028	74 22		 je	 SHORT $LN19@BuildBound
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL20@BuildBound:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 125  : 		pInstance->GetBoundBox(m_pv3Min, m_pv3Max);

  00030	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00032	8d 44 24 18	 lea	 eax, DWORD PTR _v3Max$[esp+40]
  00036	50		 push	 eax
  00037	8d 44 24 10	 lea	 eax, DWORD PTR _v3Min$[esp+44]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00041	83 c6 04	 add	 esi, 4
  00044	3b f7		 cmp	 esi, edi
  00046	75 e8		 jne	 SHORT $LL20@BuildBound
  00048	8b 4c 24 08	 mov	 ecx, DWORD PTR _this$GSCopy$1$[esp+40]
$LN19@BuildBound:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0004c	f3 0f 10 54 24
	14		 movss	 xmm2, DWORD PTR _v3Min$[esp+48]
  00052	f3 0f 10 74 24
	20		 movss	 xmm6, DWORD PTR _v3Max$[esp+48]
  00058	0f 28 c2	 movaps	 xmm0, xmm2
  0005b	f3 0f 10 4c 24
	10		 movss	 xmm1, DWORD PTR _v3Min$[esp+44]
  00061	f3 0f 58 c6	 addss	 xmm0, xmm6
  00065	f3 0f 10 7c 24
	1c		 movss	 xmm7, DWORD PTR _v3Max$[esp+44]

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0006b	f3 0f 5c f2	 subss	 xmm6, xmm2

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0006f	f3 0f 10 5c 24
	18		 movss	 xmm3, DWORD PTR _v3Max$[esp+40]
  00075	f3 0f 58 cf	 addss	 xmm1, xmm7

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00079	f3 0f 5c 7c 24
	10		 subss	 xmm7, DWORD PTR _v3Min$[esp+44]

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0007f	f3 0f 58 5c 24
	0c		 addss	 xmm3, DWORD PTR _v3Min$[esp+40]

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00085	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  0008d	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  00095	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3f000000

; 306  :     z = fz;

  0009d	f3 0f 11 44 24
	14		 movss	 DWORD PTR $T2[esp+48], xmm0

; 387  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000a3	f3 0f 10 44 24
	18		 movss	 xmm0, DWORD PTR _v3Max$[esp+40]
  000a9	f3 0f 5c 44 24
	0c		 subss	 xmm0, DWORD PTR _v3Min$[esp+40]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 167  : 	m_v3Center = (v3Min + v3Max) * 0.5f;

  000af	8b 44 24 14	 mov	 eax, DWORD PTR $T2[esp+48]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 306  :     z = fz;

  000b3	f3 0f 59 ff	 mulss	 xmm7, xmm7

; 1859 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000b7	f3 0f 59 f6	 mulss	 xmm6, xmm6
  000bb	f3 0f 59 c0	 mulss	 xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 167  : 	m_v3Center = (v3Min + v3Max) * 0.5f;

  000bf	0f 14 d9	 unpcklps xmm3, xmm1
  000c2	0f 57 c9	 xorps	 xmm1, xmm1
  000c5	66 0f d6 99 8c
	02 00 00	 movq	 QWORD PTR [ecx+652], xmm3
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1859 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000cd	f3 0f 58 f8	 addss	 xmm7, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 167  : 	m_v3Center = (v3Min + v3Max) * 0.5f;

  000d1	89 81 94 02 00
	00		 mov	 DWORD PTR [ecx+660], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1859 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000d7	f3 0f 58 fe	 addss	 xmm7, xmm6
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  000db	0f 5a c7	 cvtps2pd xmm0, xmm7
  000de	66 0f 2e c8	 ucomisd xmm1, xmm0
  000e2	77 06		 ja	 SHORT $LN44@BuildBound
  000e4	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  000e8	eb 05		 jmp	 SHORT $LN45@BuildBound
$LN44@BuildBound:
  000ea	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN45@BuildBound:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 168  : 	m_fRadius = D3DXVec3Length(&(v3Max - v3Min)) * 0.5f + 150.0f; // extra length for attached objects

  000ef	8b 44 24 08	 mov	 eax, DWORD PTR _this$GSCopy$1$[esp+40]

; 169  : }

  000f3	8b 4c 24 24	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  000f7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 169  : }

  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	33 cc		 xor	 ecx, esp
  000ff	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00107	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@43160000
  0010f	f3 0f 11 80 98
	02 00 00	 movss	 DWORD PTR [eax+664], xmm0
  00117	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011c	8b e5		 mov	 esp, ebp
  0011e	5d		 pop	 ebp
  0011f	c3		 ret	 0
?BuildBoundingSphere@CDungeonBlock@@QAEXXZ ENDP		; CDungeonBlock::BuildBoundingSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ?Destroy@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CDungeonBlock@@QAEXXZ PROC			; CDungeonBlock::Destroy, COMDAT
; _this$ = ecx

; 254  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 255  : 	if (m_pThing)

  00003	8b 8f 9c 02 00
	00		 mov	 ecx, DWORD PTR [edi+668]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 0f		 je	 SHORT $LN2@Destroy

; 256  : 	{
; 257  : 		m_pThing->Release();

  0000d	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 258  : 		m_pThing = NULL;

  00012	c7 87 9c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+668], 0
$LN2@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001c	8b 87 a4 02 00
	00		 mov	 eax, DWORD PTR [edi+676]
  00022	56		 push	 esi
  00023	8b b7 a0 02 00
	00		 mov	 esi, DWORD PTR [edi+672]
  00029	3b f0		 cmp	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  0002b	74 22		 je	 SHORT $LN6@Destroy
  0002d	0f 1f 00	 npad	 3
$LL24@Destroy:

; 44   : 	{
; 45   : 		delete* i;

  00030	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00032	85 c9		 test	 ecx, ecx
  00034	74 06		 je	 SHORT $LN9@Destroy
  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	6a 01		 push	 1
  0003a	ff 10		 call	 DWORD PTR [eax]
$LN9@Destroy:

; 46   : 		*i = NULL;

  0003c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  00042	83 c6 04	 add	 esi, 4

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00045	8b 87 a4 02 00
	00		 mov	 eax, DWORD PTR [edi+676]

; 156  :         return _Ptr == _Right._Ptr;

  0004b	3b f0		 cmp	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterBase\Stl.h

; 43   : 	for (auto i = container.begin(); i != container.end(); ++i)

  0004d	75 e1		 jne	 SHORT $LL24@Destroy
$LN6@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  0004f	8b 8f a0 02 00
	00		 mov	 ecx, DWORD PTR [edi+672]
  00055	5e		 pop	 esi
  00056	3b c8		 cmp	 ecx, eax
  00058	74 06		 je	 SHORT $LN25@Destroy

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005a	89 8f a4 02 00
	00		 mov	 DWORD PTR [edi+676], ecx
$LN25@Destroy:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 263  : 	__Initialize();

  00060	8b cf		 mov	 ecx, edi
  00062	5f		 pop	 edi
  00063	e9 00 00 00 00	 jmp	 ?__Initialize@CDungeonBlock@@IAEXXZ ; CDungeonBlock::__Initialize
?Destroy@CDungeonBlock@@QAEXXZ ENDP			; CDungeonBlock::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ??1CDungeonBlock@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CDungeonBlock@@UAE@XZ PROC				; CDungeonBlock::~CDungeonBlock, COMDAT
; _this$ = ecx

; 271  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDungeonBlock@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDungeonBlock@@6B@

; 272  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CDungeonBlock@@QAEXXZ ; CDungeonBlock::Destroy

; 273  : }

  00030	8d 8e ac 02 00
	00		 lea	 ecx, DWORD PTR [esi+684]
  00036	e8 00 00 00 00	 call	 ??1CGraphicVertexBuffer@@UAE@XZ ; CGraphicVertexBuffer::~CGraphicVertexBuffer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0003b	8b 86 a0 02 00
	00		 mov	 eax, DWORD PTR [esi+672]
  00041	85 c0		 test	 eax, eax
  00043	74 4d		 je	 SHORT $LN6@CDungeonBl

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00045	8b 8e a8 02 00
	00		 mov	 ecx, DWORD PTR [esi+680]
  0004b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00050	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00056	72 12		 jb	 SHORT $LN22@CDungeonBl

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00058	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0005b	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0005e	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00060	83 c0 fc	 add	 eax, -4			; fffffffcH
  00063	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00066	77 41		 ja	 SHORT $LN19@CDungeonBl

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00068	8b c2		 mov	 eax, edx
$LN22@CDungeonBl:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0006a	51		 push	 ecx
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00071	c7 86 a0 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+672], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0007b	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0007e	c7 86 a4 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+676], 0

; 2114 :             _Myend   = nullptr;

  00088	c7 86 a8 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+680], 0
$LN6@CDungeonBl:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 273  : }

  00092	8b ce		 mov	 ecx, esi
  00094	e8 00 00 00 00	 call	 ??1CGraphicObjectInstance@@UAE@XZ ; CGraphicObjectInstance::~CGraphicObjectInstance
  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5e		 pop	 esi
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c3		 ret	 0
$LN19@CDungeonBl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a9	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN29@CDungeonBl:
  000ae	cc		 int	 3
  000af	cc		 int	 3
  000b0	cc		 int	 3
  000b1	cc		 int	 3
  000b2	cc		 int	 3
  000b3	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDungeonBlock@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDungeonBlock@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDungeonBlock@@UAE@XZ ENDP				; CDungeonBlock::~CDungeonBlock
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp
;	COMDAT ??0CDungeonBlock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDungeonBlock@@QAE@XZ PROC				; CDungeonBlock::CDungeonBlock, COMDAT
; _this$ = ecx

; 267  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDungeonBlock@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CGraphicObjectInstance@@QAE@XZ ; CGraphicObjectInstance::CGraphicObjectInstance
  0002e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDungeonBlock@@6B@
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003b	c7 86 a0 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+672], 0
  00045	c7 86 a4 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+676], 0
  0004f	c7 86 a8 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+680], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.cpp

; 267  : {

  00059	8d 8e ac 02 00
	00		 lea	 ecx, DWORD PTR [esi+684]
  0005f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00063	e8 00 00 00 00	 call	 ??0CGraphicVertexBuffer@@QAE@XZ ; CGraphicVertexBuffer::CGraphicVertexBuffer

; 268  : 	__Initialize();

  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?__Initialize@CDungeonBlock@@IAEXXZ ; CDungeonBlock::__Initialize

; 269  : }

  0006f	8b c6		 mov	 eax, esi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5e		 pop	 esi
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDungeonBlock@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGraphicObjectInstance@@UAE@XZ ; CGraphicObjectInstance::~CGraphicObjectInstance
__unwindfunclet$??0CDungeonBlock@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 a0 02 00
	00		 add	 ecx, 672		; 000002a0H
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >
  00016	cc		 int	 3
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
__ehhandler$??0CDungeonBlock@@QAE@XZ:
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDungeonBlock@@QAE@XZ
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDungeonBlock@@QAE@XZ ENDP				; CDungeonBlock::CDungeonBlock
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\GameLib\DungeonBlock.h
;	COMDAT ?GetType@CDungeonBlock@@UBEHXZ
_TEXT	SEGMENT
?GetType@CDungeonBlock@@UBEHXZ PROC			; CDungeonBlock::GetType, COMDAT
; _this$ = ecx

; 18   : 	int GetType() const { return ID; }

  00000	b8 13 1f f2 ad	 mov	 eax, -1376641261	; adf21f13H
  00005	c3		 ret	 0
?GetType@CDungeonBlock@@UBEHXZ ENDP			; CDungeonBlock::GetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpObjectInstance.h
;	COMDAT ?OnDeform@CGraphicObjectInstance@@UAEXXZ
_TEXT	SEGMENT
?OnDeform@CGraphicObjectInstance@@UAEXXZ PROC		; CGraphicObjectInstance::OnDeform, COMDAT
; _this$ = ecx

; 100  : 	virtual void			OnDeform() {}

  00000	c2 00 00	 ret	 0
?OnDeform@CGraphicObjectInstance@@UAEXXZ ENDP		; CGraphicObjectInstance::OnDeform
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpObjectInstance.h
;	COMDAT ?OnUpdate@CGraphicObjectInstance@@UAEXXZ
_TEXT	SEGMENT
?OnUpdate@CGraphicObjectInstance@@UAEXXZ PROC		; CGraphicObjectInstance::OnUpdate, COMDAT
; _this$ = ecx

; 99   : 	virtual void			OnUpdate() {}

  00000	c2 00 00	 ret	 0
?OnUpdate@CGraphicObjectInstance@@UAEXXZ ENDP		; CGraphicObjectInstance::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EterLib\GrpObjectInstance.h
;	COMDAT ?OnClear@CGraphicObjectInstance@@UAEXXZ
_TEXT	SEGMENT
?OnClear@CGraphicObjectInstance@@UAEXXZ PROC		; CGraphicObjectInstance::OnClear, COMDAT
; _this$ = ecx

; 98   : 	virtual void			OnClear() {}

  00000	c2 00 00	 ret	 0
?OnClear@CGraphicObjectInstance@@UAEXXZ ENDP		; CGraphicObjectInstance::OnClear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 324  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
