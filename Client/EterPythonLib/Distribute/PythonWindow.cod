; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\Distribute\PythonWindow.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_XMSinCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMArcCoefficients0
PUBLIC	?g_XMArcCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMArcCoefficients1
PUBLIC	?g_XMATanCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMATanEstCoefficients1
PUBLIC	?g_XMTanEstCoefficients@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMArcEstCoefficients@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMArcEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMPiConstants0
PUBLIC	?g_XMIdentityR0@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMIdentityR0
PUBLIC	?g_XMIdentityR1@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMIdentityR2
PUBLIC	?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNegIdentityR3
PUBLIC	?g_XMNegativeZero@DirectX@UI@@3UXMVECTORU32@12@B ; UI::DirectX::g_XMNegativeZero
PUBLIC	?g_XMNegate3@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMNegate3
PUBLIC	?g_XMMaskXY@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMMaskXY
PUBLIC	?g_XMMask3@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMMask3
PUBLIC	?g_XMMaskX@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMMaskX
PUBLIC	?g_XMMaskY@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMMaskW
PUBLIC	?g_XMOne@DirectX@UI@@3UXMVECTORF32@12@B		; UI::DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMZero
PUBLIC	?g_XMTwo@DirectX@UI@@3UXMVECTORF32@12@B		; UI::DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMFour
PUBLIC	?g_XMSix@DirectX@UI@@3UXMVECTORF32@12@B		; UI::DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMNegativeOne
PUBLIC	?g_XMOneHalf@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNegativeOneHalf
PUBLIC	?g_XMNegativeTwoPi@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@UI@@3UXMVECTORF32@12@B		; UI::DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMReciprocalTwoPi
PUBLIC	?g_XMEpsilon@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@UI@@3UXMVECTORU32@12@B ; UI::DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@UI@@3UXMVECTORU32@12@B ; UI::DirectX::g_XMFlipA8R8G8B8
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@UI@@3UXMVECTORU32@12@B ; UI::DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@UI@@3UXMVECTORU32@12@B ; UI::DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMFixAA2B10G10R10
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNormalizeX16Y16
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@UI@@3UXMVECTORU32@12@B ; UI::DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@UI@@3UXMVECTORI32@12@B ; UI::DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@UI@@3UXMVECTORF32@12@B ; UI::DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?g_XMNoFraction@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMNoFraction
PUBLIC	?g_XMMaskByte@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMMaskByte
PUBLIC	?g_XMNegateX@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMNegateX
PUBLIC	?g_XMNegateY@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMNegateY
PUBLIC	?g_XMNegateZ@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMNegateZ
PUBLIC	?g_XMNegateW@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMNegateW
PUBLIC	?g_XMSelect0101@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMSelect0101
PUBLIC	?g_XMSelect1010@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@UI@@3UXMVECTORI32@12@B ; UI::DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?g_XMSelect1000@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMSelect1000
PUBLIC	?g_XMSelect1100@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMSelect1100
PUBLIC	?g_XMSelect1110@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMSelect1011
PUBLIC	?g_XMFixupY16@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMFixupY16W16
PUBLIC	?g_XMFlipY@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMFlipY
PUBLIC	?g_XMFlipZ@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMFlipZ
PUBLIC	?g_XMFlipW@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMFlipW
PUBLIC	?g_XMFlipYZ@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMFlipYZ
PUBLIC	?g_XMFlipZW@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMFlipZW
PUBLIC	?g_XMFlipYW@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMFlipYW
PUBLIC	?g_XMMaskDec4@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMMaskDec4
PUBLIC	?g_XMXorDec4@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMXorDec4
PUBLIC	?g_XMAddUDec4@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMAddUDec4
PUBLIC	?g_XMAddDec4@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMAddDec4
PUBLIC	?g_XMMulDec4@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMMaskByte4
PUBLIC	?g_XMXorByte4@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMXorByte4
PUBLIC	?g_XMAddByte4@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMAddByte4
PUBLIC	?g_XMFixUnsigned@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMFixUnsigned
PUBLIC	?g_XMMaxInt@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMMaxInt
PUBLIC	?g_XMMaxUInt@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMUnsignedFix
PUBLIC	?g_XMsrgbScale@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMsrgbScale
PUBLIC	?g_XMsrgbA@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMsrgbA1
PUBLIC	?g_XMExponentBias@DirectX@UI@@3UXMVECTORI32@12@B ; UI::DirectX::g_XMExponentBias
PUBLIC	?g_XMSubnormalExponent@DirectX@UI@@3UXMVECTORI32@12@B ; UI::DirectX::g_XMSubnormalExponent
PUBLIC	?g_XMNumTrailing@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMNumTrailing
PUBLIC	?g_XMMinNormal@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMMinNormal
PUBLIC	?g_XMNegInfinity@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMNegInfinity
PUBLIC	?g_XMNegQNaN@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMNegQNaN
PUBLIC	?g_XMBin128@DirectX@UI@@3UXMVECTORI32@12@B	; UI::DirectX::g_XMBin128
PUBLIC	?g_XMBinNeg150@DirectX@UI@@3UXMVECTORU32@12@B	; UI::DirectX::g_XMBinNeg150
PUBLIC	?g_XM253@DirectX@UI@@3UXMVECTORI32@12@B		; UI::DirectX::g_XM253
PUBLIC	?g_XMExpEst1@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMExpEst1
PUBLIC	?g_XMExpEst2@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMExpEst2
PUBLIC	?g_XMExpEst3@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMExpEst3
PUBLIC	?g_XMExpEst4@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMExpEst4
PUBLIC	?g_XMExpEst5@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMExpEst5
PUBLIC	?g_XMExpEst6@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMExpEst6
PUBLIC	?g_XMExpEst7@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMExpEst7
PUBLIC	?g_XMLogEst0@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMLogEst0
PUBLIC	?g_XMLogEst1@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMLogEst1
PUBLIC	?g_XMLogEst2@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMLogEst2
PUBLIC	?g_XMLogEst3@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMLogEst3
PUBLIC	?g_XMLogEst4@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMLogEst4
PUBLIC	?g_XMLogEst5@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMLogEst6
PUBLIC	?g_XMLogEst7@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMLogEst7
PUBLIC	?g_XMLgE@DirectX@UI@@3UXMVECTORF32@12@B		; UI::DirectX::g_XMLgE
PUBLIC	?g_XMInvLgE@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMInvLgE
PUBLIC	?g_XMLg10@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMLg10
PUBLIC	?g_XMInvLg10@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_XMInvLg10
PUBLIC	?g_UByteMax@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_UByteMax
PUBLIC	?g_ByteMin@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_ByteMin
PUBLIC	?g_ByteMax@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_ByteMax
PUBLIC	?g_ShortMin@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_ShortMin
PUBLIC	?g_ShortMax@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_ShortMax
PUBLIC	?g_UShortMax@DirectX@UI@@3UXMVECTORF32@12@B	; UI::DirectX::g_UShortMax
PUBLIC	_IID_IAMFilterGraphCallback
PUBLIC	?g_bOutlineBoxEnable@@3HA			; g_bOutlineBoxEnable
PUBLIC	_CLSID_VideoEffects1Category
PUBLIC	_CLSID_VideoEffects2Category
PUBLIC	_CLSID_AudioEffects1Category
PUBLIC	_CLSID_AudioEffects2Category
_BSS	SEGMENT
?g_bOutlineBoxEnable@@3HA DD 01H DUP (?)		; g_bOutlineBoxEnable
_BSS	ENDS
;	COMDAT _CLSID_AudioEffects2Category
CONST	SEGMENT
_CLSID_AudioEffects2Category DD 0cc7bfb45H
	DW	0f175H
	DW	011d1H
	DB	0a3H
	DB	092H
	DB	00H
	DB	0e0H
	DB	029H
	DB	01fH
	DB	039H
	DB	059H
CONST	ENDS
;	COMDAT _CLSID_AudioEffects1Category
CONST	SEGMENT
_CLSID_AudioEffects1Category DD 0cc7bfb44H
	DW	0f175H
	DW	011d1H
	DB	0a3H
	DB	092H
	DB	00H
	DB	0e0H
	DB	029H
	DB	01fH
	DB	039H
	DB	059H
CONST	ENDS
;	COMDAT _CLSID_VideoEffects2Category
CONST	SEGMENT
_CLSID_VideoEffects2Category DD 0cc7bfb43H
	DW	0f175H
	DW	011d1H
	DB	0a3H
	DB	092H
	DB	00H
	DB	0e0H
	DB	029H
	DB	01fH
	DB	039H
	DB	059H
CONST	ENDS
;	COMDAT _CLSID_VideoEffects1Category
CONST	SEGMENT
_CLSID_VideoEffects1Category DD 0cc7bfb42H
	DW	0f175H
	DW	011d1H
	DB	0a3H
	DB	092H
	DB	00H
	DB	0e0H
	DB	029H
	DB	01fH
	DB	039H
	DB	059H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
;	COMDAT ?g_UShortMax@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_UShortMax@DirectX@UI@@3UXMVECTORF32@12@B DD 0477fff00r ; 65535 ; UI::DirectX::g_UShortMax
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
CONST	ENDS
;	COMDAT ?g_ShortMax@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_ShortMax@DirectX@UI@@3UXMVECTORF32@12@B DD 046fffe00r ; 32767 ; UI::DirectX::g_ShortMax
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
CONST	ENDS
;	COMDAT ?g_ShortMin@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_ShortMin@DirectX@UI@@3UXMVECTORF32@12@B DD 0c6fffe00r ; -32767 ; UI::DirectX::g_ShortMin
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
CONST	ENDS
;	COMDAT ?g_ByteMax@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_ByteMax@DirectX@UI@@3UXMVECTORF32@12@B DD 042fe0000r ; 127 ; UI::DirectX::g_ByteMax
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
CONST	ENDS
;	COMDAT ?g_ByteMin@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_ByteMin@DirectX@UI@@3UXMVECTORF32@12@B DD 0c2fe0000r ; -127 ; UI::DirectX::g_ByteMin
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
CONST	ENDS
;	COMDAT ?g_UByteMax@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_UByteMax@DirectX@UI@@3UXMVECTORF32@12@B DD 0437f0000r ; 255 ; UI::DirectX::g_UByteMax
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
CONST	ENDS
;	COMDAT ?g_XMInvLg10@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMInvLg10@DirectX@UI@@3UXMVECTORF32@12@B DD 03e9a209br ; 0.30103 ; UI::DirectX::g_XMInvLg10
	DD	03e9a209br			; 0.30103
	DD	03e9a209br			; 0.30103
	DD	03e9a209br			; 0.30103
CONST	ENDS
;	COMDAT ?g_XMLg10@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLg10@DirectX@UI@@3UXMVECTORF32@12@B DD 040549a78r ; 3.32193 ; UI::DirectX::g_XMLg10
	DD	040549a78r			; 3.32193
	DD	040549a78r			; 3.32193
	DD	040549a78r			; 3.32193
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@UI@@3UXMVECTORF32@12@B DD 03f317218r ; 0.693147 ; UI::DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLgE@DirectX@UI@@3UXMVECTORF32@12@B DD 03fb8aa3br ; 1.4427 ; UI::DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@UI@@3UXMVECTORF32@12@B DD 0bc2d4f59r ; -0.010578 ; UI::DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@UI@@3UXMVECTORF32@12@B DD 03d6a1405r ; 0.057148 ; UI::DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@UI@@3UXMVECTORF32@12@B DD 0be153261r ; -0.1457 ; UI::DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@UI@@3UXMVECTORF32@12@B DD 03e7e8e61r ; 0.24859 ; UI::DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@UI@@3UXMVECTORF32@12@B DD 0beb359der ; -0.350295 ; UI::DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@UI@@3UXMVECTORF32@12@B DD 03ef571d2r ; 0.479384 ; UI::DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@UI@@3UXMVECTORF32@12@B DD 0bf38a351r ; -0.721242 ; UI::DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@UI@@3UXMVECTORF32@12@B DD 03fb8aa2ar ; 1.44269 ; UI::DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@UI@@3UXMVECTORF32@12@B DD 0b7364261r ; -1.08635e-05 ; UI::DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@UI@@3UXMVECTORF32@12@B DD 0391aa7d7r ; 0.000147491 ; UI::DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@UI@@3UXMVECTORF32@12@B DD 0baae1854r ; -0.00132824 ; UI::DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@UI@@3UXMVECTORF32@12@B DD 03c1d8c54r ; 0.00961598 ; UI::DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@UI@@3UXMVECTORF32@12@B DD 0bd6357car ; -0.0555036 ; UI::DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@UI@@3UXMVECTORF32@12@B DD 03e75fdedr ; 0.240226 ; UI::DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@UI@@3UXMVECTORF32@12@B DD 0bf317218r ; -0.693147 ; UI::DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XM253@DirectX@UI@@3UXMVECTORI32@12@B DD 0fdH		; UI::DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@UI@@3UXMVECTORU32@12@B DD 0c3160000H ; UI::DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMBin128@DirectX@UI@@3UXMVECTORI32@12@B DD 043000000H ; UI::DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffc00000H ; UI::DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@UI@@3UXMVECTORU32@12@B DD 0ff800000H ; UI::DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@UI@@3UXMVECTORI32@12@B DD 0800000H ; UI::DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@UI@@3UXMVECTORI32@12@B DD 017H	; UI::DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@UI@@3UXMVECTORI32@12@B DD 0ffffff82H ; UI::DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@UI@@3UXMVECTORI32@12@B DD 07fH ; UI::DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@UI@@3UXMVECTORF32@12@B DD 03f870a3dr ; 1.055 ; UI::DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@UI@@3UXMVECTORF32@12@B DD 03d6147aer ; 0.055 ; UI::DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@UI@@3UXMVECTORF32@12@B DD 0414eb852r ; 12.92 ; UI::DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@UI@@3UXMVECTORF32@12@B DD 04f000000r ; 2.14748e+09 ; UI::DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@UI@@3UXMVECTORF32@12@B DD 04f7fffffr ; 4.29497e+09 ; UI::DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@UI@@3UXMVECTORF32@12@B DD 04effffffr ; 2.14748e+09 ; UI::DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@UI@@3UXMVECTORF32@12@B DD 04f000000r ; 2.14748e+09 ; UI::DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@UI@@3UXMVECTORF32@12@B DD 0c3000000r ; -128 ; UI::DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+06
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@UI@@3UXMVECTORI32@12@B DD 080H	; UI::DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffH	; UI::DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976562
	DD	035800000r			; 9.53674e-07
	DD	030800000r			; 9.31323e-10
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@UI@@3UXMVECTORF32@12@B DD 0c4000000r ; -512 ; UI::DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@UI@@3UXMVECTORF32@12@B DD 000000000r ; 0 ; UI::DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@UI@@3UXMVECTORI32@12@B DD 0200H	; UI::DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@UI@@3UXMVECTORI32@12@B DD 03ffH	; UI::DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMFlipW@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMFlipY@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-05
	DD	037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-05
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffffffH ; UI::DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffffffH ; UI::DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffffffH ; UI::DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffffffH ; UI::DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@UI@@3UXMVECTORI32@12@B DD 03efffffdH ; UI::DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffffffH ; UI::DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegateW@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegateY@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegateX@DirectX@UI@@3UXMVECTORF32@12@B DD 0bf800000r ; -1 ; UI::DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@UI@@3UXMVECTORI32@12@B DD 0ffH	; UI::DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@UI@@3UXMVECTORF32@12@B DD 04b000000r ; 8.38861e+06 ; UI::DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@UI@@3UXMVECTORF32@12@B DD 038000100r ; 3.05185e-05 ; UI::DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-05
	DD	030000100r			; 4.65675e-10
	DD	030000100r			; 4.65675e-10
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@UI@@3UXMVECTORF32@12@B DD 0c7000000r ; -32768 ; UI::DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@UI@@3UXMVECTORI32@12@B DD 08000H ; UI::DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffH ; UI::DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@UI@@3UXMVECTORF32@12@B DD 038000100r ; 3.05185e-05 ; UI::DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-10
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@UI@@3UXMVECTORF32@12@B DD 0c7000000r ; -32768 ; UI::DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@UI@@3UXMVECTORI32@12@B DD 08000H ; UI::DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffH ; UI::DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@UI@@3UXMVECTORF32@12@B DD 03b004020r ; 0.00195695 ; UI::DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-06
	DD	031004020r			; 1.86629e-09
	DD	02faaaaabr			; 3.10441e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@UI@@3UXMVECTORF32@12@B DD 0c4000000r ; -512 ; UI::DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@UI@@3UXMVECTORU32@12@B DD 0200H ; UI::DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@UI@@3UXMVECTORU32@12@B DD 03ffH ; UI::DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@UI@@3UXMVECTORF32@12@B DD 033808081r ; 5.98384e-08 ; UI::DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-05
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@UI@@3UXMVECTORF32@12@B DD 000000000r ; 0 ; UI::DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@UI@@3UXMVECTORU32@12@B DD 0ff0000H ; UI::DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffffffH ; UI::DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMFltMax@DirectX@UI@@3UXMVECTORI32@12@B DD 07f7fffffH ; UI::DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMFltMin@DirectX@UI@@3UXMVECTORI32@12@B DD 0800000H	; UI::DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@UI@@3UXMVECTORI32@12@B DD 07fffffffH ; UI::DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@UI@@3UXMVECTORI32@12@B DD 07fffffH ; UI::DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMQNaN@DirectX@UI@@3UXMVECTORI32@12@B DD 07fc00000H	; UI::DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@UI@@3UXMVECTORI32@12@B
CONST	SEGMENT
?g_XMInfinity@DirectX@UI@@3UXMVECTORI32@12@B DD 07f800000H ; UI::DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@UI@@3UXMVECTORF32@12@B DD 034000000r ; 1.19209e-07 ; UI::DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMReciprocalTwoPi@DirectX@UI@@3UXMVECTORF32@12@B DD 03e22f983r ; 0.159155 ; UI::DirectX::g_XMReciprocalTwoPi
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMTwoPi@DirectX@UI@@3UXMVECTORF32@12@B DD 040c90fdbr ; 6.28319 ; UI::DirectX::g_XMTwoPi
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMReciprocalPi@DirectX@UI@@3UXMVECTORF32@12@B DD 03ea2f983r ; 0.31831 ; UI::DirectX::g_XMReciprocalPi
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMPi@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMPi@DirectX@UI@@3UXMVECTORF32@12@B DD 040490fdbr ; 3.14159 ; UI::DirectX::g_XMPi
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMHalfPi@DirectX@UI@@3UXMVECTORF32@12@B DD 03fc90fdbr ; 1.5708 ; UI::DirectX::g_XMHalfPi
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegativePi@DirectX@UI@@3UXMVECTORF32@12@B DD 0c0490fdbr ; -3.14159 ; UI::DirectX::g_XMNegativePi
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegativeTwoPi@DirectX@UI@@3UXMVECTORF32@12@B DD 0c0c90fdbr ; -6.28319 ; UI::DirectX::g_XMNegativeTwoPi
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@UI@@3UXMVECTORF32@12@B DD 0bf000000r ; -0.5 ; UI::DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@UI@@3UXMVECTORF32@12@B DD 03f000000r ; 0.5 ; UI::DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@UI@@3UXMVECTORF32@12@B DD 0bf800000r ; -1 ; UI::DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMSix@DirectX@UI@@3UXMVECTORF32@12@B DD 040c00000r ; 6 ; UI::DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMFour@DirectX@UI@@3UXMVECTORF32@12@B DD 040800000r ; 4 ; UI::DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMTwo@DirectX@UI@@3UXMVECTORF32@12@B DD 040000000r ; 2 ; UI::DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMZero@DirectX@UI@@3UXMVECTORF32@12@B DD 000000000r ; 0 ; UI::DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMOne3@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMOne@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskW@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskY@DirectX@UI@@3UXMVECTORU32@12@B DD 00H	; UI::DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskX@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffffffH	; UI::DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMask3@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffffffH	; UI::DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskXY@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMMaskXY@DirectX@UI@@3UXMVECTORU32@12@B DD 0ffffffffH ; UI::DirectX::g_XMMaskXY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMNegate3@DirectX@UI@@3UXMVECTORU32@12@B DD 080000000H ; UI::DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@UI@@3UXMVECTORU32@12@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@UI@@3UXMVECTORU32@12@B DD 080000000H ; UI::DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B DD 000000000r ; 0 ; UI::DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B DD 000000000r ; 0 ; UI::DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@UI@@3UXMVECTORF32@12@B DD 000000000r ; 0 ; UI::DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@UI@@3UXMVECTORF32@12@B DD 0bf800000r ; -1 ; UI::DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B DD 000000000r ; 0 ; UI::DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B DD 000000000r ; 0 ; UI::DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@UI@@3UXMVECTORF32@12@B DD 000000000r ; 0 ; UI::DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMPiConstants0@DirectX@UI@@3UXMVECTORF32@12@B DD 040490fdbr ; 3.14159 ; UI::DirectX::g_XMPiConstants0
	DD	040c90fdbr			; 6.28319
	DD	03ea2f983r			; 0.31831
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@UI@@3UXMVECTORF32@12@B DD 03fc90da4r ; 1.57073 ; UI::DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMTanEstCoefficients@DirectX@UI@@3UXMVECTORF32@12@B DD 0401ef9dbr ; 2.484 ; UI::DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B DD 0bea91d04r ; -0.330299 ; UI::DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B DD 03f7ff738r ; 0.999866 ; UI::DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B DD 0bd9a3174r ; -0.0752896 ; UI::DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B DD 0beaaaa6cr ; -0.333331 ; UI::DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B DD 03cfd10f8r ; 0.0308919 ; UI::DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B DD 03fc90fdar ; 1.5708 ; UI::DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@UI@@3UXMVECTORF32@12@B DD 03a1aac12r ; 0.000590027 ; UI::DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-05
	DD	03824bec9r			; 3.92783e-05
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B DD 03cb327a4r ; 0.0218695 ; UI::DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B DD 03f800000r ; 1 ; UI::DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B DD 0b48bdd11r ; -2.60516e-07 ; UI::DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B DD 0bf000000r ; -0.5 ; UI::DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@UI@@3UXMVECTORF32@12@B DD 0b2cd365br ; -2.38899e-08 ; UI::DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@UI@@3UXMVECTORF32@12@B DD 0be2aaaabr ; -0.166667 ; UI::DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-06
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ	; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
PUBLIC	?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlength
PUBLIC	?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance
PUBLIC	?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
PUBLIC	??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
PUBLIC	?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
PUBLIC	?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
PUBLIC	??0bad_optional_access@experimental@std@@QAE@PBD@Z ; std::experimental::bad_optional_access::bad_optional_access
PUBLIC	??1bad_optional_access@experimental@std@@UAE@XZ	; std::experimental::bad_optional_access::~bad_optional_access
PUBLIC	??0bad_optional_access@experimental@std@@QAE@ABV012@@Z ; std::experimental::bad_optional_access::bad_optional_access
PUBLIC	??_Gbad_optional_access@experimental@std@@UAEPAXI@Z ; std::experimental::bad_optional_access::`scalar deleting destructor'
PUBLIC	?Type@CWindow@UI@@SAKXZ				; UI::CWindow::Type
PUBLIC	?IsType@CWindow@UI@@QAEHK@Z			; UI::CWindow::IsType
PUBLIC	??0CWindow@UI@@QAE@PAU_object@@@Z		; UI::CWindow::CWindow
PUBLIC	??1CWindow@UI@@UAE@XZ				; UI::CWindow::~CWindow
PUBLIC	?AddChild@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::AddChild
PUBLIC	?Clear@CWindow@UI@@QAEXXZ			; UI::CWindow::Clear
PUBLIC	?DestroyHandle@CWindow@UI@@QAEXXZ		; UI::CWindow::DestroyHandle
PUBLIC	?Update@CWindow@UI@@QAEXXZ			; UI::CWindow::Update
PUBLIC	?Render@CWindow@UI@@QAEXXZ			; UI::CWindow::Render
PUBLIC	?SetScale@CWindow@UI@@QAEXMM@Z			; UI::CWindow::SetScale
PUBLIC	?SetName@CWindow@UI@@QAEXPBD@Z			; UI::CWindow::SetName
PUBLIC	?SetSize@CWindow@UI@@QAEXJJ@Z			; UI::CWindow::SetSize
PUBLIC	?SetHorizontalAlign@CWindow@UI@@QAEXK@Z		; UI::CWindow::SetHorizontalAlign
PUBLIC	?SetVerticalAlign@CWindow@UI@@QAEXK@Z		; UI::CWindow::SetVerticalAlign
PUBLIC	?SetPosition@CWindow@UI@@QAEXJJ@Z		; UI::CWindow::SetPosition
PUBLIC	?GetPosition@CWindow@UI@@QAEXPAJ0@Z		; UI::CWindow::GetPosition
PUBLIC	?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z	; UI::CWindow::GetLocalPosition
PUBLIC	?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z	; UI::CWindow::GetMouseLocalPosition
PUBLIC	?UpdateRect@CWindow@UI@@QAEJXZ			; UI::CWindow::UpdateRect
PUBLIC	?Show@CWindow@UI@@QAEXXZ			; UI::CWindow::Show
PUBLIC	?Hide@CWindow@UI@@QAEXXZ			; UI::CWindow::Hide
PUBLIC	?IsShow@CWindow@UI@@UAE_NXZ			; UI::CWindow::IsShow
PUBLIC	?OnHideWithChilds@CWindow@UI@@QAEXXZ		; UI::CWindow::OnHideWithChilds
PUBLIC	?OnHide@CWindow@UI@@QAEXXZ			; UI::CWindow::OnHide
PUBLIC	?IsRendering@CWindow@UI@@QAE_NXZ		; UI::CWindow::IsRendering
PUBLIC	?GetRoot@CWindow@UI@@QAEPAV12@XZ		; UI::CWindow::GetRoot
PUBLIC	?GetParent@CWindow@UI@@QAEPAV12@XZ		; UI::CWindow::GetParent
PUBLIC	?IsChild@CWindow@UI@@QAE_NPAV12@_N@Z		; UI::CWindow::IsChild
PUBLIC	?DeleteChild@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::DeleteChild
PUBLIC	?SetTop@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::SetTop
PUBLIC	?IsTop@CWindow@UI@@QAE_NPAV12@@Z		; UI::CWindow::IsTop
PUBLIC	?IsIn@CWindow@UI@@QAE_NJJ@Z			; UI::CWindow::IsIn
PUBLIC	?IsIn@CWindow@UI@@QAE_NXZ			; UI::CWindow::IsIn
PUBLIC	?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z		; UI::CWindow::PickWindow
PUBLIC	?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z	; UI::CWindow::PickTopWindow
PUBLIC	?__RemoveReserveChildren@CWindow@UI@@QAEXXZ	; UI::CWindow::__RemoveReserveChildren
PUBLIC	?SetInsideRender@CWindow@UI@@QAEXH@Z		; UI::CWindow::SetInsideRender
PUBLIC	?GetRenderBox@CWindow@UI@@QAEXPAUtagRECT@@@Z	; UI::CWindow::GetRenderBox
PUBLIC	?UpdateTextLineRenderBox@CWindow@UI@@QAEXXZ	; UI::CWindow::UpdateTextLineRenderBox
PUBLIC	?UpdateRenderBox@CWindow@UI@@QAEXXZ		; UI::CWindow::UpdateRenderBox
PUBLIC	?UpdateRenderBoxRecursive@CWindow@UI@@QAEXXZ	; UI::CWindow::UpdateRenderBoxRecursive
PUBLIC	?OnRender@CWindow@UI@@UAEXXZ			; UI::CWindow::OnRender
PUBLIC	?OnAfterRender@CWindow@UI@@UAEXXZ		; UI::CWindow::OnAfterRender
PUBLIC	?OnUpdateRenderBox@CWindow@UI@@UAEXXZ		; UI::CWindow::OnUpdateRenderBox
PUBLIC	?OnUpdate@CWindow@UI@@UAEXXZ			; UI::CWindow::OnUpdate
PUBLIC	?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z	; UI::CWindow::OnUpdateLockedCursor
PUBLIC	?OnChangePosition@CWindow@UI@@UAEXXZ		; UI::CWindow::OnChangePosition
PUBLIC	?OnSetFocus@CWindow@UI@@UAEXXZ			; UI::CWindow::OnSetFocus
PUBLIC	?OnKillFocus@CWindow@UI@@UAEXXZ			; UI::CWindow::OnKillFocus
PUBLIC	?OnMouseDrag@CWindow@UI@@UAEXJJ@Z		; UI::CWindow::OnMouseDrag
PUBLIC	?OnMouseOverIn@CWindow@UI@@UAEXXZ		; UI::CWindow::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CWindow@UI@@UAEXXZ		; UI::CWindow::OnMouseOverOut
PUBLIC	?OnMouseOver@CWindow@UI@@UAEXXZ			; UI::CWindow::OnMouseOver
PUBLIC	?OnDrop@CWindow@UI@@UAEXXZ			; UI::CWindow::OnDrop
PUBLIC	?OnTop@CWindow@UI@@UAEXXZ			; UI::CWindow::OnTop
PUBLIC	?OnIMEUpdate@CWindow@UI@@UAEXXZ			; UI::CWindow::OnIMEUpdate
PUBLIC	?OnMoveWindow@CWindow@UI@@UAEXJJ@Z		; UI::CWindow::OnMoveWindow
PUBLIC	?RunIMETabEvent@CWindow@UI@@QAEHXZ		; UI::CWindow::RunIMETabEvent
PUBLIC	?RunIMEReturnEvent@CWindow@UI@@QAEHXZ		; UI::CWindow::RunIMEReturnEvent
PUBLIC	?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z		; UI::CWindow::RunIMEKeyDownEvent
PUBLIC	?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z	; UI::CWindow::RunKeyDownEvent
PUBLIC	?RunKeyUpEvent@CWindow@UI@@QAEHH@Z		; UI::CWindow::RunKeyUpEvent
PUBLIC	?RunPressReturnKeyEvent@CWindow@UI@@QAEHXZ	; UI::CWindow::RunPressReturnKeyEvent
PUBLIC	?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ	; UI::CWindow::RunPressEscapeKeyEvent
PUBLIC	?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ	; UI::CWindow::RunPressExitKeyEvent
PUBLIC	?OnIMETabEvent@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMETabEvent
PUBLIC	?OnIMEReturnEvent@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMEReturnEvent
PUBLIC	?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMEUpdateSelectionEvent
PUBLIC	?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z		; UI::CWindow::OnIMEKeyDownEvent
PUBLIC	?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMEChangeCodePage
PUBLIC	?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMEOpenCandidateListEvent
PUBLIC	?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ ; UI::CWindow::OnIMECloseCandidateListEvent
PUBLIC	?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMEOpenReadingWndEvent
PUBLIC	?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMECloseReadingWndEvent
PUBLIC	?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ		; UI::CWindow::OnMouseLeftButtonUp
PUBLIC	?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ ; UI::CWindow::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseRightButtonDown
PUBLIC	?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseRightButtonUp
PUBLIC	?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ ; UI::CWindow::OnMouseRightButtonDoubleClick
PUBLIC	?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseMiddleButtonDown
PUBLIC	?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseMiddleButtonUp
PUBLIC	?OnScrollEvent@CWindow@UI@@UAEHABH@Z		; UI::CWindow::OnScrollEvent
PUBLIC	?OnKeyDown@CWindow@UI@@UAEHH@Z			; UI::CWindow::OnKeyDown
PUBLIC	?OnKeyUp@CWindow@UI@@UAEHH@Z			; UI::CWindow::OnKeyUp
PUBLIC	?OnPressReturnKey@CWindow@UI@@UAEHXZ		; UI::CWindow::OnPressReturnKey
PUBLIC	?OnPressEscapeKey@CWindow@UI@@UAEHXZ		; UI::CWindow::OnPressEscapeKey
PUBLIC	?OnPressExitKey@CWindow@UI@@UAEHXZ		; UI::CWindow::OnPressExitKey
PUBLIC	?SetColor@CWindow@UI@@UAEXK@Z			; UI::CWindow::SetColor
PUBLIC	?OnIsType@CWindow@UI@@UAEHK@Z			; UI::CWindow::OnIsType
PUBLIC	?IsWindow@CWindow@UI@@UAEHXZ			; UI::CWindow::IsWindow
PUBLIC	?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z	; UI::CWindow::iSetRenderingRect
PUBLIC	?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z	; UI::CWindow::SetRenderingRect
PUBLIC	?GetRenderingWidth@CWindow@UI@@UAEHXZ		; UI::CWindow::GetRenderingWidth
PUBLIC	?GetRenderingHeight@CWindow@UI@@UAEHXZ		; UI::CWindow::GetRenderingHeight
PUBLIC	?ResetRenderingRect@CWindow@UI@@QAEX_N@Z	; UI::CWindow::ResetRenderingRect
PUBLIC	?OnSetRenderingRect@CWindow@UI@@EAEXXZ		; UI::CWindow::OnSetRenderingRect
PUBLIC	?to@?$tween@M$$V@tweeny@@QAEAAV12@M@Z		; tweeny::tween<float>::to
PUBLIC	?step@?$tween@M$$V@tweeny@@QAEABMM_N@Z		; tweeny::tween<float>::step
PUBLIC	?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z ; tweeny::tween<float>::onStep
PUBLIC	?progress@?$tween@M$$V@tweeny@@QBEMXZ		; tweeny::tween<float>::progress
PUBLIC	??1?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::~vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >
PUBLIC	?_Buy_raw@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXI@Z ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Buy_raw
PUBLIC	?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xlength
PUBLIC	?_Xrange@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xrange
PUBLIC	?deallocate@?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@QAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@I@Z ; std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> >::deallocate
PUBLIC	??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
PUBLIC	??1?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@XZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
PUBLIC	?_Buy_raw@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXI@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Buy_raw
PUBLIC	?_Change_array@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@II@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Change_array
PUBLIC	?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
PUBLIC	?_Xlength@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xlength
PUBLIC	?_Xrange@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xrange
PUBLIC	?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z	; tweeny::tween<float>::interpolate
PUBLIC	?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z ; tweeny::tween<float>::dispatch
PUBLIC	??1?$tween@M$$V@tweeny@@QAE@XZ			; tweeny::tween<float>::~tween<float>
PUBLIC	??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z		; tweeny::tween<float>::tween<float>
PUBLIC	??_GCWindow@UI@@UAEPAXI@Z			; UI::CWindow::`scalar deleting destructor'
PUBLIC	??0CUiWikiRenderTarget@UI@@QAE@PAU_object@@@Z	; UI::CUiWikiRenderTarget::CUiWikiRenderTarget
PUBLIC	??1CUiWikiRenderTarget@UI@@UAE@XZ		; UI::CUiWikiRenderTarget::~CUiWikiRenderTarget
PUBLIC	?SetWikiRenderTargetModule@CUiWikiRenderTarget@UI@@QAE_NH@Z ; UI::CUiWikiRenderTarget::SetWikiRenderTargetModule
PUBLIC	?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ ; UI::CUiWikiRenderTarget::OnUpdateRenderBox
PUBLIC	?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ	; UI::CUiWikiRenderTarget::OnRender
PUBLIC	??_GCUiWikiRenderTarget@UI@@UAEPAXI@Z		; UI::CUiWikiRenderTarget::`scalar deleting destructor'
PUBLIC	??0CBox@UI@@QAE@PAU_object@@@Z			; UI::CBox::CBox
PUBLIC	??1CBox@UI@@UAE@XZ				; UI::CBox::~CBox
PUBLIC	?SetColor@CBox@UI@@UAEXK@Z			; UI::CBox::SetColor
PUBLIC	?OnRender@CBox@UI@@MAEXXZ			; UI::CBox::OnRender
PUBLIC	??_GCBox@UI@@UAEPAXI@Z				; UI::CBox::`scalar deleting destructor'
PUBLIC	??0CBar@UI@@QAE@PAU_object@@@Z			; UI::CBar::CBar
PUBLIC	??1CBar@UI@@UAE@XZ				; UI::CBar::~CBar
PUBLIC	?SetColor@CBar@UI@@UAEXK@Z			; UI::CBar::SetColor
PUBLIC	?OnRender@CBar@UI@@MAEXXZ			; UI::CBar::OnRender
PUBLIC	??_GCBar@UI@@UAEPAXI@Z				; UI::CBar::`scalar deleting destructor'
PUBLIC	??0CLine@UI@@QAE@PAU_object@@@Z			; UI::CLine::CLine
PUBLIC	??1CLine@UI@@UAE@XZ				; UI::CLine::~CLine
PUBLIC	?SetColor@CLine@UI@@UAEXK@Z			; UI::CLine::SetColor
PUBLIC	?OnRender@CLine@UI@@MAEXXZ			; UI::CLine::OnRender
PUBLIC	??_GCLine@UI@@UAEPAXI@Z				; UI::CLine::`scalar deleting destructor'
PUBLIC	?Type@CBar3D@UI@@SAKXZ				; UI::CBar3D::Type
PUBLIC	??0CBar3D@UI@@QAE@PAU_object@@@Z		; UI::CBar3D::CBar3D
PUBLIC	??1CBar3D@UI@@UAE@XZ				; UI::CBar3D::~CBar3D
PUBLIC	?SetColor@CBar3D@UI@@QAEXKKK@Z			; UI::CBar3D::SetColor
PUBLIC	?OnRender@CBar3D@UI@@MAEXXZ			; UI::CBar3D::OnRender
PUBLIC	??_GCBar3D@UI@@UAEPAXI@Z			; UI::CBar3D::`scalar deleting destructor'
PUBLIC	?Type@CTextLine@UI@@SAKXZ			; UI::CTextLine::Type
PUBLIC	??0CTextLine@UI@@QAE@PAU_object@@@Z		; UI::CTextLine::CTextLine
PUBLIC	??1CTextLine@UI@@UAE@XZ				; UI::CTextLine::~CTextLine
PUBLIC	?SetMax@CTextLine@UI@@QAEXH@Z			; UI::CTextLine::SetMax
PUBLIC	?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z	; UI::CTextLine::SetHorizontalAlign
PUBLIC	?SetVerticalAlign@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetVerticalAlign
PUBLIC	?SetSecret@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetSecret
PUBLIC	?SetOutline@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetOutline
PUBLIC	?SetFeather@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetFeather
PUBLIC	?SetMultiLine@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetMultiLine
PUBLIC	?SetFontName@CTextLine@UI@@QAEXPBD@Z		; UI::CTextLine::SetFontName
PUBLIC	?SetFontColor@CTextLine@UI@@QAEXK@Z		; UI::CTextLine::SetFontColor
PUBLIC	?SetLimitWidth@CTextLine@UI@@QAEXM@Z		; UI::CTextLine::SetLimitWidth
PUBLIC	?ShowCursor@CTextLine@UI@@QAEXXZ		; UI::CTextLine::ShowCursor
PUBLIC	?HideCursor@CTextLine@UI@@QAEXXZ		; UI::CTextLine::HideCursor
PUBLIC	?IsShowCursor@CTextLine@UI@@QAE_NXZ		; UI::CTextLine::IsShowCursor
PUBLIC	?GetCursorPosition@CTextLine@UI@@QAEHXZ		; UI::CTextLine::GetCursorPosition
PUBLIC	?GetMultilineCursorPosition@CTextLine@UI@@QAEHXZ ; UI::CTextLine::GetMultilineCursorPosition
PUBLIC	?GetCharPositionByCursor@CTextLine@UI@@QAE?AV?$tuple@HHH@std@@H@Z ; UI::CTextLine::GetCharPositionByCursor
PUBLIC	?TextPositionToRenderPosition@CTextLine@UI@@QAEHH@Z ; UI::CTextLine::TextPositionToRenderPosition
PUBLIC	?SetText@CTextLine@UI@@QAEXPBD@Z		; UI::CTextLine::SetText
PUBLIC	?GetText@CTextLine@UI@@QAEPBDXZ			; UI::CTextLine::GetText
PUBLIC	?GetSpecificTextWidth@CTextLine@UI@@QAEHPBD@Z	; UI::CTextLine::GetSpecificTextWidth
PUBLIC	?GetTextSize@CTextLine@UI@@QAEXPAH0@Z		; UI::CTextLine::GetTextSize
PUBLIC	?IsShow@CTextLine@UI@@UAE_NXZ			; UI::CTextLine::IsShow
PUBLIC	?GetRenderingWidth@CTextLine@UI@@UAEHXZ		; UI::CTextLine::GetRenderingWidth
PUBLIC	?GetRenderingHeight@CTextLine@UI@@UAEHXZ	; UI::CTextLine::GetRenderingHeight
PUBLIC	?OnSetRenderingRect@CTextLine@UI@@UAEXXZ	; UI::CTextLine::OnSetRenderingRect
PUBLIC	?SetRenderingRect@CTextLine@UI@@UAEXMMMM@Z	; UI::CTextLine::SetRenderingRect
PUBLIC	?OnUpdate@CTextLine@UI@@MAEXXZ			; UI::CTextLine::OnUpdate
PUBLIC	?OnRender@CTextLine@UI@@MAEXXZ			; UI::CTextLine::OnRender
PUBLIC	?OnChangePosition@CTextLine@UI@@MAEXXZ		; UI::CTextLine::OnChangePosition
PUBLIC	?OnSetText@CTextLine@UI@@MAEXPBD@Z		; UI::CTextLine::OnSetText
PUBLIC	?OnUpdateRenderBox@CTextLine@UI@@MAEXXZ		; UI::CTextLine::OnUpdateRenderBox
PUBLIC	?OnIsType@CTextLine@UI@@MAEHK@Z			; UI::CTextLine::OnIsType
PUBLIC	??_GCTextLine@UI@@UAEPAXI@Z			; UI::CTextLine::`scalar deleting destructor'
PUBLIC	?Type@CNumberLine@UI@@SAKXZ			; UI::CNumberLine::Type
PUBLIC	??0CNumberLine@UI@@QAE@PAU_object@@@Z		; UI::CNumberLine::CNumberLine
PUBLIC	??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z		; UI::CNumberLine::CNumberLine
PUBLIC	??1CNumberLine@UI@@UAE@XZ			; UI::CNumberLine::~CNumberLine
PUBLIC	?SetPath@CNumberLine@UI@@QAEXPBD@Z		; UI::CNumberLine::SetPath
PUBLIC	?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z	; UI::CNumberLine::SetHorizontalAlign
PUBLIC	?SetVerticalAlign@CNumberLine@UI@@QAEXH@Z	; UI::CNumberLine::SetVerticalAlign
PUBLIC	?SetNumber@CNumberLine@UI@@QAEXPBD@Z		; UI::CNumberLine::SetNumber
PUBLIC	?SetDiffuseColor@CNumberLine@UI@@QAEXMMMM@Z	; UI::CNumberLine::SetDiffuseColor
PUBLIC	?ClearNumber@CNumberLine@UI@@IAEXXZ		; UI::CNumberLine::ClearNumber
PUBLIC	?OnRender@CNumberLine@UI@@MAEXXZ		; UI::CNumberLine::OnRender
PUBLIC	?OnChangePosition@CNumberLine@UI@@MAEXXZ	; UI::CNumberLine::OnChangePosition
PUBLIC	?OnIsType@CNumberLine@UI@@MAEHK@Z		; UI::CNumberLine::OnIsType
PUBLIC	??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
PUBLIC	?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
PUBLIC	??_GCNumberLine@UI@@UAEPAXI@Z			; UI::CNumberLine::`scalar deleting destructor'
PUBLIC	?Type@CImageBox@UI@@SAKXZ			; UI::CImageBox::Type
PUBLIC	??0CImageBox@UI@@QAE@PAU_object@@@Z		; UI::CImageBox::CImageBox
PUBLIC	??1CImageBox@UI@@UAE@XZ				; UI::CImageBox::~CImageBox
PUBLIC	?LoadImageA@CImageBox@UI@@QAEHPBD@Z		; UI::CImageBox::LoadImageA
PUBLIC	?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z	; UI::CImageBox::SetDiffuseColor
PUBLIC	?GetWidth@CImageBox@UI@@QAEHXZ			; UI::CImageBox::GetWidth
PUBLIC	?GetHeight@CImageBox@UI@@QAEHXZ			; UI::CImageBox::GetHeight
PUBLIC	?SetCoolTimeImageBox@CImageBox@UI@@QAEXM@Z	; UI::CImageBox::SetCoolTimeImageBox
PUBLIC	?SetStartCoolTimeImageBox@CImageBox@UI@@QAEXM@Z	; UI::CImageBox::SetStartCoolTimeImageBox
PUBLIC	?OnCreateInstance@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnDestroyInstance
PUBLIC	?OnUpdate@CImageBox@UI@@MAEXXZ			; UI::CImageBox::OnUpdate
PUBLIC	?OnRender@CImageBox@UI@@MAEXXZ			; UI::CImageBox::OnRender
PUBLIC	?OnChangePosition@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnChangePosition
PUBLIC	?OnIsType@CImageBox@UI@@MAEHK@Z			; UI::CImageBox::OnIsType
PUBLIC	??_GCImageBox@UI@@UAEPAXI@Z			; UI::CImageBox::`scalar deleting destructor'
PUBLIC	??0CRenderTarget@UI@@QAE@PAU_object@@@Z		; UI::CRenderTarget::CRenderTarget
PUBLIC	?SetRenderTarget@CRenderTarget@UI@@QAEXI@Z	; UI::CRenderTarget::SetRenderTarget
PUBLIC	?SetRenderHair@CRenderTarget@UI@@QAEXI@Z	; UI::CRenderTarget::SetRenderHair
PUBLIC	?SetRenderArmor@CRenderTarget@UI@@QAEXI@Z	; UI::CRenderTarget::SetRenderArmor
PUBLIC	?SetRenderWeapon@CRenderTarget@UI@@QAEXI@Z	; UI::CRenderTarget::SetRenderWeapon
PUBLIC	?SetRenderSash@CRenderTarget@UI@@QAEXI@Z	; UI::CRenderTarget::SetRenderSash
PUBLIC	?SetRendererMotion@CRenderTarget@UI@@QAEXI@Z	; UI::CRenderTarget::SetRendererMotion
PUBLIC	?SetRenderDistance@CRenderTarget@UI@@QAEXM@Z	; UI::CRenderTarget::SetRenderDistance
PUBLIC	?GetRenderDistance@CRenderTarget@UI@@QAEMXZ	; UI::CRenderTarget::GetRenderDistance
PUBLIC	?SetLightPosition@CRenderTarget@UI@@QAEXUD3DXVECTOR3@@@Z ; UI::CRenderTarget::SetLightPosition
PUBLIC	?GetLightPosition@CRenderTarget@UI@@QBEABUD3DXVECTOR3@@XZ ; UI::CRenderTarget::GetLightPosition
PUBLIC	?SetRotation@CRenderTarget@UI@@QAEXM@Z		; UI::CRenderTarget::SetRotation
PUBLIC	?GetRotation@CRenderTarget@UI@@QAEMXZ		; UI::CRenderTarget::GetRotation
PUBLIC	?SetRotationMode@CRenderTarget@UI@@QAEX_N@Z	; UI::CRenderTarget::SetRotationMode
PUBLIC	?DestroyRender@CRenderTarget@UI@@QAEXXZ		; UI::CRenderTarget::DestroyRender
PUBLIC	?OnUpdate@CRenderTarget@UI@@MAEXXZ		; UI::CRenderTarget::OnUpdate
PUBLIC	?OnRender@CRenderTarget@UI@@MAEXXZ		; UI::CRenderTarget::OnRender
PUBLIC	??_GCRenderTarget@UI@@UAEPAXI@Z			; UI::CRenderTarget::`scalar deleting destructor'
PUBLIC	??0CMarkBox@UI@@QAE@PAU_object@@@Z		; UI::CMarkBox::CMarkBox
PUBLIC	??1CMarkBox@UI@@UAE@XZ				; UI::CMarkBox::~CMarkBox
PUBLIC	?LoadImageA@CMarkBox@UI@@QAEXPBD@Z		; UI::CMarkBox::LoadImageA
PUBLIC	?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z	; UI::CMarkBox::SetDiffuseColor
PUBLIC	?SetIndex@CMarkBox@UI@@QAEXI@Z			; UI::CMarkBox::SetIndex
PUBLIC	?SetScale@CMarkBox@UI@@QAEXM@Z			; UI::CMarkBox::SetScale
PUBLIC	?OnCreateInstance@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnDestroyInstance
PUBLIC	?OnUpdate@CMarkBox@UI@@MAEXXZ			; UI::CMarkBox::OnUpdate
PUBLIC	?OnRender@CMarkBox@UI@@MAEXXZ			; UI::CMarkBox::OnRender
PUBLIC	?OnChangePosition@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnChangePosition
PUBLIC	??_GCMarkBox@UI@@UAEPAXI@Z			; UI::CMarkBox::`scalar deleting destructor'
PUBLIC	?Type@CExpandedImageBox@UI@@SAKXZ		; UI::CExpandedImageBox::Type
PUBLIC	??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z	; UI::CExpandedImageBox::CExpandedImageBox
PUBLIC	??1CExpandedImageBox@UI@@UAE@XZ			; UI::CExpandedImageBox::~CExpandedImageBox
PUBLIC	?SetScale@CExpandedImageBox@UI@@QAEXMM@Z	; UI::CExpandedImageBox::SetScale
PUBLIC	?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z	; UI::CExpandedImageBox::SetOrigin
PUBLIC	?SetRotation@CExpandedImageBox@UI@@QAEXM@Z	; UI::CExpandedImageBox::SetRotation
PUBLIC	?SetRenderingRect@CExpandedImageBox@UI@@UAEXMMMM@Z ; UI::CExpandedImageBox::SetRenderingRect
PUBLIC	?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z	; UI::CExpandedImageBox::SetRenderingMode
PUBLIC	?GetRenderingWidth@CExpandedImageBox@UI@@UAEHXZ	; UI::CExpandedImageBox::GetRenderingWidth
PUBLIC	?GetRenderingHeight@CExpandedImageBox@UI@@UAEHXZ ; UI::CExpandedImageBox::GetRenderingHeight
PUBLIC	?OnSetRenderingRect@CExpandedImageBox@UI@@UAEXXZ ; UI::CExpandedImageBox::OnSetRenderingRect
PUBLIC	?SetExpandedRenderingRect@CExpandedImageBox@UI@@QAEXMMMMMMMM@Z ; UI::CExpandedImageBox::SetExpandedRenderingRect
PUBLIC	?SetTextureRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z ; UI::CExpandedImageBox::SetTextureRenderingRect
PUBLIC	?GetPixelColor@CExpandedImageBox@UI@@QAEKKK@Z	; UI::CExpandedImageBox::GetPixelColor
PUBLIC	?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ	; UI::CExpandedImageBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ	; UI::CExpandedImageBox::OnDestroyInstance
PUBLIC	?OnUpdateRenderBox@CExpandedImageBox@UI@@MAEXXZ	; UI::CExpandedImageBox::OnUpdateRenderBox
PUBLIC	?OnUpdate@CExpandedImageBox@UI@@MAEXXZ		; UI::CExpandedImageBox::OnUpdate
PUBLIC	?OnRender@CExpandedImageBox@UI@@MAEXXZ		; UI::CExpandedImageBox::OnRender
PUBLIC	?OnIsType@CExpandedImageBox@UI@@MAEHK@Z		; UI::CExpandedImageBox::OnIsType
PUBLIC	??_GCExpandedImageBox@UI@@UAEPAXI@Z		; UI::CExpandedImageBox::`scalar deleting destructor'
PUBLIC	?Type@CAniImageBox@UI@@SAKXZ			; UI::CAniImageBox::Type
PUBLIC	??0CAniImageBox@UI@@QAE@PAU_object@@@Z		; UI::CAniImageBox::CAniImageBox
PUBLIC	??1CAniImageBox@UI@@UAE@XZ			; UI::CAniImageBox::~CAniImageBox
PUBLIC	?SetDelay@CAniImageBox@UI@@QAEXH@Z		; UI::CAniImageBox::SetDelay
PUBLIC	?AppendImage@CAniImageBox@UI@@QAEXPBD@Z		; UI::CAniImageBox::AppendImage
PUBLIC	?SetRenderingRect@CAniImageBox@UI@@UAEXMMMM@Z	; UI::CAniImageBox::SetRenderingRect
PUBLIC	?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z	; UI::CAniImageBox::SetRenderingMode
PUBLIC	?ResetFrame@CAniImageBox@UI@@QAEXXZ		; UI::CAniImageBox::ResetFrame
PUBLIC	?GetRealWidth@CAniImageBox@UI@@QAEJXZ		; UI::CAniImageBox::GetRealWidth
PUBLIC	?GetRealHeight@CAniImageBox@UI@@QAEJXZ		; UI::CAniImageBox::GetRealHeight
PUBLIC	?SetSlotDiffuseColor@CAniImageBox@UI@@QAEXPBDE@Z ; UI::CAniImageBox::SetSlotDiffuseColor
PUBLIC	?SetSlotActivatedDiffuseColor@CAniImageBox@UI@@QAEXABV?$vector@MV?$allocator@M@std@@@std@@@Z ; UI::CAniImageBox::SetSlotActivatedDiffuseColor
PUBLIC	?OnUpdate@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnUpdate
PUBLIC	?OnRender@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnRender
PUBLIC	?OnChangePosition@CAniImageBox@UI@@MAEXXZ	; UI::CAniImageBox::OnChangePosition
PUBLIC	?OnEndFrame@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnEndFrame
PUBLIC	?OnKeyFrame@CAniImageBox@UI@@MAEXE@Z		; UI::CAniImageBox::OnKeyFrame
PUBLIC	?OnIsType@CAniImageBox@UI@@MAEHK@Z		; UI::CAniImageBox::OnIsType
PUBLIC	??_GCAniImageBox@UI@@UAEPAXI@Z			; UI::CAniImageBox::`scalar deleting destructor'
PUBLIC	?Type@CButton@UI@@SAKXZ				; UI::CButton::Type
PUBLIC	??0CButton@UI@@QAE@PAU_object@@@Z		; UI::CButton::CButton
PUBLIC	??1CButton@UI@@UAE@XZ				; UI::CButton::~CButton
PUBLIC	?SetUpVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetUpVisual
PUBLIC	?SetOverVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetOverVisual
PUBLIC	?SetDownVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetDownVisual
PUBLIC	?SetDisableVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetDisableVisual
PUBLIC	?GetUpVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetUpVisualFileName
PUBLIC	?GetOverVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetOverVisualFileName
PUBLIC	?GetDownVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetDownVisualFileName
PUBLIC	?Flash@CButton@UI@@QAEXXZ			; UI::CButton::Flash
PUBLIC	?Enable@CButton@UI@@QAEXXZ			; UI::CButton::Enable
PUBLIC	?Disable@CButton@UI@@QAEXXZ			; UI::CButton::Disable
PUBLIC	?SetUp@CButton@UI@@QAEXXZ			; UI::CButton::SetUp
PUBLIC	?Up@CButton@UI@@QAEXXZ				; UI::CButton::Up
PUBLIC	?Over@CButton@UI@@QAEXXZ			; UI::CButton::Over
PUBLIC	?Down@CButton@UI@@QAEXXZ			; UI::CButton::Down
PUBLIC	?IsDisable@CButton@UI@@QAEHXZ			; UI::CButton::IsDisable
PUBLIC	?IsPressed@CButton@UI@@QAEHXZ			; UI::CButton::IsPressed
PUBLIC	?OnSetRenderingRect@CButton@UI@@UAEXXZ		; UI::CButton::OnSetRenderingRect
PUBLIC	?OnUpdateRenderBox@CButton@UI@@UAEXXZ		; UI::CButton::OnUpdateRenderBox
PUBLIC	?SetRenderingRect@CButton@UI@@UAEXMMMM@Z	; UI::CButton::SetRenderingRect
PUBLIC	?OnUpdate@CButton@UI@@MAEXXZ			; UI::CButton::OnUpdate
PUBLIC	?OnRender@CButton@UI@@MAEXXZ			; UI::CButton::OnRender
PUBLIC	?OnChangePosition@CButton@UI@@MAEXXZ		; UI::CButton::OnChangePosition
PUBLIC	?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ	; UI::CButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ		; UI::CButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseRightButtonDoubleClick@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseRightButtonDoubleClick
PUBLIC	?OnMouseRightButtonUp@CButton@UI@@MAEHXZ	; UI::CButton::OnMouseRightButtonUp
PUBLIC	?OnMouseOverIn@CButton@UI@@MAEXXZ		; UI::CButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CButton@UI@@MAEXXZ		; UI::CButton::OnMouseOverOut
PUBLIC	?IsEnable@CButton@UI@@IAEHXZ			; UI::CButton::IsEnable
PUBLIC	?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual
PUBLIC	?OnIsType@CButton@UI@@MAEHK@Z			; UI::CButton::OnIsType
PUBLIC	??_GCButton@UI@@UAEPAXI@Z			; UI::CButton::`scalar deleting destructor'
PUBLIC	??0CRadioButton@UI@@QAE@PAU_object@@@Z		; UI::CRadioButton::CRadioButton
PUBLIC	??1CRadioButton@UI@@UAE@XZ			; UI::CRadioButton::~CRadioButton
PUBLIC	?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ	; UI::CRadioButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ	; UI::CRadioButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CRadioButton@UI@@MAEXXZ		; UI::CRadioButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CRadioButton@UI@@MAEXXZ		; UI::CRadioButton::OnMouseOverOut
PUBLIC	??_GCRadioButton@UI@@UAEPAXI@Z			; UI::CRadioButton::`scalar deleting destructor'
PUBLIC	??0CToggleButton@UI@@QAE@PAU_object@@@Z		; UI::CToggleButton::CToggleButton
PUBLIC	??1CToggleButton@UI@@UAE@XZ			; UI::CToggleButton::~CToggleButton
PUBLIC	?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ	; UI::CToggleButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ	; UI::CToggleButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CToggleButton@UI@@MAEXXZ		; UI::CToggleButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CToggleButton@UI@@MAEXXZ	; UI::CToggleButton::OnMouseOverOut
PUBLIC	??_GCToggleButton@UI@@UAEPAXI@Z			; UI::CToggleButton::`scalar deleting destructor'
PUBLIC	??0CDragButton@UI@@QAE@PAU_object@@@Z		; UI::CDragButton::CDragButton
PUBLIC	??1CDragButton@UI@@UAE@XZ			; UI::CDragButton::~CDragButton
PUBLIC	?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z ; UI::CDragButton::SetRestrictMovementArea
PUBLIC	?OnChangePosition@CDragButton@UI@@MAEXXZ	; UI::CDragButton::OnChangePosition
PUBLIC	?OnMouseOverIn@CDragButton@UI@@MAEXXZ		; UI::CDragButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CDragButton@UI@@MAEXXZ		; UI::CDragButton::OnMouseOverOut
PUBLIC	??_GCDragButton@UI@@UAEPAXI@Z			; UI::CDragButton::`scalar deleting destructor'
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z	; tweeny::from<float>
PUBLIC	??$during@H@?$tween@M$$V@tweeny@@QAEAAV01@H@Z	; tweeny::tween<float>::during<int>
PUBLIC	??$via@UcubicOutEasing@easing@tweeny@@@?$tween@M$$V@tweeny@@QAEAAV01@UcubicOutEasing@easing@1@@Z ; tweeny::tween<float>::via<tweeny::easing::cubicOutEasing>
PUBLIC	??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
PUBLIC	??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z ; std::function<bool __cdecl(tweeny::tween<float> &,float)>::operator=
PUBLIC	??1?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAE@XZ ; std::function<bool __cdecl(tweeny::tween<float> &,float)>::~function<bool __cdecl(tweeny::tween<float> &,float)>
PUBLIC	??$?4AAV?$tween@M$$V@tweeny@@@?$optional@V?$tween@M$$V@tweeny@@@experimental@std@@QAEAAV012@AAV?$tween@M$$V@tweeny@@@Z ; std::experimental::optional<tweeny::tween<float> >::operator=<tweeny::tween<float> &>
PUBLIC	?XMMatrixTransformation2D@DirectX@UI@@YQ?AUXMMATRIX@12@T__m128@2@M00M0@Z ; UI::DirectX::XMMatrixTransformation2D
PUBLIC	?XMScalarSinCos@DirectX@UI@@YAXPAM0M@Z		; UI::DirectX::XMScalarSinCos
PUBLIC	??1?$shared_ptr@VCWikiRenderTarget@@@std@@QAE@XZ ; std::shared_ptr<CWikiRenderTarget>::~shared_ptr<CWikiRenderTarget>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
PUBLIC	??1?$_Func_class@MMMM@std@@QAE@XZ		; std::_Func_class<float,float,float,float>::~_Func_class<float,float,float,float>
PUBLIC	?swap@?$function@$$A6AMMMM@Z@std@@QAEXAAV12@@Z	; std::function<float __cdecl(float,float,float)>::swap
PUBLIC	??1?$function@$$A6AMMMM@Z@std@@QAE@XZ		; std::function<float __cdecl(float,float,float)>::~function<float __cdecl(float,float,float)>
PUBLIC	??1?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@XZ ; std::tuple<std::function<float __cdecl(float,float,float)> >::~tuple<std::function<float __cdecl(float,float,float)> >
PUBLIC	??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z ; tweeny::detail::tweenpoint<float>::operator=
PUBLIC	??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >
PUBLIC	??$during@H@?$tweenpoint@M@detail@tweeny@@QAEXH@Z ; tweeny::detail::tweenpoint<float>::during<int>
PUBLIC	??$via@UcubicOutEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUcubicOutEasing@easing@2@@Z ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::cubicOutEasing>
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
PUBLIC	??$_Assign_counted_range@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@I@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Assign_counted_range<std::function<bool __cdecl(tweeny::tween<float> &,float)> *>
PUBLIC	??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Assign_counted_range<tweeny::detail::tweenpoint<float> *>
PUBLIC	??$clip@M@detail@tweeny@@YAMABM00@Z		; tweeny::detail::clip<float>
PUBLIC	??$_Emplace_reallocate@AAM@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEPAU?$tweenpoint@M@detail@tweeny@@QAU234@AAM@Z ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Emplace_reallocate<float &>
PUBLIC	??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UcubicOutEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UcubicOutEasing@easing@1@U?$int2type@$0A@@01@@Z ; tweeny::detail::easingfill<std::array<float,1>,std::tuple<std::function<float __cdecl(float,float,float)> >,tweeny::easing::cubicOutEasing>
PUBLIC	??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Uninitialized_copy_n<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
PUBLIC	??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z ; std::_Copy_n_unchecked4<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,unsigned int,std::function<bool __cdecl(tweeny::tween<float> &,float)> *>
PUBLIC	??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Emplace_reallocate<std::function<bool __cdecl(tweeny::tween<float> &,float)> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > > >::~_Tidy_guard<std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > > >
PUBLIC	??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Uninitialized_copy_n<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > > >::~_Tidy_guard<std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > > >
PUBLIC	??$_Uninitialized_move@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@QAU123@0PAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Uninitialized_move<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >
PUBLIC	??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
PUBLIC	??$_Uninitialized_move@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@0PAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Uninitialized_move<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >::~_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Emplace_reallocate@ABI@?$vector@IV?$allocator@I@std@@@std@@AAEPAIQAIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Emplace_reallocate<unsigned int const &>
PUBLIC	??$run@M@cubicOutEasing@easing@tweeny@@SAMMMM@Z	; tweeny::easing::cubicOutEasing::run<float>
PUBLIC	??$during@G@?$tweenpoint@M@detail@tweeny@@QAEXG@Z ; tweeny::detail::tweenpoint<float>::during<unsigned short>
PUBLIC	??$via@UdefaultEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUdefaultEasing@easing@2@@Z ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::defaultEasing>
PUBLIC	??$__std_max_element@$$CBG@@YAPBGPBG0@Z		; __std_max_element<unsigned short const >
PUBLIC	??$_Copy_memmove@PAIPAI@std@@YAPAIPAI00@Z	; std::_Copy_memmove<unsigned int *,unsigned int *>
PUBLIC	??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UdefaultEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UdefaultEasing@easing@1@U?$int2type@$0A@@01@@Z ; tweeny::detail::easingfill<std::array<float,1>,std::tuple<std::function<float __cdecl(float,float,float)> >,tweeny::easing::defaultEasing>
PUBLIC	??$_Test_callable@$$A6AMMMM@Z@std@@YA_NA6AMMMM@Z@Z ; std::_Test_callable<float __cdecl(float,float,float)>
PUBLIC	?_Copy@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPAV?$_Func_base@MMMM@2@PAX@Z ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Copy
PUBLIC	?_Move@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEPAV?$_Func_base@MMMM@2@PAX@Z ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Move
PUBLIC	?_Do_call@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEM$$QAM00@Z ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Do_call
PUBLIC	?_Target_type@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEABVtype_info@@XZ ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Target_type
PUBLIC	?_Get@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPBXXZ ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Get
PUBLIC	?_Delete_this@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEX_N@Z ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Delete_this
PUBLIC	??$run@M@defaultEasing@easing@tweeny@@SAMMMM@Z	; tweeny::easing::defaultEasing::run<float>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7bad_optional_access@experimental@std@@6B@	; std::experimental::bad_optional_access::`vftable'
PUBLIC	?def@easing@tweeny@@2UdefaultEasing@12@B	; tweeny::easing::def
PUBLIC	?cubicOut@easing@tweeny@@2UcubicOutEasing@12@B	; tweeny::easing::cubicOut
PUBLIC	??_7CWindow@UI@@6B@				; UI::CWindow::`vftable'
PUBLIC	??_7CUiWikiRenderTarget@UI@@6B@			; UI::CUiWikiRenderTarget::`vftable'
PUBLIC	??_7CBox@UI@@6B@				; UI::CBox::`vftable'
PUBLIC	??_7CBar@UI@@6B@				; UI::CBar::`vftable'
PUBLIC	??_7CLine@UI@@6B@				; UI::CLine::`vftable'
PUBLIC	??_7CBar3D@UI@@6B@				; UI::CBar3D::`vftable'
PUBLIC	??_7CTextLine@UI@@6B@				; UI::CTextLine::`vftable'
PUBLIC	??_7CNumberLine@UI@@6B@				; UI::CNumberLine::`vftable'
PUBLIC	??_7CImageBox@UI@@6B@				; UI::CImageBox::`vftable'
PUBLIC	??_7CRenderTarget@UI@@6B@			; UI::CRenderTarget::`vftable'
PUBLIC	??_7CMarkBox@UI@@6B@				; UI::CMarkBox::`vftable'
PUBLIC	??_7CExpandedImageBox@UI@@6B@			; UI::CExpandedImageBox::`vftable'
PUBLIC	??_7CAniImageBox@UI@@6B@			; UI::CAniImageBox::`vftable'
PUBLIC	??_7CButton@UI@@6B@				; UI::CButton::`vftable'
PUBLIC	??_7CRadioButton@UI@@6B@			; UI::CRadioButton::`vftable'
PUBLIC	??_7CToggleButton@UI@@6B@			; UI::CToggleButton::`vftable'
PUBLIC	??_7CDragButton@UI@@6B@				; UI::CDragButton::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCWikiRenderTargetManager@@@@0PAVCWikiRenderTargetManager@@A ; CSingleton<CWikiRenderTargetManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonConfig@@@@0PAVCPythonConfig@@A ; CSingleton<CPythonConfig>::ms_singleton
PUBLIC	??_C@_07EFPFKGGH@CWindow@			; `string'
PUBLIC	??_C@_01HIHLOKLC@1@				; `string'
PUBLIC	??_C@_01GBGANLPD@0@				; `string'
PUBLIC	??_C@_0P@BAAKKIGI@ANIMATION_MODE@		; `string'
PUBLIC	??_C@_06JLNHBMCE@OnHide@			; `string'
PUBLIC	??_C@_08DCJEAFK@OnUpdate@			; `string'
PUBLIC	??_C@_02PDIHAGKM@ii@				; `string'
PUBLIC	??_C@_0BF@NPECNJEC@OnUpdateLockedCursor@	; `string'
PUBLIC	??_C@_08PAJMEILO@OnRender@			; `string'
PUBLIC	??_C@_0O@PENIBOGB@OnAfterRender@		; `string'
PUBLIC	??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@ ; `string'
PUBLIC	??_C@_04INACLLOK@?$CIii?$CJ@			; `string'
PUBLIC	??_C@_0M@ECAEGPAI@OnMouseDrag@			; `string'
PUBLIC	??_C@_0N@PFKNBOJP@OnMoveWindow@			; `string'
PUBLIC	??_C@_0L@GIMNGBCD@OnSetFocus@			; `string'
PUBLIC	??_C@_0M@CEGPCFGM@OnKillFocus@			; `string'
PUBLIC	??_C@_0O@JKDAFDCC@OnMouseOverIn@		; `string'
PUBLIC	??_C@_0P@KLLBNOAI@OnMouseOverOut@		; `string'
PUBLIC	??_C@_0M@MGDIFFEM@OnMouseMove@			; `string'
PUBLIC	??_C@_06OCNPCIEO@OnDrop@			; `string'
PUBLIC	??_C@_05LOOKECNH@OnTop@				; `string'
PUBLIC	??_C@_0M@DGOFHNMI@OnIMEUpdate@			; `string'
PUBLIC	??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@	; `string'
PUBLIC	??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@		; `string'
PUBLIC	??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@ ; `string'
PUBLIC	??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@	; `string'
PUBLIC	??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@	; `string'
PUBLIC	??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@ ; `string'
PUBLIC	??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@	; `string'
PUBLIC	??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@	; `string'
PUBLIC	??_C@_03LIHNMIHG@?$CIi?$CJ@			; `string'
PUBLIC	??_C@_0BD@GMLJAJMG@OnScrollWheelEvent@		; `string'
PUBLIC	??_C@_08HFELFLOI@OnIMETab@			; `string'
PUBLIC	??_C@_0M@PILLCCFN@OnIMEReturn@			; `string'
PUBLIC	??_C@_0BF@NBAFCOEB@OnIMEUpdateSelection@	; `string'
PUBLIC	??_C@_0N@BMPDGPBH@OnIMEKeyDown@			; `string'
PUBLIC	??_C@_0BE@EHKLBB@OnIMEChangeCodePage@		; `string'
PUBLIC	??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@	; `string'
PUBLIC	??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@	; `string'
PUBLIC	??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@		; `string'
PUBLIC	??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@	; `string'
PUBLIC	??_C@_09CMHFBEC@OnKeyDown@			; `string'
PUBLIC	??_C@_07NGNLLPEG@OnKeyUp@			; `string'
PUBLIC	??_C@_0BB@LHAEDNPI@OnPressReturnKey@		; `string'
PUBLIC	??_C@_0BB@HCFLIMGH@OnPressEscapeKey@		; `string'
PUBLIC	??_C@_0P@KEJGBDKK@OnPressExitKey@		; `string'
PUBLIC	??_C@_0EB@OFBMEDEK@CWikiRenderTargetManager?5could?5@ ; `string'
PUBLIC	??_C@_06ICLMADCA@CBar3D@			; `string'
PUBLIC	??_C@_09BAJHDABN@CTextLine@			; `string'
PUBLIC	??_C@_04FAHLGLIA@?4fnt@				; `string'
PUBLIC	??_C@_0BB@CELBIPME@OnRenderSelected@		; `string'
PUBLIC	??_C@_0M@HGOBFKBB@CNumberLine@			; `string'
PUBLIC	??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@ ; `string'
PUBLIC	??_C@_09GPLBLMNE@colon?4sub@			; `string'
PUBLIC	??_C@_0BB@POBNNLPJ@questionmark?4sub@		; `string'
PUBLIC	??_C@_09JMLAABIP@slash?4sub@			; `string'
PUBLIC	??_C@_0M@MHAKIBOD@percent?4sub@			; `string'
PUBLIC	??_C@_08FPHNCABK@plus?4sub@			; `string'
PUBLIC	??_C@_05PINNHPFB@m?4sub@			; `string'
PUBLIC	??_C@_05FJEGFMDH@g?4sub@			; `string'
PUBLIC	??_C@_05EHJFGOBE@p?4sub@			; `string'
PUBLIC	??_C@_04DLFHDFGL@?4sub@				; `string'
PUBLIC	??_C@_09KMLFEEMH@CImageBox@			; `string'
PUBLIC	??_C@_0BC@DJHPPMGJ@CExpandedImageBox@		; `string'
PUBLIC	??_C@_0N@LBBHECOO@CAniImageBox@			; `string'
PUBLIC	??_C@_0L@LBHHAGOH@OnEndFrame@			; `string'
PUBLIC	??_C@_0L@CCNGDMCN@OnKeyFrame@			; `string'
PUBLIC	??_C@_07OFEOKGEK@CButton@			; `string'
PUBLIC	??_C@_09MFFHPOPB@CallEvent@			; `string'
PUBLIC	??_C@_09FJAHACEO@DownEvent@			; `string'
PUBLIC	??_C@_0M@LEFCMAKP@ShowToolTip@			; `string'
PUBLIC	??_C@_0M@HCIAMHJN@HideToolTip@			; `string'
PUBLIC	??_C@_0O@MBBNNMAO@OnSetUpVisual@		; `string'
PUBLIC	??_C@_0BA@DIDBMCJO@OnSetOverVisual@		; `string'
PUBLIC	??_C@_0BA@GJIJKBGL@OnSetDownVisual@		; `string'
PUBLIC	??_C@_0BD@OKLAKJGM@OnSetDisableVisual@		; `string'
PUBLIC	??_C@_0L@HGABHAMN@OnToggleUp@			; `string'
PUBLIC	??_C@_0N@NBGLGPDJ@OnToggleDown@			; `string'
PUBLIC	??_C@_06GJPOLLJG@OnMove@			; `string'
PUBLIC	__TI3?AVbad_optional_access@experimental@std@@
PUBLIC	__CTA3?AVbad_optional_access@experimental@std@@
PUBLIC	??_R0?AVbad_optional_access@experimental@std@@@8 ; std::experimental::bad_optional_access `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_optional_access@experimental@std@@@8??0bad_optional_access@experimental@std@@QAE@ABV012@@Z12
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BE@KGBCPEAI@bad?5optional?5access@	; `string'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_7?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@ ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`vftable'
PUBLIC	??_R0P6AMMMM@Z@8				; float (__cdecl*)(float,float,float) `RTTI Type Descriptor'
PUBLIC	??_R4CWindow@UI@@6B@				; UI::CWindow::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWindow@UI@@@8				; UI::CWindow `RTTI Type Descriptor'
PUBLIC	??_R3CWindow@UI@@8				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWindow@UI@@8				; UI::CWindow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWindow@UI@@8			; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_optional_access@experimental@std@@6B@	; std::experimental::bad_optional_access::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_optional_access@experimental@std@@8	; std::experimental::bad_optional_access::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_optional_access@experimental@std@@8	; std::experimental::bad_optional_access::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_optional_access@experimental@std@@8 ; std::experimental::bad_optional_access::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CUiWikiRenderTarget@UI@@6B@		; UI::CUiWikiRenderTarget::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCUiWikiRenderTarget@UI@@@8		; UI::CUiWikiRenderTarget `RTTI Type Descriptor'
PUBLIC	??_R3CUiWikiRenderTarget@UI@@8			; UI::CUiWikiRenderTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CUiWikiRenderTarget@UI@@8			; UI::CUiWikiRenderTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CUiWikiRenderTarget@UI@@8		; UI::CUiWikiRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBox@UI@@6B@				; UI::CBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBox@UI@@@8				; UI::CBox `RTTI Type Descriptor'
PUBLIC	??_R3CBox@UI@@8					; UI::CBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBox@UI@@8					; UI::CBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBox@UI@@8			; UI::CBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBar@UI@@6B@				; UI::CBar::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBar@UI@@@8				; UI::CBar `RTTI Type Descriptor'
PUBLIC	??_R3CBar@UI@@8					; UI::CBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBar@UI@@8					; UI::CBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBar@UI@@8			; UI::CBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CLine@UI@@6B@				; UI::CLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCLine@UI@@@8				; UI::CLine `RTTI Type Descriptor'
PUBLIC	??_R3CLine@UI@@8				; UI::CLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CLine@UI@@8				; UI::CLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CLine@UI@@8			; UI::CLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBar3D@UI@@6B@				; UI::CBar3D::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBar3D@UI@@@8				; UI::CBar3D `RTTI Type Descriptor'
PUBLIC	??_R3CBar3D@UI@@8				; UI::CBar3D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBar3D@UI@@8				; UI::CBar3D::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBar3D@UI@@8			; UI::CBar3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextLine@UI@@6B@				; UI::CTextLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextLine@UI@@@8			; UI::CTextLine `RTTI Type Descriptor'
PUBLIC	??_R3CTextLine@UI@@8				; UI::CTextLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextLine@UI@@8				; UI::CTextLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextLine@UI@@8			; UI::CTextLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CNumberLine@UI@@6B@			; UI::CNumberLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNumberLine@UI@@@8			; UI::CNumberLine `RTTI Type Descriptor'
PUBLIC	??_R3CNumberLine@UI@@8				; UI::CNumberLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNumberLine@UI@@8				; UI::CNumberLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNumberLine@UI@@8			; UI::CNumberLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CImageBox@UI@@6B@				; UI::CImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImageBox@UI@@@8			; UI::CImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CImageBox@UI@@8				; UI::CImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImageBox@UI@@8				; UI::CImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImageBox@UI@@8			; UI::CImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRenderTarget@UI@@6B@			; UI::CRenderTarget::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRenderTarget@UI@@@8			; UI::CRenderTarget `RTTI Type Descriptor'
PUBLIC	??_R3CRenderTarget@UI@@8			; UI::CRenderTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRenderTarget@UI@@8			; UI::CRenderTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRenderTarget@UI@@8		; UI::CRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMarkBox@UI@@6B@				; UI::CMarkBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMarkBox@UI@@@8				; UI::CMarkBox `RTTI Type Descriptor'
PUBLIC	??_R3CMarkBox@UI@@8				; UI::CMarkBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMarkBox@UI@@8				; UI::CMarkBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMarkBox@UI@@8			; UI::CMarkBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CExpandedImageBox@UI@@6B@			; UI::CExpandedImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCExpandedImageBox@UI@@@8		; UI::CExpandedImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CExpandedImageBox@UI@@8			; UI::CExpandedImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CExpandedImageBox@UI@@8			; UI::CExpandedImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CExpandedImageBox@UI@@8		; UI::CExpandedImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAniImageBox@UI@@6B@			; UI::CAniImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAniImageBox@UI@@@8			; UI::CAniImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAniImageBox@UI@@8		; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CButton@UI@@6B@				; UI::CButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCButton@UI@@@8				; UI::CButton `RTTI Type Descriptor'
PUBLIC	??_R3CButton@UI@@8				; UI::CButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CButton@UI@@8				; UI::CButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CButton@UI@@8			; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRadioButton@UI@@6B@			; UI::CRadioButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRadioButton@UI@@@8			; UI::CRadioButton `RTTI Type Descriptor'
PUBLIC	??_R3CRadioButton@UI@@8				; UI::CRadioButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRadioButton@UI@@8				; UI::CRadioButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRadioButton@UI@@8		; UI::CRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CToggleButton@UI@@6B@			; UI::CToggleButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCToggleButton@UI@@@8			; UI::CToggleButton `RTTI Type Descriptor'
PUBLIC	??_R3CToggleButton@UI@@8			; UI::CToggleButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CToggleButton@UI@@8			; UI::CToggleButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CToggleButton@UI@@8		; UI::CToggleButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDragButton@UI@@6B@			; UI::CDragButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDragButton@UI@@@8			; UI::CDragButton `RTTI Type Descriptor'
PUBLIC	??_R3CDragButton@UI@@8				; UI::CDragButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDragButton@UI@@8				; UI::CDragButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDragButton@UI@@8			; UI::CDragButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@@8 ; std::_Func_base<bool,tweeny::tween<float> &,float> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8 ; std::_Func_base<bool,tweeny::tween<float> &,float>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8 ; std::_Func_base<bool,tweeny::tween<float> &,float>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8 ; std::_Func_base<bool,tweeny::tween<float> &,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Func_base@MMMM@std@@@8		; std::_Func_base<float,float,float,float> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_base@MMMM@std@@8			; std::_Func_base<float,float,float,float>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_base@MMMM@std@@8			; std::_Func_base<float,float,float,float>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_base@MMMM@std@@8		; std::_Func_base<float,float,float,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@ ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@@8 ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8	; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8	; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8 ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@32cd365b
PUBLIC	__real@348bdd11
PUBLIC	__real@3638b88e
PUBLIC	__real@37cfb4c2
PUBLIC	__real@39500bf1
PUBLIC	__real@3ab609aa
PUBLIC	__real@3c088886
PUBLIC	__real@3d2aaaa3
PUBLIC	__real@3e22f983
PUBLIC	__real@3e2aaaab
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fc90fdb
PUBLIC	__real@40490fdb
PUBLIC	__real@40c90fdb
PUBLIC	__real@41800000
PUBLIC	__real@bf800000
PUBLIC	__real@bfc90fdb
PUBLIC	__real@c0490fdb
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_rand:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	_D3DXMatrixMultiply@12:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	___std_max_element_2@12:PROC
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?_Xbad_function_call@std@@YAXXZ:PROC		; std::_Xbad_function_call
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	__imp__PyString_InternFromString:PROC
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z:PROC ; PyCallClassMemberFunc
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z:PROC ; PyCallClassMemberFunc
EXTRN	?PyCallClassMemberFunc_ByPyString@@YA_NPAU_object@@00@Z:PROC ; PyCallClassMemberFunc_ByPyString
EXTRN	?GetCurrentSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetCurrentSecond
EXTRN	?GetElapsedMilliecond@CTimer@@QAEKXZ:PROC	; CTimer::GetElapsedMilliecond
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	?IsType@CResource@@QAE_NK@Z:PROC		; CResource::IsType
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetTypeResourcePointer@CResourceManager@@QAEPAVCResource@@PBDH@Z:PROC ; CResourceManager::GetTypeResourcePointer
EXTRN	?IsFileExist@CResourceManager@@SA_NPBD@Z:PROC	; CResourceManager::IsFileExist
EXTRN	?Type@CGraphicImage@@SAKXZ:PROC			; CGraphicImage::Type
EXTRN	?Render@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Render
EXTRN	?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z:PROC ; CGraphicImageInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicImageInstance@@QAEXMM@Z:PROC ; CGraphicImageInstance::SetPosition
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?IsEmpty@CGraphicImageInstance@@QBE_NXZ:PROC	; CGraphicImageInstance::IsEmpty
EXTRN	?GetWidth@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetWidth
EXTRN	?GetHeight@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetHeight
EXTRN	?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ:PROC ; CGraphicImageInstance::GetGraphicImagePointer
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	??0CGraphicTextInstance@@QAE@XZ:PROC		; CGraphicTextInstance::CGraphicTextInstance
EXTRN	??1CGraphicTextInstance@@UAE@XZ:PROC		; CGraphicTextInstance::~CGraphicTextInstance
EXTRN	?Destroy@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::Destroy
EXTRN	?Update@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::Update
EXTRN	?Render@CGraphicTextInstance@@QAEXPAUtagRECT@@@Z:PROC ; CGraphicTextInstance::Render
EXTRN	?ShowCursor@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::ShowCursor
EXTRN	?HideCursor@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::HideCursor
EXTRN	?IsShowCursor@CGraphicTextInstance@@QAE_NXZ:PROC ; CGraphicTextInstance::IsShowCursor
EXTRN	?SetColor@CGraphicTextInstance@@QAEXK@Z:PROC	; CGraphicTextInstance::SetColor
EXTRN	?SetColor@CGraphicTextInstance@@QAEXMMMM@Z:PROC	; CGraphicTextInstance::SetColor
EXTRN	?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z:PROC ; CGraphicTextInstance::SetHorizonalAlign
EXTRN	?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z:PROC ; CGraphicTextInstance::SetVerticalAlign
EXTRN	?SetMax@CGraphicTextInstance@@QAEXH@Z:PROC	; CGraphicTextInstance::SetMax
EXTRN	?SetTextPointer@CGraphicTextInstance@@QAEXPAVCGraphicText@@@Z:PROC ; CGraphicTextInstance::SetTextPointer
EXTRN	?SetValue@CGraphicTextInstance@@QAEXPBDI@Z:PROC	; CGraphicTextInstance::SetValue
EXTRN	?SetPosition@CGraphicTextInstance@@QAEXMMM@Z:PROC ; CGraphicTextInstance::SetPosition
EXTRN	?GetSpecificTextWidth@CGraphicTextInstance@@QAEHPBD@Z:PROC ; CGraphicTextInstance::GetSpecificTextWidth
EXTRN	?SetSecret@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetSecret
EXTRN	?SetOutline@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetOutline
EXTRN	?SetFeather@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetFeather
EXTRN	?SetMultiLine@CGraphicTextInstance@@QAEX_N@Z:PROC ; CGraphicTextInstance::SetMultiLine
EXTRN	?SetLimitWidth@CGraphicTextInstance@@QAEXM@Z:PROC ; CGraphicTextInstance::SetLimitWidth
EXTRN	?GetTextSize@CGraphicTextInstance@@QAEXPAH0@Z:PROC ; CGraphicTextInstance::GetTextSize
EXTRN	?GetValueStringReference@CGraphicTextInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; CGraphicTextInstance::GetValueStringReference
EXTRN	?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHH@Z:PROC ; CGraphicTextInstance::PixelPositionToCharacterPosition
EXTRN	?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHHH@Z:PROC ; CGraphicTextInstance::PixelPositionToCharacterPosition
EXTRN	?CharacterPositionToPixelPosition@CGraphicTextInstance@@QAE?AV?$tuple@HHH@std@@H@Z:PROC ; CGraphicTextInstance::CharacterPositionToPixelPosition
EXTRN	?TextPositionToRenderPosition@CGraphicTextInstance@@QAEHH@Z:PROC ; CGraphicTextInstance::TextPositionToRenderPosition
EXTRN	?SetRenderingRect@CGraphicTextInstance@@QAEXMMMM@Z:PROC ; CGraphicTextInstance::SetRenderingRect
EXTRN	?iSetRenderingRect@CGraphicTextInstance@@QAEXHHHH@Z:PROC ; CGraphicTextInstance::iSetRenderingRect
EXTRN	?SetRenderBox@CGraphicTextInstance@@QAEXAAUtagRECT@@@Z:PROC ; CGraphicTextInstance::SetRenderBox
EXTRN	?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z:PROC ; CGraphicMarkInstance::SetImageFileName
EXTRN	?Render@CGraphicMarkInstance@@QAEXXZ:PROC	; CGraphicMarkInstance::Render
EXTRN	?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z:PROC ; CGraphicMarkInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicMarkInstance@@QAEXMM@Z:PROC ; CGraphicMarkInstance::SetPosition
EXTRN	?SetIndex@CGraphicMarkInstance@@QAEXI@Z:PROC	; CGraphicMarkInstance::SetIndex
EXTRN	?SetScale@CGraphicMarkInstance@@QAEXM@Z:PROC	; CGraphicMarkInstance::SetScale
EXTRN	?Load@CGraphicMarkInstance@@QAEXXZ:PROC		; CGraphicMarkInstance::Load
EXTRN	?GetWidth@CGraphicMarkInstance@@QAEHXZ:PROC	; CGraphicMarkInstance::GetWidth
EXTRN	?GetHeight@CGraphicMarkInstance@@QAEHXZ:PROC	; CGraphicMarkInstance::GetHeight
EXTRN	?New@CGraphicMarkInstance@@SAPAV1@XZ:PROC	; CGraphicMarkInstance::New
EXTRN	?Delete@CGraphicMarkInstance@@SAXPAV1@@Z:PROC	; CGraphicMarkInstance::Delete
EXTRN	??0CGraphicExpandedImageInstance@@QAE@XZ:PROC	; CGraphicExpandedImageInstance::CGraphicExpandedImageInstance
EXTRN	??1CGraphicExpandedImageInstance@@UAE@XZ:PROC	; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
EXTRN	?Destroy@CGraphicExpandedImageInstance@@QAEXXZ:PROC ; CGraphicExpandedImageInstance::Destroy
EXTRN	?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z:PROC ; CGraphicExpandedImageInstance::SetOrigin
EXTRN	?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z:PROC ; CGraphicExpandedImageInstance::SetRotation
EXTRN	?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z:PROC ; CGraphicExpandedImageInstance::SetScale
EXTRN	?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z:PROC ; CGraphicExpandedImageInstance::SetRenderingRect
EXTRN	?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z:PROC ; CGraphicExpandedImageInstance::SetRenderingMode
EXTRN	?SetRenderBox@CGraphicExpandedImageInstance@@QAEXAAUtagRECT@@@Z:PROC ; CGraphicExpandedImageInstance::SetRenderBox
EXTRN	?GetPixelColor@CGraphicExpandedImageInstance@@QAEKKK@Z:PROC ; CGraphicExpandedImageInstance::GetPixelColor
EXTRN	?SetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMMMMMM@Z:PROC ; CGraphicExpandedImageInstance::SetExpandedRenderingRect
EXTRN	?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z:PROC ; CGraphicExpandedImageInstance::iSetRenderingRect
EXTRN	?SetTextureRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z:PROC ; CGraphicExpandedImageInstance::SetTextureRenderingRect
EXTRN	?New@CGraphicExpandedImageInstance@@SAPAV1@XZ:PROC ; CGraphicExpandedImageInstance::New
EXTRN	?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z:PROC ; CGraphicExpandedImageInstance::Delete
EXTRN	?RenderLine2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderLine2d
EXTRN	?RenderBox2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBox2d
EXTRN	?RenderBar2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBar2d
EXTRN	?SetDiffuseColor@CScreen@@QAEXK@Z:PROC		; CScreen::SetDiffuseColor
EXTRN	?SetDiffuseColor@CScreen@@QAEXMMMM@Z:PROC	; CScreen::SetDiffuseColor
EXTRN	?RenderCoolTimeBox@CPythonGraphic@@QAEXMMMM@Z:PROC ; CPythonGraphic::RenderCoolTimeBox
EXTRN	?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z:PROC ; UI::CWindowManager::GetMousePosition
EXTRN	?BuildEmptyTuple@UI@@YAPAU_object@@XZ:PROC	; UI::BuildEmptyTuple
EXTRN	??_Ebad_optional_access@experimental@std@@UAEPAXI@Z:PROC ; std::experimental::bad_optional_access::`vector deleting destructor'
EXTRN	??0CGraphicRenderTarget@@QAE@XZ:PROC		; CGraphicRenderTarget::CGraphicRenderTarget
EXTRN	??1CGraphicRenderTarget@@QAE@XZ:PROC		; CGraphicRenderTarget::~CGraphicRenderTarget
EXTRN	?SetRenderTarget@CGraphicRenderTarget@@QAEXI@Z:PROC ; CGraphicRenderTarget::SetRenderTarget
EXTRN	?SetRenderHair@CGraphicRenderTarget@@QAEXI@Z:PROC ; CGraphicRenderTarget::SetRenderHair
EXTRN	?SetRenderArmor@CGraphicRenderTarget@@QAEXI@Z:PROC ; CGraphicRenderTarget::SetRenderArmor
EXTRN	?SetRenderWeapon@CGraphicRenderTarget@@QAEXI@Z:PROC ; CGraphicRenderTarget::SetRenderWeapon
EXTRN	?SetRenderSash@CGraphicRenderTarget@@QAEXI@Z:PROC ; CGraphicRenderTarget::SetRenderSash
EXTRN	?SetRendererMotion@CGraphicRenderTarget@@QAEXI@Z:PROC ; CGraphicRenderTarget::SetRendererMotion
EXTRN	?SetLightPosition@CGraphicRenderTarget@@QAEXUD3DXVECTOR3@@@Z:PROC ; CGraphicRenderTarget::SetLightPosition
EXTRN	?GetLightPosition@CGraphicRenderTarget@@QBEABUD3DXVECTOR3@@XZ:PROC ; CGraphicRenderTarget::GetLightPosition
EXTRN	?SetRenderDistance@CGraphicRenderTarget@@QAEXM@Z:PROC ; CGraphicRenderTarget::SetRenderDistance
EXTRN	?GetRenderDistance@CGraphicRenderTarget@@QAEMXZ:PROC ; CGraphicRenderTarget::GetRenderDistance
EXTRN	?SetRotation@CGraphicRenderTarget@@QAEXM@Z:PROC	; CGraphicRenderTarget::SetRotation
EXTRN	?GetRotation@CGraphicRenderTarget@@QAEMXZ:PROC	; CGraphicRenderTarget::GetRotation
EXTRN	?SetRotationMode@CGraphicRenderTarget@@QAEX_N@Z:PROC ; CGraphicRenderTarget::SetRotationMode
EXTRN	?Update@CGraphicRenderTarget@@QAEXXZ:PROC	; CGraphicRenderTarget::Update
EXTRN	?Render@CGraphicRenderTarget@@QAEXMMMM@Z:PROC	; CGraphicRenderTarget::Render
EXTRN	?Destroy@CGraphicRenderTarget@@QAEXXZ:PROC	; CGraphicRenderTarget::Destroy
EXTRN	??_ECWindow@UI@@UAEPAXI@Z:PROC			; UI::CWindow::`vector deleting destructor'
EXTRN	??_ECUiWikiRenderTarget@UI@@UAEPAXI@Z:PROC	; UI::CUiWikiRenderTarget::`vector deleting destructor'
EXTRN	??_ECBox@UI@@UAEPAXI@Z:PROC			; UI::CBox::`vector deleting destructor'
EXTRN	??_ECBar@UI@@UAEPAXI@Z:PROC			; UI::CBar::`vector deleting destructor'
EXTRN	??_ECLine@UI@@UAEPAXI@Z:PROC			; UI::CLine::`vector deleting destructor'
EXTRN	??_ECBar3D@UI@@UAEPAXI@Z:PROC			; UI::CBar3D::`vector deleting destructor'
EXTRN	??_ECTextLine@UI@@UAEPAXI@Z:PROC		; UI::CTextLine::`vector deleting destructor'
EXTRN	??_ECNumberLine@UI@@UAEPAXI@Z:PROC		; UI::CNumberLine::`vector deleting destructor'
EXTRN	??_ECImageBox@UI@@UAEPAXI@Z:PROC		; UI::CImageBox::`vector deleting destructor'
EXTRN	??_ECRenderTarget@UI@@UAEPAXI@Z:PROC		; UI::CRenderTarget::`vector deleting destructor'
EXTRN	??_ECMarkBox@UI@@UAEPAXI@Z:PROC			; UI::CMarkBox::`vector deleting destructor'
EXTRN	??_ECExpandedImageBox@UI@@UAEPAXI@Z:PROC	; UI::CExpandedImageBox::`vector deleting destructor'
EXTRN	??_ECAniImageBox@UI@@UAEPAXI@Z:PROC		; UI::CAniImageBox::`vector deleting destructor'
EXTRN	??_ECButton@UI@@UAEPAXI@Z:PROC			; UI::CButton::`vector deleting destructor'
EXTRN	??_ECRadioButton@UI@@UAEPAXI@Z:PROC		; UI::CRadioButton::`vector deleting destructor'
EXTRN	??_ECToggleButton@UI@@UAEPAXI@Z:PROC		; UI::CToggleButton::`vector deleting destructor'
EXTRN	??_ECDragButton@UI@@UAEPAXI@Z:PROC		; UI::CDragButton::`vector deleting destructor'
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z:PROC ; CStateManager::GetTransform
EXTRN	?RenderTexture@CWikiRenderTarget@@QBEXXZ:PROC	; CWikiRenderTarget::RenderTexture
EXTRN	?SetRenderingRect@CWikiRenderTarget@@QBEXPAUtagRECT@@@Z:PROC ; CWikiRenderTarget::SetRenderingRect
EXTRN	?SetRenderingBox@CWikiRenderTarget@@QBEXPAUtagRECT@@@Z:PROC ; CWikiRenderTarget::SetRenderingBox
EXTRN	?GetRenderTarget@CWikiRenderTargetManager@@QAE?AV?$shared_ptr@VCWikiRenderTarget@@@std@@H@Z:PROC ; CWikiRenderTargetManager::GetRenderTarget
EXTRN	?CreateRenderTarget@CWikiRenderTargetManager@@QAE_NHHH@Z:PROC ; CWikiRenderTargetManager::CreateRenderTarget
EXTRN	?GetString@CPythonConfig@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4EClassTypes@1@ABV23@1@Z:PROC ; CPythonConfig::GetString
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A:BYTE ; CGraphicExpandedImageInstance::ms_kPool
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A DD 01H DUP (?) ; CSingleton<CPythonGraphic>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A DD 01H DUP (?) ; CSingleton<UI::CWindowManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCWikiRenderTargetManager@@@@0PAVCWikiRenderTargetManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCWikiRenderTargetManager@@@@0PAVCWikiRenderTargetManager@@A DD 01H DUP (?) ; CSingleton<CWikiRenderTargetManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonConfig@@@@0PAVCPythonConfig@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonConfig@@@@0PAVCPythonConfig@@A DD 01H DUP (?) ; CSingleton<CPythonConfig>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA DD 01H DUP (?)	; `UI::CWindow::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CWindow::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A
_BSS	SEGMENT
?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A DD 01H DUP (?) ; `UI::CWindow::OnUpdate'::`2'::poFuncName_OnUpdate
_BSS	ENDS
;	COMDAT ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA DD 01H DUP (?) ; `UI::CWindow::OnUpdate'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA DD 01H DUP (?)	; `UI::CBar3D::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CBar3D::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CTextLine@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CTextLine@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CTextLine::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CTextLine@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CTextLine@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CTextLine::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CNumberLine@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CNumberLine@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CNumberLine::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CNumberLine@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CNumberLine@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CNumberLine::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CImageBox@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CImageBox@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CImageBox::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CImageBox@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CImageBox@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CImageBox::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CExpandedImageBox::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CExpandedImageBox::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CAniImageBox::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CAniImageBox::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CButton@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CButton@UI@@SAKXZ@4KA DD 01H DUP (?)	; `UI::CButton::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CButton@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CButton@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CButton::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c0490fdb
CONST	SEGMENT
__real@c0490fdb DD 0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT __real@bfc90fdb
CONST	SEGMENT
__real@bfc90fdb DD 0bfc90fdbr			; -1.5708
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e2aaaab
CONST	SEGMENT
__real@3e2aaaab DD 03e2aaaabr			; 0.166667
CONST	ENDS
;	COMDAT __real@3e22f983
CONST	SEGMENT
__real@3e22f983 DD 03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT __real@3d2aaaa3
CONST	SEGMENT
__real@3d2aaaa3 DD 03d2aaaa3r			; 0.0416666
CONST	ENDS
;	COMDAT __real@3c088886
CONST	SEGMENT
__real@3c088886 DD 03c088886r			; 0.00833333
CONST	ENDS
;	COMDAT __real@3ab609aa
CONST	SEGMENT
__real@3ab609aa DD 03ab609aar			; 0.00138884
CONST	ENDS
;	COMDAT __real@39500bf1
CONST	SEGMENT
__real@39500bf1 DD 039500bf1r			; 0.000198409
CONST	ENDS
;	COMDAT __real@37cfb4c2
CONST	SEGMENT
__real@37cfb4c2 DD 037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT __real@3638b88e
CONST	SEGMENT
__real@3638b88e DD 03638b88er			; 2.75256e-06
CONST	ENDS
;	COMDAT __real@348bdd11
CONST	SEGMENT
__real@348bdd11 DD 0348bdd11r			; 2.60516e-07
CONST	ENDS
;	COMDAT __real@32cd365b
CONST	SEGMENT
__real@32cd365b DD 032cd365br			; 2.38899e-08
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8 DD FLAT:??_R0?AV?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@@8 ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8 ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@MMMM@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8 DD 00H	; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@@8
data$rs	SEGMENT
??_R0?AV?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@ DD 00H ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@@8
	DD	FLAT:??_R3?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8 DD FLAT:??_R0?AV?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@@8 ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8 ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8 DD 00H ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@@8
data$rs	SEGMENT
??_R0?AV?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dc'
	DB	'd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@ DD 00H ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@@8
	DD	FLAT:??_R3?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8 DD FLAT:??_R0?AV?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@@8 ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8 ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8 DD 00H ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@@8
data$rs	SEGMENT
??_R0?AV?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10'
	DB	'd6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@ DD 00H ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@@8
	DD	FLAT:??_R3?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_base@MMMM@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_base@MMMM@std@@8 DD FLAT:??_R0?AV?$_Func_base@MMMM@std@@@8 ; std::_Func_base<float,float,float,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_base@MMMM@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_base@MMMM@std@@8
rdata$r	SEGMENT
??_R2?$_Func_base@MMMM@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_base@MMMM@std@@8 ; std::_Func_base<float,float,float,float>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_base@MMMM@std@@8
rdata$r	SEGMENT
??_R3?$_Func_base@MMMM@std@@8 DD 00H			; std::_Func_base<float,float,float,float>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Func_base@MMMM@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_base@MMMM@std@@@8
data$rs	SEGMENT
??_R0?AV?$_Func_base@MMMM@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_base<float,float,float,float> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_base@MMMM@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8 DD FLAT:??_R0?AV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@@8 ; std::_Func_base<bool,tweeny::tween<float> &,float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	SEGMENT
??_R2?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8 ; std::_Func_base<bool,tweeny::tween<float> &,float>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	SEGMENT
??_R3?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8 DD 00H ; std::_Func_base<bool,tweeny::tween<float> &,float>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@@8
data$rs	SEGMENT
??_R0?AV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Func_base<bool,tweeny::tween<float> &,float> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CDragButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDragButton@UI@@8 DD FLAT:??_R0?AVCDragButton@UI@@@8 ; UI::CDragButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CDragButton@UI@@8
rdata$r	SEGMENT
??_R2CDragButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CDragButton@UI@@8 ; UI::CDragButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CDragButton@UI@@8
rdata$r	SEGMENT
??_R3CDragButton@UI@@8 DD 00H				; UI::CDragButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDragButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCDragButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CDragButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDragButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDragButton@UI@@6B@
rdata$r	SEGMENT
??_R4CDragButton@UI@@6B@ DD 00H				; UI::CDragButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDragButton@UI@@@8
	DD	FLAT:??_R3CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CToggleButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CToggleButton@UI@@8 DD FLAT:??_R0?AVCToggleButton@UI@@@8 ; UI::CToggleButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CToggleButton@UI@@8
rdata$r	SEGMENT
??_R2CToggleButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CToggleButton@UI@@8 ; UI::CToggleButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CToggleButton@UI@@8
rdata$r	SEGMENT
??_R3CToggleButton@UI@@8 DD 00H				; UI::CToggleButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCToggleButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCToggleButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CToggleButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCToggleButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CToggleButton@UI@@6B@
rdata$r	SEGMENT
??_R4CToggleButton@UI@@6B@ DD 00H			; UI::CToggleButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCToggleButton@UI@@@8
	DD	FLAT:??_R3CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRadioButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRadioButton@UI@@8 DD FLAT:??_R0?AVCRadioButton@UI@@@8 ; UI::CRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CRadioButton@UI@@8
rdata$r	SEGMENT
??_R2CRadioButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CRadioButton@UI@@8 ; UI::CRadioButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CRadioButton@UI@@8
rdata$r	SEGMENT
??_R3CRadioButton@UI@@8 DD 00H				; UI::CRadioButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRadioButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCRadioButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CRadioButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRadioButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CRadioButton@UI@@6B@
rdata$r	SEGMENT
??_R4CRadioButton@UI@@6B@ DD 00H			; UI::CRadioButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRadioButton@UI@@@8
	DD	FLAT:??_R3CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CButton@UI@@8 DD FLAT:??_R0?AVCButton@UI@@@8 ; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CButton@UI@@8
rdata$r	SEGMENT
??_R2CButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CButton@UI@@8	; UI::CButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CButton@UI@@8
rdata$r	SEGMENT
??_R3CButton@UI@@8 DD 00H				; UI::CButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CButton@UI@@6B@
rdata$r	SEGMENT
??_R4CButton@UI@@6B@ DD 00H				; UI::CButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCButton@UI@@@8
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAniImageBox@UI@@8 DD FLAT:??_R0?AVCAniImageBox@UI@@@8 ; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R2CAniImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8 ; UI::CAniImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R3CAniImageBox@UI@@8 DD 00H				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAniImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCAniImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CAniImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAniImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CAniImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CAniImageBox@UI@@6B@ DD 00H			; UI::CAniImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAniImageBox@UI@@@8
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CExpandedImageBox@UI@@8 DD FLAT:??_R0?AVCExpandedImageBox@UI@@@8 ; UI::CExpandedImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R2CExpandedImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CExpandedImageBox@UI@@8 ; UI::CExpandedImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CImageBox@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R3CExpandedImageBox@UI@@8 DD 00H			; UI::CExpandedImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCExpandedImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCExpandedImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CExpandedImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCExpandedImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CExpandedImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CExpandedImageBox@UI@@6B@ DD 00H			; UI::CExpandedImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCExpandedImageBox@UI@@@8
	DD	FLAT:??_R3CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMarkBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMarkBox@UI@@8 DD FLAT:??_R0?AVCMarkBox@UI@@@8 ; UI::CMarkBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CMarkBox@UI@@8
rdata$r	SEGMENT
??_R2CMarkBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CMarkBox@UI@@8 ; UI::CMarkBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CMarkBox@UI@@8
rdata$r	SEGMENT
??_R3CMarkBox@UI@@8 DD 00H				; UI::CMarkBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMarkBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCMarkBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CMarkBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMarkBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CMarkBox@UI@@6B@
rdata$r	SEGMENT
??_R4CMarkBox@UI@@6B@ DD 00H				; UI::CMarkBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMarkBox@UI@@@8
	DD	FLAT:??_R3CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRenderTarget@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRenderTarget@UI@@8 DD FLAT:??_R0?AVCRenderTarget@UI@@@8 ; UI::CRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRenderTarget@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CRenderTarget@UI@@8
rdata$r	SEGMENT
??_R2CRenderTarget@UI@@8 DD FLAT:??_R1A@?0A@EA@CRenderTarget@UI@@8 ; UI::CRenderTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CImageBox@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CRenderTarget@UI@@8
rdata$r	SEGMENT
??_R3CRenderTarget@UI@@8 DD 00H				; UI::CRenderTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CRenderTarget@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRenderTarget@UI@@@8
data$rs	SEGMENT
??_R0?AVCRenderTarget@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CRenderTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRenderTarget@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CRenderTarget@UI@@6B@
rdata$r	SEGMENT
??_R4CRenderTarget@UI@@6B@ DD 00H			; UI::CRenderTarget::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRenderTarget@UI@@@8
	DD	FLAT:??_R3CRenderTarget@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CImageBox@UI@@8 DD FLAT:??_R0?AVCImageBox@UI@@@8 ; UI::CImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CImageBox@UI@@8
rdata$r	SEGMENT
??_R2CImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CImageBox@UI@@8 ; UI::CImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CImageBox@UI@@8
rdata$r	SEGMENT
??_R3CImageBox@UI@@8 DD 00H				; UI::CImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CImageBox@UI@@6B@ DD 00H				; UI::CImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImageBox@UI@@@8
	DD	FLAT:??_R3CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CNumberLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNumberLine@UI@@8 DD FLAT:??_R0?AVCNumberLine@UI@@@8 ; UI::CNumberLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CNumberLine@UI@@8
rdata$r	SEGMENT
??_R2CNumberLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CNumberLine@UI@@8 ; UI::CNumberLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CNumberLine@UI@@8
rdata$r	SEGMENT
??_R3CNumberLine@UI@@8 DD 00H				; UI::CNumberLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNumberLine@UI@@@8
data$rs	SEGMENT
??_R0?AVCNumberLine@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CNumberLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNumberLine@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CNumberLine@UI@@6B@
rdata$r	SEGMENT
??_R4CNumberLine@UI@@6B@ DD 00H				; UI::CNumberLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNumberLine@UI@@@8
	DD	FLAT:??_R3CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextLine@UI@@8 DD FLAT:??_R0?AVCTextLine@UI@@@8 ; UI::CTextLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextLine@UI@@8
rdata$r	SEGMENT
??_R2CTextLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CTextLine@UI@@8 ; UI::CTextLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextLine@UI@@8
rdata$r	SEGMENT
??_R3CTextLine@UI@@8 DD 00H				; UI::CTextLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextLine@UI@@@8
data$rs	SEGMENT
??_R0?AVCTextLine@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CTextLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextLine@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTextLine@UI@@6B@
rdata$r	SEGMENT
??_R4CTextLine@UI@@6B@ DD 00H				; UI::CTextLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextLine@UI@@@8
	DD	FLAT:??_R3CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBar3D@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBar3D@UI@@8 DD FLAT:??_R0?AVCBar3D@UI@@@8 ; UI::CBar3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBar3D@UI@@8
rdata$r	SEGMENT
??_R2CBar3D@UI@@8 DD FLAT:??_R1A@?0A@EA@CBar3D@UI@@8	; UI::CBar3D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBar3D@UI@@8
rdata$r	SEGMENT
??_R3CBar3D@UI@@8 DD 00H				; UI::CBar3D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBar3D@UI@@@8
data$rs	SEGMENT
??_R0?AVCBar3D@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CBar3D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBar3D@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBar3D@UI@@6B@
rdata$r	SEGMENT
??_R4CBar3D@UI@@6B@ DD 00H				; UI::CBar3D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBar3D@UI@@@8
	DD	FLAT:??_R3CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CLine@UI@@8 DD FLAT:??_R0?AVCLine@UI@@@8	; UI::CLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CLine@UI@@8
rdata$r	SEGMENT
??_R2CLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CLine@UI@@8	; UI::CLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CLine@UI@@8
rdata$r	SEGMENT
??_R3CLine@UI@@8 DD 00H					; UI::CLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCLine@UI@@@8
data$rs	SEGMENT
??_R0?AVCLine@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCLine@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CLine@UI@@6B@
rdata$r	SEGMENT
??_R4CLine@UI@@6B@ DD 00H				; UI::CLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCLine@UI@@@8
	DD	FLAT:??_R3CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBar@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBar@UI@@8 DD FLAT:??_R0?AVCBar@UI@@@8	; UI::CBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBar@UI@@8
rdata$r	SEGMENT
??_R2CBar@UI@@8 DD FLAT:??_R1A@?0A@EA@CBar@UI@@8	; UI::CBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBar@UI@@8
rdata$r	SEGMENT
??_R3CBar@UI@@8 DD 00H					; UI::CBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBar@UI@@@8
data$rs	SEGMENT
??_R0?AVCBar@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBar@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBar@UI@@6B@
rdata$r	SEGMENT
??_R4CBar@UI@@6B@ DD 00H				; UI::CBar::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBar@UI@@@8
	DD	FLAT:??_R3CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBox@UI@@8 DD FLAT:??_R0?AVCBox@UI@@@8	; UI::CBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBox@UI@@8
rdata$r	SEGMENT
??_R2CBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CBox@UI@@8	; UI::CBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBox@UI@@8
rdata$r	SEGMENT
??_R3CBox@UI@@8 DD 00H					; UI::CBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCBox@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBox@UI@@6B@
rdata$r	SEGMENT
??_R4CBox@UI@@6B@ DD 00H				; UI::CBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBox@UI@@@8
	DD	FLAT:??_R3CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CUiWikiRenderTarget@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CUiWikiRenderTarget@UI@@8 DD FLAT:??_R0?AVCUiWikiRenderTarget@UI@@@8 ; UI::CUiWikiRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CUiWikiRenderTarget@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CUiWikiRenderTarget@UI@@8
rdata$r	SEGMENT
??_R2CUiWikiRenderTarget@UI@@8 DD FLAT:??_R1A@?0A@EA@CUiWikiRenderTarget@UI@@8 ; UI::CUiWikiRenderTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CUiWikiRenderTarget@UI@@8
rdata$r	SEGMENT
??_R3CUiWikiRenderTarget@UI@@8 DD 00H			; UI::CUiWikiRenderTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CUiWikiRenderTarget@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCUiWikiRenderTarget@UI@@@8
data$rs	SEGMENT
??_R0?AVCUiWikiRenderTarget@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CUiWikiRenderTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCUiWikiRenderTarget@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CUiWikiRenderTarget@UI@@6B@
rdata$r	SEGMENT
??_R4CUiWikiRenderTarget@UI@@6B@ DD 00H			; UI::CUiWikiRenderTarget::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCUiWikiRenderTarget@UI@@@8
	DD	FLAT:??_R3CUiWikiRenderTarget@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_optional_access@experimental@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_optional_access@experimental@std@@8 DD FLAT:??_R0?AVbad_optional_access@experimental@std@@@8 ; std::experimental::bad_optional_access::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_optional_access@experimental@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_optional_access@experimental@std@@8
rdata$r	SEGMENT
??_R2bad_optional_access@experimental@std@@8 DD FLAT:??_R1A@?0A@EA@bad_optional_access@experimental@std@@8 ; std::experimental::bad_optional_access::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_optional_access@experimental@std@@8
rdata$r	SEGMENT
??_R3bad_optional_access@experimental@std@@8 DD 00H	; std::experimental::bad_optional_access::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_optional_access@experimental@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_optional_access@experimental@std@@6B@
rdata$r	SEGMENT
??_R4bad_optional_access@experimental@std@@6B@ DD 00H	; std::experimental::bad_optional_access::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_optional_access@experimental@std@@@8
	DD	FLAT:??_R3bad_optional_access@experimental@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWindow@UI@@8 DD FLAT:??_R0?AVCWindow@UI@@@8 ; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CWindow@UI@@8
rdata$r	SEGMENT
??_R2CWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CWindow@UI@@8	; UI::CWindow::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWindow@UI@@8
rdata$r	SEGMENT
??_R3CWindow@UI@@8 DD 00H				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CWindow@UI@@6B@ DD 00H				; UI::CWindow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWindow@UI@@@8
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0P6AMMMM@Z@8
data$r	SEGMENT
??_R0P6AMMMM@Z@8 DD FLAT:??_7type_info@@6B@		; float (__cdecl*)(float,float,float) `RTTI Type Descriptor'
	DD	00H
	DB	'.P6AMMMM@Z', 00H
data$r	ENDS
;	COMDAT ??_7?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@ DD FLAT:??_R4?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@ ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPAV?$_Func_base@MMMM@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEPAV?$_Func_base@MMMM@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEM$$QAM00@Z
	DD	FLAT:?_Target_type@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEX_N@Z
	DD	FLAT:?_Get@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_R0?AV<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@8
data$r	SEGMENT
??_R0?AV<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_3ac3554338970f4f53a10d6f6ce8edc5> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@8
data$r	SEGMENT
??_R0?AV<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@8 DD FLAT:??_7type_info@@6B@ ; <lambda_4e53bff9a6aeda8ea50dcd08e066d322> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@', 00H
data$r	ENDS
;	COMDAT ??_7?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@ DD FLAT:??_R4?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@ ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAE_NAAV?$tween@M$$V@tweeny@@$$QAM@Z
	DD	FLAT:?_Target_type@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEX_N@Z
	DD	FLAT:?_Get@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_7?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@ DD FLAT:??_R4?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@ ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::`vftable'
	DD	FLAT:?_Copy@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z
	DD	FLAT:?_Move@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z
	DD	FLAT:?_Do_call@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAE_NAAV?$tween@M$$V@tweeny@@$$QAM@Z
	DD	FLAT:?_Target_type@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEABVtype_info@@XZ
	DD	FLAT:?_Delete_this@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEX_N@Z
	DD	FLAT:?_Get@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPBXXZ
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KGBCPEAI@bad?5optional?5access@
CONST	SEGMENT
??_C@_0BE@KGBCPEAI@bad?5optional?5access@ DB 'bad optional access', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_optional_access@experimental@std@@@8??0bad_optional_access@experimental@std@@QAE@ABV012@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_optional_access@experimental@std@@@8??0bad_optional_access@experimental@std@@QAE@ABV012@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_optional_access@experimental@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_optional_access@experimental@std@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_optional_access@experimental@std@@@8
data$r	SEGMENT
??_R0?AVbad_optional_access@experimental@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::experimental::bad_optional_access `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_optional_access@experimental@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_optional_access@experimental@std@@
xdata$x	SEGMENT
__CTA3?AVbad_optional_access@experimental@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_optional_access@experimental@std@@@8??0bad_optional_access@experimental@std@@QAE@ABV012@@Z12
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_optional_access@experimental@std@@
xdata$x	SEGMENT
__TI3?AVbad_optional_access@experimental@std@@ DD 00H
	DD	FLAT:??1bad_optional_access@experimental@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_optional_access@experimental@std@@
xdata$x	ENDS
;	COMDAT ?DIFFUSE_COLOR@?1??SetSlotDiffuseColor@CAniImageBox@UI@@QAEXPBDE@Z@4QAY03$$CBMA
CONST	SEGMENT
?DIFFUSE_COLOR@?1??SetSlotDiffuseColor@CAniImageBox@UI@@QAEXPBDE@Z@4QAY03$$CBMA DD 03f6eeeefr ; 0.933333 ; `UI::CAniImageBox::SetSlotDiffuseColor'::`2'::DIFFUSE_COLOR
	DD	03d30b0b1r			; 0.0431373
	DD	03d30b0b1r			; 0.0431373
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_06GJPOLLJG@OnMove@
CONST	SEGMENT
??_C@_06GJPOLLJG@OnMove@ DB 'OnMove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBGLGPDJ@OnToggleDown@
CONST	SEGMENT
??_C@_0N@NBGLGPDJ@OnToggleDown@ DB 'OnToggleDown', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HGABHAMN@OnToggleUp@
CONST	SEGMENT
??_C@_0L@HGABHAMN@OnToggleUp@ DB 'OnToggleUp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OKLAKJGM@OnSetDisableVisual@
CONST	SEGMENT
??_C@_0BD@OKLAKJGM@OnSetDisableVisual@ DB 'OnSetDisableVisual', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GJIJKBGL@OnSetDownVisual@
CONST	SEGMENT
??_C@_0BA@GJIJKBGL@OnSetDownVisual@ DB 'OnSetDownVisual', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DIDBMCJO@OnSetOverVisual@
CONST	SEGMENT
??_C@_0BA@DIDBMCJO@OnSetOverVisual@ DB 'OnSetOverVisual', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MBBNNMAO@OnSetUpVisual@
CONST	SEGMENT
??_C@_0O@MBBNNMAO@OnSetUpVisual@ DB 'OnSetUpVisual', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCIAMHJN@HideToolTip@
CONST	SEGMENT
??_C@_0M@HCIAMHJN@HideToolTip@ DB 'HideToolTip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LEFCMAKP@ShowToolTip@
CONST	SEGMENT
??_C@_0M@LEFCMAKP@ShowToolTip@ DB 'ShowToolTip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FJAHACEO@DownEvent@
CONST	SEGMENT
??_C@_09FJAHACEO@DownEvent@ DB 'DownEvent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MFFHPOPB@CallEvent@
CONST	SEGMENT
??_C@_09MFFHPOPB@CallEvent@ DB 'CallEvent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OFEOKGEK@CButton@
CONST	SEGMENT
??_C@_07OFEOKGEK@CButton@ DB 'CButton', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CCNGDMCN@OnKeyFrame@
CONST	SEGMENT
??_C@_0L@CCNGDMCN@OnKeyFrame@ DB 'OnKeyFrame', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LBHHAGOH@OnEndFrame@
CONST	SEGMENT
??_C@_0L@LBHHAGOH@OnEndFrame@ DB 'OnEndFrame', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LBBHECOO@CAniImageBox@
CONST	SEGMENT
??_C@_0N@LBBHECOO@CAniImageBox@ DB 'CAniImageBox', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DJHPPMGJ@CExpandedImageBox@
CONST	SEGMENT
??_C@_0BC@DJHPPMGJ@CExpandedImageBox@ DB 'CExpandedImageBox', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KMLFEEMH@CImageBox@
CONST	SEGMENT
??_C@_09KMLFEEMH@CImageBox@ DB 'CImageBox', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DLFHDFGL@?4sub@
CONST	SEGMENT
??_C@_04DLFHDFGL@?4sub@ DB '.sub', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05EHJFGOBE@p?4sub@
CONST	SEGMENT
??_C@_05EHJFGOBE@p?4sub@ DB 'p.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FJEGFMDH@g?4sub@
CONST	SEGMENT
??_C@_05FJEGFMDH@g?4sub@ DB 'g.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PINNHPFB@m?4sub@
CONST	SEGMENT
??_C@_05PINNHPFB@m?4sub@ DB 'm.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPHNCABK@plus?4sub@
CONST	SEGMENT
??_C@_08FPHNCABK@plus?4sub@ DB 'plus.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHAKIBOD@percent?4sub@
CONST	SEGMENT
??_C@_0M@MHAKIBOD@percent?4sub@ DB 'percent.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JMLAABIP@slash?4sub@
CONST	SEGMENT
??_C@_09JMLAABIP@slash?4sub@ DB 'slash.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POBNNLPJ@questionmark?4sub@
CONST	SEGMENT
??_C@_0BB@POBNNLPJ@questionmark?4sub@ DB 'questionmark.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GPLBLMNE@colon?4sub@
CONST	SEGMENT
??_C@_09GPLBLMNE@colon?4sub@ DB 'colon.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
CONST	SEGMENT
??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@ DB 'd:/ymir work'
	DB	'/ui/game/taskbar/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HGOBFKBB@CNumberLine@
CONST	SEGMENT
??_C@_0M@HGOBFKBB@CNumberLine@ DB 'CNumberLine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CELBIPME@OnRenderSelected@
CONST	SEGMENT
??_C@_0BB@CELBIPME@OnRenderSelected@ DB 'OnRenderSelected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FAHLGLIA@?4fnt@
CONST	SEGMENT
??_C@_04FAHLGLIA@?4fnt@ DB '.fnt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09BAJHDABN@CTextLine@
CONST	SEGMENT
??_C@_09BAJHDABN@CTextLine@ DB 'CTextLine', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICLMADCA@CBar3D@
CONST	SEGMENT
??_C@_06ICLMADCA@CBar3D@ DB 'CBar3D', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@OFBMEDEK@CWikiRenderTargetManager?5could?5@
CONST	SEGMENT
??_C@_0EB@OFBMEDEK@CWikiRenderTargetManager?5could?5@ DB 'CWikiRenderTarg'
	DB	'etManager could not create the texture. w %d h %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KEJGBDKK@OnPressExitKey@
CONST	SEGMENT
??_C@_0P@KEJGBDKK@OnPressExitKey@ DB 'OnPressExitKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HCFLIMGH@OnPressEscapeKey@
CONST	SEGMENT
??_C@_0BB@HCFLIMGH@OnPressEscapeKey@ DB 'OnPressEscapeKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LHAEDNPI@OnPressReturnKey@
CONST	SEGMENT
??_C@_0BB@LHAEDNPI@OnPressReturnKey@ DB 'OnPressReturnKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGNLLPEG@OnKeyUp@
CONST	SEGMENT
??_C@_07NGNLLPEG@OnKeyUp@ DB 'OnKeyUp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMHFBEC@OnKeyDown@
CONST	SEGMENT
??_C@_09CMHFBEC@OnKeyDown@ DB 'OnKeyDown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@
CONST	SEGMENT
??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@ DB 'OnIMECloseReadingWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@
CONST	SEGMENT
??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@ DB 'OnIMEOpenReadingWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@
CONST	SEGMENT
??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@ DB 'OnIMECloseCandidateList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@
CONST	SEGMENT
??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@ DB 'OnIMEOpenCandidateList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EHKLBB@OnIMEChangeCodePage@
CONST	SEGMENT
??_C@_0BE@EHKLBB@OnIMEChangeCodePage@ DB 'OnIMEChangeCodePage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BMPDGPBH@OnIMEKeyDown@
CONST	SEGMENT
??_C@_0N@BMPDGPBH@OnIMEKeyDown@ DB 'OnIMEKeyDown', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NBAFCOEB@OnIMEUpdateSelection@
CONST	SEGMENT
??_C@_0BF@NBAFCOEB@OnIMEUpdateSelection@ DB 'OnIMEUpdateSelection', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PILLCCFN@OnIMEReturn@
CONST	SEGMENT
??_C@_0M@PILLCCFN@OnIMEReturn@ DB 'OnIMEReturn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFELFLOI@OnIMETab@
CONST	SEGMENT
??_C@_08HFELFLOI@OnIMETab@ DB 'OnIMETab', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GMLJAJMG@OnScrollWheelEvent@
CONST	SEGMENT
??_C@_0BD@GMLJAJMG@OnScrollWheelEvent@ DB 'OnScrollWheelEvent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIHNMIHG@?$CIi?$CJ@
CONST	SEGMENT
??_C@_03LIHNMIHG@?$CIi?$CJ@ DB '(i)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@
CONST	SEGMENT
??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@ DB 'OnMouseMiddleButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@
CONST	SEGMENT
??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@ DB 'OnMouseMiddleButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@
CONST	SEGMENT
??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@ DB 'OnMouseRightButtonD'
	DB	'oubleClick', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@
CONST	SEGMENT
??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@ DB 'OnMouseRightButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@
CONST	SEGMENT
??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@ DB 'OnMouseRightButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@
CONST	SEGMENT
??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@ DB 'OnMouseLeftButtonDou'
	DB	'bleClick', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@
CONST	SEGMENT
??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@ DB 'OnMouseLeftButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@
CONST	SEGMENT
??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@ DB 'OnMouseLeftButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGOFHNMI@OnIMEUpdate@
CONST	SEGMENT
??_C@_0M@DGOFHNMI@OnIMEUpdate@ DB 'OnIMEUpdate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LOOKECNH@OnTop@
CONST	SEGMENT
??_C@_05LOOKECNH@OnTop@ DB 'OnTop', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06OCNPCIEO@OnDrop@
CONST	SEGMENT
??_C@_06OCNPCIEO@OnDrop@ DB 'OnDrop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGDIFFEM@OnMouseMove@
CONST	SEGMENT
??_C@_0M@MGDIFFEM@OnMouseMove@ DB 'OnMouseMove', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KLLBNOAI@OnMouseOverOut@
CONST	SEGMENT
??_C@_0P@KLLBNOAI@OnMouseOverOut@ DB 'OnMouseOverOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JKDAFDCC@OnMouseOverIn@
CONST	SEGMENT
??_C@_0O@JKDAFDCC@OnMouseOverIn@ DB 'OnMouseOverIn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEGPCFGM@OnKillFocus@
CONST	SEGMENT
??_C@_0M@CEGPCFGM@OnKillFocus@ DB 'OnKillFocus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GIMNGBCD@OnSetFocus@
CONST	SEGMENT
??_C@_0L@GIMNGBCD@OnSetFocus@ DB 'OnSetFocus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFKNBOJP@OnMoveWindow@
CONST	SEGMENT
??_C@_0N@PFKNBOJP@OnMoveWindow@ DB 'OnMoveWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ECAEGPAI@OnMouseDrag@
CONST	SEGMENT
??_C@_0M@ECAEGPAI@OnMouseDrag@ DB 'OnMouseDrag', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04INACLLOK@?$CIii?$CJ@
CONST	SEGMENT
??_C@_04INACLLOK@?$CIii?$CJ@ DB '(ii)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@
CONST	SEGMENT
??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@ DB ' CWindow::'
	DB	'SetTop - Failed to find child window', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PENIBOGB@OnAfterRender@
CONST	SEGMENT
??_C@_0O@PENIBOGB@OnAfterRender@ DB 'OnAfterRender', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PAJMEILO@OnRender@
CONST	SEGMENT
??_C@_08PAJMEILO@OnRender@ DB 'OnRender', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NPECNJEC@OnUpdateLockedCursor@
CONST	SEGMENT
??_C@_0BF@NPECNJEC@OnUpdateLockedCursor@ DB 'OnUpdateLockedCursor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02PDIHAGKM@ii@
CONST	SEGMENT
??_C@_02PDIHAGKM@ii@ DB 'ii', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08DCJEAFK@OnUpdate@
CONST	SEGMENT
??_C@_08DCJEAFK@OnUpdate@ DB 'OnUpdate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JLNHBMCE@OnHide@
CONST	SEGMENT
??_C@_06JLNHBMCE@OnHide@ DB 'OnHide', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BAAKKIGI@ANIMATION_MODE@
CONST	SEGMENT
??_C@_0P@BAAKKIGI@ANIMATION_MODE@ DB 'ANIMATION_MODE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0@
CONST	SEGMENT
??_C@_01GBGANLPD@0@ DB '0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1@
CONST	SEGMENT
??_C@_01HIHLOKLC@1@ DB '1', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07EFPFKGGH@CWindow@
CONST	SEGMENT
??_C@_07EFPFKGGH@CWindow@ DB 'CWindow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CDragButton@UI@@6B@
CONST	SEGMENT
??_7CDragButton@UI@@6B@ DD FLAT:??_R4CDragButton@UI@@6B@ ; UI::CDragButton::`vftable'
	DD	FLAT:??_ECDragButton@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CButton@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CButton@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CButton@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CButton@UI@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CToggleButton@UI@@6B@
CONST	SEGMENT
??_7CToggleButton@UI@@6B@ DD FLAT:??_R4CToggleButton@UI@@6B@ ; UI::CToggleButton::`vftable'
	DD	FLAT:??_ECToggleButton@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CButton@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CToggleButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CToggleButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CButton@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CButton@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CButton@UI@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CRadioButton@UI@@6B@
CONST	SEGMENT
??_7CRadioButton@UI@@6B@ DD FLAT:??_R4CRadioButton@UI@@6B@ ; UI::CRadioButton::`vftable'
	DD	FLAT:??_ECRadioButton@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CButton@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CRadioButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CRadioButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CButton@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CButton@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CButton@UI@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CButton@UI@@6B@
CONST	SEGMENT
??_7CButton@UI@@6B@ DD FLAT:??_R4CButton@UI@@6B@	; UI::CButton::`vftable'
	DD	FLAT:??_ECButton@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CButton@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CButton@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CButton@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CButton@UI@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CAniImageBox@UI@@6B@
CONST	SEGMENT
??_7CAniImageBox@UI@@6B@ DD FLAT:??_R4CAniImageBox@UI@@6B@ ; UI::CAniImageBox::`vftable'
	DD	FLAT:??_ECAniImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CAniImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CAniImageBox@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
	DD	FLAT:?OnEndFrame@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnKeyFrame@CAniImageBox@UI@@MAEXE@Z
CONST	ENDS
;	COMDAT ??_7CExpandedImageBox@UI@@6B@
CONST	SEGMENT
??_7CExpandedImageBox@UI@@6B@ DD FLAT:??_R4CExpandedImageBox@UI@@6B@ ; UI::CExpandedImageBox::`vftable'
	DD	FLAT:??_ECExpandedImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CExpandedImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CExpandedImageBox@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CExpandedImageBox@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CExpandedImageBox@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CExpandedImageBox@UI@@UAEXXZ
	DD	FLAT:?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CMarkBox@UI@@6B@
CONST	SEGMENT
??_7CMarkBox@UI@@6B@ DD FLAT:??_R4CMarkBox@UI@@6B@	; UI::CMarkBox::`vftable'
	DD	FLAT:??_ECMarkBox@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
	DD	FLAT:?OnCreateInstance@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CMarkBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CRenderTarget@UI@@6B@
CONST	SEGMENT
??_7CRenderTarget@UI@@6B@ DD FLAT:??_R4CRenderTarget@UI@@6B@ ; UI::CRenderTarget::`vftable'
	DD	FLAT:??_ECRenderTarget@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CRenderTarget@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CRenderTarget@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
	DD	FLAT:?OnCreateInstance@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CImageBox@UI@@6B@
CONST	SEGMENT
??_7CImageBox@UI@@6B@ DD FLAT:??_R4CImageBox@UI@@6B@	; UI::CImageBox::`vftable'
	DD	FLAT:??_ECImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
	DD	FLAT:?OnCreateInstance@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CNumberLine@UI@@6B@
CONST	SEGMENT
??_7CNumberLine@UI@@6B@ DD FLAT:??_R4CNumberLine@UI@@6B@ ; UI::CNumberLine::`vftable'
	DD	FLAT:??_ECNumberLine@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CNumberLine@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CNumberLine@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CNumberLine@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
CONST	ENDS
;	COMDAT ??_7CTextLine@UI@@6B@
CONST	SEGMENT
??_7CTextLine@UI@@6B@ DD FLAT:??_R4CTextLine@UI@@6B@	; UI::CTextLine::`vftable'
	DD	FLAT:??_ECTextLine@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CTextLine@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CTextLine@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CTextLine@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CTextLine@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CTextLine@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CTextLine@UI@@UAEXXZ
	DD	FLAT:?OnSetText@CTextLine@UI@@MAEXPBD@Z
CONST	ENDS
;	COMDAT ??_7CBar3D@UI@@6B@
CONST	SEGMENT
??_7CBar3D@UI@@6B@ DD FLAT:??_R4CBar3D@UI@@6B@		; UI::CBar3D::`vftable'
	DD	FLAT:??_ECBar3D@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CBar3D@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
CONST	ENDS
;	COMDAT ??_7CLine@UI@@6B@
CONST	SEGMENT
??_7CLine@UI@@6B@ DD FLAT:??_R4CLine@UI@@6B@		; UI::CLine::`vftable'
	DD	FLAT:??_ECLine@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CLine@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CLine@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
CONST	ENDS
;	COMDAT ??_7CBar@UI@@6B@
CONST	SEGMENT
??_7CBar@UI@@6B@ DD FLAT:??_R4CBar@UI@@6B@		; UI::CBar::`vftable'
	DD	FLAT:??_ECBar@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CBar@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CBar@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
CONST	ENDS
;	COMDAT ??_7CBox@UI@@6B@
CONST	SEGMENT
??_7CBox@UI@@6B@ DD FLAT:??_R4CBox@UI@@6B@		; UI::CBox::`vftable'
	DD	FLAT:??_ECBox@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CBox@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CBox@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
CONST	ENDS
;	COMDAT ??_7CUiWikiRenderTarget@UI@@6B@
CONST	SEGMENT
??_7CUiWikiRenderTarget@UI@@6B@ DD FLAT:??_R4CUiWikiRenderTarget@UI@@6B@ ; UI::CUiWikiRenderTarget::`vftable'
	DD	FLAT:??_ECUiWikiRenderTarget@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
CONST	ENDS
;	COMDAT ??_7CWindow@UI@@6B@
CONST	SEGMENT
??_7CWindow@UI@@6B@ DD FLAT:??_R4CWindow@UI@@6B@	; UI::CWindow::`vftable'
	DD	FLAT:??_ECWindow@UI@@UAEPAXI@Z
	DD	FLAT:?IsShow@CWindow@UI@@UAE_NXZ
	DD	FLAT:?OnRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnAfterRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnScrollEvent@CWindow@UI@@UAEHABH@Z
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressReturnKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
	DD	FLAT:?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
	DD	FLAT:?GetRenderingWidth@CWindow@UI@@UAEHXZ
	DD	FLAT:?GetRenderingHeight@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetRenderingRect@CWindow@UI@@EAEXXZ
CONST	ENDS
;	COMDAT ?cubicOut@easing@tweeny@@2UcubicOutEasing@12@B
CONST	SEGMENT
?cubicOut@easing@tweeny@@2UcubicOutEasing@12@B	ORG $+1	; tweeny::easing::cubicOut
CONST	ENDS
;	COMDAT ?def@easing@tweeny@@2UdefaultEasing@12@B
CONST	SEGMENT
?def@easing@tweeny@@2UdefaultEasing@12@B	ORG $+1	; tweeny::easing::def
CONST	ENDS
;	COMDAT ??_7bad_optional_access@experimental@std@@6B@
CONST	SEGMENT
??_7bad_optional_access@experimental@std@@6B@ DD FLAT:??_R4bad_optional_access@experimental@std@@6B@ ; std::experimental::bad_optional_access::`vftable'
	DD	FLAT:??_Ebad_optional_access@experimental@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
data$r	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U?$tweenpoint@M@detail@tweeny@@AAU123@@?$_Default_allocator_traits@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@SAXAAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@1@QAU?$tweenpoint@M@detail@tweeny@@AAU345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$tweenpoint@M@detail@tweeny@@AAU123@@?$_Default_allocator_traits@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@SAXAAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@1@QAU?$tweenpoint@M@detail@tweeny@@AAU345@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$tweenpoint@M@detail@tweeny@@AAU123@@?$_Default_allocator_traits@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@SAXAAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@1@QAU?$tweenpoint@M@detail@tweeny@@AAU345@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$construct@U?$tweenpoint@M@detail@tweeny@@AAU123@@?$_Default_allocator_traits@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@SAXAAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@1@QAU?$tweenpoint@M@detail@tweeny@@AAU345@@Z$5
__ehfuncinfo$??$construct@U?$tweenpoint@M@detail@tweeny@@AAU123@@?$_Default_allocator_traits@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@SAXAAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@1@QAU?$tweenpoint@M@detail@tweeny@@AAU345@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$construct@U?$tweenpoint@M@detail@tweeny@@AAU123@@?$_Default_allocator_traits@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@SAXAAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@1@QAU?$tweenpoint@M@detail@tweeny@@AAU345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@1@QAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@AAV31@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@1@QAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@AAV31@@Z$0
__ehfuncinfo$??$construct@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@1@QAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@AAV31@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@1@QAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@AAV31@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace_back@AAU?$tweenpoint@M@detail@tweeny@@@?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAEXAAU?$tweenpoint@M@detail@tweeny@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace_back@AAU?$tweenpoint@M@detail@tweeny@@@?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAEXAAU?$tweenpoint@M@detail@tweeny@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace_back@AAU?$tweenpoint@M@detail@tweeny@@@?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAEXAAU?$tweenpoint@M@detail@tweeny@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Emplace_back@AAU?$tweenpoint@M@detail@tweeny@@@?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAEXAAU?$tweenpoint@M@detail@tweeny@@@Z$5
__ehfuncinfo$??$_Emplace_back@AAU?$tweenpoint@M@detail@tweeny@@@?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAEXAAU?$tweenpoint@M@detail@tweeny@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Emplace_back@AAU?$tweenpoint@M@detail@tweeny@@@?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAEXAAU?$tweenpoint@M@detail@tweeny@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABV12@@?$_Default_allocator_traits@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@1@QAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV31@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABV12@@?$_Default_allocator_traits@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@1@QAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV31@@Z$0
__ehfuncinfo$??$construct@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABV12@@?$_Default_allocator_traits@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@1@QAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV31@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABV12@@?$_Default_allocator_traits@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@SAXAAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@1@QAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV31@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace_back@AAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAEXAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace_back@AAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAEXAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@@Z$0
__ehfuncinfo$??$_Emplace_back@AAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAEXAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace_back@AAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAEXAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@PAU?$tweenpoint@M@detail@tweeny@@PAU123@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@00AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAU?$tweenpoint@M@detail@tweeny@@PAU123@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@00AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAU?$tweenpoint@M@detail@tweeny@@PAU123@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@00AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAU?$tweenpoint@M@detail@tweeny@@PAU123@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@00AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAU?$tweenpoint@M@detail@tweeny@@PAU123@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@00AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$6
__ehfuncinfo$??$_Uninitialized_copy@PAU?$tweenpoint@M@detail@tweeny@@PAU123@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@00AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@PAU?$tweenpoint@M@detail@tweeny@@PAU123@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@00AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Copy_n_unchecked4@PAU?$tweenpoint@M@detail@tweeny@@IPAU123@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Copy_n_unchecked4@PAU?$tweenpoint@M@detail@tweeny@@IPAU123@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0@Z$1
__ehfuncinfo$??$_Copy_n_unchecked4@PAU?$tweenpoint@M@detail@tweeny@@IPAU123@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Copy_n_unchecked4@PAU?$tweenpoint@M@detail@tweeny@@IPAU123@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$6
__ehfuncinfo$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@PAV12@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@00AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@PAV12@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@00AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@PAV12@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@00AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z$1
__ehfuncinfo$??$_Uninitialized_copy@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@PAV12@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@00AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@PAV12@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@00AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z$0
__tryblocktable$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z$3
__unwindtable$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace_back_with_unused_capacity@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace_back_with_unused_capacity@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV21@@Z$0
__ehfuncinfo$??$_Emplace_back_with_unused_capacity@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace_back_with_unused_capacity@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z$1
__ehfuncinfo$??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z$1
__ehfuncinfo$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Construct_n@ABQAU?$tweenpoint@M@detail@tweeny@@ABQAU123@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXIABQAU?$tweenpoint@M@detail@tweeny@@0@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$_Construct_n@ABQAU?$tweenpoint@M@detail@tweeny@@ABQAU123@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXIABQAU?$tweenpoint@M@detail@tweeny@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Construct_n@ABQAU?$tweenpoint@M@detail@tweeny@@ABQAU123@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXIABQAU?$tweenpoint@M@detail@tweeny@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct_n@ABQAU?$tweenpoint@M@detail@tweeny@@ABQAU123@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXIABQAU?$tweenpoint@M@detail@tweeny@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Construct_n@ABQAU?$tweenpoint@M@detail@tweeny@@ABQAU123@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXIABQAU?$tweenpoint@M@detail@tweeny@@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Construct_n@ABQAU?$tweenpoint@M@detail@tweeny@@ABQAU123@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXIABQAU?$tweenpoint@M@detail@tweeny@@0@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Construct_n@ABQAU?$tweenpoint@M@detail@tweeny@@ABQAU123@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXIABQAU?$tweenpoint@M@detail@tweeny@@0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??$_Construct_n@ABQAU?$tweenpoint@M@detail@tweeny@@ABQAU123@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXIABQAU?$tweenpoint@M@detail@tweeny@@0@Z$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z$1
__ehfuncinfo$??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct_n@ABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABQAV12@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct_n@ABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABQAV12@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Construct_n@ABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABQAV12@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Construct_n@ABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABQAV12@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@0@Z$2
__ehfuncinfo$??$_Construct_n@ABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABQAV12@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Construct_n@ABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@ABQAV12@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace_one_at_back@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace_one_at_back@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV21@@Z$0
__ehfuncinfo$??$_Emplace_one_at_back@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace_one_at_back@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEAAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@ABV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z$0
__ehfuncinfo$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z$1
__ehfuncinfo$??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$tweenpoint@M@detail@tweeny@@QAE@ABU012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$tweenpoint@M@detail@tweeny@@QAE@ABU012@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$tweenpoint@M@detail@tweeny@@QAE@ABU012@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$tweenpoint@M@detail@tweeny@@QAE@ABU012@@Z$5
__ehfuncinfo$??0?$tweenpoint@M@detail@tweeny@@QAE@ABU012@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$tweenpoint@M@detail@tweeny@@QAE@ABU012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?4V?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@V?$function@$$A6AMMMM@Z@1@$0A@@?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?4V?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@V?$function@$$A6AMMMM@Z@1@$0A@@?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAEAAV01@ABV01@@Z$1
__ehfuncinfo$??$?4V?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@V?$function@$$A6AMMMM@Z@1@$0A@@?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?4V?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@V?$function@$$A6AMMMM@Z@1@$0A@@?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tuple_val@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tuple_val@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@ABU01@@Z$1
__ehfuncinfo$??0?$_Tuple_val@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tuple_val@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$function@$$A6AMMMM@Z@std@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$function@$$A6AMMMM@Z@std@@QAEAAV01@ABV01@@Z$1
__ehfuncinfo$??4?$function@$$A6AMMMM@Z@std@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$function@$$A6AMMMM@Z@std@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$function@$$A6AMMMM@Z@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$function@$$A6AMMMM@Z@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$function@$$A6AMMMM@Z@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$function@$$A6AMMMM@Z@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@ABV01@@Z$2
__ehfuncinfo$??0?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z$1
__ehfuncinfo$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z$1
__ehfuncinfo$??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z$4
__ehfuncinfo$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CButton@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$3
__ehfuncinfo$??0CButton@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CButton@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CButton@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CButton@UI@@SAKXZ$0
__ehfuncinfo$?Type@CButton@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CButton@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAniImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CAniImageBox@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CAniImageBox@UI@@SAKXZ$0
__ehfuncinfo$?Type@CAniImageBox@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CAniImageBox@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CExpandedImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CExpandedImageBox@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CExpandedImageBox@UI@@SAKXZ$0
__ehfuncinfo$?Type@CExpandedImageBox@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CExpandedImageBox@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CMarkBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CRenderTarget@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRenderTarget@UI@@QAE@PAU_object@@@Z$0
__ehfuncinfo$??0CRenderTarget@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CRenderTarget@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CImageBox@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CImageBox@UI@@SAKXZ$0
__ehfuncinfo$?Type@CImageBox@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CImageBox@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetNumber@CNumberLine@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetNumber@CNumberLine@UI@@QAEXPBD@Z$0
__ehfuncinfo$?SetNumber@CNumberLine@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CNumberLine@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$3
__ehfuncinfo$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CNumberLine@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$3
__ehfuncinfo$??0CNumberLine@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CNumberLine@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CNumberLine@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CNumberLine@UI@@SAKXZ$0
__ehfuncinfo$?Type@CNumberLine@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CNumberLine@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetFontName@CTextLine@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetFontName@CTextLine@UI@@QAEXPBD@Z$0
__ehfuncinfo$?SetFontName@CTextLine@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetFontName@CTextLine@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CTextLine@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTextLine@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$1
__ehfuncinfo$??0CTextLine@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CTextLine@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CTextLine@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CTextLine@UI@@SAKXZ$0
__ehfuncinfo$?Type@CTextLine@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CTextLine@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CBar3D@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CBar3D@UI@@SAKXZ$0
__ehfuncinfo$?Type@CBar3D@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CBar3D@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ$0
__ehfuncinfo$?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ$0
__ehfuncinfo$?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$0
	DD	05H
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$1
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z$2
__ehfuncinfo$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z$0
__ehfuncinfo$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$tween@M$$V@tweeny@@AAE@M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@AAE@M@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@AAE@M@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$tween@M$$V@tweeny@@AAE@M@Z$2
__ehfuncinfo$??0?$tween@M$$V@tweeny@@AAE@M@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$tween@M$$V@tweeny@@AAE@M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAEXABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAEXABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@@Z$0
__ehfuncinfo$?push_back@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAEXABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAEXABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z$2
__ehfuncinfo$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@ABV01@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@ABV01@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@ABV01@@Z$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z$1
__ehfuncinfo$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?from@?$tween@M$$V@tweeny@@SA?AV12@M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?from@?$tween@M$$V@tweeny@@SA?AV12@M@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?from@?$tween@M$$V@tweeny@@SA?AV12@M@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?from@?$tween@M$$V@tweeny@@SA?AV12@M@Z$3
__ehfuncinfo$?from@?$tween@M$$V@tweeny@@SA?AV12@M@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?from@?$tween@M$$V@tweeny@@SA?AV12@M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Hide@CWindow@UI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Hide@CWindow@UI@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Hide@CWindow@UI@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Hide@CWindow@UI@@QAEXXZ$3
__ehfuncinfo$?Hide@CWindow@UI@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Hide@CWindow@UI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Show@CWindow@UI@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Show@CWindow@UI@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Show@CWindow@UI@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Show@CWindow@UI@@QAEXXZ$3
__ehfuncinfo$?Show@CWindow@UI@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Show@CWindow@UI@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CWindow@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$1
__ehfuncinfo$??0CWindow@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CWindow@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CWindow@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CWindow@UI@@SAKXZ$0
__ehfuncinfo$?Type@CWindow@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CWindow@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1
__ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$run@M@defaultEasing@easing@tweeny@@SAMMMM@Z
_TEXT	SEGMENT
_position$ = 8						; size = 4
_start$ = 12						; size = 4
tv128 = 16						; size = 4
_end$ = 16						; size = 4
??$run@M@defaultEasing@easing@tweeny@@SAMMMM@Z PROC	; tweeny::easing::defaultEasing::run<float>, COMDAT

; 512  :                 static typename std::enable_if<supports_arithmetic_operations<T>::value && !std::is_integral<T>::value, T>::type run(float position, T start, T end) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 513  :                     return static_cast<T>((end - start) * position + start);

  00003	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _end$[ebp]
  00008	f3 0f 5c 4d 0c	 subss	 xmm1, DWORD PTR _start$[ebp]
  0000d	f3 0f 59 4d 08	 mulss	 xmm1, DWORD PTR _position$[ebp]
  00012	f3 0f 58 4d 0c	 addss	 xmm1, DWORD PTR _start$[ebp]
  00017	f3 0f 11 4d 10	 movss	 DWORD PTR tv128[ebp], xmm1
  0001c	d9 45 10	 fld	 DWORD PTR tv128[ebp]

; 514  :                 }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??$run@M@defaultEasing@easing@tweeny@@SAMMMM@Z ENDP	; tweeny::easing::defaultEasing::run<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEX_N@Z
_TEXT	SEGMENT
__Dealloc$ = 8						; size = 1
?_Delete_this@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEX_N@Z PROC ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Delete_this, COMDAT
; _this$ = ecx

; 848  :     void _Delete_this(bool _Dealloc) noexcept override { // destroy self

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 849  :         this->~_Func_impl_no_alloc();
; 850  :         if (_Dealloc) {

  00003	80 7d 08 00	 cmp	 BYTE PTR __Dealloc$[ebp], 0
  00007	74 0b		 je	 SHORT $LN6@Delete_thi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00009	6a 08		 push	 8
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00011	83 c4 08	 add	 esp, 8
$LN6@Delete_thi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 853  :     }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?_Delete_this@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEX_N@Z ENDP ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Get@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPBXXZ
_TEXT	SEGMENT
?_Get@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPBXXZ PROC ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Get, COMDAT
; _this$ = ecx

; 845  :         return _STD addressof(_Callee);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 846  :     }

  00003	c3		 ret	 0
?_Get@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPBXXZ ENDP ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Target_type@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEABVtype_info@@XZ
_TEXT	SEGMENT
?_Target_type@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEABVtype_info@@XZ PROC ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Target_type, COMDAT
; _this$ = ecx

; 837  : #if _HAS_STATIC_RTTI
; 838  :         return typeid(_Callable);

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ??_R0P6AMMMM@Z@8

; 839  : #else // _HAS_STATIC_RTTI
; 840  :         _CSTD abort();
; 841  : #endif // _HAS_STATIC_RTTI
; 842  :     }

  00005	c3		 ret	 0
?_Target_type@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEABVtype_info@@XZ ENDP ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Target_type
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Do_call@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEM$$QAM00@Z
_TEXT	SEGMENT
tv92 = -4						; size = 4
_<_Args_0>$ = 8						; size = 4
_<_Args_1>$ = 12					; size = 4
_<_Args_2>$ = 16					; size = 4
?_Do_call@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEM$$QAM00@Z PROC ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Do_call, COMDAT
; _this$ = ecx

; 832  :     _Rx _Do_call(_Types&&... _Args) override { // call wrapped function

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1572 :         return static_cast<_Callable&&>(_Obj)(static_cast<_Ty1&&>(_Arg1), static_cast<_Types2&&>(_Args2)...);

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0000a	89 45 fc	 mov	 DWORD PTR tv92[ebp], eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR _<_Args_2>$[ebp]
  00010	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00014	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_1>$[ebp]
  00017	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0001d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00021	8b 45 08	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00024	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0002e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00033	ff 55 fc	 call	 DWORD PTR tv92[ebp]
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 834  :     }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 0c 00	 ret	 12			; 0000000cH
?_Do_call@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEM$$QAM00@Z ENDP ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Do_call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Move@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEPAV?$_Func_base@MMMM@2@PAX@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Move@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEPAV?$_Func_base@MMMM@2@PAX@Z PROC ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Move, COMDAT
; _this$ = ecx

; 824  :     _Mybase* _Move(void* _Where) noexcept override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 825  :         if constexpr (_Is_large<_Func_impl_no_alloc>) {
; 826  :             return nullptr;
; 827  :         } else {
; 828  :             return ::new (_Where) _Func_impl_no_alloc(_STD move(_Callee));
; 829  :         }
; 830  :     }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?_Move@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EAEPAV?$_Func_base@MMMM@2@PAX@Z ENDP ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Move
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Copy@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPAV?$_Func_base@MMMM@2@PAX@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPAV?$_Func_base@MMMM@2@PAX@Z PROC ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Copy, COMDAT
; _this$ = ecx

; 816  :     _Mybase* _Copy(void* _Where) const override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 817  :         if constexpr (_Is_large<_Func_impl_no_alloc>) {
; 818  :             return _Global_new<_Func_impl_no_alloc>(_Callee);
; 819  :         } else {
; 820  :             return ::new (_Where) _Func_impl_no_alloc(_Callee);
; 821  :         }
; 822  :     }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?_Copy@?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@EBEPAV?$_Func_base@MMMM@2@PAX@Z ENDP ; std::_Func_impl_no_alloc<float (__cdecl*)(float,float,float),float,float,float,float>::_Copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??$_Test_callable@$$A6AMMMM@Z@std@@YA_NA6AMMMM@Z@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Test_callable@$$A6AMMMM@Z@std@@YA_NA6AMMMM@Z@Z PROC	; std::_Test_callable<float __cdecl(float,float,float)>, COMDAT

; 696  :     if constexpr (_Testable_callable_v<_Ty>) {
; 697  :         return !!_Arg;
; 698  :     } else {
; 699  :         return true;

  00000	b0 01		 mov	 al, 1

; 700  :     }
; 701  : }

  00002	c3		 ret	 0
??$_Test_callable@$$A6AMMMM@Z@std@@YA_NA6AMMMM@Z@Z ENDP	; std::_Test_callable<float __cdecl(float,float,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UdefaultEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UdefaultEasing@easing@1@U?$int2type@$0A@@01@@Z
_TEXT	SEGMENT
$T1 = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_f$ = 8							; size = 4
_easing$ = 12						; size = 1
___formal$ = 16						; size = 1
??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UdefaultEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UdefaultEasing@easing@1@U?$int2type@$0A@@01@@Z PROC ; tweeny::detail::easingfill<std::array<float,1>,std::tuple<std::function<float __cdecl(float,float,float)> >,tweeny::easing::defaultEasing>, COMDAT

; 1136 :         template<typename TypeTupleT, typename EasingCollectionT, typename EasingT> void easingfill(EasingCollectionT & f, EasingT easing, int2type<0>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _f$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 911  :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  00014	68 00 00 00 00	 push	 OFFSET ??$run@M@defaultEasing@easing@tweeny@@SAMMMM@Z ; tweeny::easing::defaultEasing::run<float>

; 866  :         _Set(nullptr);

  00019	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+36], 0

; 911  :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  00020	e8 00 00 00 00	 call	 ??$_Test_callable@$$A6AMMMM@Z@std@@YA_NA6AMMMM@Z@Z ; std::_Test_callable<float __cdecl(float,float,float)>
  00025	83 c4 04	 add	 esp, 4
  00028	84 c0		 test	 al, al
  0002a	74 14		 je	 SHORT $LN11@easingfill

; 912  :             return; // already empty
; 913  :         }
; 914  : 
; 915  :         using _Impl = _Func_impl_no_alloc<decay_t<_Fx>, _Ret, _Types...>;
; 916  :         if constexpr (_Is_large<_Impl>) {
; 917  :             // dynamically allocate _Val
; 918  :             _Set(_Global_new<_Impl>(_STD forward<_Fx>(_Val)));
; 919  :         } else {
; 920  :             // store _Val in-situ
; 921  :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  0002c	8d 45 d4	 lea	 eax, DWORD PTR $T1[ebp]

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  0002f	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], OFFSET ??_7?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@
  00036	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+4], OFFSET ??$run@M@defaultEasing@easing@tweeny@@SAMMMM@Z ; tweeny::easing::defaultEasing::run<float>

; 921  :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  0003d	89 45 f8	 mov	 DWORD PTR $T1[ebp+36], eax
$LN11@easingfill:

; 1090 :         function(_STD forward<_Fx>(_Func)).swap(*this);

  00040	56		 push	 esi
  00041	8d 4d d4	 lea	 ecx, DWORD PTR $T1[ebp]
  00044	e8 00 00 00 00	 call	 ?swap@?$function@$$A6AMMMM@Z@std@@QAEXAAV12@@Z ; std::function<float __cdecl(float,float,float)>::swap

; 888  :         return !_Getimpl();

  00049	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp+36]
  0004c	5e		 pop	 esi
  0004d	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0004f	74 11		 je	 SHORT $LN22@easingfill

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8d 45 d4	 lea	 eax, DWORD PTR $T1[ebp]
  00056	3b c8		 cmp	 ecx, eax
  00058	0f 95 c0	 setne	 al
  0005b	0f b6 c0	 movzx	 eax, al
  0005e	50		 push	 eax
  0005f	ff 52 10	 call	 DWORD PTR [edx+16]
$LN22@easingfill:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1138 :         }

  00062	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00065	33 cd		 xor	 ecx, ebp
  00067	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UdefaultEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UdefaultEasing@easing@1@U?$int2type@$0A@@01@@Z ENDP ; tweeny::detail::easingfill<std::array<float,1>,std::tuple<std::function<float __cdecl(float,float,float)> >,tweeny::easing::defaultEasing>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAIPAI@std@@YAPAIPAI00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAIPAI@std@@YAPAIPAI00@Z PROC		; std::_Copy_memmove<unsigned int *,unsigned int *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAIPAI@std@@YAPAIPAI00@Z ENDP		; std::_Copy_memmove<unsigned int *,unsigned int *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
;	COMDAT ??$__std_max_element@$$CBG@@YAPBGPBG0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$__std_max_element@$$CBG@@YAPBGPBG0@Z PROC		; __std_max_element<unsigned short const >, COMDAT

; 78   : _Ty* __std_max_element(_Ty* _First, _Ty* _Last) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   :     constexpr bool _Signed = _STD is_signed_v<_Ty>;
; 80   : 
; 81   :     if constexpr (sizeof(_Ty) == 1) {
; 82   :         return const_cast<_Ty*>(static_cast<const _Ty*>(__std_max_element_1(_First, _Last, _Signed)));
; 83   :     } else if constexpr (sizeof(_Ty) == 2) {
; 84   :         return const_cast<_Ty*>(static_cast<const _Ty*>(__std_max_element_2(_First, _Last, _Signed)));

  00003	6a 00		 push	 0
  00005	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00008	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000b	e8 00 00 00 00	 call	 ___std_max_element_2@12

; 85   :     } else if constexpr (sizeof(_Ty) == 4) {
; 86   :         return const_cast<_Ty*>(static_cast<const _Ty*>(__std_max_element_4(_First, _Last, _Signed)));
; 87   :     } else if constexpr (sizeof(_Ty) == 8) {
; 88   :         return const_cast<_Ty*>(static_cast<const _Ty*>(__std_max_element_8(_First, _Last, _Signed)));
; 89   :     } else {
; 90   :         static_assert(_STD _Always_false<_Ty>, "Unexpected size");
; 91   :     }
; 92   : }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$__std_max_element@$$CBG@@YAPBGPBG0@Z ENDP		; __std_max_element<unsigned short const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$via@UdefaultEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUdefaultEasing@easing@2@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
_f$ = 8							; size = 1
??$via@UdefaultEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUdefaultEasing@easing@2@@Z PROC ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::defaultEasing>, COMDAT
; _this$ = ecx

; 1186 :         inline void tweenpoint<Ts...>::via(F f) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1187 :             easingfill<typename traits::valuesType>(easings, f, int2type<sizeof...(Ts) - 1>{ });

  00004	c6 45 fc 00	 mov	 BYTE PTR $T1[ebp], 0
  00008	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  0000b	ff 75 fc	 push	 DWORD PTR $T1[ebp]
  0000e	ff 75 08	 push	 DWORD PTR _f$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UdefaultEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UdefaultEasing@easing@1@U?$int2type@$0A@@01@@Z ; tweeny::detail::easingfill<std::array<float,1>,std::tuple<std::function<float __cdecl(float,float,float)> >,tweeny::easing::defaultEasing>
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1188 :         }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??$via@UdefaultEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUdefaultEasing@easing@2@@Z ENDP ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::defaultEasing>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$during@G@?$tweenpoint@M@detail@tweeny@@QAEXG@Z
_TEXT	SEGMENT
_milis$ = 8						; size = 2
??$during@G@?$tweenpoint@M@detail@tweeny@@QAEXG@Z PROC	; tweeny::detail::tweenpoint<float>::during<unsigned short>, COMDAT
; _this$ = ecx

; 1163 :         inline void tweenpoint<Ts...>::during(D milis) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1164 :             for (uint16_t & t : durations) { t = static_cast<uint16_t>(milis); }

  00003	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  00006	8d 42 02	 lea	 eax, DWORD PTR [edx+2]
  00009	3b d0		 cmp	 edx, eax
  0000b	77 0e		 ja	 SHORT $LN3@during
  0000d	0f b7 45 08	 movzx	 eax, WORD PTR _milis$[ebp]
  00011	8b c8		 mov	 ecx, eax
  00013	c1 e0 10	 shl	 eax, 16			; 00000010H
  00016	0b c8		 or	 ecx, eax
  00018	66 89 0a	 mov	 WORD PTR [edx], cx
$LN3@during:

; 1165 :         }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??$during@G@?$tweenpoint@M@detail@tweeny@@QAEXG@Z ENDP	; tweeny::detail::tweenpoint<float>::during<unsigned short>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$run@M@cubicOutEasing@easing@tweeny@@SAMMMM@Z
_TEXT	SEGMENT
tv131 = 8						; size = 4
_position$ = 8						; size = 4
_start$ = 12						; size = 4
_end$ = 16						; size = 4
??$run@M@cubicOutEasing@easing@tweeny@@SAMMMM@Z PROC	; tweeny::easing::cubicOutEasing::run<float>, COMDAT

; 594  :                 static T run(float position, T start, T end) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 595  :                     --position;

  00003	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _position$[ebp]
  00008	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@3f800000

; 596  :                     return static_cast<T>((end - start) * (position * position * position + 1) + start);

  00010	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _end$[ebp]
  00015	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _start$[ebp]
  0001a	0f 28 d1	 movaps	 xmm2, xmm1
  0001d	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00021	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00025	f3 0f 58 15 00
	00 00 00	 addss	 xmm2, DWORD PTR __real@3f800000
  0002d	f3 0f 59 d0	 mulss	 xmm2, xmm0
  00031	f3 0f 58 55 0c	 addss	 xmm2, DWORD PTR _start$[ebp]
  00036	f3 0f 11 55 08	 movss	 DWORD PTR tv131[ebp], xmm2
  0003b	d9 45 08	 fld	 DWORD PTR tv131[ebp]

; 597  :                 }

  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??$run@M@cubicOutEasing@easing@tweeny@@SAMMMM@Z ENDP	; tweeny::easing::cubicOutEasing::run<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABI@?$vector@IV?$allocator@I@std@@@std@@AAEPAIQAIABI@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABI@?$vector@IV?$allocator@I@std@@@std@@AAEPAIQAIABI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Emplace_reallocate<unsigned int const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAIPAI@std@@YAPAIPAI00@Z ; std::_Copy_memmove<unsigned int *,unsigned int *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAIPAI@std@@YAPAIPAI00@Z ; std::_Copy_memmove<unsigned int *,unsigned int *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABI@?$vector@IV?$allocator@I@std@@@std@@AAEPAIQAIABI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Emplace_reallocate<unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Backout$1 = -16					; size = 12
__Oldsize$1$ = -4					; size = 4
$T2 = 8							; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1574 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1575 :         if (_Newsize > max_size()) {

  00009	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	81 ff 66 66 66
	06		 cmp	 edi, 107374182		; 06666666H
  00014	0f 87 f9 00 00
	00		 ja	 $LN47@Resize_rea

; 1577 :         }
; 1578 : 
; 1579 :         auto& _Al         = _Getal();
; 1580 :         auto& _My_data    = _Mypair._Myval2;
; 1581 :         pointer& _Myfirst = _My_data._Myfirst;
; 1582 :         pointer& _Mylast  = _My_data._Mylast;
; 1583 : 
; 1584 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0001a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0001d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00022	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00024	f7 e9		 imul	 ecx

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00026	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00029	2b 0b		 sub	 ecx, DWORD PTR [ebx]

; 1577 :         }
; 1578 : 
; 1579 :         auto& _Al         = _Getal();
; 1580 :         auto& _My_data    = _Mypair._Myval2;
; 1581 :         pointer& _Myfirst = _My_data._Myfirst;
; 1582 :         pointer& _Mylast  = _My_data._Mylast;
; 1583 : 
; 1584 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002b	c1 fa 04	 sar	 edx, 4
  0002e	8b c2		 mov	 eax, edx
  00030	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00033	03 c2		 add	 eax, edx
  00035	89 45 fc	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00038	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0003d	f7 e9		 imul	 ecx

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0003f	b8 66 66 66 06	 mov	 eax, 107374182		; 06666666H

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00044	c1 fa 04	 sar	 edx, 4
  00047	8b ca		 mov	 ecx, edx
  00049	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0004c	03 ca		 add	 ecx, edx

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0004e	8b d1		 mov	 edx, ecx
  00050	d1 ea		 shr	 edx, 1
  00052	2b c2		 sub	 eax, edx
  00054	3b c8		 cmp	 ecx, eax
  00056	76 17		 jbe	 SHORT $LN10@Resize_rea

; 2030 :             return _Max; // geometric growth would overflow

  00058	b8 f0 ff ff ff	 mov	 eax, -16		; fffffff0H
  0005d	be 66 66 66 06	 mov	 esi, 107374182		; 06666666H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00068	83 c4 04	 add	 esp, 4
  0006b	8b c8		 mov	 ecx, eax
  0006d	eb 47		 jmp	 SHORT $LN45@Resize_rea
$LN10@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0006f	8d 34 0a	 lea	 esi, DWORD PTR [edx+ecx]

; 2034 : 
; 2035 :         if (_Geometric < _Newsize) {

  00072	3b f7		 cmp	 esi, edi
  00074	73 1c		 jae	 SHORT $LN11@Resize_rea

; 2036 :             return _Newsize; // geometric growth would be insufficient

  00076	8b f7		 mov	 esi, edi
$LN18@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 65   :     return _Count * _Ty_size;

  00078	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  0007b	c1 e0 03	 shl	 eax, 3

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007e	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00083	72 1b		 jb	 SHORT $LN22@Resize_rea

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0008b	83 c4 04	 add	 esp, 4
  0008e	8b c8		 mov	 ecx, eax
  00090	eb 24		 jmp	 SHORT $LN45@Resize_rea
$LN11@Resize_rea:

; 60   :         if (_Count > _Max_possible) {

  00092	81 fe 66 66 66
	06		 cmp	 esi, 107374182		; 06666666H
  00098	0f 87 7a 00 00
	00		 ja	 $LN48@Resize_rea
  0009e	eb d8		 jmp	 SHORT $LN18@Resize_rea
$LN22@Resize_rea:

; 234  :     if (_Bytes != 0) {

  000a0	85 c0		 test	 eax, eax
  000a2	74 10		 je	 SHORT $LN23@Resize_rea

; 77   :         return ::operator new(_Bytes);

  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000aa	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000ad	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  000b0	8b c8		 mov	 ecx, eax
  000b2	eb 05		 jmp	 SHORT $LN21@Resize_rea
$LN23@Resize_rea:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000b4	33 c9		 xor	 ecx, ecx
$LN45@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1588 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000b6	89 4d 08	 mov	 DWORD PTR $T2[ebp], ecx
$LN21@Resize_rea:
  000b9	8b 55 fc	 mov	 edx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000bc	89 5d f8	 mov	 DWORD PTR __Backout$1[ebp+8], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1588 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000bf	8d 04 92	 lea	 eax, DWORD PTR [edx+edx*4]
  000c2	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]

; 1596 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

  000c5	8b cf		 mov	 ecx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000c7	89 45 f4	 mov	 DWORD PTR __Backout$1[ebp+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1596 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

  000ca	2b ca		 sub	 ecx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1902 :     for (; 0 < _Count; --_Count) {

  000cc	74 14		 je	 SHORT $LN30@Resize_rea
  000ce	66 90		 npad	 2
$LL31@Resize_rea:

; 1663 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000d0	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0

; 1664 :         ++_Last;

  000d7	83 c0 28	 add	 eax, 40			; 00000028H

; 1902 :     for (; 0 < _Count; --_Count) {

  000da	83 e9 01	 sub	 ecx, 1
  000dd	75 f1		 jne	 SHORT $LL31@Resize_rea

; 1664 :         ++_Last;

  000df	89 45 f4	 mov	 DWORD PTR __Backout$1[ebp+4], eax
$LN30@Resize_rea:

; 1906 :     return _Backout._Release();

  000e2	8d 4d f0	 lea	 ecx, DWORD PTR __Backout$1[ebp]

; 1668 :         _First = _Last;

  000e5	89 45 f0	 mov	 DWORD PTR __Backout$1[ebp], eax

; 1906 :     return _Backout._Release();

  000e8	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1600 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

  000ed	53		 push	 ebx
  000ee	ff 75 08	 push	 DWORD PTR $T2[ebp]
  000f1	ff 73 04	 push	 DWORD PTR [ebx+4]
  000f4	ff 33		 push	 DWORD PTR [ebx]
  000f6	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@0PAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Uninitialized_move<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  000fb	83 c4 10	 add	 esp, 16			; 00000010H

; 1601 :         } else {
; 1602 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1603 :         }
; 1604 :         _CATCH_ALL
; 1605 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1606 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1607 :         _RERAISE;
; 1608 :         _CATCH_END
; 1609 : 
; 1610 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000fe	8b cb		 mov	 ecx, ebx
  00100	56		 push	 esi
  00101	57		 push	 edi
  00102	ff 75 08	 push	 DWORD PTR $T2[ebp]
  00105	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@II@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Change_array
  0010a	5f		 pop	 edi
  0010b	5e		 pop	 esi
  0010c	5b		 pop	 ebx

; 1611 :     }

  0010d	8b e5		 mov	 esp, ebp
  0010f	5d		 pop	 ebp
  00110	c2 08 00	 ret	 8
$LN47@Resize_rea:

; 1576 :             _Xlength();

  00113	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xlength
$LN48@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00118	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN44@Resize_rea:
  0011d	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >::~_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >, COMDAT
; _this$ = ecx

; 1658 :         _Destroy_range(_First, _Last, _Al);

  00000	ff 71 08	 push	 DWORD PTR [ecx+8]
  00003	ff 71 04	 push	 DWORD PTR [ecx+4]
  00006	ff 31		 push	 DWORD PTR [ecx]
  00008	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1659 :     }

  00010	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >::~_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@0PAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z
_TEXT	SEGMENT
__Backout$ = -12					; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
tv491 = 16						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@0PAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z PROC ; std::_Uninitialized_move<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >, COMDAT

; 1788 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1789 :     // move [_First, _Last) to raw _Dest, using _Al
; 1790 :     // note: only called internally from elsewhere in the STL
; 1791 :     using _Ptrval     = typename _Alloc::value_type*;
; 1792 :     auto _UFirst      = _Get_unwrapped(_First);
; 1793 :     const auto _ULast = _Get_unwrapped(_Last);
; 1794 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1795 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1796 : #if _HAS_CXX20
; 1797 :         if (!_STD is_constant_evaluated())
; 1798 : #endif // _HAS_CXX20
; 1799 :         {
; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1801 :             return _Dest + (_ULast - _UFirst);
; 1802 :         }
; 1803 :     }
; 1804 : 
; 1805 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  00006	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00009	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]

; 1788 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  0000c	57		 push	 edi

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000d	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  00010	89 7d f8	 mov	 DWORD PTR __Backout$[ebp+4], edi
  00013	89 45 fc	 mov	 DWORD PTR __Backout$[ebp+8], eax

; 1789 :     // move [_First, _Last) to raw _Dest, using _Al
; 1790 :     // note: only called internally from elsewhere in the STL
; 1791 :     using _Ptrval     = typename _Alloc::value_type*;
; 1792 :     auto _UFirst      = _Get_unwrapped(_First);
; 1793 :     const auto _ULast = _Get_unwrapped(_Last);
; 1794 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1795 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1796 : #if _HAS_CXX20
; 1797 :         if (!_STD is_constant_evaluated())
; 1798 : #endif // _HAS_CXX20
; 1799 :         {
; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1801 :             return _Dest + (_ULast - _UFirst);
; 1802 :         }
; 1803 :     }
; 1804 : 
; 1805 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  00016	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00019	74 65		 je	 SHORT $LN3@Uninitiali

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0001b	8b c7		 mov	 eax, edi
  0001d	53		 push	 ebx
  0001e	2b c1		 sub	 eax, ecx
  00020	56		 push	 esi
  00021	8d 71 24	 lea	 esi, DWORD PTR [ecx+36]
  00024	89 45 10	 mov	 DWORD PTR tv491[ebp], eax
  00027	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  00030	c7 04 30 00 00
	00 00		 mov	 DWORD PTR [eax+esi], 0

; 888  :         return !_Getimpl();

  00037	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00039	85 c9		 test	 ecx, ecx

; 898  :         if (!_Right._Empty()) {

  0003b	74 30		 je	 SHORT $LN19@Uninitiali

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0003d	8d 5e dc	 lea	 ebx, DWORD PTR [esi-36]
  00040	3b cb		 cmp	 ecx, ebx

; 899  :             if (_Right._Local()) { // move and tidy

  00042	75 4e		 jne	 SHORT $LN18@Uninitiali

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
  00046	57		 push	 edi
  00047	ff 50 04	 call	 DWORD PTR [eax+4]
  0004a	8b 4d 10	 mov	 ecx, DWORD PTR tv491[ebp]
  0004d	89 04 31	 mov	 DWORD PTR [ecx+esi], eax

; 888  :         return !_Getimpl();

  00050	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00052	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00054	74 14		 je	 SHORT $LN40@Uninitiali

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00056	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00058	3b cb		 cmp	 ecx, ebx

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0005a	0f 95 c0	 setne	 al
  0005d	0f b6 c0	 movzx	 eax, al
  00060	50		 push	 eax
  00061	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00064	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN40@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1664 :         ++_Last;

  0006a	8b 45 10	 mov	 eax, DWORD PTR tv491[ebp]
$LN19@Uninitiali:
  0006d	83 c6 28	 add	 esi, 40			; 00000028H
  00070	83 c7 28	 add	 edi, 40			; 00000028H

; 1789 :     // move [_First, _Last) to raw _Dest, using _Al
; 1790 :     // note: only called internally from elsewhere in the STL
; 1791 :     using _Ptrval     = typename _Alloc::value_type*;
; 1792 :     auto _UFirst      = _Get_unwrapped(_First);
; 1793 :     const auto _ULast = _Get_unwrapped(_Last);
; 1794 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1795 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1796 : #if _HAS_CXX20
; 1797 :         if (!_STD is_constant_evaluated())
; 1798 : #endif // _HAS_CXX20
; 1799 :         {
; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1801 :             return _Dest + (_ULast - _UFirst);
; 1802 :         }
; 1803 :     }
; 1804 : 
; 1805 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  00073	8d 4e dc	 lea	 ecx, DWORD PTR [esi-36]
  00076	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00079	75 b5		 jne	 SHORT $LL4@Uninitiali

; 1664 :         ++_Last;

  0007b	5e		 pop	 esi
  0007c	89 7d f8	 mov	 DWORD PTR __Backout$[ebp+4], edi
  0007f	5b		 pop	 ebx
$LN3@Uninitiali:

; 1807 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1808 :     }
; 1809 : 
; 1810 :     return _Backout._Release();

  00080	8d 4d f4	 lea	 ecx, DWORD PTR __Backout$[ebp]

; 1668 :         _First = _Last;

  00083	89 7d f4	 mov	 DWORD PTR __Backout$[ebp], edi

; 1807 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1808 :     }
; 1809 : 
; 1810 :     return _Backout._Release();

  00086	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  0008b	8b c7		 mov	 eax, edi
  0008d	5f		 pop	 edi

; 1811 : }

  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
$LN18@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 903  :                 _Set(_Right._Getimpl());

  00092	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 904  :                 _Right._Set(nullptr);

  00095	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0009b	eb d0		 jmp	 SHORT $LN19@Uninitiali
??$_Uninitialized_move@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@0PAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >, COMDAT
; _this$ = ecx

; 1657 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

  00000	56		 push	 esi

; 1658 :         _Destroy_range(_First, _Last, _Al);

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]
  00003	57		 push	 edi
  00004	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]

; 947  :         for (; _First != _Last; ++_First) {

  00007	3b f7		 cmp	 esi, edi
  00009	74 28		 je	 SHORT $LN5@Uninitiali
  0000b	0f 1f 44 00 00	 npad	 5
$LL6@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00010	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00013	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00015	74 15		 je	 SHORT $LN19@Uninitiali

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00017	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00019	3b ce		 cmp	 ecx, esi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0001b	0f 95 c0	 setne	 al
  0001e	0f b6 c0	 movzx	 eax, al
  00021	50		 push	 eax
  00022	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00025	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN19@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 947  :         for (; _First != _Last; ++_First) {

  0002c	83 c6 28	 add	 esi, 40			; 00000028H
  0002f	3b f7		 cmp	 esi, edi
  00031	75 dd		 jne	 SHORT $LL6@Uninitiali
$LN5@Uninitiali:
  00033	5f		 pop	 edi

; 1659 :     }

  00034	5e		 pop	 esi
  00035	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@QAU123@0PAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
tv1116 = 16						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@QAU123@0PAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z PROC ; std::_Uninitialized_move<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >, COMDAT

; 1788 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1789 :     // move [_First, _Last) to raw _Dest, using _Al
; 1790 :     // note: only called internally from elsewhere in the STL
; 1791 :     using _Ptrval     = typename _Alloc::value_type*;
; 1792 :     auto _UFirst      = _Get_unwrapped(_First);
; 1793 :     const auto _ULast = _Get_unwrapped(_Last);
; 1794 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1795 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1796 : #if _HAS_CXX20
; 1797 :         if (!_STD is_constant_evaluated())
; 1798 : #endif // _HAS_CXX20
; 1799 :         {
; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1801 :             return _Dest + (_ULast - _UFirst);
; 1802 :         }
; 1803 :     }
; 1804 : 
; 1805 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	53		 push	 ebx

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]

; 1789 :     // move [_First, _Last) to raw _Dest, using _Al
; 1790 :     // note: only called internally from elsewhere in the STL
; 1791 :     using _Ptrval     = typename _Alloc::value_type*;
; 1792 :     auto _UFirst      = _Get_unwrapped(_First);
; 1793 :     const auto _ULast = _Get_unwrapped(_Last);
; 1794 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1795 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1796 : #if _HAS_CXX20
; 1797 :         if (!_STD is_constant_evaluated())
; 1798 : #endif // _HAS_CXX20
; 1799 :         {
; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1801 :             return _Dest + (_ULast - _UFirst);
; 1802 :         }
; 1803 :     }
; 1804 : 
; 1805 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  0000a	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000d	0f 84 c7 00 00
	00		 je	 $LN3@Uninitiali

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00013	56		 push	 esi
  00014	8b cb		 mov	 ecx, ebx
  00016	8d 70 54	 lea	 esi, DWORD PTR [eax+84]
  00019	2b c8		 sub	 ecx, eax
  0001b	57		 push	 edi
  0001c	8d 7b 2c	 lea	 edi, DWORD PTR [ebx+44]
  0001f	89 4d 10	 mov	 DWORD PTR tv1116[ebp], ecx
$LL4@Uninitiali:
  00022	8b 46 ac	 mov	 eax, DWORD PTR [esi-84]
  00025	89 03		 mov	 DWORD PTR [ebx], eax
  00027	66 8b 46 b0	 mov	 ax, WORD PTR [esi-80]
  0002b	66 89 47 d8	 mov	 WORD PTR [edi-40], ax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  0002f	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 888  :         return !_Getimpl();

  00035	8b 4e d8	 mov	 ecx, DWORD PTR [esi-40]
  00038	85 c9		 test	 ecx, ecx

; 898  :         if (!_Right._Empty()) {

  0003a	74 37		 je	 SHORT $LN28@Uninitiali

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0003c	8d 46 b4	 lea	 eax, DWORD PTR [esi-76]
  0003f	3b c8		 cmp	 ecx, eax

; 899  :             if (_Right._Local()) { // move and tidy

  00041	75 27		 jne	 SHORT $LN27@Uninitiali

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00043	8b 01		 mov	 eax, DWORD PTR [ecx]
  00045	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00048	8d 47 dc	 lea	 eax, DWORD PTR [edi-36]
  0004b	50		 push	 eax
  0004c	ff d2		 call	 edx
  0004e	89 07		 mov	 DWORD PTR [edi], eax

; 888  :         return !_Getimpl();

  00050	8b 4e d8	 mov	 ecx, DWORD PTR [esi-40]
  00053	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00055	74 1c		 je	 SHORT $LN28@Uninitiali

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00057	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00059	8d 46 b4	 lea	 eax, DWORD PTR [esi-76]
  0005c	3b c8		 cmp	 ecx, eax

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0005e	0f 95 c0	 setne	 al
  00061	0f b6 c0	 movzx	 eax, al
  00064	50		 push	 eax
  00065	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  00068	eb 02		 jmp	 SHORT $LN72@Uninitiali
$LN27@Uninitiali:

; 903  :                 _Set(_Right._Getimpl());

  0006a	89 0f		 mov	 DWORD PTR [edi], ecx
$LN72@Uninitiali:

; 866  :         _Set(nullptr);

  0006c	c7 46 d8 00 00
	00 00		 mov	 DWORD PTR [esi-40], 0
$LN28@Uninitiali:
  00073	8b 55 10	 mov	 edx, DWORD PTR tv1116[ebp]
  00076	c7 04 32 00 00
	00 00		 mov	 DWORD PTR [edx+esi], 0

; 888  :         return !_Getimpl();

  0007d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0007f	85 c9		 test	 ecx, ecx

; 898  :         if (!_Right._Empty()) {

  00081	74 3a		 je	 SHORT $LN49@Uninitiali

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00083	8d 46 dc	 lea	 eax, DWORD PTR [esi-36]
  00086	3b c8		 cmp	 ecx, eax

; 899  :             if (_Right._Local()) { // move and tidy

  00088	75 2a		 jne	 SHORT $LN48@Uninitiali

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  0008a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0008f	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00092	50		 push	 eax
  00093	ff d2		 call	 edx
  00095	8b 4d 10	 mov	 ecx, DWORD PTR tv1116[ebp]
  00098	89 04 31	 mov	 DWORD PTR [ecx+esi], eax

; 888  :         return !_Getimpl();

  0009b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0009d	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0009f	74 1c		 je	 SHORT $LN49@Uninitiali

; 952  :             _Getimpl()->_Delete_this(!_Local());

  000a1	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  000a3	8d 46 dc	 lea	 eax, DWORD PTR [esi-36]
  000a6	3b c8		 cmp	 ecx, eax

; 952  :             _Getimpl()->_Delete_this(!_Local());

  000a8	0f 95 c0	 setne	 al
  000ab	0f b6 c0	 movzx	 eax, al
  000ae	50		 push	 eax
  000af	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  000b2	eb 03		 jmp	 SHORT $LN73@Uninitiali
$LN48@Uninitiali:

; 903  :                 _Set(_Right._Getimpl());

  000b4	89 0c 32	 mov	 DWORD PTR [edx+esi], ecx
$LN73@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1664 :         ++_Last;

  000b7	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN49@Uninitiali:
  000bd	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000c0	83 c3 60	 add	 ebx, 96			; 00000060H
  000c3	83 c6 60	 add	 esi, 96			; 00000060H
  000c6	89 47 2c	 mov	 DWORD PTR [edi+44], eax
  000c9	83 c7 60	 add	 edi, 96			; 00000060H

; 1789 :     // move [_First, _Last) to raw _Dest, using _Al
; 1790 :     // note: only called internally from elsewhere in the STL
; 1791 :     using _Ptrval     = typename _Alloc::value_type*;
; 1792 :     auto _UFirst      = _Get_unwrapped(_First);
; 1793 :     const auto _ULast = _Get_unwrapped(_Last);
; 1794 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1795 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1796 : #if _HAS_CXX20
; 1797 :         if (!_STD is_constant_evaluated())
; 1798 : #endif // _HAS_CXX20
; 1799 :         {
; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1801 :             return _Dest + (_ULast - _UFirst);
; 1802 :         }
; 1803 :     }
; 1804 : 
; 1805 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000cc	8d 46 ac	 lea	 eax, DWORD PTR [esi-84]
  000cf	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  000d2	0f 85 4a ff ff
	ff		 jne	 $LL4@Uninitiali
  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
$LN3@Uninitiali:

; 1658 :         _Destroy_range(_First, _Last, _Al);

  000da	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  000dd	53		 push	 ebx
  000de	53		 push	 ebx
  000df	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1807 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1808 :     }
; 1809 : 
; 1810 :     return _Backout._Release();

  000e7	8b c3		 mov	 eax, ebx
  000e9	5b		 pop	 ebx

; 1811 : }

  000ea	5d		 pop	 ebp
  000eb	c3		 ret	 0
??$_Uninitialized_move@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@QAU123@0PAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ENDP ; std::_Uninitialized_move<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tidy_guard@V?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tidy_guard<std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > > >::~_Tidy_guard<std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > > >, COMDAT
; _this$ = ecx

; 34   :         if (_Target) {

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	85 c9		 test	 ecx, ecx
  00004	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Tidy

; 35   :             _Target->_Tidy();
; 36   :         }
; 37   :     }

  0000a	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tidy_guard<std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > > >::~_Tidy_guard<std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z
_TEXT	SEGMENT
__Backout$ = -24					; size = 12
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
$T3 = 8							; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
$T4 = 16						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z PROC ; std::_Uninitialized_copy_n<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >, COMDAT

; 1725 :     _InIt _First, size_t _Count, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0002b	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  0002e	89 7d e8	 mov	 DWORD PTR __Backout$[ebp], edi
  00031	89 7d ec	 mov	 DWORD PTR __Backout$[ebp+4], edi
  00034	89 45 f0	 mov	 DWORD PTR __Backout$[ebp+8], eax

; 1748 :     for (; _Count != 0; ++_UFirst, (void) --_Count) {

  00037	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	74 77		 je	 SHORT $LN3@Uninitiali

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00044	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00047	83 c6 2c	 add	 esi, 44			; 0000002cH
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Uninitiali:
  00050	8b 46 d4	 mov	 eax, DWORD PTR [esi-44]
  00053	8d 5f 08	 lea	 ebx, DWORD PTR [edi+8]
  00056	89 07		 mov	 DWORD PTR [edi], eax
  00058	66 8b 46 d8	 mov	 ax, WORD PTR [esi-40]
  0005c	66 89 47 04	 mov	 WORD PTR [edi+4], ax

; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00060	89 7d 10	 mov	 DWORD PTR $T4[ebp], edi
  00063	89 5d 08	 mov	 DWORD PTR $T2[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  00066	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0

; 888  :         return !_Getimpl();

  0006d	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1037 :     function(const function& _Right) {

  0006f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 892  :         if (!_Right._Empty()) {

  00073	85 c9		 test	 ecx, ecx
  00075	74 08		 je	 SHORT $LN27@Uninitiali

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  00077	8b 01		 mov	 eax, DWORD PTR [ecx]
  00079	53		 push	 ebx
  0007a	ff 10		 call	 DWORD PTR [eax]
  0007c	89 43 24	 mov	 DWORD PTR [ebx+36], eax
$LN27@Uninitiali:
  0007f	8d 5f 30	 lea	 ebx, DWORD PTR [edi+48]

; 866  :         _Set(nullptr);

  00082	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0
  00089	89 5d 08	 mov	 DWORD PTR $T3[ebp], ebx

; 888  :         return !_Getimpl();

  0008c	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]

; 1037 :     function(const function& _Right) {

  0008f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 892  :         if (!_Right._Empty()) {

  00093	85 c9		 test	 ecx, ecx
  00095	74 08		 je	 SHORT $LN37@Uninitiali

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  00097	8b 01		 mov	 eax, DWORD PTR [ecx]
  00099	53		 push	 ebx
  0009a	ff 10		 call	 DWORD PTR [eax]
  0009c	89 43 24	 mov	 DWORD PTR [ebx+36], eax
$LN37@Uninitiali:
  0009f	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1748 :     for (; _Count != 0; ++_UFirst, (void) --_Count) {

  000a2	83 c6 60	 add	 esi, 96			; 00000060H
  000a5	89 47 58	 mov	 DWORD PTR [edi+88], eax

; 1664 :         ++_Last;

  000a8	83 c7 60	 add	 edi, 96			; 00000060H

; 1748 :     for (; _Count != 0; ++_UFirst, (void) --_Count) {

  000ab	83 6d 0c 01	 sub	 DWORD PTR __Count$[ebp], 1
  000af	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0

; 1664 :         ++_Last;

  000b3	89 7d ec	 mov	 DWORD PTR __Backout$[ebp+4], edi

; 1748 :     for (; _Count != 0; ++_UFirst, (void) --_Count) {

  000b6	75 98		 jne	 SHORT $LL4@Uninitiali
  000b8	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
$LN3@Uninitiali:

; 1658 :         _Destroy_range(_First, _Last, _Al);

  000bb	50		 push	 eax
  000bc	57		 push	 edi
  000bd	57		 push	 edi
  000be	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >
  000c3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1749 :         _Backout._Emplace_back(*_UFirst);
; 1750 :     }
; 1751 : 
; 1752 :     return _Backout._Release();

  000c6	8b c7		 mov	 eax, edi

; 1753 : }

  000c8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d2	59		 pop	 ecx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >::~_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >
__unwindfunclet$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$5:
  00008	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Func_class@MMMM@std@@QAE@XZ ; std::_Func_class<float,float,float,float>::~_Func_class<float,float,float,float>
__unwindfunclet$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$1:
  00010	8b 4d 10	 mov	 ecx, DWORD PTR $T4[ebp]
  00013	83 c1 08	 add	 ecx, 8
  00016	e9 00 00 00 00	 jmp	 ??1?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z$6:
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR $T3[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
__ehhandler$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z:
  00028	90		 npad	 1
  00029	90		 npad	 1
  0002a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00031	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z
  00040	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ENDP ; std::_Uninitialized_copy_n<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tidy_guard@V?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Tidy_guard<std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > > >::~_Tidy_guard<std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > > >, COMDAT
; _this$ = ecx

; 34   :         if (_Target) {

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	85 c9		 test	 ecx, ecx
  00004	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy

; 35   :             _Target->_Tidy();
; 36   :         }
; 37   :     }

  0000a	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Tidy_guard<std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > > >::~_Tidy_guard<std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
__Oldsize$1$ = -40					; size = 4
_this$ = -36						; size = 4
__Whereoff$1$ = -32					; size = 4
tv425 = -32						; size = 4
__Constructed_last$ = -28				; size = 4
$T3 = -24						; size = 4
__Newcapacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Emplace_reallocate<std::function<bool __cdecl(tweeny::tween<float> &,float)> const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d dc	 mov	 DWORD PTR _this$[ebp], ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00030	8b 33		 mov	 esi, DWORD PTR [ebx]
  00032	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00037	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0003a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0003d	2b d6		 sub	 edx, esi
  0003f	f7 ea		 imul	 edx
  00041	2b ce		 sub	 ecx, esi
  00043	c1 fa 04	 sar	 edx, 4
  00046	8b c2		 mov	 eax, edx
  00048	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004b	03 c2		 add	 eax, edx
  0004d	89 45 e0	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  00050	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00055	f7 e9		 imul	 ecx
  00057	c1 fa 04	 sar	 edx, 4
  0005a	8b c2		 mov	 eax, edx
  0005c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0005f	03 c2		 add	 eax, edx
  00061	89 45 d8	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  00064	3d 66 66 66 06	 cmp	 eax, 107374182		; 06666666H
  00069	0f 84 24 01 00
	00		 je	 $LN49@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0006f	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00072	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00075	2b ce		 sub	 ecx, esi
  00077	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0007c	f7 e9		 imul	 ecx

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0007e	b8 66 66 66 06	 mov	 eax, 107374182		; 06666666H

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00083	c1 fa 04	 sar	 edx, 4
  00086	8b ca		 mov	 ecx, edx
  00088	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0008b	03 ca		 add	 ecx, edx

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0008d	8b d1		 mov	 edx, ecx
  0008f	d1 ea		 shr	 edx, 1
  00091	2b c2		 sub	 eax, edx
  00093	3b c8		 cmp	 ecx, eax
  00095	76 1a		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00097	b8 f0 ff ff ff	 mov	 eax, -16		; fffffff0H
  0009c	be 66 66 66 06	 mov	 esi, 107374182		; 06666666H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a1	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  000a2	89 75 ec	 mov	 DWORD PTR __Newcapacity$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a5	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b f8		 mov	 edi, eax
  000af	eb 49		 jmp	 SHORT $LN46@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  000b1	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000b4	8b f7		 mov	 esi, edi
  000b6	3b c7		 cmp	 eax, edi
  000b8	0f 43 f0	 cmovae	 esi, eax
  000bb	81 fe 66 66 66
	06		 cmp	 esi, 107374182		; 06666666H
  000c1	0f 87 d1 00 00
	00		 ja	 $LN50@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000c7	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  000ca	89 75 ec	 mov	 DWORD PTR __Newcapacity$[ebp], esi
  000cd	c1 e0 03	 shl	 eax, 3

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000d0	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000d5	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b f8		 mov	 edi, eax
  000e2	eb 16		 jmp	 SHORT $LN46@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000e4	85 c0		 test	 eax, eax
  000e6	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ee	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000f1	8b f8		 mov	 edi, eax
  000f3	eb 02		 jmp	 SHORT $LN47@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000f5	33 ff		 xor	 edi, edi
$LN47@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 895  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f7	89 75 ec	 mov	 DWORD PTR __Newcapacity$[ebp], esi
$LN46@Emplace_re:
  000fa	8b 45 e0	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000fd	89 7d e8	 mov	 DWORD PTR $T3[ebp], edi

; 896  :         pointer _Constructed_first      = _Constructed_last;
; 897  : 
; 898  :         _TRY_BEGIN

  00100	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00107	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0010a	8d 0c c7	 lea	 ecx, DWORD PTR [edi+eax*8]
  0010d	8d 41 28	 lea	 eax, DWORD PTR [ecx+40]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  00110	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 895  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00117	89 4d e0	 mov	 DWORD PTR tv425[ebp], ecx
  0011a	89 45 e4	 mov	 DWORD PTR __Constructed_last$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  0011d	89 4d d4	 mov	 DWORD PTR $T2[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00120	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]

; 1037 :     function(const function& _Right) {

  00123	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 888  :         return !_Getimpl();

  00127	8b 50 24	 mov	 edx, DWORD PTR [eax+36]

; 892  :         if (!_Right._Empty()) {

  0012a	85 d2		 test	 edx, edx
  0012c	74 0f		 je	 SHORT $LN38@Emplace_re

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  0012e	8b 02		 mov	 eax, DWORD PTR [edx]
  00130	51		 push	 ecx
  00131	8b ca		 mov	 ecx, edx
  00133	ff 10		 call	 DWORD PTR [eax]
  00135	8b c8		 mov	 ecx, eax
  00137	8b 45 e0	 mov	 eax, DWORD PTR tv425[ebp]
  0013a	89 48 24	 mov	 DWORD PTR [eax+36], ecx
$LN38@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  0013d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00140	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  00143	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00145	3b d0		 cmp	 edx, eax
  00147	75 04		 jne	 SHORT $LN4@Emplace_re

; 903  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 904  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

  00149	8b d7		 mov	 edx, edi

; 905  :             } else {
; 906  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 907  :             }
; 908  :         } else { // provide basic guarantee

  0014b	eb 15		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 909  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);

  0014d	53		 push	 ebx
  0014e	57		 push	 edi
  0014f	52		 push	 edx
  00150	51		 push	 ecx
  00151	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@0PAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Uninitialized_move<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >

; 910  :             _Constructed_first = _Newvec;
; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  00156	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00159	83 c4 10	 add	 esp, 16			; 00000010H
  0015c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0015f	8b 55 e4	 mov	 edx, DWORD PTR __Constructed_last$[ebp]
$LN5@Emplace_re:
  00162	53		 push	 ebx
  00163	52		 push	 edx
  00164	50		 push	 eax
  00165	51		 push	 ecx
  00166	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@0PAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Uninitialized_move<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >

; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  0016b	8b 45 d8	 mov	 eax, DWORD PTR __Oldsize$1$[ebp]
  0016e	83 c4 10	 add	 esp, 16			; 00000010H
  00171	40		 inc	 eax
  00172	8b cb		 mov	 ecx, ebx
  00174	56		 push	 esi
  00175	50		 push	 eax
  00176	57		 push	 edi
  00177	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@II@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Change_array

; 920  :         return _Newvec + _Whereoff;

  0017c	8b 45 e0	 mov	 eax, DWORD PTR tv425[ebp]

; 921  :     }

  0017f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00182	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00189	59		 pop	 ecx
  0018a	5f		 pop	 edi
  0018b	5e		 pop	 esi
  0018c	5b		 pop	 ebx
  0018d	8b e5		 mov	 esp, ebp
  0018f	5d		 pop	 ebp
  00190	c2 08 00	 ret	 8
$LN49@Emplace_re:

; 888  :             _Xlength();

  00193	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xlength
$LN50@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00198	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
__catch$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z$0:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);

  0019d	8b 75 dc	 mov	 esi, DWORD PTR _this$[ebp]
  001a0	8b 45 e4	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  001a3	56		 push	 esi
  001a4	50		 push	 eax
  001a5	50		 push	 eax
  001a6	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  001ab	83 c4 0c	 add	 esp, 12			; 0000000cH

; 915  :         _Al.deallocate(_Newvec, _Newcapacity);

  001ae	8b ce		 mov	 ecx, esi
  001b0	ff 75 ec	 push	 DWORD PTR __Newcapacity$[ebp]
  001b3	ff 75 e8	 push	 DWORD PTR $T3[ebp]
  001b6	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@QAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@I@Z ; std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> >::deallocate

; 916  :         _RERAISE;

  001bb	6a 00		 push	 0
  001bd	6a 00		 push	 0
  001bf	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN45@Emplace_re:
  001c4	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z$2:
  00000	8b 4d d4	 mov	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Emplace_reallocate<std::function<bool __cdecl(tweeny::tween<float> &,float)> const &>
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z
_TEXT	SEGMENT
__Temp$2 = -96						; size = 40
$T3 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z PROC ; std::_Copy_n_unchecked4<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,unsigned int,std::function<bool __cdecl(tweeny::tween<float> &,float)> *>, COMDAT

; 3863 : _CONSTEXPR20 _OutIt _Copy_n_unchecked4(_InIt _First, _SizeTy _Count, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 3879 :     for (; _Count != 0; ++_Dest, (void) ++_First, --_Count) {

  0002b	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0002e	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00031	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  00034	85 ff		 test	 edi, edi
  00036	0f 84 35 01 00
	00		 je	 $LN107@Copy_n_unc

; 3863 : _CONSTEXPR20 _OutIt _Copy_n_unchecked4(_InIt _First, _SizeTy _Count, _OutIt _Dest) {

  0003c	83 c3 24	 add	 ebx, 36			; 00000024H
  0003f	90		 npad	 1
$LL4@Copy_n_unc:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  00040	33 c9		 xor	 ecx, ecx
  00042	89 4d ec	 mov	 DWORD PTR $T3[ebp+36], ecx

; 888  :         return !_Getimpl();

  00045	8b 13		 mov	 edx, DWORD PTR [ebx]

; 1037 :     function(const function& _Right) {

  00047	89 4d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ecx

; 892  :         if (!_Right._Empty()) {

  0004a	85 d2		 test	 edx, edx
  0004c	74 0f		 je	 SHORT $LN15@Copy_n_unc

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  0004e	8b 02		 mov	 eax, DWORD PTR [edx]
  00050	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00053	51		 push	 ecx
  00054	8b ca		 mov	 ecx, edx
  00056	ff 10		 call	 DWORD PTR [eax]
  00058	8b c8		 mov	 ecx, eax
  0005a	89 4d ec	 mov	 DWORD PTR $T3[ebp+36], ecx
$LN15@Copy_n_unc:

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0005d	8d 45 c8	 lea	 eax, DWORD PTR $T3[ebp]

; 1039 :     }

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00067	3b c8		 cmp	 ecx, eax

; 958  :         if (!_Local() && !_Right._Local()) { // just swap pointers

  00069	74 16		 je	 SHORT $LN104@Copy_n_unc

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0006b	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  0006e	3b d6		 cmp	 edx, esi

; 958  :         if (!_Local() && !_Right._Local()) { // just swap pointers

  00070	74 0f		 je	 SHORT $LN104@Copy_n_unc

; 959  :             _Ptrt* _Temp = _Getimpl();

  00072	8b c1		 mov	 eax, ecx

; 960  :             _Set(_Right._Getimpl());

  00074	8b ca		 mov	 ecx, edx
  00076	89 4d ec	 mov	 DWORD PTR $T3[ebp+36], ecx

; 961  :             _Right._Set(_Temp);

  00079	89 46 24	 mov	 DWORD PTR [esi+36], eax

; 962  :         } else { // do three-way move

  0007c	e9 c9 00 00 00	 jmp	 $LN81@Copy_n_unc
$LN104@Copy_n_unc:

; 866  :         _Set(nullptr);

  00081	33 d2		 xor	 edx, edx
  00083	89 55 c4	 mov	 DWORD PTR __Temp$2[ebp+36], edx

; 888  :         return !_Getimpl();

  00086	85 c9		 test	 ecx, ecx

; 898  :         if (!_Right._Empty()) {

  00088	74 3c		 je	 SHORT $LN33@Copy_n_unc

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0008a	8d 45 c8	 lea	 eax, DWORD PTR $T3[ebp]
  0008d	3b c8		 cmp	 ecx, eax

; 899  :             if (_Right._Local()) { // move and tidy

  0008f	75 2b		 jne	 SHORT $LN32@Copy_n_unc

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00091	8b 01		 mov	 eax, DWORD PTR [ecx]
  00093	8d 55 a0	 lea	 edx, DWORD PTR __Temp$2[ebp]
  00096	52		 push	 edx
  00097	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  0009a	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  0009d	8b d0		 mov	 edx, eax
  0009f	89 55 c4	 mov	 DWORD PTR __Temp$2[ebp+36], edx

; 888  :         return !_Getimpl();

  000a2	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  000a4	74 20		 je	 SHORT $LN33@Copy_n_unc

; 952  :             _Getimpl()->_Delete_this(!_Local());

  000a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a8	8d 45 c8	 lea	 eax, DWORD PTR $T3[ebp]
  000ab	3b c8		 cmp	 ecx, eax
  000ad	0f 95 c0	 setne	 al
  000b0	0f b6 c0	 movzx	 eax, al
  000b3	50		 push	 eax
  000b4	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  000b7	8b 55 c4	 mov	 edx, DWORD PTR __Temp$2[ebp+36]
  000ba	eb 05		 jmp	 SHORT $LN112@Copy_n_unc
$LN32@Copy_n_unc:

; 903  :                 _Set(_Right._Getimpl());

  000bc	8b d1		 mov	 edx, ecx
  000be	89 55 c4	 mov	 DWORD PTR __Temp$2[ebp+36], edx
$LN112@Copy_n_unc:

; 888  :         return !_Getimpl();

  000c1	33 c9		 xor	 ecx, ecx
  000c3	89 4d ec	 mov	 DWORD PTR $T3[ebp+36], ecx
$LN33@Copy_n_unc:
  000c6	8b 7e 24	 mov	 edi, DWORD PTR [esi+36]
  000c9	85 ff		 test	 edi, edi

; 898  :         if (!_Right._Empty()) {

  000cb	74 44		 je	 SHORT $LN49@Copy_n_unc

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  000cd	3b fe		 cmp	 edi, esi

; 899  :             if (_Right._Local()) { // move and tidy

  000cf	75 34		 jne	 SHORT $LN48@Copy_n_unc

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  000d1	8b 07		 mov	 eax, DWORD PTR [edi]
  000d3	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  000d6	51		 push	 ecx
  000d7	8b cf		 mov	 ecx, edi
  000d9	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  000dc	8b 7e 24	 mov	 edi, DWORD PTR [esi+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  000df	8b c8		 mov	 ecx, eax
  000e1	89 4d ec	 mov	 DWORD PTR $T3[ebp+36], ecx

; 888  :         return !_Getimpl();

  000e4	85 ff		 test	 edi, edi

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  000e6	74 18		 je	 SHORT $LN108@Copy_n_unc

; 952  :             _Getimpl()->_Delete_this(!_Local());

  000e8	8b 17		 mov	 edx, DWORD PTR [edi]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  000ea	3b fe		 cmp	 edi, esi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  000ec	8b cf		 mov	 ecx, edi
  000ee	0f 95 c0	 setne	 al
  000f1	0f b6 c0	 movzx	 eax, al
  000f4	50		 push	 eax
  000f5	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  000f8	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+36]
  000fb	8b 55 c4	 mov	 edx, DWORD PTR __Temp$2[ebp+36]
  000fe	eb 0a		 jmp	 SHORT $LN113@Copy_n_unc
$LN108@Copy_n_unc:

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00100	8b 55 c4	 mov	 edx, DWORD PTR __Temp$2[ebp+36]
  00103	eb 0c		 jmp	 SHORT $LN49@Copy_n_unc
$LN48@Copy_n_unc:

; 903  :                 _Set(_Right._Getimpl());

  00105	8b cf		 mov	 ecx, edi
  00107	89 4d ec	 mov	 DWORD PTR $T3[ebp+36], ecx
$LN113@Copy_n_unc:

; 888  :         return !_Getimpl();

  0010a	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN49@Copy_n_unc:
  00111	85 d2		 test	 edx, edx

; 898  :         if (!_Right._Empty()) {

  00113	74 32		 je	 SHORT $LN110@Copy_n_unc

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00115	8d 45 a0	 lea	 eax, DWORD PTR __Temp$2[ebp]
  00118	3b d0		 cmp	 edx, eax

; 899  :             if (_Right._Local()) { // move and tidy

  0011a	75 28		 jne	 SHORT $LN64@Copy_n_unc

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  0011c	8b 02		 mov	 eax, DWORD PTR [edx]
  0011e	8b ca		 mov	 ecx, edx
  00120	56		 push	 esi
  00121	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  00124	8b 4d c4	 mov	 ecx, DWORD PTR __Temp$2[ebp+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00127	89 46 24	 mov	 DWORD PTR [esi+36], eax

; 888  :         return !_Getimpl();

  0012a	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0012c	74 11		 je	 SHORT $LN109@Copy_n_unc

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0012e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00130	8d 45 a0	 lea	 eax, DWORD PTR __Temp$2[ebp]
  00133	3b c8		 cmp	 ecx, eax
  00135	0f 95 c0	 setne	 al
  00138	0f b6 c0	 movzx	 eax, al
  0013b	50		 push	 eax
  0013c	ff 52 10	 call	 DWORD PTR [edx+16]
$LN109@Copy_n_unc:

; 888  :         return !_Getimpl();

  0013f	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+36]
  00142	eb 03		 jmp	 SHORT $LN110@Copy_n_unc
$LN64@Copy_n_unc:

; 903  :                 _Set(_Right._Getimpl());

  00144	89 56 24	 mov	 DWORD PTR [esi+36], edx
$LN110@Copy_n_unc:

; 888  :         return !_Getimpl();

  00147	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
$LN81@Copy_n_unc:
  0014a	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0014c	74 11		 je	 SHORT $LN2@Copy_n_unc

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0014e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00150	8d 45 c8	 lea	 eax, DWORD PTR $T3[ebp]
  00153	3b c8		 cmp	 ecx, eax
  00155	0f 95 c0	 setne	 al
  00158	0f b6 c0	 movzx	 eax, al
  0015b	50		 push	 eax
  0015c	ff 52 10	 call	 DWORD PTR [edx+16]
$LN2@Copy_n_unc:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 3879 :     for (; _Count != 0; ++_Dest, (void) ++_First, --_Count) {

  0015f	83 c6 28	 add	 esi, 40			; 00000028H
  00162	83 c3 28	 add	 ebx, 40			; 00000028H
  00165	83 ef 01	 sub	 edi, 1
  00168	89 7d 0c	 mov	 DWORD PTR __Count$[ebp], edi
  0016b	0f 85 cf fe ff
	ff		 jne	 $LL4@Copy_n_unc
$LN107@Copy_n_unc:

; 3880 :         *_Dest = *_First;
; 3881 :     }
; 3882 : 
; 3883 :     return _Dest;
; 3884 : }

  00171	8b c6		 mov	 eax, esi
  00173	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00176	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0017d	59		 pop	 ecx
  0017e	5f		 pop	 edi
  0017f	5e		 pop	 esi
  00180	5b		 pop	 ebx
  00181	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00184	33 cd		 xor	 ecx, ebp
  00186	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018b	8b e5		 mov	 esp, ebp
  0018d	5d		 pop	 ebp
  0018e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z$1:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z ENDP ; std::_Copy_n_unchecked4<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,unsigned int,std::function<bool __cdecl(tweeny::tween<float> &,float)> *>
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z
_TEXT	SEGMENT
__Backout$ = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
$T2 = 16						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z PROC ; std::_Uninitialized_copy_n<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >, COMDAT

; 1725 :     _InIt _First, size_t _Count, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0002b	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  0002e	89 75 e8	 mov	 DWORD PTR __Backout$[ebp], esi
  00031	89 75 ec	 mov	 DWORD PTR __Backout$[ebp+4], esi
  00034	89 45 f0	 mov	 DWORD PTR __Backout$[ebp+8], eax

; 1748 :     for (; _Count != 0; ++_UFirst, (void) --_Count) {

  00037	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00041	85 db		 test	 ebx, ebx
  00043	74 39		 je	 SHORT $LN3@Uninitiali

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00045	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00048	83 c7 24	 add	 edi, 36			; 00000024H
  0004b	0f 1f 44 00 00	 npad	 5
$LL4@Uninitiali:

; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00050	89 75 10	 mov	 DWORD PTR $T2[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  00053	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 888  :         return !_Getimpl();

  0005a	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 1037 :     function(const function& _Right) {

  0005c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 892  :         if (!_Right._Empty()) {

  00060	85 c9		 test	 ecx, ecx
  00062	74 08		 je	 SHORT $LN17@Uninitiali

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  00064	8b 01		 mov	 eax, DWORD PTR [ecx]
  00066	56		 push	 esi
  00067	ff 10		 call	 DWORD PTR [eax]
  00069	89 46 24	 mov	 DWORD PTR [esi+36], eax
$LN17@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1664 :         ++_Last;

  0006c	83 c6 28	 add	 esi, 40			; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 1039 :     }

  0006f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1748 :     for (; _Count != 0; ++_UFirst, (void) --_Count) {

  00073	83 c7 28	 add	 edi, 40			; 00000028H

; 1664 :         ++_Last;

  00076	89 75 ec	 mov	 DWORD PTR __Backout$[ebp+4], esi

; 1748 :     for (; _Count != 0; ++_UFirst, (void) --_Count) {

  00079	83 eb 01	 sub	 ebx, 1
  0007c	75 d2		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1749 :         _Backout._Emplace_back(*_UFirst);
; 1750 :     }
; 1751 : 
; 1752 :     return _Backout._Release();

  0007e	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$[ebp]

; 1668 :         _First = _Last;

  00081	89 75 e8	 mov	 DWORD PTR __Backout$[ebp], esi

; 1749 :         _Backout._Emplace_back(*_UFirst);
; 1750 :     }
; 1751 : 
; 1752 :     return _Backout._Release();

  00084	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  00089	8b c6		 mov	 eax, esi

; 1753 : }

  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00095	59		 pop	 ecx
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
__unwindfunclet$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z$1:
  00008	8b 4d 10	 mov	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ENDP ; std::_Uninitialized_copy_n<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEX_N@Z
_TEXT	SEGMENT
__Dealloc$ = 8						; size = 1
?_Delete_this@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEX_N@Z PROC ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Delete_this, COMDAT
; _this$ = ecx

; 848  :     void _Delete_this(bool _Dealloc) noexcept override { // destroy self

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 849  :         this->~_Func_impl_no_alloc();
; 850  :         if (_Dealloc) {

  00003	80 7d 08 00	 cmp	 BYTE PTR __Dealloc$[ebp], 0
  00007	74 0b		 je	 SHORT $LN6@Delete_thi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00009	6a 08		 push	 8
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00011	83 c4 08	 add	 esp, 8
$LN6@Delete_thi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 853  :     }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?_Delete_this@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEX_N@Z ENDP ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Get@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPBXXZ
_TEXT	SEGMENT
?_Get@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPBXXZ PROC ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Get, COMDAT
; _this$ = ecx

; 845  :         return _STD addressof(_Callee);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 846  :     }

  00003	c3		 ret	 0
?_Get@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPBXXZ ENDP ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Target_type@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEABVtype_info@@XZ
_TEXT	SEGMENT
?_Target_type@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEABVtype_info@@XZ PROC ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Target_type, COMDAT
; _this$ = ecx

; 837  : #if _HAS_STATIC_RTTI
; 838  :         return typeid(_Callable);

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ??_R0?AV<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@8

; 839  : #else // _HAS_STATIC_RTTI
; 840  :         _CSTD abort();
; 841  : #endif // _HAS_STATIC_RTTI
; 842  :     }

  00005	c3		 ret	 0
?_Target_type@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEABVtype_info@@XZ ENDP ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Target_type
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Do_call@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAE_NAAV?$tween@M$$V@tweeny@@$$QAM@Z
_TEXT	SEGMENT
_scale$1$ = -4						; size = 4
tv131 = 8						; size = 4
_<_Args_0>$ = 8						; size = 4
tv170 = 12						; size = 4
_<_Args_1>$ = 12					; size = 4
?_Do_call@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAE_NAAV?$tween@M$$V@tweeny@@$$QAM@Z PROC ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Do_call, COMDAT
; _this$ = ecx

; 832  :     _Rx _Do_call(_Types&&... _Args) override { // call wrapped function

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1572 :         return static_cast<_Callable&&>(_Obj)(static_cast<_Ty1&&>(_Arg1), static_cast<_Types2&&>(_Args2)...);

  00004	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_1>$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 832  :     _Rx _Do_call(_Types&&... _Args) override { // call wrapped function

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 155  : 			if (t.progress() == 0.0f)

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1572 :         return static_cast<_Callable&&>(_Obj)(static_cast<_Ty1&&>(_Arg1), static_cast<_Types2&&>(_Args2)...);

  0000d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00011	f3 0f 11 45 fc	 movss	 DWORD PTR _scale$1$[ebp], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 155  : 			if (t.progress() == 0.0f)

  00016	e8 00 00 00 00	 call	 ?progress@?$tween@M$$V@tweeny@@QBEMXZ ; tweeny::tween<float>::progress
  0001b	d9 5d 0c	 fstp	 DWORD PTR tv170[ebp]
  0001e	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR tv170[ebp]
  00023	0f 57 c0	 xorps	 xmm0, xmm0
  00026	0f 2e c8	 ucomiss xmm1, xmm0
  00029	9f		 lahf
  0002a	f6 c4 44	 test	 ah, 68			; 00000044H
  0002d	7a 1a		 jp	 SHORT $LN8@Do_call

; 156  : 			{
; 157  : 				SetScale(1.0f, 1.0f);

  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	83 ec 08	 sub	 esp, 8
  00035	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0003d	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00044	e8 00 00 00 00	 call	 ?SetScale@CWindow@UI@@QAEXMM@Z ; UI::CWindow::SetScale
$LN8@Do_call:

; 158  : 				//SetAllAlpha(1.0f);
; 159  : 			}
; 160  : 
; 161  : 			SetScale(scale, scale);

  00049	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _scale$1$[ebp]
  0004e	83 ec 08	 sub	 esp, 8
  00051	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00054	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	e8 00 00 00 00	 call	 ?SetScale@CWindow@UI@@QAEXMM@Z ; UI::CWindow::SetScale

; 162  : 			//SetAllAlpha(scale);
; 163  : 
; 164  : 			if (t.progress() == 1.0f)

  00064	8b 4d 08	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00067	e8 00 00 00 00	 call	 ?progress@?$tween@M$$V@tweeny@@QBEMXZ ; tweeny::tween<float>::progress
  0006c	d9 5d 08	 fstp	 DWORD PTR tv131[ebp]
  0006f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR tv131[ebp]
  00074	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  0007b	9f		 lahf
  0007c	f6 c4 44	 test	 ah, 68			; 00000044H
  0007f	7a 2a		 jp	 SHORT $LN9@Do_call

; 165  : 			{
; 166  : 				SetScale(0.0f, 0.0f);

  00081	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00084	83 ec 08	 sub	 esp, 8
  00087	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  0008f	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00096	e8 00 00 00 00	 call	 ?SetScale@CWindow@UI@@QAEXMM@Z ; UI::CWindow::SetScale

; 167  : 				//SetAllAlpha(0.0f);
; 168  : 
; 169  : 				m_bShow = false;

  0009b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009e	5e		 pop	 esi
  0009f	c6 40 75 00	 mov	 BYTE PTR [eax+117], 0

; 170  : 				return true;

  000a3	b0 01		 mov	 al, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 834  :     }

  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 08 00	 ret	 8
$LN9@Do_call:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 174  : 				return false;

  000ab	32 c0		 xor	 al, al
  000ad	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 834  :     }

  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 08 00	 ret	 8
?_Do_call@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAE_NAAV?$tween@M$$V@tweeny@@$$QAM@Z ENDP ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Do_call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Move@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Move@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z PROC ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Move, COMDAT
; _this$ = ecx

; 824  :     _Mybase* _Move(void* _Where) noexcept override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 825  :         if constexpr (_Is_large<_Func_impl_no_alloc>) {
; 826  :             return nullptr;
; 827  :         } else {
; 828  :             return ::new (_Where) _Func_impl_no_alloc(_STD move(_Callee));
; 829  :         }
; 830  :     }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?_Move@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z ENDP ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Move
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Copy@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z PROC ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Copy, COMDAT
; _this$ = ecx

; 816  :     _Mybase* _Copy(void* _Where) const override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 817  :         if constexpr (_Is_large<_Func_impl_no_alloc>) {
; 818  :             return _Global_new<_Func_impl_no_alloc>(_Callee);
; 819  :         } else {
; 820  :             return ::new (_Where) _Func_impl_no_alloc(_Callee);
; 821  :         }
; 822  :     }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?_Copy@?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z ENDP ; std::_Func_impl_no_alloc<<lambda_4e53bff9a6aeda8ea50dcd08e066d322>,bool,tweeny::tween<float> &,float>::_Copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??$_Test_callable@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@std@@YA_NABV<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@std@@YA_NABV<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@Z PROC ; std::_Test_callable<<lambda_4e53bff9a6aeda8ea50dcd08e066d322> >, COMDAT

; 696  :     if constexpr (_Testable_callable_v<_Ty>) {
; 697  :         return !!_Arg;
; 698  :     } else {
; 699  :         return true;

  00000	b0 01		 mov	 al, 1

; 700  :     }
; 701  : }

  00002	c3		 ret	 0
??$_Test_callable@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@std@@YA_NABV<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@Z ENDP ; std::_Test_callable<<lambda_4e53bff9a6aeda8ea50dcd08e066d322> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEX_N@Z
_TEXT	SEGMENT
__Dealloc$ = 8						; size = 1
?_Delete_this@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEX_N@Z PROC ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Delete_this, COMDAT
; _this$ = ecx

; 848  :     void _Delete_this(bool _Dealloc) noexcept override { // destroy self

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 849  :         this->~_Func_impl_no_alloc();
; 850  :         if (_Dealloc) {

  00003	80 7d 08 00	 cmp	 BYTE PTR __Dealloc$[ebp], 0
  00007	74 0b		 je	 SHORT $LN6@Delete_thi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00009	6a 08		 push	 8
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00011	83 c4 08	 add	 esp, 8
$LN6@Delete_thi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 853  :     }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?_Delete_this@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEX_N@Z ENDP ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Get@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPBXXZ
_TEXT	SEGMENT
?_Get@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPBXXZ PROC ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Get, COMDAT
; _this$ = ecx

; 845  :         return _STD addressof(_Callee);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 846  :     }

  00003	c3		 ret	 0
?_Get@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPBXXZ ENDP ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Target_type@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEABVtype_info@@XZ
_TEXT	SEGMENT
?_Target_type@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEABVtype_info@@XZ PROC ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Target_type, COMDAT
; _this$ = ecx

; 837  : #if _HAS_STATIC_RTTI
; 838  :         return typeid(_Callable);

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ??_R0?AV<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@8

; 839  : #else // _HAS_STATIC_RTTI
; 840  :         _CSTD abort();
; 841  : #endif // _HAS_STATIC_RTTI
; 842  :     }

  00005	c3		 ret	 0
?_Target_type@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEABVtype_info@@XZ ENDP ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Target_type
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Do_call@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAE_NAAV?$tween@M$$V@tweeny@@$$QAM@Z
_TEXT	SEGMENT
_scale$1$ = -4						; size = 4
tv88 = 8						; size = 4
_<_Args_0>$ = 8						; size = 4
tv168 = 12						; size = 4
_<_Args_1>$ = 12					; size = 4
?_Do_call@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAE_NAAV?$tween@M$$V@tweeny@@$$QAM@Z PROC ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Do_call, COMDAT
; _this$ = ecx

; 832  :     _Rx _Do_call(_Types&&... _Args) override { // call wrapped function

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1572 :         return static_cast<_Callable&&>(_Obj)(static_cast<_Ty1&&>(_Arg1), static_cast<_Types2&&>(_Args2)...);

  00004	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_1>$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 832  :     _Rx _Do_call(_Types&&... _Args) override { // call wrapped function

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 116  : 			if (t.progress() == 0.0f)

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1572 :         return static_cast<_Callable&&>(_Obj)(static_cast<_Ty1&&>(_Arg1), static_cast<_Types2&&>(_Args2)...);

  0000d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00011	f3 0f 11 45 fc	 movss	 DWORD PTR _scale$1$[ebp], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 116  : 			if (t.progress() == 0.0f)

  00016	e8 00 00 00 00	 call	 ?progress@?$tween@M$$V@tweeny@@QBEMXZ ; tweeny::tween<float>::progress
  0001b	d9 5d 0c	 fstp	 DWORD PTR tv168[ebp]
  0001e	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR tv168[ebp]
  00023	0f 57 c0	 xorps	 xmm0, xmm0
  00026	0f 2e c8	 ucomiss xmm1, xmm0
  00029	9f		 lahf
  0002a	f6 c4 44	 test	 ah, 68			; 00000044H
  0002d	7a 1a		 jp	 SHORT $LN8@Do_call

; 117  : 			{
; 118  : 				SetScale(0.0f, 0.0f);

  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	83 ec 08	 sub	 esp, 8
  00035	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  0003d	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00044	e8 00 00 00 00	 call	 ?SetScale@CWindow@UI@@QAEXMM@Z ; UI::CWindow::SetScale
$LN8@Do_call:

; 119  : 				//SetAllAlpha(0.0f);
; 120  : 			}
; 121  : 
; 122  : 			SetScale(scale, scale);

  00049	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _scale$1$[ebp]
  0004e	83 ec 08	 sub	 esp, 8
  00051	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00054	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	e8 00 00 00 00	 call	 ?SetScale@CWindow@UI@@QAEXMM@Z ; UI::CWindow::SetScale

; 123  : 			//SetAllAlpha(scale);
; 124  : 
; 125  : 			if (t.progress() == 1.0f)

  00064	8b 4d 08	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00067	e8 00 00 00 00	 call	 ?progress@?$tween@M$$V@tweeny@@QBEMXZ ; tweeny::tween<float>::progress
  0006c	d9 5d 08	 fstp	 DWORD PTR tv88[ebp]
  0006f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR tv88[ebp]
  00074	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  0007b	9f		 lahf
  0007c	f6 c4 44	 test	 ah, 68			; 00000044H
  0007f	7a 23		 jp	 SHORT $LN9@Do_call

; 126  : 			{
; 127  : 				SetScale(1.0f, 1.0f);

  00081	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00084	83 ec 08	 sub	 esp, 8
  00087	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0008f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00096	e8 00 00 00 00	 call	 ?SetScale@CWindow@UI@@QAEXMM@Z ; UI::CWindow::SetScale

; 128  : 				//SetAllAlpha(1.0f);
; 129  : 
; 130  : 				return true;

  0009b	b0 01		 mov	 al, 1
  0009d	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 834  :     }

  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 08 00	 ret	 8
$LN9@Do_call:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 134  : 				return false;

  000a4	32 c0		 xor	 al, al
  000a6	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 834  :     }

  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 08 00	 ret	 8
?_Do_call@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAE_NAAV?$tween@M$$V@tweeny@@$$QAM@Z ENDP ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Do_call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Move@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Move@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z PROC ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Move, COMDAT
; _this$ = ecx

; 824  :     _Mybase* _Move(void* _Where) noexcept override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 825  :         if constexpr (_Is_large<_Func_impl_no_alloc>) {
; 826  :             return nullptr;
; 827  :         } else {
; 828  :             return ::new (_Where) _Func_impl_no_alloc(_STD move(_Callee));
; 829  :         }
; 830  :     }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?_Move@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EAEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z ENDP ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Move
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?_Copy@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Copy@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z PROC ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Copy, COMDAT
; _this$ = ecx

; 816  :     _Mybase* _Copy(void* _Where) const override {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 817  :         if constexpr (_Is_large<_Func_impl_no_alloc>) {
; 818  :             return _Global_new<_Func_impl_no_alloc>(_Callee);
; 819  :         } else {
; 820  :             return ::new (_Where) _Func_impl_no_alloc(_Callee);
; 821  :         }
; 822  :     }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?_Copy@?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@EBEPAV?$_Func_base@_NAAV?$tween@M$$V@tweeny@@M@2@PAX@Z ENDP ; std::_Func_impl_no_alloc<<lambda_3ac3554338970f4f53a10d6f6ce8edc5>,bool,tweeny::tween<float> &,float>::_Copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??$_Test_callable@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@std@@YA_NABV<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Test_callable@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@std@@YA_NABV<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@Z PROC ; std::_Test_callable<<lambda_3ac3554338970f4f53a10d6f6ce8edc5> >, COMDAT

; 696  :     if constexpr (_Testable_callable_v<_Ty>) {
; 697  :         return !!_Arg;
; 698  :     } else {
; 699  :         return true;

  00000	b0 01		 mov	 al, 1

; 700  :     }
; 701  : }

  00002	c3		 ret	 0
??$_Test_callable@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@std@@YA_NABV<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@Z ENDP ; std::_Test_callable<<lambda_3ac3554338970f4f53a10d6f6ce8edc5> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UcubicOutEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UcubicOutEasing@easing@1@U?$int2type@$0A@@01@@Z
_TEXT	SEGMENT
$T1 = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_f$ = 8							; size = 4
_easing$ = 12						; size = 1
___formal$ = 16						; size = 1
??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UcubicOutEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UcubicOutEasing@easing@1@U?$int2type@$0A@@01@@Z PROC ; tweeny::detail::easingfill<std::array<float,1>,std::tuple<std::function<float __cdecl(float,float,float)> >,tweeny::easing::cubicOutEasing>, COMDAT

; 1136 :         template<typename TypeTupleT, typename EasingCollectionT, typename EasingT> void easingfill(EasingCollectionT & f, EasingT easing, int2type<0>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _f$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 911  :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  00014	68 00 00 00 00	 push	 OFFSET ??$run@M@cubicOutEasing@easing@tweeny@@SAMMMM@Z ; tweeny::easing::cubicOutEasing::run<float>

; 866  :         _Set(nullptr);

  00019	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+36], 0

; 911  :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  00020	e8 00 00 00 00	 call	 ??$_Test_callable@$$A6AMMMM@Z@std@@YA_NA6AMMMM@Z@Z ; std::_Test_callable<float __cdecl(float,float,float)>
  00025	83 c4 04	 add	 esp, 4
  00028	84 c0		 test	 al, al
  0002a	74 14		 je	 SHORT $LN11@easingfill

; 912  :             return; // already empty
; 913  :         }
; 914  : 
; 915  :         using _Impl = _Func_impl_no_alloc<decay_t<_Fx>, _Ret, _Types...>;
; 916  :         if constexpr (_Is_large<_Impl>) {
; 917  :             // dynamically allocate _Val
; 918  :             _Set(_Global_new<_Impl>(_STD forward<_Fx>(_Val)));
; 919  :         } else {
; 920  :             // store _Val in-situ
; 921  :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  0002c	8d 45 d4	 lea	 eax, DWORD PTR $T1[ebp]

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  0002f	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], OFFSET ??_7?$_Func_impl_no_alloc@P6AMMMM@ZMMMM@std@@6B@
  00036	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+4], OFFSET ??$run@M@cubicOutEasing@easing@tweeny@@SAMMMM@Z ; tweeny::easing::cubicOutEasing::run<float>

; 921  :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  0003d	89 45 f8	 mov	 DWORD PTR $T1[ebp+36], eax
$LN11@easingfill:

; 1090 :         function(_STD forward<_Fx>(_Func)).swap(*this);

  00040	56		 push	 esi
  00041	8d 4d d4	 lea	 ecx, DWORD PTR $T1[ebp]
  00044	e8 00 00 00 00	 call	 ?swap@?$function@$$A6AMMMM@Z@std@@QAEXAAV12@@Z ; std::function<float __cdecl(float,float,float)>::swap

; 888  :         return !_Getimpl();

  00049	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp+36]
  0004c	5e		 pop	 esi
  0004d	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0004f	74 11		 je	 SHORT $LN22@easingfill

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8d 45 d4	 lea	 eax, DWORD PTR $T1[ebp]
  00056	3b c8		 cmp	 ecx, eax
  00058	0f 95 c0	 setne	 al
  0005b	0f b6 c0	 movzx	 eax, al
  0005e	50		 push	 eax
  0005f	ff 52 10	 call	 DWORD PTR [edx+16]
$LN22@easingfill:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1138 :         }

  00062	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00065	33 cd		 xor	 ecx, ebp
  00067	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UcubicOutEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UcubicOutEasing@easing@1@U?$int2type@$0A@@01@@Z ENDP ; tweeny::detail::easingfill<std::array<float,1>,std::tuple<std::function<float __cdecl(float,float,float)> >,tweeny::easing::cubicOutEasing>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@AAM@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEPAU?$tweenpoint@M@detail@tweeny@@QAU234@AAM@Z
_TEXT	SEGMENT
__Oldsize$1$ = -12					; size = 4
tv531 = -8						; size = 4
__Whereoff$1$ = -8					; size = 4
tv536 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@AAM@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEPAU?$tweenpoint@M@detail@tweeny@@QAU234@AAM@Z PROC ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Emplace_reallocate<float &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  00009	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	8b f1		 mov	 esi, ecx
  00012	57		 push	 edi
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	2b d7		 sub	 edx, edi

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	f7 ea		 imul	 edx
  0001c	2b cf		 sub	 ecx, edi
  0001e	c1 fa 04	 sar	 edx, 4
  00021	8b c2		 mov	 eax, edx
  00023	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00026	03 c2		 add	 eax, edx
  00028	89 45 f8	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  0002b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00030	f7 e9		 imul	 ecx
  00032	c1 fa 04	 sar	 edx, 4
  00035	8b c2		 mov	 eax, edx
  00037	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003a	03 c2		 add	 eax, edx
  0003c	89 45 f4	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0003f	3d aa aa aa 02	 cmp	 eax, 44739242		; 02aaaaaaH
  00044	0f 84 70 01 00
	00		 je	 $LN74@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004a	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0004d	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00050	2b cf		 sub	 ecx, edi
  00052	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00057	f7 e9		 imul	 ecx

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00059	b8 aa aa aa 02	 mov	 eax, 44739242		; 02aaaaaaH

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005e	c1 fa 04	 sar	 edx, 4
  00061	8b ca		 mov	 ecx, edx
  00063	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00066	03 ca		 add	 ecx, edx

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00068	8b d1		 mov	 edx, ecx
  0006a	d1 ea		 shr	 edx, 1
  0006c	2b c2		 sub	 eax, edx
  0006e	3b c8		 cmp	 ecx, eax
  00070	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00072	b8 c0 ff ff ff	 mov	 eax, -64		; ffffffc0H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00077	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  00078	89 45 fc	 mov	 DWORD PTR tv536[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00080	83 c4 04	 add	 esp, 4
  00083	8b f8		 mov	 edi, eax
  00085	eb 46		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00087	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0008a	8b cb		 mov	 ecx, ebx
  0008c	3b c3		 cmp	 eax, ebx
  0008e	0f 43 c8	 cmovae	 ecx, eax
  00091	81 f9 aa aa aa
	02		 cmp	 ecx, 44739242		; 02aaaaaaH
  00097	0f 87 22 01 00
	00		 ja	 $LN75@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0009d	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  000a0	c1 e0 05	 shl	 eax, 5
  000a3	89 45 fc	 mov	 DWORD PTR tv536[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000a6	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000ab	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000b3	83 c4 04	 add	 esp, 4
  000b6	8b f8		 mov	 edi, eax
  000b8	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000ba	85 c0		 test	 eax, eax
  000bc	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c4	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000c7	8b f8		 mov	 edi, eax
  000c9	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000cb	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000cd	8b 45 f8	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1157 :             during(static_cast<uint16_t>(0));

  000d0	6a 00		 push	 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000d2	8d 1c 40	 lea	 ebx, DWORD PTR [eax+eax*2]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1156 :         inline tweenpoint<Ts...>::tweenpoint(Ts... vs) : values{vs...} {

  000d5	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000d8	c1 e3 05	 shl	 ebx, 5
  000db	03 df		 add	 ebx, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1157 :             during(static_cast<uint16_t>(0));

  000dd	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000df	89 5d f8	 mov	 DWORD PTR tv531[ebp], ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1156 :         inline tweenpoint<Ts...>::tweenpoint(Ts... vs) : values{vs...} {

  000e2	8b 00		 mov	 eax, DWORD PTR [eax]
  000e4	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  000e6	c7 43 2c 00 00
	00 00		 mov	 DWORD PTR [ebx+44], 0
  000ed	c7 43 54 00 00
	00 00		 mov	 DWORD PTR [ebx+84], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1157 :             during(static_cast<uint16_t>(0));

  000f4	e8 00 00 00 00	 call	 ??$during@G@?$tweenpoint@M@detail@tweeny@@QAEXG@Z ; tweeny::detail::tweenpoint<float>::during<unsigned short>

; 1158 :             via(easing::def);

  000f9	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?def@easing@tweeny@@2UdefaultEasing@12@B
  00100	8b cb		 mov	 ecx, ebx
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ??$via@UdefaultEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUdefaultEasing@easing@2@@Z ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::defaultEasing>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00108	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0010b	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  0010e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00110	3b c2		 cmp	 eax, edx
  00112	75 04		 jne	 SHORT $LN4@Emplace_re

; 903  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 904  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

  00114	8b c7		 mov	 eax, edi

; 905  :             } else {
; 906  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 907  :             }
; 908  :         } else { // provide basic guarantee

  00116	eb 15		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 909  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);

  00118	56		 push	 esi
  00119	57		 push	 edi
  0011a	50		 push	 eax
  0011b	51		 push	 ecx
  0011c	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@QAU123@0PAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Uninitialized_move<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >

; 910  :             _Constructed_first = _Newvec;
; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  00121	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00124	8d 43 60	 lea	 eax, DWORD PTR [ebx+96]
  00127	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0012a	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@Emplace_re:
  0012d	56		 push	 esi
  0012e	50		 push	 eax
  0012f	52		 push	 edx
  00130	51		 push	 ecx
  00131	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@QAU123@0PAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Uninitialized_move<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00136	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 910  :             _Constructed_first = _Newvec;
; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  00138	83 c4 10	 add	 esp, 16			; 00000010H

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  0013b	85 c9		 test	 ecx, ecx
  0013d	74 52		 je	 SHORT $LN56@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  0013f	56		 push	 esi
  00140	ff 76 04	 push	 DWORD PTR [esi+4]
  00143	51		 push	 ecx
  00144	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >

; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00149	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0014c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00151	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00153	83 c4 0c	 add	 esp, 12			; 0000000cH
  00156	2b cb		 sub	 ecx, ebx
  00158	f7 e9		 imul	 ecx
  0015a	c1 fa 04	 sar	 edx, 4
  0015d	8b c2		 mov	 eax, edx
  0015f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00162	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00164	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00167	c1 e1 05	 shl	 ecx, 5

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0016a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00170	72 12		 jb	 SHORT $LN66@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00172	8b 53 fc	 mov	 edx, DWORD PTR [ebx-4]
  00175	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00178	2b da		 sub	 ebx, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0017a	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
  0017d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00180	77 33		 ja	 SHORT $LN63@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00182	8b da		 mov	 ebx, edx
$LN66@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00184	51		 push	 ecx
  00185	53		 push	 ebx
  00186	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0018b	8b 5d f8	 mov	 ebx, DWORD PTR tv531[ebp]
  0018e	83 c4 08	 add	 esp, 8
$LN56@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00191	8b 45 f4	 mov	 eax, DWORD PTR __Oldsize$1$[ebp]
  00194	40		 inc	 eax
  00195	89 3e		 mov	 DWORD PTR [esi], edi
  00197	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0019a	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0019c	c1 e1 05	 shl	 ecx, 5
  0019f	03 cf		 add	 ecx, edi
  001a1	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  001a4	8b 4d fc	 mov	 ecx, DWORD PTR tv536[ebp]
  001a7	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  001a9	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  001aa	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  001ad	5e		 pop	 esi
  001ae	5b		 pop	 ebx

; 921  :     }

  001af	8b e5		 mov	 esp, ebp
  001b1	5d		 pop	 ebp
  001b2	c2 08 00	 ret	 8
$LN63@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001b5	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN74@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  001ba	e8 00 00 00 00	 call	 ?_Xlength@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xlength
$LN75@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  001bf	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN72@Emplace_re:
  001c4	cc		 int	 3
??$_Emplace_reallocate@AAM@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEPAU?$tweenpoint@M@detail@tweeny@@QAU234@AAM@Z ENDP ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Emplace_reallocate<float &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$clip@M@detail@tweeny@@YAMABM00@Z
_TEXT	SEGMENT
tv69 = 8						; size = 4
_n$ = 8							; size = 4
_lower$ = 12						; size = 4
_upper$ = 16						; size = 4
??$clip@M@detail@tweeny@@YAMABM00@Z PROC		; tweeny::detail::clip<float>, COMDAT

; 1905 :         T clip(const T & n, const T & lower, const T & upper) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1906 :             return max(lower, min(n, upper)); // co on kurwa ma do tego std::max xD

  00003	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00006	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0000a	8b 45 10	 mov	 eax, DWORD PTR _upper$[ebp]
  0000d	f3 0f 5d 00	 minss	 xmm0, DWORD PTR [eax]
  00011	8b 45 0c	 mov	 eax, DWORD PTR _lower$[ebp]
  00014	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00018	0f 2f c8	 comiss	 xmm1, xmm0
  0001b	76 0a		 jbe	 SHORT $LN7@clip
  0001d	f3 0f 11 4d 08	 movss	 DWORD PTR tv69[ebp], xmm1

; 1907 :         }

  00022	d9 45 08	 fld	 DWORD PTR tv69[ebp]
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
$LN7@clip:

; 1906 :             return max(lower, min(n, upper)); // co on kurwa ma do tego std::max xD

  00027	f3 0f 11 45 08	 movss	 DWORD PTR tv69[ebp], xmm0

; 1907 :         }

  0002c	d9 45 08	 fld	 DWORD PTR tv69[ebp]
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??$clip@M@detail@tweeny@@YAMABM00@Z ENDP		; tweeny::detail::clip<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z
_TEXT	SEGMENT
_this$GSCopy$1$ = -72					; size = 4
__Newcapacity$1$ = -68					; size = 4
__Count$1$ = -68					; size = 4
__First$GSCopy$1$ = -64					; size = 4
__Oldcapacity$1$ = -60					; size = 4
__Newlast$1$ = -60					; size = 4
__Oldsize$1$ = -60					; size = 4
$T2 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Newsize$ = 12						; size = 4
??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z PROC ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Assign_counted_range<tweeny::detail::tweenpoint<float> *>, COMDAT
; _this$ = ecx

; 1444 :     _CONSTEXPR20 void _Assign_counted_range(_Iter _First, const size_type _Newsize) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d b8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ebx
  00030	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 1445 :         // assign elements from counted range _First + [0, _Newsize)
; 1446 :         auto& _Al         = _Getal();
; 1447 :         auto& _My_data    = _Mypair._Myval2;
; 1448 :         pointer& _Myfirst = _My_data._Myfirst;
; 1449 :         pointer& _Mylast  = _My_data._Mylast;
; 1450 :         pointer& _Myend   = _My_data._Myend;
; 1451 : 
; 1452 :         constexpr bool _Nothrow_construct = conjunction_v<is_nothrow_constructible<_Ty, _Iter_ref_t<_Iter>>,
; 1453 :             _Uses_default_construct<_Alloc, _Ty*, _Iter_ref_t<_Iter>>>;
; 1454 : 
; 1455 :         _My_data._Orphan_all();
; 1456 :         const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00033	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00036	8b 33		 mov	 esi, DWORD PTR [ebx]
  00038	2b ce		 sub	 ecx, esi
  0003a	8b 7d 0c	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0003d	89 45 c0	 mov	 DWORD PTR __First$GSCopy$1$[ebp], eax
  00040	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00045	f7 e9		 imul	 ecx
  00047	89 7d bc	 mov	 DWORD PTR __Count$1$[ebp], edi
  0004a	c1 fa 04	 sar	 edx, 4
  0004d	8b c2		 mov	 eax, edx
  0004f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00052	03 c2		 add	 eax, edx
  00054	89 45 c4	 mov	 DWORD PTR __Oldcapacity$1$[ebp], eax

; 1457 :         if (_Newsize > _Oldcapacity) {

  00057	3b f8		 cmp	 edi, eax
  00059	0f 86 bc 00 00
	00		 jbe	 $LN5@Assign_cou

; 1721 :         if (_Newsize > max_size()) {

  0005f	81 ff aa aa aa
	02		 cmp	 edi, 44739242		; 02aaaaaaH
  00065	0f 87 d7 01 00
	00		 ja	 $LN85@Assign_cou

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0006b	8b 55 c4	 mov	 edx, DWORD PTR __Oldcapacity$1$[ebp]
  0006e	8b c8		 mov	 ecx, eax
  00070	d1 e9		 shr	 ecx, 1
  00072	b8 aa aa aa 02	 mov	 eax, 44739242		; 02aaaaaaH
  00077	2b c1		 sub	 eax, ecx
  00079	3b d0		 cmp	 edx, eax
  0007b	76 09		 jbe	 SHORT $LN15@Assign_cou

; 2030 :             return _Max; // geometric growth would overflow

  0007d	c7 45 bc aa aa
	aa 02		 mov	 DWORD PTR __Newcapacity$1$[ebp], 44739242 ; 02aaaaaaH
  00084	eb 0b		 jmp	 SHORT $LN16@Assign_cou
$LN15@Assign_cou:

; 2031 :         }
; 2032 : 
; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00086	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]

; 2034 : 
; 2035 :         if (_Geometric < _Newsize) {

  00089	3b c7		 cmp	 eax, edi
  0008b	0f 42 c7	 cmovb	 eax, edi
  0008e	89 45 bc	 mov	 DWORD PTR __Newcapacity$1$[ebp], eax
$LN16@Assign_cou:

; 1727 :         if (_Myfirst) { // destroy and deallocate old array

  00091	85 f6		 test	 esi, esi
  00093	74 67		 je	 SHORT $LN12@Assign_cou

; 1728 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00095	53		 push	 ebx
  00096	ff 73 04	 push	 DWORD PTR [ebx+4]
  00099	56		 push	 esi
  0009a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >

; 1729 :             _ASAN_VECTOR_REMOVE;
; 1730 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0009f	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000a2	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000a7	8b 33		 mov	 esi, DWORD PTR [ebx]
  000a9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ac	2b ce		 sub	 ecx, esi
  000ae	f7 e9		 imul	 ecx
  000b0	c1 fa 04	 sar	 edx, 4
  000b3	8b c2		 mov	 eax, edx
  000b5	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000b8	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ba	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  000bd	c1 e1 05	 shl	 ecx, 5

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000c0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000c6	72 16		 jb	 SHORT $LN34@Assign_cou

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000c8	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  000cb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000ce	2b f2		 sub	 esi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000d0	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  000d3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000d6	0f 87 6b 01 00
	00		 ja	 $LN31@Assign_cou

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000dc	8b f2		 mov	 esi, edx
$LN34@Assign_cou:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000de	51		 push	 ecx
  000df	56		 push	 esi
  000e0	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1732 :             _Myfirst = nullptr;

  000e5	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000eb	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1733 :             _Mylast  = nullptr;

  000ee	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1734 :             _Myend   = nullptr;

  000f5	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN12@Assign_cou:

; 1735 :         }
; 1736 : 
; 1737 :         _Buy_raw(_Newcapacity);

  000fc	ff 75 bc	 push	 DWORD PTR __Newcapacity$1$[ebp]
  000ff	8b cb		 mov	 ecx, ebx
  00101	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXI@Z ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Buy_raw

; 1458 :             _Clear_and_reserve_geometric(_Newsize);
; 1459 :             if constexpr (_Nothrow_construct) {
; 1460 :                 _Mylast = _Uninitialized_copy_n(_STD move(_First), _Newsize, _Myfirst, _Al);
; 1461 :                 _ASAN_VECTOR_CREATE;
; 1462 :             } else {
; 1463 :                 _ASAN_VECTOR_CREATE_GUARD;
; 1464 :                 _Mylast = _Uninitialized_copy_n(_STD move(_First), _Newsize, _Myfirst, _Al);

  00106	53		 push	 ebx
  00107	ff 33		 push	 DWORD PTR [ebx]
  00109	57		 push	 edi
  0010a	8b 7d c0	 mov	 edi, DWORD PTR __First$GSCopy$1$[ebp]
  0010d	57		 push	 edi
  0010e	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Uninitialized_copy_n<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >
  00113	83 c4 10	 add	 esp, 16			; 00000010H

; 1465 :             }
; 1466 :             return;

  00116	e9 06 01 00 00	 jmp	 $LN83@Assign_cou
$LN5@Assign_cou:

; 1467 :         }
; 1468 : 
; 1469 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0011b	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0011e	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00123	2b ce		 sub	 ecx, esi
  00125	f7 e9		 imul	 ecx
  00127	c1 fa 04	 sar	 edx, 4
  0012a	8b c2		 mov	 eax, edx
  0012c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0012f	03 c2		 add	 eax, edx
  00131	89 45 c4	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1470 :         if (_Newsize > _Oldsize) {

  00134	3b f8		 cmp	 edi, eax
  00136	76 3c		 jbe	 SHORT $LN6@Assign_cou

; 1471 :             bool _Copied = false;
; 1472 :             if constexpr (_Iter_copy_cat<_Iter, pointer>::_Bitcopy_assignable) {
; 1473 : #if _HAS_CXX20
; 1474 :                 if (!_STD is_constant_evaluated())
; 1475 : #endif // _HAS_CXX20
; 1476 :                 {
; 1477 :                     _Copy_memmove_n(_First, static_cast<size_t>(_Oldsize), _Myfirst);
; 1478 :                     _First += _Oldsize;
; 1479 :                     _Copied = true;
; 1480 :                 }
; 1481 :             }
; 1482 : 
; 1483 :             if (!_Copied) {
; 1484 :                 for (auto _Mid = _Myfirst; _Mid != _Mylast; ++_Mid, (void) ++_First) {

  00138	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0013b	3b f0		 cmp	 esi, eax
  0013d	74 1e		 je	 SHORT $LN3@Assign_cou
  0013f	8b 7d c0	 mov	 edi, DWORD PTR __First$GSCopy$1$[ebp]
$LL4@Assign_cou:

; 1485 :                     *_Mid = *_First;

  00142	57		 push	 edi
  00143	8b ce		 mov	 ecx, esi
  00145	e8 00 00 00 00	 call	 ??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z
  0014a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0014d	83 c6 60	 add	 esi, 96			; 00000060H
  00150	83 c7 60	 add	 edi, 96			; 00000060H
  00153	3b f0		 cmp	 esi, eax
  00155	75 eb		 jne	 SHORT $LL4@Assign_cou
  00157	89 7d c0	 mov	 DWORD PTR __First$GSCopy$1$[ebp], edi
  0015a	8b 7d bc	 mov	 edi, DWORD PTR __Count$1$[ebp]
$LN3@Assign_cou:

; 1486 :                 }
; 1487 :             }
; 1488 : 
; 1489 :             if constexpr (_Nothrow_construct) {
; 1490 :                 _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1491 :                 _Mylast = _Uninitialized_copy_n(_STD move(_First), _Newsize - _Oldsize, _Mylast, _Al);
; 1492 :             } else {
; 1493 :                 _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1494 :                 _Mylast = _Uninitialized_copy_n(_STD move(_First), _Newsize - _Oldsize, _Mylast, _Al);

  0015d	2b 7d c4	 sub	 edi, DWORD PTR __Oldsize$1$[ebp]
  00160	53		 push	 ebx
  00161	50		 push	 eax
  00162	57		 push	 edi
  00163	8b 7d c0	 mov	 edi, DWORD PTR __First$GSCopy$1$[ebp]
  00166	57		 push	 edi
  00167	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_n@PAU?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAPAU?$tweenpoint@M@detail@tweeny@@PAU123@I0AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Uninitialized_copy_n<tweeny::detail::tweenpoint<float> *,std::allocator<tweeny::detail::tweenpoint<float> > >
  0016c	83 c4 10	 add	 esp, 16			; 00000010H

; 1495 :                 _ASAN_VECTOR_RELEASE_GUARD;
; 1496 :             }
; 1497 :         } else {

  0016f	e9 ad 00 00 00	 jmp	 $LN83@Assign_cou
$LN6@Assign_cou:

; 1498 :             const pointer _Newlast = _Myfirst + _Newsize;

  00174	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
  00177	c1 e0 05	 shl	 eax, 5
  0017a	03 c6		 add	 eax, esi
  0017c	89 45 c4	 mov	 DWORD PTR __Newlast$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 3879 :     for (; _Count != 0; ++_Dest, (void) ++_First, --_Count) {

  0017f	85 ff		 test	 edi, edi
  00181	0f 84 8a 00 00
	00		 je	 $LN41@Assign_cou
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1498 :             const pointer _Newlast = _Myfirst + _Newsize;

  00187	8b 7d c0	 mov	 edi, DWORD PTR __First$GSCopy$1$[ebp]
  0018a	8b 5d bc	 mov	 ebx, DWORD PTR __Count$1$[ebp]
  0018d	83 c7 2c	 add	 edi, 44			; 0000002cH
$LL42@Assign_cou:
  00190	8b 47 d4	 mov	 eax, DWORD PTR [edi-44]
  00193	89 06		 mov	 DWORD PTR [esi], eax
  00195	66 8b 47 d8	 mov	 ax, WORD PTR [edi-40]
  00199	66 89 46 04	 mov	 WORD PTR [esi+4], ax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  0019d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+36], 0

; 888  :         return !_Getimpl();

  001a4	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 1037 :     function(const function& _Right) {

  001a6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 892  :         if (!_Right._Empty()) {

  001ad	85 c9		 test	 ecx, ecx
  001af	74 0b		 je	 SHORT $LN57@Assign_cou

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  001b1	8b 01		 mov	 eax, DWORD PTR [ecx]
  001b3	8d 55 c8	 lea	 edx, DWORD PTR $T2[ebp]
  001b6	52		 push	 edx
  001b7	ff 10		 call	 DWORD PTR [eax]
  001b9	89 45 ec	 mov	 DWORD PTR $T2[ebp+36], eax
$LN57@Assign_cou:

; 1065 :         function(_Right).swap(*this);

  001bc	8d 46 08	 lea	 eax, DWORD PTR [esi+8]

; 1039 :     }

  001bf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 1065 :         function(_Right).swap(*this);

  001c6	50		 push	 eax
  001c7	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  001ca	e8 00 00 00 00	 call	 ?swap@?$function@$$A6AMMMM@Z@std@@QAEXAAV12@@Z ; std::function<float __cdecl(float,float,float)>::swap

; 888  :         return !_Getimpl();

  001cf	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp+36]
  001d2	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  001d4	74 18		 je	 SHORT $LN67@Assign_cou

; 952  :             _Getimpl()->_Delete_this(!_Local());

  001d6	8b 11		 mov	 edx, DWORD PTR [ecx]
  001d8	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  001db	3b c8		 cmp	 ecx, eax
  001dd	0f 95 c0	 setne	 al
  001e0	0f b6 c0	 movzx	 eax, al
  001e3	50		 push	 eax
  001e4	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  001e7	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+36], 0
$LN67@Assign_cou:
  001ee	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  001f1	50		 push	 eax
  001f2	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]
  001f5	e8 00 00 00 00	 call	 ??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z ; std::function<bool __cdecl(tweeny::tween<float> &,float)>::operator=
  001fa	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 3879 :     for (; _Count != 0; ++_Dest, (void) ++_First, --_Count) {

  001fd	83 c7 60	 add	 edi, 96			; 00000060H
  00200	89 46 58	 mov	 DWORD PTR [esi+88], eax
  00203	83 c6 60	 add	 esi, 96			; 00000060H
  00206	83 eb 01	 sub	 ebx, 1
  00209	75 85		 jne	 SHORT $LL42@Assign_cou
  0020b	8b 5d b8	 mov	 ebx, DWORD PTR _this$GSCopy$1$[ebp]
  0020e	8b 45 c4	 mov	 eax, DWORD PTR __Newlast$1$[ebp]
$LN41@Assign_cou:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1500 :             _Destroy_range(_Newlast, _Mylast, _Al);

  00211	53		 push	 ebx
  00212	ff 73 04	 push	 DWORD PTR [ebx+4]
  00215	50		 push	 eax
  00216	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >

; 1501 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1502 :             _Mylast = _Newlast;

  0021b	8b 45 c4	 mov	 eax, DWORD PTR __Newlast$1$[ebp]
  0021e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN83@Assign_cou:

; 1504 :     }

  00221	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  00224	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00227	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0022e	59		 pop	 ecx
  0022f	5f		 pop	 edi
  00230	5e		 pop	 esi
  00231	5b		 pop	 ebx
  00232	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00235	33 cd		 xor	 ecx, ebp
  00237	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0023c	8b e5		 mov	 esp, ebp
  0023e	5d		 pop	 ebp
  0023f	c2 08 00	 ret	 8
$LN85@Assign_cou:

; 1722 :             _Xlength();

  00242	e8 00 00 00 00	 call	 ?_Xlength@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xlength
$LN31@Assign_cou:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00247	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN82@Assign_cou:
  0024c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z$1:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Func_class@MMMM@std@@QAE@XZ ; std::_Func_class<float,float,float,float>::~_Func_class<float,float,float,float>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z ENDP ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Assign_counted_range<tweeny::detail::tweenpoint<float> *>
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Assign_counted_range@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@I@Z
_TEXT	SEGMENT
__Oldsize$1$ = -4					; size = 4
__First$ = 8						; size = 4
__Newcapacity$1$ = 12					; size = 4
__Newsize$ = 12						; size = 4
??$_Assign_counted_range@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@I@Z PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Assign_counted_range<std::function<bool __cdecl(tweeny::tween<float> &,float)> *>, COMDAT
; _this$ = ecx

; 1444 :     _CONSTEXPR20 void _Assign_counted_range(_Iter _First, const size_type _Newsize) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx

; 1445 :         // assign elements from counted range _First + [0, _Newsize)
; 1446 :         auto& _Al         = _Getal();
; 1447 :         auto& _My_data    = _Mypair._Myval2;
; 1448 :         pointer& _Myfirst = _My_data._Myfirst;
; 1449 :         pointer& _Mylast  = _My_data._Mylast;
; 1450 :         pointer& _Myend   = _My_data._Myend;
; 1451 : 
; 1452 :         constexpr bool _Nothrow_construct = conjunction_v<is_nothrow_constructible<_Ty, _Iter_ref_t<_Iter>>,
; 1453 :             _Uses_default_construct<_Alloc, _Ty*, _Iter_ref_t<_Iter>>>;
; 1454 : 
; 1455 :         _My_data._Orphan_all();
; 1456 :         const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00007	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0000c	56		 push	 esi

; 1457 :         if (_Newsize > _Oldcapacity) {

  0000d	8b 75 0c	 mov	 esi, DWORD PTR __Newsize$[ebp]
  00010	57		 push	 edi
  00011	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00014	8b 3b		 mov	 edi, DWORD PTR [ebx]
  00016	2b d7		 sub	 edx, edi
  00018	f7 ea		 imul	 edx
  0001a	c1 fa 04	 sar	 edx, 4
  0001d	8b ca		 mov	 ecx, edx
  0001f	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00022	03 ca		 add	 ecx, edx
  00024	3b f1		 cmp	 esi, ecx
  00026	0f 86 bf 00 00
	00		 jbe	 $LN5@Assign_cou

; 1721 :         if (_Newsize > max_size()) {

  0002c	81 fe 66 66 66
	06		 cmp	 esi, 107374182		; 06666666H
  00032	0f 87 39 01 00
	00		 ja	 $LN46@Assign_cou

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00038	8b d1		 mov	 edx, ecx
  0003a	b8 66 66 66 06	 mov	 eax, 107374182		; 06666666H
  0003f	d1 ea		 shr	 edx, 1
  00041	2b c2		 sub	 eax, edx
  00043	3b c8		 cmp	 ecx, eax
  00045	76 09		 jbe	 SHORT $LN15@Assign_cou

; 2030 :             return _Max; // geometric growth would overflow

  00047	c7 45 0c 66 66
	66 06		 mov	 DWORD PTR __Newcapacity$1$[ebp], 107374182 ; 06666666H
  0004e	eb 0b		 jmp	 SHORT $LN16@Assign_cou
$LN15@Assign_cou:

; 2031 :         }
; 2032 : 
; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00050	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 2034 : 
; 2035 :         if (_Geometric < _Newsize) {

  00053	3b c6		 cmp	 eax, esi
  00055	0f 42 c6	 cmovb	 eax, esi
  00058	89 45 0c	 mov	 DWORD PTR __Newcapacity$1$[ebp], eax
$LN16@Assign_cou:

; 1727 :         if (_Myfirst) { // destroy and deallocate old array

  0005b	85 ff		 test	 edi, edi
  0005d	74 67		 je	 SHORT $LN12@Assign_cou

; 1728 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  0005f	53		 push	 ebx
  00060	ff 73 04	 push	 DWORD PTR [ebx+4]
  00063	57		 push	 edi
  00064	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >

; 1729 :             _ASAN_VECTOR_REMOVE;
; 1730 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00069	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0006c	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00071	8b 3b		 mov	 edi, DWORD PTR [ebx]
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH
  00076	2b cf		 sub	 ecx, edi
  00078	f7 e9		 imul	 ecx
  0007a	c1 fa 04	 sar	 edx, 4
  0007d	8b c2		 mov	 eax, edx
  0007f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00082	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  00087	c1 e1 03	 shl	 ecx, 3

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0008a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00090	72 16		 jb	 SHORT $LN34@Assign_cou

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00092	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  00095	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00098	2b fa		 sub	 edi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009a	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  0009d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a0	0f 87 d0 00 00
	00		 ja	 $LN31@Assign_cou

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a6	8b fa		 mov	 edi, edx
$LN34@Assign_cou:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000a8	51		 push	 ecx
  000a9	57		 push	 edi
  000aa	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1732 :             _Myfirst = nullptr;

  000af	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000b5	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1733 :             _Mylast  = nullptr;

  000b8	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1734 :             _Myend   = nullptr;

  000bf	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN12@Assign_cou:

; 1735 :         }
; 1736 : 
; 1737 :         _Buy_raw(_Newcapacity);

  000c6	ff 75 0c	 push	 DWORD PTR __Newcapacity$1$[ebp]
  000c9	8b cb		 mov	 ecx, ebx
  000cb	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXI@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Buy_raw

; 1458 :             _Clear_and_reserve_geometric(_Newsize);
; 1459 :             if constexpr (_Nothrow_construct) {
; 1460 :                 _Mylast = _Uninitialized_copy_n(_STD move(_First), _Newsize, _Myfirst, _Al);
; 1461 :                 _ASAN_VECTOR_CREATE;
; 1462 :             } else {
; 1463 :                 _ASAN_VECTOR_CREATE_GUARD;
; 1464 :                 _Mylast = _Uninitialized_copy_n(_STD move(_First), _Newsize, _Myfirst, _Al);

  000d0	53		 push	 ebx
  000d1	ff 33		 push	 DWORD PTR [ebx]
  000d3	56		 push	 esi
  000d4	ff 75 08	 push	 DWORD PTR __First$[ebp]
  000d7	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Uninitialized_copy_n<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  000dc	83 c4 10	 add	 esp, 16			; 00000010H
  000df	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  000e2	5f		 pop	 edi

; 1504 :     }

  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 08 00	 ret	 8
$LN5@Assign_cou:

; 1465 :             }
; 1466 :             return;
; 1467 :         }
; 1468 : 
; 1469 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  000eb	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000ee	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  000f3	2b cf		 sub	 ecx, edi
  000f5	f7 e9		 imul	 ecx
  000f7	c1 fa 04	 sar	 edx, 4
  000fa	8b c2		 mov	 eax, edx
  000fc	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ff	03 c2		 add	 eax, edx
  00101	89 45 fc	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1470 :         if (_Newsize > _Oldsize) {

  00104	3b f0		 cmp	 esi, eax
  00106	76 3d		 jbe	 SHORT $LN6@Assign_cou

; 1471 :             bool _Copied = false;
; 1472 :             if constexpr (_Iter_copy_cat<_Iter, pointer>::_Bitcopy_assignable) {
; 1473 : #if _HAS_CXX20
; 1474 :                 if (!_STD is_constant_evaluated())
; 1475 : #endif // _HAS_CXX20
; 1476 :                 {
; 1477 :                     _Copy_memmove_n(_First, static_cast<size_t>(_Oldsize), _Myfirst);
; 1478 :                     _First += _Oldsize;
; 1479 :                     _Copied = true;
; 1480 :                 }
; 1481 :             }
; 1482 : 
; 1483 :             if (!_Copied) {
; 1484 :                 for (auto _Mid = _Myfirst; _Mid != _Mylast; ++_Mid, (void) ++_First) {

  00108	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0010b	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0010e	3b f8		 cmp	 edi, eax
  00110	74 15		 je	 SHORT $LN3@Assign_cou
$LL4@Assign_cou:

; 1485 :                     *_Mid = *_First;

  00112	56		 push	 esi
  00113	8b cf		 mov	 ecx, edi
  00115	e8 00 00 00 00	 call	 ??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z ; std::function<bool __cdecl(tweeny::tween<float> &,float)>::operator=
  0011a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0011d	83 c7 28	 add	 edi, 40			; 00000028H
  00120	83 c6 28	 add	 esi, 40			; 00000028H
  00123	3b f8		 cmp	 edi, eax
  00125	75 eb		 jne	 SHORT $LL4@Assign_cou
$LN3@Assign_cou:

; 1486 :                 }
; 1487 :             }
; 1488 : 
; 1489 :             if constexpr (_Nothrow_construct) {
; 1490 :                 _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1491 :                 _Mylast = _Uninitialized_copy_n(_STD move(_First), _Newsize - _Oldsize, _Mylast, _Al);
; 1492 :             } else {
; 1493 :                 _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1494 :                 _Mylast = _Uninitialized_copy_n(_STD move(_First), _Newsize - _Oldsize, _Mylast, _Al);

  00127	53		 push	 ebx
  00128	50		 push	 eax
  00129	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0012c	2b 45 fc	 sub	 eax, DWORD PTR __Oldsize$1$[ebp]
  0012f	50		 push	 eax
  00130	56		 push	 esi
  00131	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_n@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Uninitialized_copy_n<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  00136	83 c4 10	 add	 esp, 16			; 00000010H
  00139	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0013c	5f		 pop	 edi

; 1504 :     }

  0013d	5e		 pop	 esi
  0013e	5b		 pop	 ebx
  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c2 08 00	 ret	 8
$LN6@Assign_cou:

; 1495 :                 _ASAN_VECTOR_RELEASE_GUARD;
; 1496 :             }
; 1497 :         } else {
; 1498 :             const pointer _Newlast = _Myfirst + _Newsize;

  00145	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  00148	8d 34 c7	 lea	 esi, DWORD PTR [edi+eax*8]

; 1499 :             _Copy_n_unchecked4(_STD move(_First), _Newsize, _Myfirst);

  0014b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0014e	57		 push	 edi
  0014f	50		 push	 eax
  00150	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00153	e8 00 00 00 00	 call	 ??$_Copy_n_unchecked4@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@IPAV12@@std@@YAPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@PAV10@I0@Z ; std::_Copy_n_unchecked4<std::function<bool __cdecl(tweeny::tween<float> &,float)> *,unsigned int,std::function<bool __cdecl(tweeny::tween<float> &,float)> *>

; 1500 :             _Destroy_range(_Newlast, _Mylast, _Al);

  00158	53		 push	 ebx
  00159	ff 73 04	 push	 DWORD PTR [ebx+4]
  0015c	56		 push	 esi
  0015d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  00162	83 c4 18	 add	 esp, 24			; 00000018H

; 1501 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1502 :             _Mylast = _Newlast;

  00165	89 73 04	 mov	 DWORD PTR [ebx+4], esi
  00168	5f		 pop	 edi

; 1504 :     }

  00169	5e		 pop	 esi
  0016a	5b		 pop	 ebx
  0016b	8b e5		 mov	 esp, ebp
  0016d	5d		 pop	 ebp
  0016e	c2 08 00	 ret	 8
$LN46@Assign_cou:

; 1722 :             _Xlength();

  00171	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xlength
$LN31@Assign_cou:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00176	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN44@Assign_cou:
  0017b	cc		 int	 3
??$_Assign_counted_range@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@I@Z ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Assign_counted_range<std::function<bool __cdecl(tweeny::tween<float> &,float)> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >, COMDAT
; _this$ = ecx

; 1017 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 255  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 0c		 push	 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 1018 :             _Al.deallocate(_Ptr, 1);
; 1019 :         }
; 1020 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$via@UcubicOutEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUcubicOutEasing@easing@2@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 1
_f$ = 8							; size = 1
??$via@UcubicOutEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUcubicOutEasing@easing@2@@Z PROC ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::cubicOutEasing>, COMDAT
; _this$ = ecx

; 1186 :         inline void tweenpoint<Ts...>::via(F f) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1187 :             easingfill<typename traits::valuesType>(easings, f, int2type<sizeof...(Ts) - 1>{ });

  00004	c6 45 fc 00	 mov	 BYTE PTR $T1[ebp], 0
  00008	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  0000b	ff 75 fc	 push	 DWORD PTR $T1[ebp]
  0000e	ff 75 08	 push	 DWORD PTR _f$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$easingfill@V?$array@M$00@std@@V?$tuple@V?$function@$$A6AMMMM@Z@std@@@2@UcubicOutEasing@easing@tweeny@@@detail@tweeny@@YAXAAV?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@UcubicOutEasing@easing@1@U?$int2type@$0A@@01@@Z ; tweeny::detail::easingfill<std::array<float,1>,std::tuple<std::function<float __cdecl(float,float,float)> >,tweeny::easing::cubicOutEasing>
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1188 :         }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??$via@UcubicOutEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUcubicOutEasing@easing@2@@Z ENDP ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::cubicOutEasing>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$during@H@?$tweenpoint@M@detail@tweeny@@QAEXH@Z
_TEXT	SEGMENT
_milis$ = 8						; size = 4
??$during@H@?$tweenpoint@M@detail@tweeny@@QAEXH@Z PROC	; tweeny::detail::tweenpoint<float>::during<int>, COMDAT
; _this$ = ecx

; 1163 :         inline void tweenpoint<Ts...>::during(D milis) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1164 :             for (uint16_t & t : durations) { t = static_cast<uint16_t>(milis); }

  00003	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  00006	8d 42 02	 lea	 eax, DWORD PTR [edx+2]
  00009	3b d0		 cmp	 edx, eax
  0000b	77 0e		 ja	 SHORT $LN3@during
  0000d	0f b7 45 08	 movzx	 eax, WORD PTR _milis$[ebp]
  00011	8b c8		 mov	 ecx, eax
  00013	c1 e0 10	 shl	 eax, 16			; 00000010H
  00016	0b c8		 or	 ecx, eax
  00018	66 89 0a	 mov	 WORD PTR [edx], cx
$LN3@during:

; 1165 :         }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??$during@H@?$tweenpoint@M@detail@tweeny@@QAEXH@Z ENDP	; tweeny::detail::tweenpoint<float>::during<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z PROC ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >, COMDAT

; 943  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 947  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 49		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 2c	 add	 esi, 44			; 0000002cH
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00012	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  00015	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00017	74 18		 je	 SHORT $LN20@Destroy_ra

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00019	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0001b	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0001e	3b c8		 cmp	 ecx, eax

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00020	0f 95 c0	 setne	 al
  00023	0f b6 c0	 movzx	 eax, al
  00026	50		 push	 eax
  00027	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  0002a	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
$LN20@Destroy_ra:

; 888  :         return !_Getimpl();

  00031	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00033	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00035	74 17		 je	 SHORT $LN38@Destroy_ra

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00037	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00039	8d 46 dc	 lea	 eax, DWORD PTR [esi-36]
  0003c	3b c8		 cmp	 ecx, eax

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0003e	0f 95 c0	 setne	 al
  00041	0f b6 c0	 movzx	 eax, al
  00044	50		 push	 eax
  00045	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00048	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN38@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 947  :         for (; _First != _Last; ++_First) {

  0004e	83 c6 60	 add	 esi, 96			; 00000060H
  00051	8d 46 d4	 lea	 eax, DWORD PTR [esi-44]
  00054	3b c7		 cmp	 eax, edi
  00056	75 ba		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00058	5f		 pop	 edi

; 948  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 949  :         }
; 950  :     }
; 951  : }

  00059	5e		 pop	 esi
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\tuple
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z
_TEXT	SEGMENT
$T2 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z PROC ; tweeny::detail::tweenpoint<float>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\tuple

; 452  :         _Myfirst._Val = _Right._Myfirst._Val;

  0002d	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00030	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  00033	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+36], 0
  0003a	8b 07		 mov	 eax, DWORD PTR [edi]
  0003c	89 06		 mov	 DWORD PTR [esi], eax
  0003e	66 8b 47 04	 mov	 ax, WORD PTR [edi+4]
  00042	66 89 46 04	 mov	 WORD PTR [esi+4], ax

; 888  :         return !_Getimpl();

  00046	8b 4f 2c	 mov	 ecx, DWORD PTR [edi+44]

; 1037 :     function(const function& _Right) {

  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 892  :         if (!_Right._Empty()) {

  00050	85 c9		 test	 ecx, ecx
  00052	74 0b		 je	 SHORT $LN14@operator

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  00054	8b 01		 mov	 eax, DWORD PTR [ecx]
  00056	8d 55 c8	 lea	 edx, DWORD PTR $T2[ebp]
  00059	52		 push	 edx
  0005a	ff 10		 call	 DWORD PTR [eax]
  0005c	89 45 ec	 mov	 DWORD PTR $T2[ebp+36], eax
$LN14@operator:

; 1065 :         function(_Right).swap(*this);

  0005f	53		 push	 ebx
  00060	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]

; 1039 :     }

  00063	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 1065 :         function(_Right).swap(*this);

  0006a	e8 00 00 00 00	 call	 ?swap@?$function@$$A6AMMMM@Z@std@@QAEXAAV12@@Z ; std::function<float __cdecl(float,float,float)>::swap

; 888  :         return !_Getimpl();

  0006f	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp+36]
  00072	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00074	74 18		 je	 SHORT $LN24@operator

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  0007b	3b c8		 cmp	 ecx, eax
  0007d	0f 95 c0	 setne	 al
  00080	0f b6 c0	 movzx	 eax, al
  00083	50		 push	 eax
  00084	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00087	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+36], 0
$LN24@operator:
  0008e	8d 4f 30	 lea	 ecx, DWORD PTR [edi+48]
  00091	51		 push	 ecx
  00092	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]
  00095	e8 00 00 00 00	 call	 ??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z ; std::function<bool __cdecl(tweeny::tween<float> &,float)>::operator=
  0009a	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
  0009d	8b c6		 mov	 eax, esi
  0009f	89 4e 58	 mov	 DWORD PTR [esi+88], ecx
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b3	33 cd		 xor	 ecx, ebp
  000b5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z$1:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Func_class@MMMM@std@@QAE@XZ ; std::_Func_class<float,float,float,float>::~_Func_class<float,float,float,float>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4?$tweenpoint@M@detail@tweeny@@QAEAAU012@ABU012@@Z ENDP ; tweeny::detail::tweenpoint<float>::operator=
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??1?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@XZ PROC ; std::tuple<std::function<float __cdecl(float,float,float)> >::~tuple<std::function<float __cdecl(float,float,float)> >, COMDAT
; _this$ = ecx

; 888  :         return !_Getimpl();

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00006	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00008	74 15		 je	 SHORT $LN12@tuple

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000a	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0000c	3b ce		 cmp	 ecx, esi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000e	0f 95 c0	 setne	 al
  00011	0f b6 c0	 movzx	 eax, al
  00014	50		 push	 eax
  00015	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00018	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN12@tuple:
  0001f	5e		 pop	 esi
  00020	c3		 ret	 0
??1?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@XZ ENDP ; std::tuple<std::function<float __cdecl(float,float,float)> >::~tuple<std::function<float __cdecl(float,float,float)> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??1?$function@$$A6AMMMM@Z@std@@QAE@XZ
_TEXT	SEGMENT
??1?$function@$$A6AMMMM@Z@std@@QAE@XZ PROC		; std::function<float __cdecl(float,float,float)>::~function<float __cdecl(float,float,float)>, COMDAT
; _this$ = ecx

; 888  :         return !_Getimpl();

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00006	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00008	74 15		 je	 SHORT $LN6@function

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000a	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0000c	3b ce		 cmp	 ecx, esi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000e	0f 95 c0	 setne	 al
  00011	0f b6 c0	 movzx	 eax, al
  00014	50		 push	 eax
  00015	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00018	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN6@function:
  0001f	5e		 pop	 esi
  00020	c3		 ret	 0
??1?$function@$$A6AMMMM@Z@std@@QAE@XZ ENDP		; std::function<float __cdecl(float,float,float)>::~function<float __cdecl(float,float,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ?swap@?$function@$$A6AMMMM@Z@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
__Temp$1 = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?swap@?$function@$$A6AMMMM@Z@std@@QAEXAAV12@@Z PROC	; std::function<float __cdecl(float,float,float)>::swap, COMDAT
; _this$ = ecx

; 1113 :     void swap(function& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b f9		 mov	 edi, ecx

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00018	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0001b	3b cf		 cmp	 ecx, edi

; 958  :         if (!_Local() && !_Right._Local()) { // just swap pointers

  0001d	74 20		 je	 SHORT $LN72@swap

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0001f	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  00022	3b c3		 cmp	 eax, ebx

; 958  :         if (!_Local() && !_Right._Local()) { // just swap pointers

  00024	74 19		 je	 SHORT $LN72@swap

; 959  :             _Ptrt* _Temp = _Getimpl();
; 960  :             _Set(_Right._Getimpl());

  00026	89 47 24	 mov	 DWORD PTR [edi+36], eax
  00029	5f		 pop	 edi

; 1114 :         this->_Swap(_Right);
; 1115 :     }

  0002a	5e		 pop	 esi

; 961  :             _Right._Set(_Temp);

  0002b	89 4b 24	 mov	 DWORD PTR [ebx+36], ecx

; 1114 :         this->_Swap(_Right);
; 1115 :     }

  0002e	5b		 pop	 ebx
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00032	33 cd		 xor	 ecx, ebp
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
$LN72@swap:

; 866  :         _Set(nullptr);

  0003f	33 d2		 xor	 edx, edx
  00041	89 55 f8	 mov	 DWORD PTR __Temp$1[ebp+36], edx

; 888  :         return !_Getimpl();

  00044	85 c9		 test	 ecx, ecx

; 898  :         if (!_Right._Empty()) {

  00046	74 38		 je	 SHORT $LN15@swap

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00048	3b cf		 cmp	 ecx, edi

; 899  :             if (_Right._Local()) { // move and tidy

  0004a	75 28		 jne	 SHORT $LN14@swap

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	8d 55 d4	 lea	 edx, DWORD PTR __Temp$1[ebp]
  00051	52		 push	 edx
  00052	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  00055	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00058	8b d0		 mov	 edx, eax
  0005a	89 55 f8	 mov	 DWORD PTR __Temp$1[ebp+36], edx

; 888  :         return !_Getimpl();

  0005d	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0005f	74 1f		 je	 SHORT $LN15@swap

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00061	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00063	3b cf		 cmp	 ecx, edi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00065	0f 95 c0	 setne	 al
  00068	0f b6 c0	 movzx	 eax, al
  0006b	50		 push	 eax
  0006c	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  0006f	8b 55 f8	 mov	 edx, DWORD PTR __Temp$1[ebp+36]
  00072	eb 05		 jmp	 SHORT $LN74@swap
$LN14@swap:

; 903  :                 _Set(_Right._Getimpl());

  00074	8b d1		 mov	 edx, ecx
  00076	89 55 f8	 mov	 DWORD PTR __Temp$1[ebp+36], edx
$LN74@swap:

; 888  :         return !_Getimpl();

  00079	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
$LN15@swap:
  00080	8b 4b 24	 mov	 ecx, DWORD PTR [ebx+36]
  00083	85 c9		 test	 ecx, ecx

; 898  :         if (!_Right._Empty()) {

  00085	74 36		 je	 SHORT $LN31@swap

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00087	3b cb		 cmp	 ecx, ebx

; 899  :             if (_Right._Local()) { // move and tidy

  00089	75 28		 jne	 SHORT $LN30@swap

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  0008b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008d	57		 push	 edi
  0008e	ff 50 04	 call	 DWORD PTR [eax+4]
  00091	89 47 24	 mov	 DWORD PTR [edi+36], eax

; 888  :         return !_Getimpl();

  00094	8b 4b 24	 mov	 ecx, DWORD PTR [ebx+36]
  00097	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00099	74 13		 je	 SHORT $LN73@swap

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0009b	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0009d	3b cb		 cmp	 ecx, ebx

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0009f	0f 95 c0	 setne	 al
  000a2	0f b6 c0	 movzx	 eax, al
  000a5	50		 push	 eax
  000a6	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  000a9	8b 55 f8	 mov	 edx, DWORD PTR __Temp$1[ebp+36]
  000ac	eb 08		 jmp	 SHORT $LN75@swap
$LN73@swap:

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  000ae	8b 55 f8	 mov	 edx, DWORD PTR __Temp$1[ebp+36]
  000b1	eb 0a		 jmp	 SHORT $LN31@swap
$LN30@swap:

; 903  :                 _Set(_Right._Getimpl());

  000b3	89 4f 24	 mov	 DWORD PTR [edi+36], ecx
$LN75@swap:

; 888  :         return !_Getimpl();

  000b6	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0
$LN31@swap:
  000bd	85 d2		 test	 edx, edx

; 898  :         if (!_Right._Empty()) {

  000bf	74 40		 je	 SHORT $LN63@swap

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  000c1	8d 45 d4	 lea	 eax, DWORD PTR __Temp$1[ebp]
  000c4	3b d0		 cmp	 edx, eax

; 899  :             if (_Right._Local()) { // move and tidy

  000c6	75 36		 jne	 SHORT $LN46@swap

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  000c8	8b 02		 mov	 eax, DWORD PTR [edx]
  000ca	8b ca		 mov	 ecx, edx
  000cc	53		 push	 ebx
  000cd	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  000d0	8b 4d f8	 mov	 ecx, DWORD PTR __Temp$1[ebp+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  000d3	89 43 24	 mov	 DWORD PTR [ebx+36], eax

; 888  :         return !_Getimpl();

  000d6	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  000d8	74 27		 je	 SHORT $LN63@swap

; 952  :             _Getimpl()->_Delete_this(!_Local());

  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	8d 45 d4	 lea	 eax, DWORD PTR __Temp$1[ebp]
  000df	3b c8		 cmp	 ecx, eax
  000e1	0f 95 c0	 setne	 al
  000e4	0f b6 c0	 movzx	 eax, al
  000e7	50		 push	 eax
  000e8	ff 52 10	 call	 DWORD PTR [edx+16]
  000eb	5f		 pop	 edi

; 1114 :         this->_Swap(_Right);
; 1115 :     }

  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f1	33 cd		 xor	 ecx, ebp
  000f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c2 04 00	 ret	 4
$LN46@swap:

; 903  :                 _Set(_Right._Getimpl());

  000fe	89 53 24	 mov	 DWORD PTR [ebx+36], edx
$LN63@swap:

; 1114 :         this->_Swap(_Right);
; 1115 :     }

  00101	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	33 cd		 xor	 ecx, ebp
  00108	5b		 pop	 ebx
  00109	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c2 04 00	 ret	 4
?swap@?$function@$$A6AMMMM@Z@std@@QAEXAAV12@@Z ENDP	; std::function<float __cdecl(float,float,float)>::swap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??1?$_Func_class@MMMM@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Func_class@MMMM@std@@QAE@XZ PROC			; std::_Func_class<float,float,float,float>::~_Func_class<float,float,float,float>, COMDAT
; _this$ = ecx

; 877  :     ~_Func_class() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 888  :         return !_Getimpl();

  00003	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00006	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00008	74 15		 je	 SHORT $LN4@Func_class

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000a	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0000c	3b ce		 cmp	 ecx, esi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000e	0f 95 c0	 setne	 al
  00011	0f b6 c0	 movzx	 eax, al
  00014	50		 push	 eax
  00015	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00018	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN4@Func_class:
  0001f	5e		 pop	 esi

; 878  :         _Tidy();
; 879  :     }

  00020	c3		 ret	 0
??1?$_Func_class@MMMM@std@@QAE@XZ ENDP			; std::_Func_class<float,float,float,float>::~_Func_class<float,float,float,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >, COMDAT

; 943  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 947  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 24		 je	 SHORT $LN3@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00010	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00013	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00015	74 15		 je	 SHORT $LN17@Destroy_ra

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00017	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00019	3b ce		 cmp	 ecx, esi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0001b	0f 95 c0	 setne	 al
  0001e	0f b6 c0	 movzx	 eax, al
  00021	50		 push	 eax
  00022	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00025	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN17@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 947  :         for (; _First != _Last; ++_First) {

  0002c	83 c6 28	 add	 esi, 40			; 00000028H
  0002f	3b f7		 cmp	 esi, edi
  00031	75 dd		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00033	5f		 pop	 edi

; 948  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 949  :         }
; 950  :     }
; 951  : }

  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z
_TEXT	SEGMENT
__New_size$1$ = -8					; size = 4
__Left_size$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 5114 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 5115 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 5116 :     const auto _Left_size  = _Left.size();

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 415  :             return __builtin_strlen(_First);

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Right$[ebp]

; 5115 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 5116 :     const auto _Left_size  = _Left.size();

  0000e	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00011	57		 push	 edi
  00012	89 55 fc	 mov	 DWORD PTR __Left_size$1$[ebp], edx

; 415  :             return __builtin_strlen(_First);

  00015	8d 7e 01	 lea	 edi, DWORD PTR [esi+1]
$LL45@operator:
  00018	8a 06		 mov	 al, BYTE PTR [esi]
  0001a	46		 inc	 esi
  0001b	84 c0		 test	 al, al
  0001d	75 f9		 jne	 SHORT $LL45@operator

; 5117 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 5118 :     if (_Left.max_size() - _Left_size < _Right_size) {

  0001f	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 415  :             return __builtin_strlen(_First);

  00024	2b f7		 sub	 esi, edi

; 5117 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 5118 :     if (_Left.max_size() - _Left_size < _Right_size) {

  00026	2b c2		 sub	 eax, edx
  00028	3b c6		 cmp	 eax, esi
  0002a	0f 82 d5 00 00
	00		 jb	 $LN48@operator

; 2301 :         return _BUF_SIZE <= _Myres;

  00030	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  00034	72 05		 jb	 SHORT $LN11@operator

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00036	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00038	89 4d 0c	 mov	 DWORD PTR __Left$[ebp], ecx
$LN11@operator:

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0003b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2919 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  0003e	8d 1c 16	 lea	 ebx, DWORD PTR [esi+edx]
  00041	0f 57 c0	 xorps	 xmm0, xmm0
  00044	89 5d f8	 mov	 DWORD PTR __New_size$1$[ebp], ebx

; 2920 :         size_type _New_capacity = _BUF_SIZE - 1;

  00047	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH

; 2921 :         auto& _My_data          = _Mypair._Myval2;
; 2922 :         _Elem* _Ptr             = _My_data._Bx._Buf;
; 2923 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2924 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2925 : 
; 2926 :         if (_New_capacity < _New_size) {

  0004c	8d 0c 16	 lea	 ecx, DWORD PTR [esi+edx]
  0004f	8b d8		 mov	 ebx, eax

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00051	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 2349 :     size_type _Mysize = 0; // current length of string

  00054	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 2350 :     size_type _Myres  = 0; // current storage reserved for string

  0005b	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 2926 :         if (_New_capacity < _New_size) {

  00062	3b cf		 cmp	 ecx, edi
  00064	76 68		 jbe	 SHORT $LN16@operator

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00066	8b 7d f8	 mov	 edi, DWORD PTR __New_size$1$[ebp]
  00069	83 cf 0f	 or	 edi, 15			; 0000000fH
  0006c	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00072	76 1a		 jbe	 SHORT $LN31@operator

; 4885 :             return _Max;

  00074	ba 00 00 00 80	 mov	 edx, -2147483648	; 80000000H
  00079	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007e	52		 push	 edx
  0007f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00084	8b d8		 mov	 ebx, eax
  00086	83 c4 04	 add	 esp, 4
  00089	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0008c	eb 3b		 jmp	 SHORT $LN38@operator
$LN31@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  0008e	ba 16 00 00 00	 mov	 edx, 22			; 00000016H
  00093	3b fa		 cmp	 edi, edx
  00095	0f 42 fa	 cmovb	 edi, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2928 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00098	8d 57 01	 lea	 edx, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000a1	72 10		 jb	 SHORT $LN39@operator

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a9	8b d8		 mov	 ebx, eax
  000ab	83 c4 04	 add	 esp, 4
  000ae	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000b1	eb 16		 jmp	 SHORT $LN38@operator
$LN39@operator:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000b3	85 d2		 test	 edx, edx
  000b5	74 10		 je	 SHORT $LN40@operator

; 77   :         return ::operator new(_Bytes);

  000b7	52		 push	 edx
  000b8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  000bd	8b d8		 mov	 ebx, eax

; 77   :         return ::operator new(_Bytes);

  000bf	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000c2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000c5	eb 02		 jmp	 SHORT $LN38@operator
$LN40@operator:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000c7	33 db		 xor	 ebx, ebx
$LN38@operator:
  000c9	8b 55 fc	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2930 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  000cc	89 18		 mov	 DWORD PTR [eax], ebx
$LN16@operator:

; 2931 : 
; 2932 : #if _HAS_CXX20
; 2933 :             if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2934 :                 _Traits::assign(_Ptr, _New_capacity + 1, _Elem());
; 2935 :             }
; 2936 : #endif // _HAS_CXX20
; 2937 :         }
; 2938 : 
; 2939 :         _My_data._Mysize = _New_size;

  000ce	8d 0c 16	 lea	 ecx, DWORD PTR [esi+edx]

; 2940 :         _My_data._Myres  = _New_capacity;

  000d1	89 78 14	 mov	 DWORD PTR [eax+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d4	52		 push	 edx

; 2939 :         _My_data._Mysize = _New_size;

  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d8	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  000db	51		 push	 ecx
  000dc	53		 push	 ebx
  000dd	e8 00 00 00 00	 call	 _memcpy

; 2942 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000e2	8b 4d fc	 mov	 ecx, DWORD PTR __Left_size$1$[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e5	56		 push	 esi
  000e6	ff 75 10	 push	 DWORD PTR __Right$[ebp]

; 2942 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000e9	03 cb		 add	 ecx, ebx

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 _memcpy

; 2943 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000f1	8b 45 f8	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000f4	83 c4 18	 add	 esp, 24			; 00000018H

; 5120 :     }
; 5121 : 
; 5122 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

  000f7	5f		 pop	 edi

; 2943 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000f8	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0

; 5120 :     }
; 5121 : 
; 5122 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

  000fc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx

; 5123 : }

  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c3		 ret	 0
$LN48@operator:

; 5119 :         _Xlen_string();

  00105	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN46@operator:
  0010a	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory
;	COMDAT ??1?$shared_ptr@VCWikiRenderTarget@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$shared_ptr@VCWikiRenderTarget@@@std@@QAE@XZ PROC	; std::shared_ptr<CWikiRenderTarget>::~shared_ptr<CWikiRenderTarget>, COMDAT
; _this$ = ecx

; 1618 :     ~shared_ptr() noexcept { // release resource

  00000	56		 push	 esi

; 1334 :         if (_Rep) {

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	74 25		 je	 SHORT $LN10@shared_ptr

; 1109 :         if (_MT_DECR(_Uses) == 0) {

  00008	57		 push	 edi
  00009	83 cf ff	 or	 edi, -1
  0000c	8b c7		 mov	 eax, edi
  0000e	f0 0f c1 46 04	 lock	  xadd	 DWORD PTR [esi+4], eax
  00013	75 17		 jne	 SHORT $LN12@shared_ptr

; 1110 :             _Destroy();

  00015	8b 06		 mov	 eax, DWORD PTR [esi]
  00017	8b ce		 mov	 ecx, esi
  00019	ff 10		 call	 DWORD PTR [eax]

; 1116 :         if (_MT_DECR(_Weaks) == 0) {

  0001b	f0 0f c1 7e 08	 lock	  xadd	 DWORD PTR [esi+8], edi
  00020	4f		 dec	 edi
  00021	75 09		 jne	 SHORT $LN12@shared_ptr

; 1117 :             _Delete_this();

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
  00025	8b ce		 mov	 ecx, esi
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	ff 60 04	 jmp	 DWORD PTR [eax+4]
$LN12@shared_ptr:
  0002c	5f		 pop	 edi
$LN10@shared_ptr:
  0002d	5e		 pop	 esi

; 1619 :         this->_Decref();
; 1620 :     }

  0002e	c3		 ret	 0
??1?$shared_ptr@VCWikiRenderTarget@@@std@@QAE@XZ ENDP	; std::shared_ptr<CWikiRenderTarget>::~shared_ptr<CWikiRenderTarget>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMisc.inl
;	COMDAT ?XMScalarSinCos@DirectX@UI@@YAXPAM0M@Z
_TEXT	SEGMENT
_pSin$ = 8						; size = 4
_pCos$ = 12						; size = 4
_Value$ = 16						; size = 4
?XMScalarSinCos@DirectX@UI@@YAXPAM0M@Z PROC		; UI::DirectX::XMScalarSinCos, COMDAT

; 2270 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2271 :     assert(pSin);
; 2272 :     assert(pCos);
; 2273 : 
; 2274 :     // Map Value to y in [-pi,pi], x = 2*pi*quotient + remainder.
; 2275 :     float quotient = XM_1DIV2PI * Value;

  00003	f3 0f 10 5d 10	 movss	 xmm3, DWORD PTR _Value$[ebp]

; 2276 :     if (Value >= 0.0f)

  00008	0f 2f 1d 00 00
	00 00		 comiss	 xmm3, DWORD PTR __real@00000000
  0000f	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f000000
  00017	0f 28 c3	 movaps	 xmm0, xmm3
  0001a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3e22f983
  00022	72 06		 jb	 SHORT $LN2@XMScalarSi

; 2277 :     {
; 2278 :         quotient = static_cast<float>(static_cast<int>(quotient + 0.5f));

  00024	f3 0f 58 c4	 addss	 xmm0, xmm4

; 2279 :     }

  00028	eb 04		 jmp	 SHORT $LN3@XMScalarSi
$LN2@XMScalarSi:

; 2280 :     else
; 2281 :     {
; 2282 :         quotient = static_cast<float>(static_cast<int>(quotient - 0.5f));

  0002a	f3 0f 5c c4	 subss	 xmm0, xmm4
$LN3@XMScalarSi:

; 2283 :     }
; 2284 :     float y = Value - XM_2PI * quotient;

  0002e	f3 0f 2c c0	 cvttss2si eax, xmm0

; 2285 : 
; 2286 :     // Map y to [-pi/2,pi/2] with sin(y) = sin(Value).
; 2287 :     float sign;
; 2288 :     if (y > XM_PIDIV2)

  00032	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@3f800000
  0003a	66 0f 6e c0	 movd	 xmm0, eax
  0003e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00041	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40c90fdb
  00049	f3 0f 5c d8	 subss	 xmm3, xmm0
  0004d	0f 2f 1d 00 00
	00 00		 comiss	 xmm3, DWORD PTR __real@3fc90fdb
  00054	76 0a		 jbe	 SHORT $LN4@XMScalarSi

; 2289 :     {
; 2290 :         y = XM_PI - y;

  00056	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40490fdb

; 2291 :         sign = -1.0f;
; 2292 :     }

  0005e	eb 15		 jmp	 SHORT $LN9@XMScalarSi
$LN4@XMScalarSi:

; 2293 :     else if (y < -XM_PIDIV2)

  00060	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bfc90fdb
  00068	0f 2f c3	 comiss	 xmm0, xmm3
  0006b	76 19		 jbe	 SHORT $LN6@XMScalarSi

; 2294 :     {
; 2295 :         y = -XM_PI - y;

  0006d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0490fdb
$LN9@XMScalarSi:

; 2301 :     }
; 2302 : 
; 2303 :     float y2 = y * y;

  00075	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@bf800000
  0007d	f3 0f 5c c3	 subss	 xmm0, xmm3
  00081	0f 28 d8	 movaps	 xmm3, xmm0
  00084	eb 03		 jmp	 SHORT $LN7@XMScalarSi
$LN6@XMScalarSi:

; 2296 :         sign = -1.0f;
; 2297 :     }
; 2298 :     else
; 2299 :     {
; 2300 :         sign = +1.0f;

  00086	0f 28 ee	 movaps	 xmm5, xmm6
$LN7@XMScalarSi:

; 2304 : 
; 2305 :     // 11-degree minimax approximation
; 2306 :     *pSin = (((((-2.3889859e-08f * y2 + 2.7525562e-06f) * y2 - 0.00019840874f) * y2 + 0.0083333310f) * y2 - 0.16666667f) * y2 + 1.0f) * y;

  00089	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3638b88e
  00091	0f 28 d3	 movaps	 xmm2, xmm3
  00094	f3 0f 59 d3	 mulss	 xmm2, xmm3
  00098	8b 45 08	 mov	 eax, DWORD PTR _pSin$[ebp]
  0009b	0f 28 c2	 movaps	 xmm0, xmm2
  0009e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@32cd365b
  000a6	f3 0f 5c c8	 subss	 xmm1, xmm0

; 2307 : 
; 2308 :     // 10-degree minimax approximation
; 2309 :     float p = ((((-2.6051615e-07f * y2 + 2.4760495e-05f) * y2 - 0.0013888378f) * y2 + 0.041666638f) * y2 - 0.5f) * y2 + 1.0f;

  000aa	0f 28 c2	 movaps	 xmm0, xmm2
  000ad	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@348bdd11
  000b5	f3 0f 59 ca	 mulss	 xmm1, xmm2
  000b9	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@39500bf1
  000c1	f3 0f 59 ca	 mulss	 xmm1, xmm2
  000c5	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3c088886
  000cd	f3 0f 59 ca	 mulss	 xmm1, xmm2
  000d1	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@3e2aaaab
  000d9	f3 0f 59 ca	 mulss	 xmm1, xmm2
  000dd	f3 0f 58 ce	 addss	 xmm1, xmm6
  000e1	f3 0f 59 cb	 mulss	 xmm1, xmm3
  000e5	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1
  000e9	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@37cfb4c2
  000f1	f3 0f 5c c8	 subss	 xmm1, xmm0

; 2310 :     *pCos = sign * p;

  000f5	8b 45 0c	 mov	 eax, DWORD PTR _pCos$[ebp]
  000f8	f3 0f 59 ca	 mulss	 xmm1, xmm2
  000fc	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@3ab609aa
  00104	f3 0f 59 ca	 mulss	 xmm1, xmm2
  00108	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3d2aaaa3
  00110	f3 0f 59 ca	 mulss	 xmm1, xmm2
  00114	f3 0f 5c cc	 subss	 xmm1, xmm4
  00118	f3 0f 59 ca	 mulss	 xmm1, xmm2
  0011c	f3 0f 58 ce	 addss	 xmm1, xmm6
  00120	f3 0f 59 cd	 mulss	 xmm1, xmm5
  00124	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1

; 2311 : }

  00128	5d		 pop	 ebp
  00129	c3		 ret	 0
?XMScalarSinCos@DirectX@UI@@YAXPAM0M@Z ENDP		; UI::DirectX::XMScalarSinCos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl
;	COMDAT ?XMMatrixTransformation2D@DirectX@UI@@YQ?AUXMMATRIX@12@T__m128@2@M00M0@Z
_TEXT	SEGMENT
_Translation$1$ = -256					; size = 16
tv2451 = -240						; size = 16
_VScalingOrigin$1$ = -224				; size = 16
tv2459 = -208						; size = 16
tv2453 = -192						; size = 16
tv2454 = -176						; size = 16
tv2458 = -160						; size = 16
tv2456 = -144						; size = 16
_vTemp3$1$ = -128					; size = 16
_vCos$1$ = -112						; size = 16
tv2387 = -96						; size = 16
_vTemp1$1$ = -80					; size = 16
_VRotationOrigin$1$ = -64				; size = 16
_Scaling$1$ = -64					; size = 16
_VScaling$1$ = -48					; size = 16
_vCos$1$ = -32						; size = 16
_RotationOrigin$1$ = -32				; size = 16
_CosAngle$1 = -16					; size = 4
_Rotation$1$ = -12					; size = 4
_CosAngle$2 = -12					; size = 4
_SinAngle$3 = -8					; size = 4
_SinAngle$4 = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?XMMatrixTransformation2D@DirectX@UI@@YQ?AUXMMATRIX@12@T__m128@2@M00M0@Z PROC ; UI::DirectX::XMMatrixTransformation2D, COMDAT
; _ScalingOrigin$ = xmm0
; _ScalingOrientation$ = xmm1s
; _Scaling$ = xmm2
; _RotationOrigin$ = xmm3
; _Rotation$ = xmm4s
; _Translation$ = xmm5

; 1872 : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00021	33 c5		 xor	 eax, ebp
  00023	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00026	0f 29 5d e0	 movaps	 XMMWORD PTR _RotationOrigin$1$[ebp], xmm3

; 1630 :     XMScalarSinCos(&SinAngle, &CosAngle, Angle);

  0002a	8d 45 f0	 lea	 eax, DWORD PTR _CosAngle$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 1423 :     XMVECTOR vTemp2 = _mm_and_ps(V2, Control);

  0002d	0f 28 1d 00 00
	00 00		 movaps	 xmm3, XMMWORD PTR ?g_XMSelect1100@DirectX@UI@@3UXMVECTORU32@12@B
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 1872 : {

  00034	0f 29 55 c0	 movaps	 XMMWORD PTR _Scaling$1$[ebp], xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 1423 :     XMVECTOR vTemp2 = _mm_and_ps(V2, Control);

  00038	0f 54 d8	 andps	 xmm3, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 1329 :     M.r[3] = XMVectorSelect(g_XMIdentityR3.v, Offset, g_XMSelect1110.v);

  0003b	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR ?g_XMSelect1110@DirectX@UI@@3UXMVECTORU32@12@B
  00042	0f 57 d2	 xorps	 xmm2, xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 2725 :     return _mm_sub_ps(Z, V);

  00045	0f 5c d3	 subps	 xmm2, xmm3
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 1872 : {

  00048	0f 29 ad 00 ff
	ff ff		 movaps	 XMMWORD PTR _Translation$1$[ebp], xmm5

; 1630 :     XMScalarSinCos(&SinAngle, &CosAngle, Angle);

  0004f	51		 push	 ecx
  00050	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00055	50		 push	 eax
  00056	8d 45 f8	 lea	 eax, DWORD PTR _SinAngle$4[ebp]

; 1872 : {

  00059	f3 0f 11 65 f4	 movss	 DWORD PTR _Rotation$1$[ebp], xmm4
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 1423 :     XMVECTOR vTemp2 = _mm_and_ps(V2, Control);

  0005e	0f 54 d0	 andps	 xmm2, xmm0
  00061	0f 29 9d 20 ff
	ff ff		 movaps	 XMMWORD PTR _VScalingOrigin$1$[ebp], xmm3

; 1422 :     XMVECTOR vTemp1 = _mm_andnot_ps(Control, V1);

  00068	0f 55 05 00 00
	00 00		 andnps	 xmm0, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B

; 1424 :     return _mm_or_ps(vTemp1, vTemp2);

  0006f	0f 56 d0	 orps	 xmm2, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 1630 :     XMScalarSinCos(&SinAngle, &CosAngle, Angle);

  00072	50		 push	 eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 1424 :     return _mm_or_ps(vTemp1, vTemp2);

  00073	0f 11 55 a0	 movups	 XMMWORD PTR tv2387[ebp], xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 1630 :     XMScalarSinCos(&SinAngle, &CosAngle, Angle);

  00077	e8 00 00 00 00	 call	 ?XMScalarSinCos@DirectX@UI@@YAXPAM0M@Z ; UI::DirectX::XMScalarSinCos

; 1631 : 
; 1632 :     XMVECTOR vSin = _mm_set_ss(SinAngle);

  0007c	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _SinAngle$4[ebp]

; 1630 :     XMScalarSinCos(&SinAngle, &CosAngle, Angle);

  00081	8d 45 f4	 lea	 eax, DWORD PTR _CosAngle$2[ebp]

; 1633 :     XMVECTOR vCos = _mm_set_ss(CosAngle);

  00084	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR _CosAngle$1[ebp]

; 1630 :     XMScalarSinCos(&SinAngle, &CosAngle, Angle);

  00089	83 c4 08	 add	 esp, 8

; 1635 :     vCos = _mm_unpacklo_ps(vCos, vSin);

  0008c	0f 14 d1	 unpcklps xmm2, xmm1

; 759  :     XMVECTOR vTemp3 = _mm_shuffle_ps(M.r[0], M.r[1], _MM_SHUFFLE(3, 2, 3, 2));

  0008f	0f 28 0d 00 00
	00 00		 movaps	 xmm1, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B

; 1639 :     vCos = XM_PERMUTE_PS(vCos, _MM_SHUFFLE(3, 2, 0, 1));

  00096	0f 28 c2	 movaps	 xmm0, xmm2
  00099	0f c6 c2 e1	 shufps	 xmm0, xmm2, 225		; 000000e1H

; 1873 :     // M = Inverse(MScalingOrigin) * Transpose(MScalingOrientation) * MScaling * MScalingOrientation *
; 1874 :     //         MScalingOrigin * Inverse(MRotationOrigin) * MRotation * MRotationOrigin * MTranslation;
; 1875 : 
; 1876 :     XMVECTOR VScalingOrigin = XMVectorSelect(g_XMSelect1100.v, ScalingOrigin, g_XMSelect1100.v);
; 1877 :     XMVECTOR NegScalingOrigin = XMVectorNegate(VScalingOrigin);
; 1878 : 
; 1879 :     XMMATRIX MScalingOriginI = XMMatrixTranslationFromVector(NegScalingOrigin);
; 1880 :     XMMATRIX MScalingOrientation = XMMatrixRotationZ(ScalingOrientation);
; 1881 :     XMMATRIX MScalingOrientationT = XMMatrixTranspose(MScalingOrientation);

  0009d	0f 28 e2	 movaps	 xmm4, xmm2

; 1641 :     vCos = _mm_mul_ps(vCos, g_XMNegateX);

  000a0	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMNegateX@DirectX@UI@@3UXMVECTORF32@12@B
  000a7	0f 29 55 90	 movaps	 XMMWORD PTR _vCos$1$[ebp], xmm2

; 757  :     XMVECTOR vTemp1 = _mm_shuffle_ps(M.r[0], M.r[1], _MM_SHUFFLE(1, 0, 1, 0));

  000ab	0f c6 e0 44	 shufps	 xmm4, xmm0, 68		; 00000044H

; 758  :     // x.z,x.w,y.z,y.w
; 759  :     XMVECTOR vTemp3 = _mm_shuffle_ps(M.r[0], M.r[1], _MM_SHUFFLE(3, 2, 3, 2));

  000af	0f c6 d0 ee	 shufps	 xmm2, xmm0, 238		; 000000eeH

; 764  : 
; 765  :     XMMATRIX mResult;
; 766  :     // x.x,y.x,z.x,w.x
; 767  :     mResult.r[0] = _mm_shuffle_ps(vTemp1, vTemp2, _MM_SHUFFLE(2, 0, 2, 0));

  000b3	0f 28 dc	 movaps	 xmm3, xmm4

; 1641 :     vCos = _mm_mul_ps(vCos, g_XMNegateX);

  000b6	0f 11 85 30 ff
	ff ff		 movups	 XMMWORD PTR tv2459[ebp], xmm0

; 759  :     XMVECTOR vTemp3 = _mm_shuffle_ps(M.r[0], M.r[1], _MM_SHUFFLE(3, 2, 3, 2));

  000bd	0f 28 c1	 movaps	 xmm0, xmm1

; 760  :     // z.x,z.y,w.x,w.y
; 761  :     XMVECTOR vTemp2 = _mm_shuffle_ps(M.r[2], M.r[3], _MM_SHUFFLE(1, 0, 1, 0));
; 762  :     // z.z,z.w,w.z,w.w
; 763  :     XMVECTOR vTemp4 = _mm_shuffle_ps(M.r[2], M.r[3], _MM_SHUFFLE(3, 2, 3, 2));

  000c0	0f c6 0d 00 00
	00 00 ee	 shufps	 xmm1, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B, 238 ; 000000eeH
  000c8	0f c6 05 00 00
	00 00 44	 shufps	 xmm0, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B, 68 ; 00000044H

; 764  : 
; 765  :     XMMATRIX mResult;
; 766  :     // x.x,y.x,z.x,w.x
; 767  :     mResult.r[0] = _mm_shuffle_ps(vTemp1, vTemp2, _MM_SHUFFLE(2, 0, 2, 0));

  000d0	0f c6 d8 88	 shufps	 xmm3, xmm0, 136		; 00000088H

; 769  :     mResult.r[1] = _mm_shuffle_ps(vTemp1, vTemp2, _MM_SHUFFLE(3, 1, 3, 1));

  000d4	0f c6 e0 dd	 shufps	 xmm4, xmm0, 221		; 000000ddH

; 770  :     // x.z,y.z,z.z,w.z
; 771  :     mResult.r[2] = _mm_shuffle_ps(vTemp3, vTemp4, _MM_SHUFFLE(2, 0, 2, 0));

  000d8	0f 28 c2	 movaps	 xmm0, xmm2
  000db	0f c6 c1 88	 shufps	 xmm0, xmm1, 136		; 00000088H

; 772  :     // x.w,y.w,z.w,w.w
; 773  :     mResult.r[3] = _mm_shuffle_ps(vTemp3, vTemp4, _MM_SHUFFLE(3, 1, 3, 1));

  000df	0f c6 d1 dd	 shufps	 xmm2, xmm1, 221		; 000000ddH
  000e3	0f 11 85 70 ff
	ff ff		 movups	 XMMWORD PTR tv2456[ebp], xmm0
  000ea	0f 29 55 80	 movaps	 XMMWORD PTR _vTemp3$1$[ebp], xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 1422 :     XMVECTOR vTemp1 = _mm_andnot_ps(Control, V1);

  000ee	0f 28 15 00 00
	00 00		 movaps	 xmm2, XMMWORD PTR ?g_XMSelect1100@DirectX@UI@@3UXMVECTORU32@12@B
  000f5	0f 28 ca	 movaps	 xmm1, xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 769  :     mResult.r[1] = _mm_shuffle_ps(vTemp1, vTemp2, _MM_SHUFFLE(3, 1, 3, 1));

  000f8	0f 29 65 b0	 movaps	 XMMWORD PTR _vTemp1$1$[ebp], xmm4
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 1422 :     XMVECTOR vTemp1 = _mm_andnot_ps(Control, V1);

  000fc	0f 55 0d 00 00
	00 00		 andnps	 xmm1, XMMWORD PTR ?g_XMOne@DirectX@UI@@3UXMVECTORF32@12@B

; 1423 :     XMVECTOR vTemp2 = _mm_and_ps(V2, Control);

  00103	0f 28 c2	 movaps	 xmm0, xmm2
  00106	0f 54 45 c0	 andps	 xmm0, XMMWORD PTR _Scaling$1$[ebp]

; 1424 :     return _mm_or_ps(vTemp1, vTemp2);

  0010a	0f 56 c8	 orps	 xmm1, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 1422 :     M.r[0] = _mm_and_ps(Scale, g_XMMaskX);

  0010d	0f 28 c1	 movaps	 xmm0, xmm1
  00110	0f 54 05 00 00
	00 00		 andps	 xmm0, XMMWORD PTR ?g_XMMaskX@DirectX@UI@@3UXMVECTORU32@12@B
  00117	0f 11 85 50 ff
	ff ff		 movups	 XMMWORD PTR tv2454[ebp], xmm0

; 1423 :     M.r[1] = _mm_and_ps(Scale, g_XMMaskY);

  0011e	0f 28 c1	 movaps	 xmm0, xmm1

; 1424 :     M.r[2] = _mm_and_ps(Scale, g_XMMaskZ);

  00121	0f 54 0d 00 00
	00 00		 andps	 xmm1, XMMWORD PTR ?g_XMMaskZ@DirectX@UI@@3UXMVECTORU32@12@B
  00128	0f 54 05 00 00
	00 00		 andps	 xmm0, XMMWORD PTR ?g_XMMaskY@DirectX@UI@@3UXMVECTORU32@12@B
  0012f	0f 11 85 40 ff
	ff ff		 movups	 XMMWORD PTR tv2453[ebp], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 1423 :     XMVECTOR vTemp2 = _mm_and_ps(V2, Control);

  00136	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 1424 :     M.r[2] = _mm_and_ps(Scale, g_XMMaskZ);

  00139	0f 29 4d d0	 movaps	 XMMWORD PTR _VScaling$1$[ebp], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 1423 :     XMVECTOR vTemp2 = _mm_and_ps(V2, Control);

  0013d	0f 54 45 e0	 andps	 xmm0, XMMWORD PTR _RotationOrigin$1$[ebp]
  00141	0f 29 45 c0	 movaps	 XMMWORD PTR _VRotationOrigin$1$[ebp], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 1630 :     XMScalarSinCos(&SinAngle, &CosAngle, Angle);

  00145	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _Rotation$1$[ebp]
  0014a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014f	50		 push	 eax
  00150	8d 45 f8	 lea	 eax, DWORD PTR _SinAngle$3[ebp]
  00153	50		 push	 eax

; 767  :     mResult.r[0] = _mm_shuffle_ps(vTemp1, vTemp2, _MM_SHUFFLE(2, 0, 2, 0));

  00154	0f 11 9d 60 ff
	ff ff		 movups	 XMMWORD PTR tv2458[ebp], xmm3

; 1630 :     XMScalarSinCos(&SinAngle, &CosAngle, Angle);

  0015b	e8 00 00 00 00	 call	 ?XMScalarSinCos@DirectX@UI@@YAXPAM0M@Z ; UI::DirectX::XMScalarSinCos

; 1631 : 
; 1632 :     XMVECTOR vSin = _mm_set_ss(SinAngle);

  00160	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _SinAngle$3[ebp]
  00165	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1633 :     XMVECTOR vCos = _mm_set_ss(CosAngle);

  00168	f3 0f 10 55 f4	 movss	 xmm2, DWORD PTR _CosAngle$2[ebp]

; 1634 :     // x = cos,y = sin,z = 0, w = 0
; 1635 :     vCos = _mm_unpacklo_ps(vCos, vSin);

  0016d	0f 14 d1	 unpcklps xmm2, xmm1

; 1882 :     XMVECTOR VScaling = XMVectorSelect(g_XMOne.v, Scaling, g_XMSelect1100.v);
; 1883 :     XMMATRIX MScaling = XMMatrixScalingFromVector(VScaling);
; 1884 :     XMVECTOR VRotationOrigin = XMVectorSelect(g_XMSelect1100.v, RotationOrigin, g_XMSelect1100.v);
; 1885 :     XMMATRIX MRotation = XMMatrixRotationZ(Rotation);
; 1886 :     XMVECTOR VTranslation = XMVectorSelect(g_XMSelect1100.v, Translation, g_XMSelect1100.v);
; 1887 : 
; 1888 :     XMMATRIX M = XMMatrixMultiply(MScalingOriginI, MScalingOrientationT);

  00170	0f 28 0d 00 00
	00 00		 movaps	 xmm1, XMMWORD PTR ?g_XMIdentityR0@DirectX@UI@@3UXMVECTORF32@12@B

; 1639 :     vCos = XM_PERMUTE_PS(vCos, _MM_SHUFFLE(3, 2, 0, 1));

  00177	0f 28 c2	 movaps	 xmm0, xmm2
  0017a	0f c6 c2 e1	 shufps	 xmm0, xmm2, 225		; 000000e1H

; 1640 :     // x = cos,y = -sin,z = 0, w = 0
; 1641 :     vCos = _mm_mul_ps(vCos, g_XMNegateX);

  0017e	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMNegateX@DirectX@UI@@3UXMVECTORF32@12@B
  00185	0f 29 55 e0	 movaps	 XMMWORD PTR _vCos$1$[ebp], xmm2
  00189	0f 11 85 10 ff
	ff ff		 movups	 XMMWORD PTR tv2451[ebp], xmm0

; 369  :     vW = _mm_mul_ps(vW, M2.r[3]);

  00190	0f 28 75 80	 movaps	 xmm6, XMMWORD PTR _vTemp3$1$[ebp]
  00194	0f 28 e1	 movaps	 xmm4, xmm1
  00197	0f 10 9d 70 ff
	ff ff		 movups	 xmm3, XMMWORD PTR tv2456[ebp]
  0019e	0f 10 bd 60 ff
	ff ff		 movups	 xmm7, XMMWORD PTR tv2458[ebp]
  001a5	0f c6 e1 ff	 shufps	 xmm4, xmm1, 255		; 000000ffH
  001a9	0f 28 c1	 movaps	 xmm0, xmm1
  001ac	0f c6 c1 55	 shufps	 xmm0, xmm1, 85		; 00000055H
  001b0	0f 59 45 b0	 mulps	 xmm0, XMMWORD PTR _vTemp1$1$[ebp]
  001b4	0f 59 e6	 mulps	 xmm4, xmm6

; 372  :     vY = _mm_add_ps(vY, vW);

  001b7	0f 58 e0	 addps	 xmm4, xmm0
  001ba	0f 28 c1	 movaps	 xmm0, xmm1
  001bd	0f c6 c1 aa	 shufps	 xmm0, xmm1, 170		; 000000aaH
  001c1	0f 59 c3	 mulps	 xmm0, xmm3
  001c4	0f c6 c9 00	 shufps	 xmm1, xmm1, 0
  001c8	0f 59 cf	 mulps	 xmm1, xmm7
  001cb	0f 58 c1	 addps	 xmm0, xmm1

; 373  :     vX = _mm_add_ps(vX, vY);
; 374  :     mResult.r[0] = vX;

  001ce	0f 28 0d 00 00
	00 00		 movaps	 xmm1, XMMWORD PTR ?g_XMIdentityR1@DirectX@UI@@3UXMVECTORF32@12@B

; 386  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  001d5	0f 28 e9	 movaps	 xmm5, xmm1
  001d8	0f c6 e9 ff	 shufps	 xmm5, xmm1, 255		; 000000ffH

; 391  :     vW = _mm_mul_ps(vW, M2.r[3]);

  001dc	0f 59 ee	 mulps	 xmm5, xmm6
  001df	0f 58 e0	 addps	 xmm4, xmm0
  001e2	0f 28 c1	 movaps	 xmm0, xmm1
  001e5	0f c6 c1 55	 shufps	 xmm0, xmm1, 85		; 00000055H
  001e9	0f 59 45 b0	 mulps	 xmm0, XMMWORD PTR _vTemp1$1$[ebp]

; 393  :     vY = _mm_add_ps(vY, vW);

  001ed	0f 58 e8	 addps	 xmm5, xmm0
  001f0	0f 28 c1	 movaps	 xmm0, xmm1
  001f3	0f c6 c1 aa	 shufps	 xmm0, xmm1, 170		; 000000aaH
  001f7	0f 59 c3	 mulps	 xmm0, xmm3
  001fa	0f c6 c9 00	 shufps	 xmm1, xmm1, 0
  001fe	0f 59 cf	 mulps	 xmm1, xmm7
  00201	0f 58 c1	 addps	 xmm0, xmm1

; 406  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  00204	0f 28 0d 00 00
	00 00		 movaps	 xmm1, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B
  0020b	0f 28 d1	 movaps	 xmm2, xmm1
  0020e	0f c6 d1 ff	 shufps	 xmm2, xmm1, 255		; 000000ffH

; 411  :     vW = _mm_mul_ps(vW, M2.r[3]);

  00212	0f 59 d6	 mulps	 xmm2, xmm6
  00215	0f 58 e8	 addps	 xmm5, xmm0
  00218	0f 28 c1	 movaps	 xmm0, xmm1
  0021b	0f c6 c1 55	 shufps	 xmm0, xmm1, 85		; 00000055H
  0021f	0f 59 45 b0	 mulps	 xmm0, XMMWORD PTR _vTemp1$1$[ebp]

; 413  :     vY = _mm_add_ps(vY, vW);

  00223	0f 58 d0	 addps	 xmm2, xmm0
  00226	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B
  0022d	0f c6 c8 aa	 shufps	 xmm1, xmm0, 170		; 000000aaH
  00231	0f c6 05 00 00
	00 00 00	 shufps	 xmm0, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B, 0
  00239	0f 59 c7	 mulps	 xmm0, xmm7
  0023c	0f 59 cb	 mulps	 xmm1, xmm3
  0023f	0f 58 c8	 addps	 xmm1, xmm0

; 414  :     vX = _mm_add_ps(vX, vY);

  00242	0f 58 d1	 addps	 xmm2, xmm1

; 426  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  00245	0f 10 4d a0	 movups	 xmm1, XMMWORD PTR tv2387[ebp]
  00249	0f c6 4d a0 ff	 shufps	 xmm1, XMMWORD PTR tv2387[ebp], 255 ; 000000ffH

; 431  :     vW = _mm_mul_ps(vW, M2.r[3]);

  0024e	0f 59 ce	 mulps	 xmm1, xmm6
  00251	0f 10 75 a0	 movups	 xmm6, XMMWORD PTR tv2387[ebp]
  00255	0f 28 c6	 movaps	 xmm0, xmm6
  00258	0f c6 c6 55	 shufps	 xmm0, xmm6, 85		; 00000055H
  0025c	0f 59 45 b0	 mulps	 xmm0, XMMWORD PTR _vTemp1$1$[ebp]

; 433  :     vY = _mm_add_ps(vY, vW);

  00260	0f 58 c8	 addps	 xmm1, xmm0
  00263	0f 28 c6	 movaps	 xmm0, xmm6
  00266	0f c6 c6 aa	 shufps	 xmm0, xmm6, 170		; 000000aaH
  0026a	0f 59 c3	 mulps	 xmm0, xmm3

; 362  :     XMVECTOR vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  0026d	0f 28 dc	 movaps	 xmm3, xmm4

; 423  :     vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));

  00270	0f c6 f6 00	 shufps	 xmm6, xmm6, 0

; 427  : #endif
; 428  :     vX = _mm_mul_ps(vX, M2.r[0]);

  00274	0f 59 f7	 mulps	 xmm6, xmm7

; 367  :     vY = _mm_mul_ps(vY, M2.r[1]);

  00277	0f 10 bd 40 ff
	ff ff		 movups	 xmm7, XMMWORD PTR tv2453[ebp]
  0027e	0f c6 dc aa	 shufps	 xmm3, xmm4, 170		; 000000aaH

; 368  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  00282	0f 59 5d d0	 mulps	 xmm3, XMMWORD PTR _VScaling$1$[ebp]

; 432  :     vX = _mm_add_ps(vX, vZ);

  00286	0f 58 c6	 addps	 xmm0, xmm6

; 366  :     vX = _mm_mul_ps(vX, M2.r[0]);

  00289	0f 10 b5 50 ff
	ff ff		 movups	 xmm6, XMMWORD PTR tv2454[ebp]

; 434  :     vX = _mm_add_ps(vX, vY);

  00290	0f 58 c8	 addps	 xmm1, xmm0

; 360  :     XMVECTOR vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));

  00293	0f 28 c4	 movaps	 xmm0, xmm4
  00296	0f c6 c4 00	 shufps	 xmm0, xmm4, 0

; 364  : #endif
; 365  :     // Perform the operation on the first row
; 366  :     vX = _mm_mul_ps(vX, M2.r[0]);

  0029a	0f 59 c6	 mulps	 xmm0, xmm6

; 371  :     vX = _mm_add_ps(vX, vZ);

  0029d	0f 58 d8	 addps	 xmm3, xmm0
  002a0	0f 28 c4	 movaps	 xmm0, xmm4
  002a3	0f c6 c4 ff	 shufps	 xmm0, xmm4, 255		; 000000ffH
  002a7	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B
  002ae	0f c6 e4 55	 shufps	 xmm4, xmm4, 85		; 00000055H
  002b2	0f 59 e7	 mulps	 xmm4, xmm7

; 372  :     vY = _mm_add_ps(vY, vW);

  002b5	0f 58 c4	 addps	 xmm0, xmm4

; 384  :     vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));
; 385  :     vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  002b8	0f 28 e5	 movaps	 xmm4, xmm5
  002bb	0f c6 e5 aa	 shufps	 xmm4, xmm5, 170		; 000000aaH

; 389  :     vY = _mm_mul_ps(vY, M2.r[1]);
; 390  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  002bf	0f 59 65 d0	 mulps	 xmm4, XMMWORD PTR _VScaling$1$[ebp]
  002c3	0f 58 d8	 addps	 xmm3, xmm0

; 375  :     // Repeat for the other 3 rows
; 376  : #if defined(_XM_AVX_INTRINSICS_)
; 377  :     vX = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 0);
; 378  :     vY = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 1);
; 379  :     vZ = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 2);
; 380  :     vW = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 3);
; 381  : #else
; 382  :     vW = M1.r[1];
; 383  :     vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));

  002c6	0f 28 c5	 movaps	 xmm0, xmm5
  002c9	0f c6 c5 00	 shufps	 xmm0, xmm5, 0

; 387  : #endif
; 388  :     vX = _mm_mul_ps(vX, M2.r[0]);

  002cd	0f 59 c6	 mulps	 xmm0, xmm6

; 392  :     vX = _mm_add_ps(vX, vZ);

  002d0	0f 58 e0	 addps	 xmm4, xmm0
  002d3	0f 28 c5	 movaps	 xmm0, xmm5
  002d6	0f c6 c5 55	 shufps	 xmm0, xmm5, 85		; 00000055H
  002da	0f 59 c7	 mulps	 xmm0, xmm7
  002dd	0f c6 ed ff	 shufps	 xmm5, xmm5, 255		; 000000ffH
  002e1	0f 59 2d 00 00
	00 00		 mulps	 xmm5, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B

; 393  :     vY = _mm_add_ps(vY, vW);

  002e8	0f 58 c5	 addps	 xmm0, xmm5

; 394  :     vX = _mm_add_ps(vX, vY);
; 395  :     mResult.r[1] = vX;
; 396  : #if defined(_XM_AVX_INTRINSICS_)
; 397  :     vX = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 0);
; 398  :     vY = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 1);
; 399  :     vZ = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 2);
; 400  :     vW = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 3);
; 401  : #else
; 402  :     vW = M1.r[2];
; 403  :     vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));
; 404  :     vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));

  002eb	0f 28 ea	 movaps	 xmm5, xmm2
  002ee	0f c6 ea 55	 shufps	 xmm5, xmm2, 85		; 00000055H

; 407  : #endif
; 408  :     vX = _mm_mul_ps(vX, M2.r[0]);
; 409  :     vY = _mm_mul_ps(vY, M2.r[1]);

  002f2	0f 59 ef	 mulps	 xmm5, xmm7
  002f5	0f 58 e0	 addps	 xmm4, xmm0
  002f8	0f 28 c2	 movaps	 xmm0, xmm2
  002fb	0f c6 c2 ff	 shufps	 xmm0, xmm2, 255		; 000000ffH

; 411  :     vW = _mm_mul_ps(vW, M2.r[3]);

  002ff	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B

; 413  :     vY = _mm_add_ps(vY, vW);

  00306	0f 58 e8	 addps	 xmm5, xmm0
  00309	0f 28 c2	 movaps	 xmm0, xmm2
  0030c	0f c6 c2 aa	 shufps	 xmm0, xmm2, 170		; 000000aaH
  00310	0f 59 45 d0	 mulps	 xmm0, XMMWORD PTR _VScaling$1$[ebp]
  00314	0f c6 d2 00	 shufps	 xmm2, xmm2, 0
  00318	0f 59 d6	 mulps	 xmm2, xmm6
  0031b	0f 58 c2	 addps	 xmm0, xmm2

; 425  :     vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  0031e	0f 28 d1	 movaps	 xmm2, xmm1
  00321	0f c6 d1 aa	 shufps	 xmm2, xmm1, 170		; 000000aaH

; 430  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  00325	0f 59 55 d0	 mulps	 xmm2, XMMWORD PTR _VScaling$1$[ebp]
  00329	0f 58 e8	 addps	 xmm5, xmm0
  0032c	0f 28 c1	 movaps	 xmm0, xmm1
  0032f	0f c6 c1 00	 shufps	 xmm0, xmm1, 0
  00333	0f 59 c6	 mulps	 xmm0, xmm6

; 366  :     vX = _mm_mul_ps(vX, M2.r[0]);

  00336	0f 28 75 90	 movaps	 xmm6, XMMWORD PTR _vCos$1$[ebp]

; 432  :     vX = _mm_add_ps(vX, vZ);

  0033a	0f 58 d0	 addps	 xmm2, xmm0
  0033d	0f 28 c1	 movaps	 xmm0, xmm1
  00340	0f c6 c1 55	 shufps	 xmm0, xmm1, 85		; 00000055H
  00344	0f 59 c7	 mulps	 xmm0, xmm7

; 367  :     vY = _mm_mul_ps(vY, M2.r[1]);

  00347	0f 10 bd 30 ff
	ff ff		 movups	 xmm7, XMMWORD PTR tv2459[ebp]

; 426  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  0034e	0f c6 c9 ff	 shufps	 xmm1, xmm1, 255		; 000000ffH

; 431  :     vW = _mm_mul_ps(vW, M2.r[3]);

  00352	0f 59 0d 00 00
	00 00		 mulps	 xmm1, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B

; 433  :     vY = _mm_add_ps(vY, vW);

  00359	0f 58 c1	 addps	 xmm0, xmm1

; 361  :     XMVECTOR vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));

  0035c	0f 28 cb	 movaps	 xmm1, xmm3
  0035f	0f c6 cb 55	 shufps	 xmm1, xmm3, 85		; 00000055H

; 367  :     vY = _mm_mul_ps(vY, M2.r[1]);

  00363	0f 59 cf	 mulps	 xmm1, xmm7

; 434  :     vX = _mm_add_ps(vX, vY);

  00366	0f 58 d0	 addps	 xmm2, xmm0

; 363  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  00369	0f 28 c3	 movaps	 xmm0, xmm3
  0036c	0f c6 c3 ff	 shufps	 xmm0, xmm3, 255		; 000000ffH

; 369  :     vW = _mm_mul_ps(vW, M2.r[3]);

  00370	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B

; 372  :     vY = _mm_add_ps(vY, vW);

  00377	0f 58 c8	 addps	 xmm1, xmm0
  0037a	0f 28 c3	 movaps	 xmm0, xmm3
  0037d	0f c6 c3 00	 shufps	 xmm0, xmm3, 0
  00381	0f 59 c6	 mulps	 xmm0, xmm6
  00384	0f c6 db aa	 shufps	 xmm3, xmm3, 170		; 000000aaH
  00388	0f 59 1d 00 00
	00 00		 mulps	 xmm3, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B
  0038f	0f 58 c3	 addps	 xmm0, xmm3

; 375  :     // Repeat for the other 3 rows
; 376  : #if defined(_XM_AVX_INTRINSICS_)
; 377  :     vX = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 0);
; 378  :     vY = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 1);
; 379  :     vZ = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 2);
; 380  :     vW = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 3);
; 381  : #else
; 382  :     vW = M1.r[1];
; 383  :     vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));

  00392	0f 28 dc	 movaps	 xmm3, xmm4
  00395	0f c6 dc 00	 shufps	 xmm3, xmm4, 0

; 387  : #endif
; 388  :     vX = _mm_mul_ps(vX, M2.r[0]);

  00399	0f 59 de	 mulps	 xmm3, xmm6
  0039c	0f 58 c8	 addps	 xmm1, xmm0
  0039f	0f 28 c4	 movaps	 xmm0, xmm4
  003a2	0f c6 c4 aa	 shufps	 xmm0, xmm4, 170		; 000000aaH

; 389  :     vY = _mm_mul_ps(vY, M2.r[1]);
; 390  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  003a6	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B

; 392  :     vX = _mm_add_ps(vX, vZ);

  003ad	0f 58 d8	 addps	 xmm3, xmm0
  003b0	0f 28 c4	 movaps	 xmm0, xmm4
  003b3	0f c6 c4 55	 shufps	 xmm0, xmm4, 85		; 00000055H
  003b7	0f 59 c7	 mulps	 xmm0, xmm7
  003ba	0f c6 e4 ff	 shufps	 xmm4, xmm4, 255		; 000000ffH
  003be	0f 59 25 00 00
	00 00		 mulps	 xmm4, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B

; 393  :     vY = _mm_add_ps(vY, vW);

  003c5	0f 58 c4	 addps	 xmm0, xmm4

; 394  :     vX = _mm_add_ps(vX, vY);
; 395  :     mResult.r[1] = vX;
; 396  : #if defined(_XM_AVX_INTRINSICS_)
; 397  :     vX = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 0);
; 398  :     vY = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 1);
; 399  :     vZ = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 2);
; 400  :     vW = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 3);
; 401  : #else
; 402  :     vW = M1.r[2];
; 403  :     vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));
; 404  :     vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));

  003c8	0f 28 e5	 movaps	 xmm4, xmm5
  003cb	0f c6 e5 55	 shufps	 xmm4, xmm5, 85		; 00000055H

; 407  : #endif
; 408  :     vX = _mm_mul_ps(vX, M2.r[0]);
; 409  :     vY = _mm_mul_ps(vY, M2.r[1]);

  003cf	0f 59 e7	 mulps	 xmm4, xmm7
  003d2	0f 58 d8	 addps	 xmm3, xmm0
  003d5	0f 28 c5	 movaps	 xmm0, xmm5
  003d8	0f c6 c5 ff	 shufps	 xmm0, xmm5, 255		; 000000ffH

; 411  :     vW = _mm_mul_ps(vW, M2.r[3]);

  003dc	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B

; 413  :     vY = _mm_add_ps(vY, vW);

  003e3	0f 58 e0	 addps	 xmm4, xmm0
  003e6	0f 28 c5	 movaps	 xmm0, xmm5
  003e9	0f c6 c5 00	 shufps	 xmm0, xmm5, 0
  003ed	0f c6 ed aa	 shufps	 xmm5, xmm5, 170		; 000000aaH
  003f1	0f 59 2d 00 00
	00 00		 mulps	 xmm5, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B
  003f8	0f 59 c6	 mulps	 xmm0, xmm6

; 412  :     vX = _mm_add_ps(vX, vZ);

  003fb	0f 58 c5	 addps	 xmm0, xmm5

; 1898 : }

  003fe	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]

; 426  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  00401	0f 28 f2	 movaps	 xmm6, xmm2

; 362  :     XMVECTOR vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  00404	0f 28 e9	 movaps	 xmm5, xmm1

; 426  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  00407	0f c6 f2 ff	 shufps	 xmm6, xmm2, 255		; 000000ffH

; 431  :     vW = _mm_mul_ps(vW, M2.r[3]);

  0040b	0f 59 35 00 00
	00 00		 mulps	 xmm6, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B
  00412	0f 58 e0	 addps	 xmm4, xmm0

; 362  :     XMVECTOR vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  00415	0f c6 e9 aa	 shufps	 xmm5, xmm1, 170		; 000000aaH

; 424  :     vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));

  00419	0f 28 c2	 movaps	 xmm0, xmm2

; 368  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  0041c	0f 59 2d 00 00
	00 00		 mulps	 xmm5, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B

; 424  :     vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));

  00423	0f c6 c2 55	 shufps	 xmm0, xmm2, 85		; 00000055H

; 429  :     vY = _mm_mul_ps(vY, M2.r[1]);

  00427	0f 59 c7	 mulps	 xmm0, xmm7

; 367  :     vY = _mm_mul_ps(vY, M2.r[1]);

  0042a	0f 10 bd 10 ff
	ff ff		 movups	 xmm7, XMMWORD PTR tv2451[ebp]

; 433  :     vY = _mm_add_ps(vY, vW);

  00431	0f 58 f0	 addps	 xmm6, xmm0
  00434	0f 28 c2	 movaps	 xmm0, xmm2
  00437	0f c6 c2 00	 shufps	 xmm0, xmm2, 0
  0043b	0f 59 45 90	 mulps	 xmm0, XMMWORD PTR _vCos$1$[ebp]
  0043f	0f c6 d2 aa	 shufps	 xmm2, xmm2, 170		; 000000aaH
  00443	0f 59 15 00 00
	00 00		 mulps	 xmm2, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B
  0044a	0f 58 c2	 addps	 xmm0, xmm2

; 405  :     vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  0044d	0f 28 d4	 movaps	 xmm2, xmm4
  00450	0f c6 d4 aa	 shufps	 xmm2, xmm4, 170		; 000000aaH

; 410  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  00454	0f 59 15 00 00
	00 00		 mulps	 xmm2, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B

; 434  :     vX = _mm_add_ps(vX, vY);

  0045b	0f 58 f0	 addps	 xmm6, xmm0

; 360  :     XMVECTOR vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));

  0045e	0f 28 c1	 movaps	 xmm0, xmm1
  00461	0f c6 c1 00	 shufps	 xmm0, xmm1, 0

; 364  : #endif
; 365  :     // Perform the operation on the first row
; 366  :     vX = _mm_mul_ps(vX, M2.r[0]);

  00465	0f 59 45 e0	 mulps	 xmm0, XMMWORD PTR _vCos$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 2750 :     return _mm_add_ps(V1, V2);

  00469	0f 58 b5 20 ff
	ff ff		 addps	 xmm6, XMMWORD PTR _VScalingOrigin$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 371  :     vX = _mm_add_ps(vX, vZ);

  00470	0f 58 e8	 addps	 xmm5, xmm0
  00473	0f 28 c1	 movaps	 xmm0, xmm1
  00476	0f c6 c1 ff	 shufps	 xmm0, xmm1, 255		; 000000ffH
  0047a	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B
  00481	0f c6 c9 55	 shufps	 xmm1, xmm1, 85		; 00000055H
  00485	0f 59 cf	 mulps	 xmm1, xmm7
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 2869 :     return _mm_sub_ps(V1, V2);

  00488	0f 5c 75 c0	 subps	 xmm6, XMMWORD PTR _VRotationOrigin$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 372  :     vY = _mm_add_ps(vY, vW);

  0048c	0f 58 c1	 addps	 xmm0, xmm1

; 386  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  0048f	0f 28 cb	 movaps	 xmm1, xmm3
  00492	0f c6 cb ff	 shufps	 xmm1, xmm3, 255		; 000000ffH

; 391  :     vW = _mm_mul_ps(vW, M2.r[3]);

  00496	0f 59 0d 00 00
	00 00		 mulps	 xmm1, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B
  0049d	0f 58 e8	 addps	 xmm5, xmm0
  004a0	0f 28 c3	 movaps	 xmm0, xmm3
  004a3	0f c6 c3 55	 shufps	 xmm0, xmm3, 85		; 00000055H
  004a7	0f 59 c7	 mulps	 xmm0, xmm7

; 393  :     vY = _mm_add_ps(vY, vW);

  004aa	0f 58 c8	 addps	 xmm1, xmm0
  004ad	0f 28 c3	 movaps	 xmm0, xmm3
  004b0	0f c6 c3 aa	 shufps	 xmm0, xmm3, 170		; 000000aaH
  004b4	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B
  004bb	0f c6 db 00	 shufps	 xmm3, xmm3, 0
  004bf	0f 59 5d e0	 mulps	 xmm3, XMMWORD PTR _vCos$1$[ebp]
  004c3	0f 58 c3	 addps	 xmm0, xmm3

; 426  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  004c6	0f 28 de	 movaps	 xmm3, xmm6
  004c9	0f c6 de ff	 shufps	 xmm3, xmm6, 255		; 000000ffH

; 431  :     vW = _mm_mul_ps(vW, M2.r[3]);

  004cd	0f 59 1d 00 00
	00 00		 mulps	 xmm3, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B
  004d4	0f 58 c8	 addps	 xmm1, xmm0
  004d7	0f 28 c4	 movaps	 xmm0, xmm4
  004da	0f c6 c4 00	 shufps	 xmm0, xmm4, 0
  004de	0f 59 45 e0	 mulps	 xmm0, XMMWORD PTR _vCos$1$[ebp]
  004e2	0f 58 d0	 addps	 xmm2, xmm0
  004e5	0f 28 c4	 movaps	 xmm0, xmm4
  004e8	0f c6 c4 ff	 shufps	 xmm0, xmm4, 255		; 000000ffH
  004ec	0f 59 05 00 00
	00 00		 mulps	 xmm0, XMMWORD PTR ?g_XMIdentityR3@DirectX@UI@@3UXMVECTORF32@12@B
  004f3	0f c6 e4 55	 shufps	 xmm4, xmm4, 85		; 00000055H
  004f7	0f 59 e7	 mulps	 xmm4, xmm7
  004fa	0f 58 c4	 addps	 xmm0, xmm4
  004fd	0f 28 e6	 movaps	 xmm4, xmm6
  00500	0f c6 e6 00	 shufps	 xmm4, xmm6, 0
  00504	0f 59 65 e0	 mulps	 xmm4, XMMWORD PTR _vCos$1$[ebp]
  00508	0f 58 d0	 addps	 xmm2, xmm0
  0050b	0f 28 c6	 movaps	 xmm0, xmm6
  0050e	0f c6 c6 55	 shufps	 xmm0, xmm6, 85		; 00000055H
  00512	0f 59 c7	 mulps	 xmm0, xmm7
  00515	0f c6 f6 aa	 shufps	 xmm6, xmm6, 170		; 000000aaH
  00519	0f 59 35 00 00
	00 00		 mulps	 xmm6, XMMWORD PTR ?g_XMIdentityR2@DirectX@UI@@3UXMVECTORF32@12@B

; 433  :     vY = _mm_add_ps(vY, vW);

  00520	0f 58 d8	 addps	 xmm3, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 1423 :     XMVECTOR vTemp2 = _mm_and_ps(V2, Control);

  00523	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR ?g_XMSelect1100@DirectX@UI@@3UXMVECTORU32@12@B
  0052a	0f 54 85 00 ff
	ff ff		 andps	 xmm0, XMMWORD PTR _Translation$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 432  :     vX = _mm_add_ps(vX, vZ);

  00531	0f 58 e6	 addps	 xmm4, xmm6

; 434  :     vX = _mm_add_ps(vX, vY);

  00534	0f 58 dc	 addps	 xmm3, xmm4
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathVector.inl

; 2750 :     return _mm_add_ps(V1, V2);

  00537	0f 58 5d c0	 addps	 xmm3, XMMWORD PTR _VRotationOrigin$1$[ebp]
  0053b	0f 58 d8	 addps	 xmm3, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathMatrix.inl

; 1897 :     return M;

  0053e	0f 28 c5	 movaps	 xmm0, xmm5

; 1898 : }

  00541	33 cd		 xor	 ecx, ebp
  00543	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00548	8b e5		 mov	 esp, ebp
  0054a	5d		 pop	 ebp
  0054b	8b e3		 mov	 esp, ebx
  0054d	5b		 pop	 ebx
  0054e	c3		 ret	 0
?XMMatrixTransformation2D@DirectX@UI@@YQ?AUXMMATRIX@12@T__m128@2@M00M0@Z ENDP ; UI::DirectX::XMMatrixTransformation2D
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
;	COMDAT ??$?4AAV?$tween@M$$V@tweeny@@@?$optional@V?$tween@M$$V@tweeny@@@experimental@std@@QAEAAV012@AAV?$tween@M$$V@tweeny@@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?4AAV?$tween@M$$V@tweeny@@@?$optional@V?$tween@M$$V@tweeny@@@experimental@std@@QAEAAV012@AAV?$tween@M$$V@tweeny@@@Z PROC ; std::experimental::optional<tweeny::tween<float> >::operator=<tweeny::tween<float> &>, COMDAT
; _this$ = ecx

; 480  :   {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	57		 push	 edi

; 481  :     if (initialized()) { contained_val() = std::forward<U>(v); }

  00007	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  0000a	0f 84 b9 00 00
	00		 je	 $LN2@operator
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1546 :         if (this == _STD addressof(_Right)) {

  00013	56		 push	 esi
  00014	8b 01		 mov	 eax, DWORD PTR [ecx]
  00016	8d 51 0c	 lea	 edx, DWORD PTR [ecx+12]
  00019	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0001c	66 8b 41 04	 mov	 ax, WORD PTR [ecx+4]
  00020	66 89 43 08	 mov	 WORD PTR [ebx+8], ax
  00024	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00027	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
  0002a	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  0002d	3b c2		 cmp	 eax, edx
  0002f	74 25		 je	 SHORT $LN7@operator

; 1547 :             return *this;
; 1548 :         }
; 1549 : 
; 1550 :         auto& _Al       = _Getal();
; 1551 :         auto& _Right_al = _Right._Getal();
; 1552 :         if constexpr (_Choose_pocca_v<_Alty>) {
; 1553 :             if (_Al != _Right_al) {
; 1554 :                 _Tidy();
; 1555 :                 _Mypair._Myval2._Reload_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Al), _GET_PROXY_ALLOCATOR(_Alty, _Right_al));
; 1556 :             }
; 1557 :         }
; 1558 : 
; 1559 :         _Pocca(_Al, _Right_al);
; 1560 :         auto& _Right_data = _Right._Mypair._Myval2;
; 1561 :         _Assign_counted_range(_Right_data._Myfirst, static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst));

  00031	8b 32		 mov	 esi, DWORD PTR [edx]
  00033	8d 4b 10	 lea	 ecx, DWORD PTR [ebx+16]
  00036	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00039	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0003e	2b d6		 sub	 edx, esi
  00040	f7 ea		 imul	 edx
  00042	c1 fa 04	 sar	 edx, 4
  00045	8b c2		 mov	 eax, edx
  00047	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004a	03 c2		 add	 eax, edx
  0004c	50		 push	 eax
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??$_Assign_counted_range@PAU?$tweenpoint@M@detail@tweeny@@@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXPAU?$tweenpoint@M@detail@tweeny@@I@Z ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Assign_counted_range<tweeny::detail::tweenpoint<float> *>
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
$LN7@operator:
  00056	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00059	8d 51 1c	 lea	 edx, DWORD PTR [ecx+28]
  0005c	89 43 1c	 mov	 DWORD PTR [ebx+28], eax
  0005f	8d 43 20	 lea	 eax, DWORD PTR [ebx+32]

; 1546 :         if (this == _STD addressof(_Right)) {

  00062	3b c2		 cmp	 eax, edx
  00064	74 25		 je	 SHORT $LN10@operator

; 1547 :             return *this;
; 1548 :         }
; 1549 : 
; 1550 :         auto& _Al       = _Getal();
; 1551 :         auto& _Right_al = _Right._Getal();
; 1552 :         if constexpr (_Choose_pocca_v<_Alty>) {
; 1553 :             if (_Al != _Right_al) {
; 1554 :                 _Tidy();
; 1555 :                 _Mypair._Myval2._Reload_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Al), _GET_PROXY_ALLOCATOR(_Alty, _Right_al));
; 1556 :             }
; 1557 :         }
; 1558 : 
; 1559 :         _Pocca(_Al, _Right_al);
; 1560 :         auto& _Right_data = _Right._Mypair._Myval2;
; 1561 :         _Assign_counted_range(_Right_data._Myfirst, static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst));

  00066	8b 32		 mov	 esi, DWORD PTR [edx]
  00068	8d 4b 20	 lea	 ecx, DWORD PTR [ebx+32]
  0006b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0006e	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00073	2b d6		 sub	 edx, esi
  00075	f7 ea		 imul	 edx
  00077	c1 fa 04	 sar	 edx, 4
  0007a	8b c2		 mov	 eax, edx
  0007c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0007f	03 c2		 add	 eax, edx
  00081	50		 push	 eax
  00082	56		 push	 esi
  00083	e8 00 00 00 00	 call	 ??$_Assign_counted_range@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@I@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Assign_counted_range<std::function<bool __cdecl(tweeny::tween<float> &,float)> *>
  00088	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
$LN10@operator:
  0008b	8d 51 28	 lea	 edx, DWORD PTR [ecx+40]
  0008e	8d 43 2c	 lea	 eax, DWORD PTR [ebx+44]

; 1546 :         if (this == _STD addressof(_Right)) {

  00091	3b c2		 cmp	 eax, edx
  00093	74 25		 je	 SHORT $LN13@operator

; 1547 :             return *this;
; 1548 :         }
; 1549 : 
; 1550 :         auto& _Al       = _Getal();
; 1551 :         auto& _Right_al = _Right._Getal();
; 1552 :         if constexpr (_Choose_pocca_v<_Alty>) {
; 1553 :             if (_Al != _Right_al) {
; 1554 :                 _Tidy();
; 1555 :                 _Mypair._Myval2._Reload_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Al), _GET_PROXY_ALLOCATOR(_Alty, _Right_al));
; 1556 :             }
; 1557 :         }
; 1558 : 
; 1559 :         _Pocca(_Al, _Right_al);
; 1560 :         auto& _Right_data = _Right._Mypair._Myval2;
; 1561 :         _Assign_counted_range(_Right_data._Myfirst, static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst));

  00095	8b 32		 mov	 esi, DWORD PTR [edx]
  00097	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  0009a	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0009d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  000a2	2b d6		 sub	 edx, esi
  000a4	f7 ea		 imul	 edx
  000a6	c1 fa 04	 sar	 edx, 4
  000a9	8b c2		 mov	 eax, edx
  000ab	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ae	03 c2		 add	 eax, edx
  000b0	50		 push	 eax
  000b1	56		 push	 esi
  000b2	e8 00 00 00 00	 call	 ??$_Assign_counted_range@PAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@I@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Assign_counted_range<std::function<bool __cdecl(tweeny::tween<float> &,float)> *>
  000b7	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
$LN13@operator:
  000ba	8a 41 34	 mov	 al, BYTE PTR [ecx+52]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 483  :     return *this;

  000bd	5e		 pop	 esi
  000be	88 43 38	 mov	 BYTE PTR [ebx+56], al

; 484  :   }

  000c1	8b c3		 mov	 eax, ebx
  000c3	5f		 pop	 edi
  000c4	5b		 pop	 ebx
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
$LN2@operator:

; 397  :     ::new (static_cast<void*>(dataptr())) T(std::forward<Args>(args)...);

  000c9	ff 75 08	 push	 DWORD PTR _v$[ebp]
  000cc	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  000cf	e8 00 00 00 00	 call	 ??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z
  000d4	5f		 pop	 edi

; 398  :     OptionalBase<T>::init_ = true;

  000d5	c6 03 01	 mov	 BYTE PTR [ebx], 1

; 484  :   }

  000d8	8b c3		 mov	 eax, ebx
  000da	5b		 pop	 ebx
  000db	5d		 pop	 ebp
  000dc	c2 04 00	 ret	 4
??$?4AAV?$tween@M$$V@tweeny@@@?$optional@V?$tween@M$$V@tweeny@@@experimental@std@@QAEAAV012@AAV?$tween@M$$V@tweeny@@@Z ENDP ; std::experimental::optional<tweeny::tween<float> >::operator=<tweeny::tween<float> &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??1?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAE@XZ
_TEXT	SEGMENT
??1?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAE@XZ PROC ; std::function<bool __cdecl(tweeny::tween<float> &,float)>::~function<bool __cdecl(tweeny::tween<float> &,float)>, COMDAT
; _this$ = ecx

; 888  :         return !_Getimpl();

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00006	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00008	74 15		 je	 SHORT $LN6@function

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000a	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0000c	3b ce		 cmp	 ecx, esi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000e	0f 95 c0	 setne	 al
  00011	0f b6 c0	 movzx	 eax, al
  00014	50		 push	 eax
  00015	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00018	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN6@function:
  0001f	5e		 pop	 esi
  00020	c3		 ret	 0
??1?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAE@XZ ENDP ; std::function<bool __cdecl(tweeny::tween<float> &,float)>::~function<bool __cdecl(tweeny::tween<float> &,float)>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Temp$2 = -96						; size = 40
$T3 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z PROC ; std::function<bool __cdecl(tweeny::tween<float> &,float)>::operator=, COMDAT
; _this$ = ecx

; 1064 :     function& operator=(const function& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]

; 866  :         _Set(nullptr);

  0002f	33 f6		 xor	 esi, esi
  00031	89 75 ec	 mov	 DWORD PTR $T3[ebp+36], esi

; 888  :         return !_Getimpl();

  00034	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]

; 1037 :     function(const function& _Right) {

  00037	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi

; 888  :         return !_Getimpl();

  0003a	85 c9		 test	 ecx, ecx

; 892  :         if (!_Right._Empty()) {

  0003c	74 0d		 je	 SHORT $LN10@operator

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  0003e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00040	8d 55 c8	 lea	 edx, DWORD PTR $T3[ebp]
  00043	52		 push	 edx
  00044	ff 10		 call	 DWORD PTR [eax]
  00046	8b f0		 mov	 esi, eax
  00048	89 75 ec	 mov	 DWORD PTR $T3[ebp+36], esi
$LN10@operator:

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0004b	8b c6		 mov	 eax, esi
  0004d	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00050	3b c1		 cmp	 eax, ecx

; 958  :         if (!_Local() && !_Right._Local()) { // just swap pointers

  00052	74 14		 je	 SHORT $LN96@operator

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00054	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00057	3b cf		 cmp	 ecx, edi

; 958  :         if (!_Local() && !_Right._Local()) { // just swap pointers

  00059	74 0d		 je	 SHORT $LN96@operator

; 959  :             _Ptrt* _Temp = _Getimpl();
; 960  :             _Set(_Right._Getimpl());

  0005b	8b f1		 mov	 esi, ecx

; 961  :             _Right._Set(_Temp);

  0005d	89 47 24	 mov	 DWORD PTR [edi+36], eax
  00060	89 75 ec	 mov	 DWORD PTR $T3[ebp+36], esi

; 962  :         } else { // do three-way move

  00063	e9 c6 00 00 00	 jmp	 $LN76@operator
$LN96@operator:

; 866  :         _Set(nullptr);

  00068	33 c9		 xor	 ecx, ecx
  0006a	89 4d c4	 mov	 DWORD PTR __Temp$2[ebp+36], ecx
  0006d	85 c0		 test	 eax, eax

; 898  :         if (!_Right._Empty()) {

  0006f	74 40		 je	 SHORT $LN28@operator

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00071	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00074	3b c1		 cmp	 eax, ecx

; 899  :             if (_Right._Local()) { // move and tidy

  00076	75 2f		 jne	 SHORT $LN27@operator

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00078	8b 06		 mov	 eax, DWORD PTR [esi]
  0007a	8d 4d a0	 lea	 ecx, DWORD PTR __Temp$2[ebp]
  0007d	51		 push	 ecx
  0007e	8b ce		 mov	 ecx, esi
  00080	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  00083	8b 75 ec	 mov	 esi, DWORD PTR $T3[ebp+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00086	8b c8		 mov	 ecx, eax
  00088	89 4d c4	 mov	 DWORD PTR __Temp$2[ebp+36], ecx

; 888  :         return !_Getimpl();

  0008b	85 f6		 test	 esi, esi

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0008d	74 22		 je	 SHORT $LN28@operator

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0008f	8b 16		 mov	 edx, DWORD PTR [esi]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00091	8d 45 c8	 lea	 eax, DWORD PTR $T3[ebp]
  00094	3b f0		 cmp	 esi, eax

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00096	8b ce		 mov	 ecx, esi
  00098	0f 95 c0	 setne	 al
  0009b	0f b6 c0	 movzx	 eax, al
  0009e	50		 push	 eax
  0009f	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  000a2	8b 4d c4	 mov	 ecx, DWORD PTR __Temp$2[ebp+36]
  000a5	eb 05		 jmp	 SHORT $LN102@operator
$LN27@operator:

; 903  :                 _Set(_Right._Getimpl());

  000a7	8b ce		 mov	 ecx, esi
  000a9	89 4d c4	 mov	 DWORD PTR __Temp$2[ebp+36], ecx
$LN102@operator:

; 888  :         return !_Getimpl();

  000ac	33 f6		 xor	 esi, esi
  000ae	89 75 ec	 mov	 DWORD PTR $T3[ebp+36], esi
$LN28@operator:
  000b1	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  000b4	85 d2		 test	 edx, edx

; 898  :         if (!_Right._Empty()) {

  000b6	74 42		 je	 SHORT $LN44@operator

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  000b8	3b d7		 cmp	 edx, edi

; 899  :             if (_Right._Local()) { // move and tidy

  000ba	75 32		 jne	 SHORT $LN43@operator

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  000bc	8b 02		 mov	 eax, DWORD PTR [edx]
  000be	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  000c1	51		 push	 ecx
  000c2	8b ca		 mov	 ecx, edx
  000c4	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  000c7	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  000ca	8b f0		 mov	 esi, eax
  000cc	89 75 ec	 mov	 DWORD PTR $T3[ebp+36], esi

; 888  :         return !_Getimpl();

  000cf	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  000d1	74 16		 je	 SHORT $LN99@operator

; 952  :             _Getimpl()->_Delete_this(!_Local());

  000d3	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  000d5	3b cf		 cmp	 ecx, edi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  000d7	0f 95 c0	 setne	 al
  000da	0f b6 c0	 movzx	 eax, al
  000dd	50		 push	 eax
  000de	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  000e1	8b 75 ec	 mov	 esi, DWORD PTR $T3[ebp+36]
  000e4	8b 4d c4	 mov	 ecx, DWORD PTR __Temp$2[ebp+36]
  000e7	eb 0a		 jmp	 SHORT $LN103@operator
$LN99@operator:

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  000e9	8b 4d c4	 mov	 ecx, DWORD PTR __Temp$2[ebp+36]
  000ec	eb 0c		 jmp	 SHORT $LN44@operator
$LN43@operator:

; 903  :                 _Set(_Right._Getimpl());

  000ee	8b f2		 mov	 esi, edx
  000f0	89 75 ec	 mov	 DWORD PTR $T3[ebp+36], esi
$LN103@operator:

; 888  :         return !_Getimpl();

  000f3	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
$LN44@operator:
  000fa	85 c9		 test	 ecx, ecx

; 898  :         if (!_Right._Empty()) {

  000fc	74 30		 je	 SHORT $LN76@operator

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  000fe	8d 45 a0	 lea	 eax, DWORD PTR __Temp$2[ebp]
  00101	3b c8		 cmp	 ecx, eax

; 899  :             if (_Right._Local()) { // move and tidy

  00103	75 26		 jne	 SHORT $LN59@operator

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00105	8b 01		 mov	 eax, DWORD PTR [ecx]
  00107	57		 push	 edi
  00108	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  0010b	8b 4d c4	 mov	 ecx, DWORD PTR __Temp$2[ebp+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  0010e	89 47 24	 mov	 DWORD PTR [edi+36], eax

; 888  :         return !_Getimpl();

  00111	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00113	74 11		 je	 SHORT $LN100@operator

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00115	8b 11		 mov	 edx, DWORD PTR [ecx]
  00117	8d 45 a0	 lea	 eax, DWORD PTR __Temp$2[ebp]
  0011a	3b c8		 cmp	 ecx, eax
  0011c	0f 95 c0	 setne	 al
  0011f	0f b6 c0	 movzx	 eax, al
  00122	50		 push	 eax
  00123	ff 52 10	 call	 DWORD PTR [edx+16]
$LN100@operator:

; 888  :         return !_Getimpl();

  00126	8b 75 ec	 mov	 esi, DWORD PTR $T3[ebp+36]
  00129	eb 03		 jmp	 SHORT $LN76@operator
$LN59@operator:

; 903  :                 _Set(_Right._Getimpl());

  0012b	89 4f 24	 mov	 DWORD PTR [edi+36], ecx
$LN76@operator:

; 888  :         return !_Getimpl();

  0012e	85 f6		 test	 esi, esi

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00130	74 13		 je	 SHORT $LN98@operator

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00132	8b 16		 mov	 edx, DWORD PTR [esi]
  00134	8d 45 c8	 lea	 eax, DWORD PTR $T3[ebp]
  00137	3b f0		 cmp	 esi, eax
  00139	0f 95 c1	 setne	 cl
  0013c	0f b6 c9	 movzx	 ecx, cl
  0013f	51		 push	 ecx
  00140	8b ce		 mov	 ecx, esi
  00142	ff 52 10	 call	 DWORD PTR [edx+16]
$LN98@operator:

; 1065 :         function(_Right).swap(*this);
; 1066 :         return *this;
; 1067 :     }

  00145	8b c7		 mov	 eax, edi
  00147	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00151	59		 pop	 ecx
  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00157	33 cd		 xor	 ecx, ebp
  00159	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015e	8b e5		 mov	 esp, ebp
  00160	5d		 pop	 ebp
  00161	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z$1:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAEAAV01@ABV01@@Z ENDP ; std::function<bool __cdecl(tweeny::tween<float> &,float)>::operator=
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
;	COMDAT ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ PROC ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>, COMDAT
; _this$ = ecx

; 877  :     ~_Func_class() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 888  :         return !_Getimpl();

  00003	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00006	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00008	74 15		 je	 SHORT $LN4@Func_class

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000a	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0000c	3b ce		 cmp	 ecx, esi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0000e	0f 95 c0	 setne	 al
  00011	0f b6 c0	 movzx	 eax, al
  00014	50		 push	 eax
  00015	ff 52 10	 call	 DWORD PTR [edx+16]

; 953  :             _Set(nullptr);

  00018	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN4@Func_class:
  0001f	5e		 pop	 esi

; 878  :         _Tidy();
; 879  :     }

  00020	c3		 ret	 0
??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ENDP ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$via@UcubicOutEasing@easing@tweeny@@@?$tween@M$$V@tweeny@@QAEAAV01@UcubicOutEasing@easing@1@@Z
_TEXT	SEGMENT
_<vs_0>$ = 8						; size = 1
??$via@UcubicOutEasing@easing@tweeny@@@?$tween@M$$V@tweeny@@QAEAAV01@UcubicOutEasing@easing@1@@Z PROC ; tweeny::tween<float>::via<tweeny::easing::cubicOutEasing>, COMDAT
; _this$ = ecx

; 2259 :     inline tween<T> & tween<T>::via(Fs... vs) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00006	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000b	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  0000e	2b 56 0c	 sub	 edx, DWORD PTR [esi+12]
  00011	f7 ea		 imul	 edx
  00013	c1 fa 04	 sar	 edx, 4
  00016	8b c2		 mov	 eax, edx
  00018	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001b	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2260 :         points.at(points.size() - 2).via(vs...);

  0001d	8d 48 fe	 lea	 ecx, DWORD PTR [eax-2]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1967 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00020	3b c1		 cmp	 eax, ecx
  00022	76 18		 jbe	 SHORT $LN11@via
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2260 :         points.at(points.size() - 2).via(vs...);

  00024	ff 75 08	 push	 DWORD PTR _<vs_0>$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1971 :         return _My_data._Myfirst[_Pos];

  00027	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  0002a	c1 e1 05	 shl	 ecx, 5
  0002d	03 4e 0c	 add	 ecx, DWORD PTR [esi+12]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2260 :         points.at(points.size() - 2).via(vs...);

  00030	e8 00 00 00 00	 call	 ??$via@UcubicOutEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUcubicOutEasing@easing@2@@Z ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::cubicOutEasing>

; 2261 :         return *this;

  00035	8b c6		 mov	 eax, esi
  00037	5e		 pop	 esi

; 2262 :     }

  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
$LN11@via:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1968 :             _Xrange();

  0003c	e8 00 00 00 00	 call	 ?_Xrange@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xrange
$LN9@via:
  00041	cc		 int	 3
??$via@UcubicOutEasing@easing@tweeny@@@?$tween@M$$V@tweeny@@QAEAAV01@UcubicOutEasing@easing@1@@Z ENDP ; tweeny::tween<float>::via<tweeny::easing::cubicOutEasing>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$during@H@?$tween@M$$V@tweeny@@QAEAAV01@H@Z
_TEXT	SEGMENT
_<ds_0>$ = 8						; size = 4
??$during@H@?$tween@M$$V@tweeny@@QAEAAV01@H@Z PROC	; tweeny::tween<float>::during<int>, COMDAT
; _this$ = ecx

; 2358 :     inline tween<T> & tween<T>::during(Ds... ds) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00008	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2359 :         total = 0;

  0000d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00013	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  00016	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00019	2b d6		 sub	 edx, esi
  0001b	f7 ea		 imul	 edx
  0001d	c1 fa 04	 sar	 edx, 4
  00020	8b c2		 mov	 eax, edx
  00022	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00025	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2360 :         points.at(points.size() - 2).during(ds...);

  00027	8d 48 fe	 lea	 ecx, DWORD PTR [eax-2]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1967 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0002a	3b c1		 cmp	 eax, ecx
  0002c	76 44		 jbe	 SHORT $LN44@during
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2360 :         points.at(points.size() - 2).during(ds...);

  0002e	ff 75 08	 push	 DWORD PTR _<ds_0>$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1971 :         return _My_data._Myfirst[_Pos];

  00031	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  00034	c1 e1 05	 shl	 ecx, 5
  00037	03 ce		 add	 ecx, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2360 :         points.at(points.size() - 2).during(ds...);

  00039	e8 00 00 00 00	 call	 ??$during@H@?$tweenpoint@M@detail@tweeny@@QAEXH@Z ; tweeny::detail::tweenpoint<float>::during<int>

; 2361 :         for (detail::tweenpoint<T> & p : points) {

  0003e	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
  00041	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00044	3b f3		 cmp	 esi, ebx
  00046	74 21		 je	 SHORT $LN3@during
$LL4@during:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 9440 :             const auto _Result    = __std_max_element(_First_ptr, _To_address(_Last));

  00048	8d 46 06	 lea	 eax, DWORD PTR [esi+6]
  0004b	50		 push	 eax
  0004c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ??$__std_max_element@$$CBG@@YAPBGPBG0@Z ; __std_max_element<unsigned short const >
  00055	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2362 :             total += p.duration();

  00058	0f b7 00	 movzx	 eax, WORD PTR [eax]
  0005b	01 07		 add	 DWORD PTR [edi], eax
  0005d	8b 07		 mov	 eax, DWORD PTR [edi]

; 2363 :             p.stacked = total;

  0005f	89 46 58	 mov	 DWORD PTR [esi+88], eax
  00062	83 c6 60	 add	 esi, 96			; 00000060H
  00065	3b f3		 cmp	 esi, ebx
  00067	75 df		 jne	 SHORT $LL4@during
$LN3@during:

; 2364 :         }
; 2365 :         return *this;

  00069	8b c7		 mov	 eax, edi
  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx

; 2366 :     }

  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
$LN44@during:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1968 :             _Xrange();

  00072	e8 00 00 00 00	 call	 ?_Xrange@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xrange
$LN42@during:
  00077	cc		 int	 3
??$during@H@?$tween@M$$V@tweeny@@QAEAAV01@H@Z ENDP	; tweeny::tween<float>::during<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_t$ = 12						; size = 4
_<vs_0>$ = 12						; size = 4
??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z PROC		; tweeny::from<float>, COMDAT

; 2592 :   template<typename... Ts> inline tween<Ts...> from(Ts... vs) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1797 :             uint32_t total = 0; // total runtime

  00026	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 1798 :             uint16_t currentPoint = 0; // current point

  00029	33 c0		 xor	 eax, eax

; 2246 :     template<typename T> inline tween<T> tween<T>::from(T t) { return tween<T>(t); }

  0002b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _<vs_0>$[ebp]
  00030	f3 0f 11 45 0c	 movss	 DWORD PTR _t$[ebp], xmm0

; 1797 :             uint32_t total = 0; // total runtime

  00035	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 1798 :             uint16_t currentPoint = 0; // current point

  0003b	66 89 46 04	 mov	 WORD PTR [esi+4], ax

; 1799 :             float currentProgress = 0; // current progress

  0003f	89 46 08	 mov	 DWORD PTR [esi+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00042	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00045	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00048	89 46 14	 mov	 DWORD PTR [esi+20], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2248 :     template<typename T> inline tween<T>::tween(T t) {

  0004b	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0004e	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  00051	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00054	89 46 24	 mov	 DWORD PTR [esi+36], eax
  00057	89 46 28	 mov	 DWORD PTR [esi+40], eax
  0005a	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  0005d	89 46 30	 mov	 DWORD PTR [esi+48], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2248 :     template<typename T> inline tween<T>::tween(T t) {

  00060	c6 46 34 01	 mov	 BYTE PTR [esi+52], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00064	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2248 :     template<typename T> inline tween<T>::tween(T t) {

  00067	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0006b	3b 7e 14	 cmp	 edi, DWORD PTR [esi+20]
  0006e	74 39		 je	 SHORT $LN35@from
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1157 :             during(static_cast<uint16_t>(0));

  00070	50		 push	 eax
  00071	8b cf		 mov	 ecx, edi
  00073	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  00077	89 47 2c	 mov	 DWORD PTR [edi+44], eax
  0007a	89 47 54	 mov	 DWORD PTR [edi+84], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1157 :             during(static_cast<uint16_t>(0));

  0007d	e8 00 00 00 00	 call	 ??$during@G@?$tweenpoint@M@detail@tweeny@@QAEXG@Z ; tweeny::detail::tweenpoint<float>::during<unsigned short>

; 1158 :             via(easing::def);

  00082	0f b6 0d 00 00
	00 00		 movzx	 ecx, BYTE PTR ?def@easing@tweeny@@2UdefaultEasing@12@B
  00089	51		 push	 ecx
  0008a	8b cf		 mov	 ecx, edi
  0008c	e8 00 00 00 00	 call	 ??$via@UdefaultEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUdefaultEasing@easing@2@@Z ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::defaultEasing>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 869  :         ++_Mylast;

  00091	83 46 10 60	 add	 DWORD PTR [esi+16], 96	; 00000060H
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2594 :   }

  00095	8b c6		 mov	 eax, esi
  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c3		 ret	 0
$LN35@from:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000a9	8d 45 0c	 lea	 eax, DWORD PTR _t$[ebp]
  000ac	50		 push	 eax
  000ad	57		 push	 edi
  000ae	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  000b1	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AAM@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEPAU?$tweenpoint@M@detail@tweeny@@QAU234@AAM@Z ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Emplace_reallocate<float &>
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2594 :   }

  000b6	8b c6		 mov	 eax, esi
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z$2:
  00000	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::~vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >
__unwindfunclet$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z$3:
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@XZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
__unwindfunclet$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z$4:
  00016	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00019	83 c1 28	 add	 ecx, 40			; 00000028H
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@XZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
__ehhandler$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z:
  00026	90		 npad	 1
  00027	90		 npad	 1
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00032	33 c8		 xor	 ecx, eax
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z
  0003e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z ENDP		; tweeny::from<float>
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 5194 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 415  :             return __builtin_strlen(_First);

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]

; 5194 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00006	56		 push	 esi
  00007	57		 push	 edi

; 415  :             return __builtin_strlen(_First);

  00008	8b fa		 mov	 edi, edx
  0000a	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  0000d	0f 1f 00	 npad	 3
$LL18@operator:
  00010	8a 07		 mov	 al, BYTE PTR [edi]
  00012	47		 inc	 edi
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL18@operator
  00017	2b f9		 sub	 edi, ecx

; 4759 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]

; 2301 :         return _BUF_SIZE <= _Myres;

  0001c	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 4759 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00020	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]

; 2293 :         if (_Large_string_engaged()) {

  00023	72 02		 jb	 SHORT $LN8@operator

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00025	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN8@operator:

; 595  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  00027	3b f7		 cmp	 esi, edi
  00029	75 5b		 jne	 SHORT $LN14@operator

; 395  :         return __builtin_memcmp(_First1, _First2, _Count);

  0002b	83 ee 04	 sub	 esi, 4
  0002e	72 11		 jb	 SHORT $LN21@operator
$LL22@operator:
  00030	8b 01		 mov	 eax, DWORD PTR [ecx]
  00032	3b 02		 cmp	 eax, DWORD PTR [edx]
  00034	75 10		 jne	 SHORT $LN20@operator
  00036	83 c1 04	 add	 ecx, 4
  00039	83 c2 04	 add	 edx, 4
  0003c	83 ee 04	 sub	 esi, 4
  0003f	73 ef		 jae	 SHORT $LL22@operator
$LN21@operator:
  00041	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00044	74 34		 je	 SHORT $LN19@operator
$LN20@operator:
  00046	8a 01		 mov	 al, BYTE PTR [ecx]
  00048	3a 02		 cmp	 al, BYTE PTR [edx]
  0004a	75 27		 jne	 SHORT $LN23@operator
  0004c	83 fe fd	 cmp	 esi, -3			; fffffffdH
  0004f	74 29		 je	 SHORT $LN19@operator
  00051	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00054	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  00057	75 1a		 jne	 SHORT $LN23@operator
  00059	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0005c	74 1c		 je	 SHORT $LN19@operator
  0005e	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00061	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  00064	75 0d		 jne	 SHORT $LN23@operator
  00066	83 fe ff	 cmp	 esi, -1
  00069	74 0f		 je	 SHORT $LN19@operator
  0006b	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  0006e	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  00071	74 07		 je	 SHORT $LN19@operator
$LN23@operator:
  00073	1b c0		 sbb	 eax, eax
  00075	83 c8 01	 or	 eax, 1
  00078	eb 02		 jmp	 SHORT $LN24@operator
$LN19@operator:
  0007a	33 c0		 xor	 eax, eax
$LN24@operator:

; 595  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  0007c	85 c0		 test	 eax, eax
  0007e	75 06		 jne	 SHORT $LN14@operator
  00080	5f		 pop	 edi
  00081	b0 01		 mov	 al, 1

; 5195 :     return _Left._Equal(_Right);
; 5196 : }

  00083	5e		 pop	 esi
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
$LN14@operator:
  00086	5f		 pop	 edi

; 595  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  00087	32 c0		 xor	 al, al

; 5195 :     return _Left._Equal(_Right);
; 5196 : }

  00089	5e		 pop	 esi
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDragButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDragButton@UI@@UAEPAXI@Z PROC			; UI::CDragButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDragButton@UI@@UAE@XZ ; UI::CDragButton::~CDragButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 70 03 00 00	 push	 880			; 00000370H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCDragButton@UI@@UAEPAXI@Z ENDP			; UI::CDragButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 3325 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3326 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 3327 : 	{
; 3328 : 		return;
; 3329 : 	}
; 3330 : 
; 3331 : 	CButton::OnMouseOverIn();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?OnMouseOverIn@CButton@UI@@MAEXXZ ; UI::CButton::OnMouseOverIn

; 3332 : 	PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  0001e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 3333 : }

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverOut@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 3313 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3314 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 3315 : 
; 3316 : 	{
; 3317 : 		return;
; 3318 : 	}
; 3319 : 
; 3320 : 	CButton::OnMouseOverIn();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?OnMouseOverIn@CButton@UI@@MAEXXZ ; UI::CButton::OnMouseOverIn

; 3321 : 	PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  0001e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 3322 : }

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverIn@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnChangePosition, COMDAT
; _this$ = ecx

; 3280 : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 3281 : 	m_x = max(m_x, m_restrictArea.left);

  00005	8b 87 60 03 00
	00		 mov	 eax, DWORD PTR [edi+864]
  0000b	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  0000e	3b d0		 cmp	 edx, eax

; 3282 : 	m_y = max(m_y, m_restrictArea.top);

  00010	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]

; 3283 : 	m_x = min(m_x, max(0, m_restrictArea.right - m_lWidth));

  00013	8b b7 68 03 00
	00		 mov	 esi, DWORD PTR [edi+872]
  00019	0f 4e d0	 cmovle	 edx, eax
  0001c	8b 87 64 03 00
	00		 mov	 eax, DWORD PTR [edi+868]
  00022	3b c8		 cmp	 ecx, eax
  00024	0f 4e c8	 cmovle	 ecx, eax
  00027	2b 77 2c	 sub	 esi, DWORD PTR [edi+44]
  0002a	b8 00 00 00 00	 mov	 eax, 0
  0002f	0f 49 c6	 cmovns	 eax, esi
  00032	3b d0		 cmp	 edx, eax
  00034	7c 09		 jl	 SHORT $LN12@OnChangePo
  00036	33 c0		 xor	 eax, eax
  00038	8b d6		 mov	 edx, esi
  0003a	85 f6		 test	 esi, esi
  0003c	0f 48 d0	 cmovs	 edx, eax
$LN12@OnChangePo:

; 3284 : 	m_y = min(m_y, max(0, m_restrictArea.bottom - m_lHeight));

  0003f	8b b7 6c 03 00
	00		 mov	 esi, DWORD PTR [edi+876]
  00045	b8 00 00 00 00	 mov	 eax, 0
  0004a	8b 5f 30	 mov	 ebx, DWORD PTR [edi+48]
  0004d	2b f3		 sub	 esi, ebx
  0004f	89 57 24	 mov	 DWORD PTR [edi+36], edx
  00052	0f 49 c6	 cmovns	 eax, esi
  00055	3b c8		 cmp	 ecx, eax
  00057	7c 09		 jl	 SHORT $LN18@OnChangePo
  00059	33 c0		 xor	 eax, eax
  0005b	8b ce		 mov	 ecx, esi
  0005d	85 f6		 test	 esi, esi
  0005f	0f 48 c8	 cmovs	 ecx, eax
$LN18@OnChangePo:

; 3285 : 
; 3286 : 	m_rect.left = m_x;
; 3287 : 	m_rect.top = m_y;
; 3288 : 
; 3289 : 	if (m_pParent)

  00062	8b b7 80 00 00
	00		 mov	 esi, DWORD PTR [edi+128]
  00068	89 4f 28	 mov	 DWORD PTR [edi+40], ecx
  0006b	89 57 34	 mov	 DWORD PTR [edi+52], edx
  0006e	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
  00071	85 f6		 test	 esi, esi
  00073	74 0c		 je	 SHORT $LN2@OnChangePo

; 3290 : 	{
; 3291 : 		const RECT & c_rRect = m_pParent->GetRect();
; 3292 : 		m_rect.left += c_rRect.left;

  00075	03 56 34	 add	 edx, DWORD PTR [esi+52]
  00078	89 57 34	 mov	 DWORD PTR [edi+52], edx

; 3293 : 		m_rect.top += c_rRect.top;

  0007b	03 4e 38	 add	 ecx, DWORD PTR [esi+56]
  0007e	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
$LN2@OnChangePo:

; 3294 : 	}
; 3295 : 
; 3296 : 	m_rect.right = m_rect.left + m_lWidth;

  00081	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  00084	03 c2		 add	 eax, edx
  00086	89 47 3c	 mov	 DWORD PTR [edi+60], eax

; 3297 : 	m_rect.bottom = m_rect.top + m_lHeight;

  00089	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
  0008c	89 47 40	 mov	 DWORD PTR [edi+64], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0008f	8b 9f 84 00 00
	00		 mov	 ebx, DWORD PTR [edi+132]
  00095	8b 33		 mov	 esi, DWORD PTR [ebx]

; 73   :         return _Ptr == _Right._Ptr;

  00097	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00099	74 13		 je	 SHORT $LN44@OnChangePo
  0009b	0f 1f 44 00 00	 npad	 5
$LL54@OnChangePo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1578 :         return ((*static_cast<_Ty1&&>(_Arg1)).*_Obj)(static_cast<_Types2&&>(_Args2)...);

  000a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000a3	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 51   :         _Ptr = _Ptr->_Next;

  000a8	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  000aa	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  000ac	75 f2		 jne	 SHORT $LL54@OnChangePo
$LN44@OnChangePo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 3301 : 	if (m_pcurVisual)

  000ae	8b 8f 3c 01 00
	00		 mov	 ecx, DWORD PTR [edi+316]
  000b4	85 c9		 test	 ecx, ecx
  000b6	74 23		 je	 SHORT $LN3@OnChangePo

; 3302 : 	{
; 3303 : 		m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  000b8	66 0f 6e 47 38	 movd	 xmm0, DWORD PTR [edi+56]
  000bd	83 ec 08	 sub	 esp, 8
  000c0	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c3	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000c9	66 0f 6e 47 34	 movd	 xmm0, DWORD PTR [edi+52]
  000ce	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN3@OnChangePo:

; 3304 : 	}
; 3305 : 
; 3306 : 	if (IsPressed())

  000db	8b cf		 mov	 ecx, edi
  000dd	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  000e2	85 c0		 test	 eax, eax
  000e4	74 16		 je	 SHORT $LN4@OnChangePo

; 3307 : 	{
; 3308 : 		PyCallClassMemberFunc(m_poHandler, "OnMove", BuildEmptyTuple());

  000e6	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  000eb	50		 push	 eax
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_06GJPOLLJG@OnMove@
  000f1	ff 77 7c	 push	 DWORD PTR [edi+124]
  000f4	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  000f9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@OnChangePo:

; 3309 : 	}
; 3310 : }

  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	c3		 ret	 0
?OnChangePosition@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z
_TEXT	SEGMENT
_ix$ = 8						; size = 4
_iy$ = 12						; size = 4
_iwidth$ = 16						; size = 4
_iheight$ = 20						; size = 4
?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z PROC ; UI::CDragButton::SetRestrictMovementArea, COMDAT
; _this$ = ecx

; 3272 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3273 : 	m_restrictArea.left = ix;

  00003	8b 55 08	 mov	 edx, DWORD PTR _ix$[ebp]

; 3274 : 	m_restrictArea.top = iy;
; 3275 : 	m_restrictArea.right = ix + iwidth;

  00006	8b 45 10	 mov	 eax, DWORD PTR _iwidth$[ebp]
  00009	03 c2		 add	 eax, edx
  0000b	89 91 60 03 00
	00		 mov	 DWORD PTR [ecx+864], edx
  00011	89 81 68 03 00
	00		 mov	 DWORD PTR [ecx+872], eax

; 3276 : 	m_restrictArea.bottom = iy + iheight;

  00017	8b 45 14	 mov	 eax, DWORD PTR _iheight$[ebp]
  0001a	56		 push	 esi
  0001b	8b 75 0c	 mov	 esi, DWORD PTR _iy$[ebp]
  0001e	03 c6		 add	 eax, esi
  00020	89 b1 64 03 00
	00		 mov	 DWORD PTR [ecx+868], esi
  00026	89 81 6c 03 00
	00		 mov	 DWORD PTR [ecx+876], eax
  0002c	5e		 pop	 esi

; 3277 : }

  0002d	5d		 pop	 ebp
  0002e	c2 10 00	 ret	 16			; 00000010H
?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z ENDP ; UI::CDragButton::SetRestrictMovementArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CDragButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CDragButton@UI@@UAE@XZ PROC				; UI::CDragButton::~CDragButton, COMDAT
; _this$ = ecx

; 3268 : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDragButton@UI@@6B@

; 3269 : }

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CDragButton@UI@@UAE@XZ ENDP				; UI::CDragButton::~CDragButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CDragButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CDragButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CDragButton::CDragButton, COMDAT
; _this$ = ecx

; 3260 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h

; 138  : 	void			RemoveFlag(DWORD flag)	{ REMOVE_BIT(m_dwFlag, flag);	}

  00012	81 66 78 7f ff
	ff ff		 and	 DWORD PTR [esi+120], -129 ; ffffff7fH
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 3260 : {

  00019	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDragButton@UI@@6B@

; 3261 : 	CWindow::RemoveFlag(CWindow::FLAG_NOT_CAPTURE);
; 3262 : 	m_restrictArea.left = 0;

  0001f	c7 86 60 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+864], 0

; 3263 : 	m_restrictArea.top = 0;

  00029	c7 86 64 03 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+868], 0

; 3264 : 	m_restrictArea.right = CWindowManager::Instance().GetScreenWidth();

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00038	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003b	89 86 68 03 00
	00		 mov	 DWORD PTR [esi+872], eax

; 3265 : 	m_restrictArea.bottom = CWindowManager::Instance().GetScreenHeight();

  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00046	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00049	89 86 6c 03 00
	00		 mov	 DWORD PTR [esi+876], eax

; 3266 : }

  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0CDragButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CDragButton::CDragButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCToggleButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCToggleButton@UI@@UAEPAXI@Z PROC			; UI::CToggleButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CToggleButton@UI@@UAE@XZ ; UI::CToggleButton::~CToggleButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 60 03 00 00	 push	 864			; 00000360H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCToggleButton@UI@@UAEPAXI@Z ENDP			; UI::CToggleButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CToggleButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CToggleButton@UI@@MAEXXZ PROC		; UI::CToggleButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 3241 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3242 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 3243 : 	{
; 3244 : 		return;
; 3245 : 	}
; 3246 : 
; 3247 : 	if (!m_isPressed)

  0000c	83 be 34 01 00
	00 00		 cmp	 DWORD PTR [esi+308], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 3248 : 	{
; 3249 : 		SetCurrentVisual(&m_upVisual);

  00015	8d 86 40 01 00
	00		 lea	 eax, DWORD PTR [esi+320]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 3250 : 	}
; 3251 : 
; 3252 : 	PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0002e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 3253 : }

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverOut@CToggleButton@UI@@MAEXXZ ENDP		; UI::CToggleButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CToggleButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CToggleButton@UI@@MAEXXZ PROC		; UI::CToggleButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 3227 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3228 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 3229 : 	{
; 3230 : 		return;
; 3231 : 	}
; 3232 : 
; 3233 : 	if (!m_isPressed)

  0000c	83 be 34 01 00
	00 00		 cmp	 DWORD PTR [esi+308], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 3234 : 	{
; 3235 : 		SetCurrentVisual(&m_overVisual);

  00015	8d 86 c8 01 00
	00		 lea	 eax, DWORD PTR [esi+456]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 3236 : 	}
; 3237 : 
; 3238 : 	PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0002e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 3239 : }

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverIn@CToggleButton@UI@@MAEXXZ ENDP		; UI::CToggleButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ PROC	; UI::CToggleButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 3223 : 	return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 3224 : }

  00005	c3		 ret	 0
?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ ENDP	; UI::CToggleButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ PROC	; UI::CToggleButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 3194 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3195 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 57		 je	 SHORT $LN8@OnMouseLef

; 3196 : 	{
; 3197 : 		return TRUE;
; 3198 : 	}
; 3199 : 
; 3200 : 	if (m_isPressed)

  0000c	83 be 34 01 00
	00 00		 cmp	 DWORD PTR [esi+308], 0
  00013	8b ce		 mov	 ecx, esi
  00015	57		 push	 edi
  00016	74 2d		 je	 SHORT $LN3@OnMouseLef

; 3201 : 	{
; 3202 : 		SetUp();

  00018	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 3203 : 		if (IsIn())

  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00024	84 c0		 test	 al, al
  00026	ba c8 01 00 00	 mov	 edx, 456		; 000001c8H
  0002b	b9 40 01 00 00	 mov	 ecx, 320		; 00000140H
  00030	0f 45 ca	 cmovne	 ecx, edx

; 3204 : 		{
; 3205 : 			SetCurrentVisual(&m_overVisual);
; 3206 : 		}
; 3207 : 		else
; 3208 : 		{
; 3209 : 			SetCurrentVisual(&m_upVisual);
; 3210 : 		}
; 3211 : 		PyCallClassMemberFunc(m_poHandler, "OnToggleUp", BuildEmptyTuple());

  00033	8d 04 31	 lea	 eax, DWORD PTR [ecx+esi]
  00036	8b ce		 mov	 ecx, esi
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  0003e	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0L@HGABHAMN@OnToggleUp@

; 3212 : 	}

  00043	eb 0a		 jmp	 SHORT $LN4@OnMouseLef
$LN3@OnMouseLef:

; 3213 : 	else
; 3214 : 	{
; 3215 : 		Down();

  00045	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down

; 3216 : 		PyCallClassMemberFunc(m_poHandler, "OnToggleDown", BuildEmptyTuple());

  0004a	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0N@NBGLGPDJ@OnToggleDown@
$LN4@OnMouseLef:

; 3217 : 	}
; 3218 : 
; 3219 : 	return TRUE;

  0004f	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00054	50		 push	 eax
  00055	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00058	57		 push	 edi
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	5f		 pop	 edi
$LN8@OnMouseLef:

; 3220 : }

  00063	b8 01 00 00 00	 mov	 eax, 1
  00068	5e		 pop	 esi
  00069	c3		 ret	 0
?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ ENDP	; UI::CToggleButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CToggleButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CToggleButton@UI@@UAE@XZ PROC			; UI::CToggleButton::~CToggleButton, COMDAT
; _this$ = ecx

; 3190 : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CToggleButton@UI@@6B@

; 3191 : }

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CToggleButton@UI@@UAE@XZ ENDP			; UI::CToggleButton::~CToggleButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CToggleButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CToggleButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CToggleButton::CToggleButton, COMDAT
; _this$ = ecx

; 3187 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CToggleButton@UI@@6B@

; 3188 : }

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CToggleButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CToggleButton::CToggleButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCRadioButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRadioButton@UI@@UAEPAXI@Z PROC			; UI::CRadioButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRadioButton@UI@@UAE@XZ ; UI::CRadioButton::~CRadioButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 60 03 00 00	 push	 864			; 00000360H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCRadioButton@UI@@UAEPAXI@Z ENDP			; UI::CRadioButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CRadioButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CRadioButton@UI@@MAEXXZ PROC		; UI::CRadioButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 3168 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3169 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 3170 : 	{
; 3171 : 		return;
; 3172 : 	}
; 3173 : 
; 3174 : 	if (!m_isPressed)

  0000c	83 be 34 01 00
	00 00		 cmp	 DWORD PTR [esi+308], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 3175 : 	{
; 3176 : 		SetCurrentVisual(&m_upVisual);

  00015	8d 86 40 01 00
	00		 lea	 eax, DWORD PTR [esi+320]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 3177 : 	}
; 3178 : 
; 3179 : 	PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0002e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 3180 : }

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverOut@CRadioButton@UI@@MAEXXZ ENDP		; UI::CRadioButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CRadioButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CRadioButton@UI@@MAEXXZ PROC		; UI::CRadioButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 3154 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3155 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 3156 : 	{
; 3157 : 		return;
; 3158 : 	}
; 3159 : 
; 3160 : 	if (!m_isPressed)

  0000c	83 be 34 01 00
	00 00		 cmp	 DWORD PTR [esi+308], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 3161 : 	{
; 3162 : 		SetCurrentVisual(&m_overVisual);

  00015	8d 86 c8 01 00
	00		 lea	 eax, DWORD PTR [esi+456]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 3163 : 	}
; 3164 : 
; 3165 : 	PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0002e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 3166 : }

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverIn@CRadioButton@UI@@MAEXXZ ENDP		; UI::CRadioButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ PROC	; UI::CRadioButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 3151 : 	return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 3152 : }

  00005	c3		 ret	 0
?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ ENDP	; UI::CRadioButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ PROC	; UI::CRadioButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 3135 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3136 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 26		 je	 SHORT $LN7@OnMouseLef

; 3137 : 	{
; 3138 : 		return TRUE;
; 3139 : 	}
; 3140 : 
; 3141 : 	if (!m_isPressed)

  0000c	83 be 34 01 00
	00 00		 cmp	 DWORD PTR [esi+308], 0
  00013	75 1d		 jne	 SHORT $LN7@OnMouseLef

; 3142 : 	{
; 3143 : 		Down();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down

; 3144 : 		PyCallClassMemberFunc(m_poHandler, "CallEvent", BuildEmptyTuple());

  0001c	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_09MFFHPOPB@CallEvent@
  00027	ff 76 7c	 push	 DWORD PTR [esi+124]
  0002a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@OnMouseLef:

; 3145 : 	}
; 3146 : 
; 3147 : 	return TRUE;
; 3148 : }

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	5e		 pop	 esi
  00038	c3		 ret	 0
?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ ENDP	; UI::CRadioButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CRadioButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CRadioButton@UI@@UAE@XZ PROC				; UI::CRadioButton::~CRadioButton, COMDAT
; _this$ = ecx

; 3131 : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRadioButton@UI@@6B@

; 3132 : }

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CRadioButton@UI@@UAE@XZ ENDP				; UI::CRadioButton::~CRadioButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CRadioButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CRadioButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CRadioButton::CRadioButton, COMDAT
; _this$ = ecx

; 3128 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRadioButton@UI@@6B@

; 3129 : }

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CRadioButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CRadioButton::CRadioButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCButton@UI@@UAEPAXI@Z PROC				; UI::CButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 60 03 00 00	 push	 864			; 00000360H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCButton@UI@@UAEPAXI@Z ENDP				; UI::CButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CButton@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CButton@UI@@MAEHK@Z PROC			; UI::CButton::OnIsType, COMDAT
; _this$ = ecx

; 2748 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2749 : 	if (CButton::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CButton@UI@@SAKXZ	; UI::CButton::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 2750 : 	{
; 2751 : 		return TRUE;
; 2752 : 	}
; 2753 : 
; 2754 : 	return FALSE;
; 2755 : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CButton@UI@@MAEHK@Z ENDP			; UI::CButton::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z
_TEXT	SEGMENT
_pVisual$ = 8						; size = 4
?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z PROC ; UI::CButton::SetCurrentVisual, COMDAT
; _this$ = ecx

; 3056 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 3057 : 	m_pcurVisual = pVisual;
; 3058 : 	m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  00006	83 ec 08	 sub	 esp, 8
  00009	8b 4d 08	 mov	 ecx, DWORD PTR _pVisual$[ebp]
  0000c	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00011	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00014	89 8e 3c 01 00
	00		 mov	 DWORD PTR [esi+316], ecx
  0001a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00020	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00025	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00028	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002d	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 3059 : #ifdef INGAME_WIKI
; 3060 : 	if (m_pcurVisual == &m_upVisual)

  00032	8b 8e 3c 01 00
	00		 mov	 ecx, DWORD PTR [esi+316]
  00038	8d 86 40 01 00
	00		 lea	 eax, DWORD PTR [esi+320]
  0003e	3b c8		 cmp	 ecx, eax
  00040	75 1b		 jne	 SHORT $LN2@SetCurrent

; 3061 : 	{
; 3062 : 		PyCallClassMemberFunc(m_poHandler, "OnSetUpVisual", BuildEmptyTuple());

  00042	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00047	50		 push	 eax
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MBBNNMAO@OnSetUpVisual@

; 3075 : 	}
; 3076 : #endif
; 3077 : }

  0004d	ff 76 7c	 push	 DWORD PTR [esi+124]
  00050	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
$LN2@SetCurrent:

; 3063 : 	}
; 3064 : 	else if (m_pcurVisual == &m_overVisual)

  0005d	8d 86 c8 01 00
	00		 lea	 eax, DWORD PTR [esi+456]
  00063	3b c8		 cmp	 ecx, eax
  00065	75 1b		 jne	 SHORT $LN4@SetCurrent

; 3065 : 	{
; 3066 : 		PyCallClassMemberFunc(m_poHandler, "OnSetOverVisual", BuildEmptyTuple());

  00067	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DIDBMCJO@OnSetOverVisual@

; 3075 : 	}
; 3076 : #endif
; 3077 : }

  00072	ff 76 7c	 push	 DWORD PTR [esi+124]
  00075	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007d	5e		 pop	 esi
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
$LN4@SetCurrent:

; 3067 : 	}
; 3068 : 	else if (m_pcurVisual == &m_downVisual)

  00082	8d 86 50 02 00
	00		 lea	 eax, DWORD PTR [esi+592]
  00088	3b c8		 cmp	 ecx, eax
  0008a	75 1b		 jne	 SHORT $LN6@SetCurrent

; 3069 : 	{
; 3070 : 		PyCallClassMemberFunc(m_poHandler, "OnSetDownVisual", BuildEmptyTuple());

  0008c	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00091	50		 push	 eax
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GJIJKBGL@OnSetDownVisual@

; 3075 : 	}
; 3076 : #endif
; 3077 : }

  00097	ff 76 7c	 push	 DWORD PTR [esi+124]
  0009a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a2	5e		 pop	 esi
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
$LN6@SetCurrent:

; 3071 : 	}
; 3072 : 	else if (m_pcurVisual == &m_disableVisual)

  000a7	8d 86 d8 02 00
	00		 lea	 eax, DWORD PTR [esi+728]
  000ad	3b c8		 cmp	 ecx, eax
  000af	75 16		 jne	 SHORT $LN8@SetCurrent

; 3073 : 	{
; 3074 : 		PyCallClassMemberFunc(m_poHandler, "OnSetDisableVisual", BuildEmptyTuple());

  000b1	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  000b6	50		 push	 eax
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OKLAKJGM@OnSetDisableVisual@

; 3075 : 	}
; 3076 : #endif
; 3077 : }

  000bc	ff 76 7c	 push	 DWORD PTR [esi+124]
  000bf	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@SetCurrent:
  000c7	5e		 pop	 esi
  000c8	5d		 pop	 ebp
  000c9	c2 04 00	 ret	 4
?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ENDP ; UI::CButton::SetCurrentVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsEnable@CButton@UI@@IAEHXZ
_TEXT	SEGMENT
?IsEnable@CButton@UI@@IAEHXZ PROC			; UI::CButton::IsEnable, COMDAT
; _this$ = ecx

; 3081 : 	return m_bEnable;

  00000	8b 81 30 01 00
	00		 mov	 eax, DWORD PTR [ecx+304]

; 3082 : }

  00006	c3		 ret	 0
?IsEnable@CButton@UI@@IAEHXZ ENDP			; UI::CButton::IsEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 3040 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3041 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 30		 je	 SHORT $LN1@OnMouseOve

; 3042 : 	{
; 3043 : 		return;
; 3044 : 	}
; 3045 : 
; 3046 : 	SetUp();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 3047 : 	PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0001e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 3048 : 	PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00026	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  00031	ff 76 7c	 push	 DWORD PTR [esi+124]
  00034	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00039	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@OnMouseOve:

; 3049 : }

  0003c	5e		 pop	 esi
  0003d	c3		 ret	 0
?OnMouseOverOut@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 3029 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3030 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 30		 je	 SHORT $LN1@OnMouseOve

; 3031 : 	{
; 3032 : 		return;
; 3033 : 	}
; 3034 : 
; 3035 : 	Over();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?Over@CButton@UI@@QAEXXZ ; UI::CButton::Over

; 3036 : 	PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0001e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 3037 : 	PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00026	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  00031	ff 76 7c	 push	 DWORD PTR [esi+124]
  00034	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00039	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@OnMouseOve:

; 3038 : }

  0003c	5e		 pop	 esi
  0003d	c3		 ret	 0
?OnMouseOverIn@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonUp@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseRightButtonUp@CButton@UI@@MAEHXZ PROC		; UI::CButton::OnMouseRightButtonUp, COMDAT
; _this$ = ecx

; 3013 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3014 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1c		 je	 SHORT $LN5@OnMouseRig

; 3015 : 	{
; 3016 : 		return TRUE;
; 3017 : 	}
; 3018 : 	if (!IsPressed())

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00013	85 c0		 test	 eax, eax
  00015	74 11		 je	 SHORT $LN5@OnMouseRig

; 3019 : 	{
; 3020 : 		return TRUE;
; 3021 : 	}
; 3022 : 
; 3023 : 	m_isPressed = FALSE;
; 3024 : 	Up();

  00017	8b ce		 mov	 ecx, esi
  00019	c7 86 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+308], 0
  00023	e8 00 00 00 00	 call	 ?Up@CButton@UI@@QAEXXZ	; UI::CButton::Up
$LN5@OnMouseRig:

; 3025 : 
; 3026 : 	return TRUE;
; 3027 : }

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	5e		 pop	 esi
  0002e	c3		 ret	 0
?OnMouseRightButtonUp@CButton@UI@@MAEHXZ ENDP		; UI::CButton::OnMouseRightButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonDoubleClick@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseRightButtonDoubleClick@CButton@UI@@MAEHXZ PROC	; UI::CButton::OnMouseRightButtonDoubleClick, COMDAT
; _this$ = ecx

; 3002 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3003 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 07		 je	 SHORT $LN4@OnMouseRig

; 3004 : 	{
; 3005 : 		return TRUE;
; 3006 : 	}
; 3007 : 
; 3008 : 	OnMouseLeftButtonDown();

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b ce		 mov	 ecx, esi
  00010	ff 50 6c	 call	 DWORD PTR [eax+108]
$LN4@OnMouseRig:

; 3009 : 
; 3010 : 	return TRUE;
; 3011 : }

  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?OnMouseRightButtonDoubleClick@CButton@UI@@MAEHXZ ENDP	; UI::CButton::OnMouseRightButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ PROC		; UI::CButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 2976 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2977 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1c		 je	 SHORT $LN5@OnMouseLef

; 2978 : 	{
; 2979 : 		return TRUE;
; 2980 : 	}
; 2981 : 	if (!IsPressed())

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00013	85 c0		 test	 eax, eax
  00015	74 11		 je	 SHORT $LN5@OnMouseLef

; 2982 : 	{
; 2983 : 		return TRUE;
; 2984 : 	}
; 2985 : 
; 2986 : 	m_isPressed = FALSE;
; 2987 : 	Up();

  00017	8b ce		 mov	 ecx, esi
  00019	c7 86 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+308], 0
  00023	e8 00 00 00 00	 call	 ?Up@CButton@UI@@QAEXXZ	; UI::CButton::Up
$LN5@OnMouseLef:

; 2988 : 
; 2989 : 	return TRUE;
; 2990 : }

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	5e		 pop	 esi
  0002e	c3		 ret	 0
?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ENDP		; UI::CButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ PROC	; UI::CButton::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 2965 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2966 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 07		 je	 SHORT $LN4@OnMouseLef

; 2967 : 	{
; 2968 : 		return TRUE;
; 2969 : 	}
; 2970 : 
; 2971 : 	OnMouseLeftButtonDown();

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b ce		 mov	 ecx, esi
  00010	ff 50 6c	 call	 DWORD PTR [eax+108]
$LN4@OnMouseLef:

; 2972 : 
; 2973 : 	return TRUE;
; 2974 : }

  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ ENDP	; UI::CButton::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ PROC		; UI::CButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 2953 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2954 : 	if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 11		 je	 SHORT $LN4@OnMouseLef

; 2955 : 	{
; 2956 : 		return TRUE;
; 2957 : 	}
; 2958 : 
; 2959 : 	m_isPressed = TRUE;
; 2960 : 	Down();

  0000c	8b ce		 mov	 ecx, esi
  0000e	c7 86 34 01 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+308], 1
  00018	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down
$LN4@OnMouseLef:

; 2961 : 
; 2962 : 	return TRUE;
; 2963 : }

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	5e		 pop	 esi
  00023	c3		 ret	 0
?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ENDP		; UI::CButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CButton@UI@@MAEXXZ PROC		; UI::CButton::OnChangePosition, COMDAT
; _this$ = ecx

; 2946 : 	if (m_pcurVisual)

  00000	8b 81 3c 01 00
	00		 mov	 eax, DWORD PTR [ecx+316]
  00006	85 c0		 test	 eax, eax
  00008	74 25		 je	 SHORT $LN2@OnChangePo

; 2947 : 	{
; 2948 : 		m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  0000a	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000f	83 ec 08	 sub	 esp, 8
  00012	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  00020	8b c8		 mov	 ecx, eax
  00022	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN2@OnChangePo:

; 2949 : 	}
; 2950 : }

  0002f	c3		 ret	 0
?OnChangePosition@CButton@UI@@MAEXXZ ENDP		; UI::CButton::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnRender, COMDAT
; _this$ = ecx

; 2924 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2925 : 	if (!IsShow())

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00008	ff d0		 call	 eax
  0000a	84 c0		 test	 al, al
  0000c	74 55		 je	 SHORT $LN1@OnRender

; 2926 : 	{
; 2927 : 		return;
; 2928 : 	}
; 2929 : 
; 2930 : 	if (m_pcurVisual)

  0000e	83 be 3c 01 00
	00 00		 cmp	 DWORD PTR [esi+316], 0
  00015	74 36		 je	 SHORT $LN3@OnRender

; 2931 : 	{
; 2932 : 		if (m_isFlash)

  00017	83 be 38 01 00
	00 00		 cmp	 DWORD PTR [esi+312], 0
  0001e	74 22		 je	 SHORT $LN6@OnRender

; 2933 : 			if (!IsIn())

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00027	84 c0		 test	 al, al
  00029	75 17		 jne	 SHORT $LN6@OnRender

; 2934 : 				if (int(timeGetTime() / 500) % 2)

  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00031	8b c8		 mov	 ecx, eax
  00033	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00038	f7 e1		 mul	 ecx
  0003a	c1 ea 05	 shr	 edx, 5
  0003d	f6 c2 01	 test	 dl, 1
  00040	75 21		 jne	 SHORT $LN1@OnRender
$LN6@OnRender:

; 2935 : 				{
; 2936 : 					return;
; 2937 : 				}
; 2938 : 
; 2939 : 		m_pcurVisual->Render();

  00042	8b 8e 3c 01 00
	00		 mov	 ecx, DWORD PTR [esi+316]
  00048	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 2940 : 	}
; 2941 : 
; 2942 : 	PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());

  0004d	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00052	50		 push	 eax
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_08PAJMEILO@OnRender@
  00058	ff 76 7c	 push	 DWORD PTR [esi+124]
  0005b	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnRender:

; 2943 : }

  00063	5e		 pop	 esi
  00064	c3		 ret	 0
?OnRender@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnUpdate, COMDAT
; _this$ = ecx

; 2922 : }

  00000	c2 00 00	 ret	 0
?OnUpdate@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CButton@UI@@UAEXMMMM@Z
_TEXT	SEGMENT
_imageList$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CButton@UI@@UAEXMMMM@Z PROC		; UI::CButton::SetRenderingRect, COMDAT
; _this$ = ecx

; 3114 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 3115 : 	CGraphicExpandedImageInstance* imageList[] = { &m_upVisual, &m_overVisual, &m_downVisual, &m_disableVisual };

  00010	8d 81 40 01 00
	00		 lea	 eax, DWORD PTR [ecx+320]
  00016	89 45 ec	 mov	 DWORD PTR _imageList$[ebp], eax
  00019	8d 81 c8 01 00
	00		 lea	 eax, DWORD PTR [ecx+456]
  0001f	89 45 f0	 mov	 DWORD PTR _imageList$[ebp+4], eax
  00022	8d 81 50 02 00
	00		 lea	 eax, DWORD PTR [ecx+592]
  00028	89 45 f4	 mov	 DWORD PTR _imageList$[ebp+8], eax
  0002b	8d 81 d8 02 00
	00		 lea	 eax, DWORD PTR [ecx+728]
  00031	56		 push	 esi
  00032	89 45 f8	 mov	 DWORD PTR _imageList$[ebp+12], eax

; 3116 : 	for (CGraphicExpandedImageInstance* image : imageList)

  00035	8d 75 ec	 lea	 esi, DWORD PTR _imageList$[ebp]
  00038	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@SetRenderi:

; 3117 : 	{
; 3118 : 		image->SetRenderingRect(fLeft, fTop, fRight, fBottom);

  00040	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00045	83 ec 10	 sub	 esp, 16			; 00000010H
  00048	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0004a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00050	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  00055	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0005b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00060	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00066	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  0006b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00070	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
  00075	83 c6 04	 add	 esi, 4
  00078	8d 45 fc	 lea	 eax, DWORD PTR _imageList$[ebp+16]
  0007b	3b f0		 cmp	 esi, eax
  0007d	75 c1		 jne	 SHORT $LL4@SetRenderi

; 3119 : 	}
; 3120 : }

  0007f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00082	33 cd		 xor	 ecx, ebp
  00084	5e		 pop	 esi
  00085	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CButton@UI@@UAEXMMMM@Z ENDP		; UI::CButton::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdateRenderBox@CButton@UI@@UAEXXZ
_TEXT	SEGMENT
_imageList$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?OnUpdateRenderBox@CButton@UI@@UAEXXZ PROC		; UI::CButton::OnUpdateRenderBox, COMDAT
; _this$ = ecx

; 3100 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b f9		 mov	 edi, ecx

; 3101 : 	if (m_upVisual.IsEmpty())

  00014	8d b7 40 01 00
	00		 lea	 esi, DWORD PTR [edi+320]
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00021	84 c0		 test	 al, al
  00023	75 3d		 jne	 SHORT $LN3@OnUpdateRe

; 3102 : 	{
; 3103 : 		return;
; 3104 : 	}
; 3105 : 
; 3106 : 	CGraphicExpandedImageInstance* imageList[] = { &m_upVisual, &m_overVisual, &m_downVisual, &m_disableVisual };

  00025	8d 87 c8 01 00
	00		 lea	 eax, DWORD PTR [edi+456]
  0002b	89 75 ec	 mov	 DWORD PTR _imageList$[ebp], esi
  0002e	89 45 f0	 mov	 DWORD PTR _imageList$[ebp+4], eax

; 3107 : 	for (CGraphicExpandedImageInstance* image : imageList)

  00031	8d 75 ec	 lea	 esi, DWORD PTR _imageList$[ebp]
  00034	8d 87 50 02 00
	00		 lea	 eax, DWORD PTR [edi+592]
  0003a	89 45 f4	 mov	 DWORD PTR _imageList$[ebp+8], eax
  0003d	8d 87 d8 02 00
	00		 lea	 eax, DWORD PTR [edi+728]
  00043	89 45 f8	 mov	 DWORD PTR _imageList$[ebp+12], eax
  00046	81 c7 94 00 00
	00		 add	 edi, 148		; 00000094H
  0004c	0f 1f 40 00	 npad	 4
$LL4@OnUpdateRe:

; 3108 : 	{
; 3109 : 		image->SetRenderBox(m_renderBox);

  00050	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00052	57		 push	 edi
  00053	e8 00 00 00 00	 call	 ?SetRenderBox@CGraphicExpandedImageInstance@@QAEXAAUtagRECT@@@Z ; CGraphicExpandedImageInstance::SetRenderBox
  00058	83 c6 04	 add	 esi, 4
  0005b	8d 45 fc	 lea	 eax, DWORD PTR _imageList$[ebp+16]
  0005e	3b f0		 cmp	 esi, eax
  00060	75 ee		 jne	 SHORT $LL4@OnUpdateRe
$LN3@OnUpdateRe:

; 3110 : 	}
; 3111 : }

  00062	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00065	5f		 pop	 edi
  00066	33 cd		 xor	 ecx, ebp
  00068	5e		 pop	 esi
  00069	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
?OnUpdateRenderBox@CButton@UI@@UAEXXZ ENDP		; UI::CButton::OnUpdateRenderBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetRenderingRect@CButton@UI@@UAEXXZ
_TEXT	SEGMENT
?OnSetRenderingRect@CButton@UI@@UAEXXZ PROC		; UI::CButton::OnSetRenderingRect, COMDAT
; _this$ = ecx

; 3091 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3092 : 	m_upVisual.iSetRenderingRect(m_renderingRect.left, m_renderingRect.top, m_renderingRect.right, m_renderingRect.bottom);

  00003	ff 76 70	 push	 DWORD PTR [esi+112]
  00006	8d 8e 40 01 00
	00		 lea	 ecx, DWORD PTR [esi+320]
  0000c	ff 76 6c	 push	 DWORD PTR [esi+108]
  0000f	ff 76 68	 push	 DWORD PTR [esi+104]
  00012	ff 76 64	 push	 DWORD PTR [esi+100]
  00015	e8 00 00 00 00	 call	 ?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z ; CGraphicExpandedImageInstance::iSetRenderingRect

; 3093 : 	m_overVisual.iSetRenderingRect(m_renderingRect.left, m_renderingRect.top, m_renderingRect.right, m_renderingRect.bottom);

  0001a	ff 76 70	 push	 DWORD PTR [esi+112]
  0001d	8d 8e c8 01 00
	00		 lea	 ecx, DWORD PTR [esi+456]
  00023	ff 76 6c	 push	 DWORD PTR [esi+108]
  00026	ff 76 68	 push	 DWORD PTR [esi+104]
  00029	ff 76 64	 push	 DWORD PTR [esi+100]
  0002c	e8 00 00 00 00	 call	 ?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z ; CGraphicExpandedImageInstance::iSetRenderingRect

; 3094 : 	m_downVisual.iSetRenderingRect(m_renderingRect.left, m_renderingRect.top, m_renderingRect.right, m_renderingRect.bottom);

  00031	ff 76 70	 push	 DWORD PTR [esi+112]
  00034	8d 8e 50 02 00
	00		 lea	 ecx, DWORD PTR [esi+592]
  0003a	ff 76 6c	 push	 DWORD PTR [esi+108]
  0003d	ff 76 68	 push	 DWORD PTR [esi+104]
  00040	ff 76 64	 push	 DWORD PTR [esi+100]
  00043	e8 00 00 00 00	 call	 ?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z ; CGraphicExpandedImageInstance::iSetRenderingRect

; 3095 : 	m_disableVisual.iSetRenderingRect(m_renderingRect.left, m_renderingRect.top, m_renderingRect.right, m_renderingRect.bottom);

  00048	ff 76 70	 push	 DWORD PTR [esi+112]
  0004b	8d 8e d8 02 00
	00		 lea	 ecx, DWORD PTR [esi+728]
  00051	ff 76 6c	 push	 DWORD PTR [esi+108]
  00054	ff 76 68	 push	 DWORD PTR [esi+104]
  00057	ff 76 64	 push	 DWORD PTR [esi+100]
  0005a	e8 00 00 00 00	 call	 ?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z ; CGraphicExpandedImageInstance::iSetRenderingRect
  0005f	5e		 pop	 esi

; 3096 : }

  00060	c3		 ret	 0
?OnSetRenderingRect@CButton@UI@@UAEXXZ ENDP		; UI::CButton::OnSetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsPressed@CButton@UI@@QAEHXZ
_TEXT	SEGMENT
?IsPressed@CButton@UI@@QAEHXZ PROC			; UI::CButton::IsPressed, COMDAT
; _this$ = ecx

; 3086 : 	return m_isPressed;

  00000	8b 81 34 01 00
	00		 mov	 eax, DWORD PTR [ecx+308]

; 3087 : }

  00006	c3		 ret	 0
?IsPressed@CButton@UI@@QAEHXZ ENDP			; UI::CButton::IsPressed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsDisable@CButton@UI@@QAEHXZ
_TEXT	SEGMENT
?IsDisable@CButton@UI@@QAEHXZ PROC			; UI::CButton::IsDisable, COMDAT
; _this$ = ecx

; 2888 : 	return m_bEnable;

  00000	8b 81 30 01 00
	00		 mov	 eax, DWORD PTR [ecx+304]

; 2889 : }

  00006	c3		 ret	 0
?IsDisable@CButton@UI@@QAEHXZ ENDP			; UI::CButton::IsDisable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Down@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Down@CButton@UI@@QAEXXZ PROC				; UI::CButton::Down, COMDAT
; _this$ = ecx

; 2914 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2915 : 	m_isPressed = TRUE;
; 2916 : 	SetCurrentVisual(&m_downVisual);

  00003	8d 86 50 02 00
	00		 lea	 eax, DWORD PTR [esi+592]
  00009	c7 86 34 01 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+308], 1
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 2917 : 	PyCallClassMemberFunc(m_poHandler, "DownEvent", BuildEmptyTuple());

  00019	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0001e	50		 push	 eax
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_09FJAHACEO@DownEvent@
  00024	ff 76 7c	 push	 DWORD PTR [esi+124]
  00027	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	5e		 pop	 esi

; 2918 : }

  00030	c3		 ret	 0
?Down@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Down
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Over@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Over@CButton@UI@@QAEXXZ PROC				; UI::CButton::Over, COMDAT
; _this$ = ecx

; 2911 : 	SetCurrentVisual(&m_overVisual);

  00000	8d 81 c8 01 00
	00		 lea	 eax, DWORD PTR [ecx+456]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 2912 : }

  0000c	c3		 ret	 0
?Over@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Over
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Up@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Up@CButton@UI@@QAEXXZ PROC				; UI::CButton::Up, COMDAT
; _this$ = ecx

; 2897 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2898 : 	if (IsIn())

  00003	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00008	84 c0		 test	 al, al
  0000a	b9 c8 01 00 00	 mov	 ecx, 456		; 000001c8H
  0000f	ba 40 01 00 00	 mov	 edx, 320		; 00000140H
  00014	0f 45 d1	 cmovne	 edx, ecx

; 2899 : 	{
; 2900 : 		SetCurrentVisual(&m_overVisual);
; 2901 : 	}
; 2902 : 	else
; 2903 : 	{
; 2904 : 		SetCurrentVisual(&m_upVisual);
; 2905 : 	}
; 2906 : 
; 2907 : 	PyCallClassMemberFunc(m_poHandler, "CallEvent", BuildEmptyTuple());

  00017	8b ce		 mov	 ecx, esi
  00019	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00022	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_09MFFHPOPB@CallEvent@
  0002d	ff 76 7c	 push	 DWORD PTR [esi+124]
  00030	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	5e		 pop	 esi

; 2908 : }

  00039	c3		 ret	 0
?Up@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Up
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetUp@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?SetUp@CButton@UI@@QAEXXZ PROC				; UI::CButton::SetUp, COMDAT
; _this$ = ecx

; 2892 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2893 : 	SetCurrentVisual(&m_upVisual);

  00003	8d 86 40 01 00
	00		 lea	 eax, DWORD PTR [esi+320]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 2894 : 	m_isPressed = FALSE;

  0000f	c7 86 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+308], 0
  00019	5e		 pop	 esi

; 2895 : }

  0001a	c3		 ret	 0
?SetUp@CButton@UI@@QAEXXZ ENDP				; UI::CButton::SetUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Disable@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Disable@CButton@UI@@QAEXXZ PROC			; UI::CButton::Disable, COMDAT
; _this$ = ecx

; 2875 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2876 : 	if (IsDisable())

  00003	e8 00 00 00 00	 call	 ?IsDisable@CButton@UI@@QAEHXZ ; UI::CButton::IsDisable
  00008	85 c0		 test	 eax, eax
  0000a	74 25		 je	 SHORT $LN3@Disable

; 2877 : 	{
; 2878 : 		m_bEnable = FALSE;

  0000c	57		 push	 edi

; 2879 : 		if (!m_disableVisual.IsEmpty())

  0000d	8d be d8 02 00
	00		 lea	 edi, DWORD PTR [esi+728]
  00013	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
  0001d	8b cf		 mov	 ecx, edi
  0001f	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00024	84 c0		 test	 al, al
  00026	75 08		 jne	 SHORT $LN5@Disable

; 2880 : 		{
; 2881 : 			SetCurrentVisual(&m_disableVisual);

  00028	57		 push	 edi
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN5@Disable:
  00030	5f		 pop	 edi
$LN3@Disable:
  00031	5e		 pop	 esi

; 2882 : 		}
; 2883 : 	}
; 2884 : }

  00032	c3		 ret	 0
?Disable@CButton@UI@@QAEXXZ ENDP			; UI::CButton::Disable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Enable@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Enable@CButton@UI@@QAEXXZ PROC				; UI::CButton::Enable, COMDAT
; _this$ = ecx

; 2865 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2866 : 	if (!IsDisable())

  00003	e8 00 00 00 00	 call	 ?IsDisable@CButton@UI@@QAEHXZ ; UI::CButton::IsDisable
  00008	85 c0		 test	 eax, eax
  0000a	75 11		 jne	 SHORT $LN2@Enable

; 2867 : 	{
; 2868 : 		SetUp();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 2869 : 		m_bEnable = TRUE;

  00013	c7 86 30 01 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+304], 1
$LN2@Enable:

; 2870 : 	}
; 2871 : 
; 2872 : }

  0001d	5e		 pop	 esi
  0001e	c3		 ret	 0
?Enable@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Enable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Flash@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Flash@CButton@UI@@QAEXXZ PROC				; UI::CButton::Flash, COMDAT
; _this$ = ecx

; 2861 : 	m_isFlash = TRUE;

  00000	c7 81 38 01 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+312], 1

; 2862 : }

  0000a	c3		 ret	 0
?Flash@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Flash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetDownVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetDownVisualFileName@CButton@UI@@QAEPBDXZ PROC	; UI::CButton::GetDownVisualFileName, COMDAT
; _this$ = ecx

; 2856 : 	return m_downVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4259 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2301 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetDownVis
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2856 : 	return m_downVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetDownVis:

; 2857 : }

  00016	c3		 ret	 0
?GetDownVisualFileName@CButton@UI@@QAEPBDXZ ENDP	; UI::CButton::GetDownVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetOverVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetOverVisualFileName@CButton@UI@@QAEPBDXZ PROC	; UI::CButton::GetOverVisualFileName, COMDAT
; _this$ = ecx

; 2852 : 	return m_overVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 c8 01 00
	00		 add	 ecx, 456		; 000001c8H
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4259 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2301 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetOverVis
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2852 : 	return m_overVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetOverVis:

; 2853 : }

  00016	c3		 ret	 0
?GetOverVisualFileName@CButton@UI@@QAEPBDXZ ENDP	; UI::CButton::GetOverVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetUpVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetUpVisualFileName@CButton@UI@@QAEPBDXZ PROC		; UI::CButton::GetUpVisualFileName, COMDAT
; _this$ = ecx

; 2848 : 	return m_upVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4259 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2301 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetUpVisua
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2848 : 	return m_upVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetUpVisua:

; 2849 : }

  00016	c3		 ret	 0
?GetUpVisualFileName@CButton@UI@@QAEPBDXZ ENDP		; UI::CButton::GetUpVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDisableVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetDisableVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetDisableVisual, COMDAT
; _this$ = ecx

; 2828 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 2829 : 	CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b f0		 mov	 esi, eax

; 2830 : 	if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 48		 je	 SHORT $LN5@SetDisable

; 2831 : 	{
; 2832 : 		return FALSE;
; 2833 : 	}
; 2834 : 
; 2835 : 	m_disableVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	56		 push	 esi
  0002a	8d 8f d8 02 00
	00		 lea	 ecx, DWORD PTR [edi+728]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 2836 : 	if (m_downVisual.IsEmpty())

  00035	8d 8f 50 02 00
	00		 lea	 ecx, DWORD PTR [edi+592]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2d		 jne	 SHORT $LN5@SetDisable

; 2837 : 	{
; 2838 : 		return FALSE;
; 2839 : 	}
; 2840 : 
; 2841 : 	SetSize(m_disableVisual.GetWidth(), m_disableVisual.GetHeight());

  00044	8d 8f d8 02 00
	00		 lea	 ecx, DWORD PTR [edi+728]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	8d 8f d8 02 00
	00		 lea	 ecx, DWORD PTR [edi+728]
  00055	8b f0		 mov	 esi, eax
  00057	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005c	56		 push	 esi
  0005d	50		 push	 eax
  0005e	8b cf		 mov	 ecx, edi
  00060	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00065	5f		 pop	 edi

; 2842 : 
; 2843 : 	return TRUE;
; 2844 : }

  00066	5e		 pop	 esi
  00067	b8 01 00 00 00	 mov	 eax, 1
  0006c	5b		 pop	 ebx
  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
$LN5@SetDisable:
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	33 c0		 xor	 eax, eax
  00075	5b		 pop	 ebx
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
?SetDisableVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetDisableVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDownVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetDownVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetDownVisual, COMDAT
; _this$ = ecx

; 2810 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 2811 : 	CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b d9		 mov	 ebx, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b f0		 mov	 esi, eax

; 2812 : 	if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 48		 je	 SHORT $LN5@SetDownVis

; 2813 : 	{
; 2814 : 		return FALSE;
; 2815 : 	}
; 2816 : 
; 2817 : 	m_downVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	56		 push	 esi
  0002a	8d 8b 50 02 00
	00		 lea	 ecx, DWORD PTR [ebx+592]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 2818 : 	if (m_downVisual.IsEmpty())

  00035	8d 8b 50 02 00
	00		 lea	 ecx, DWORD PTR [ebx+592]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2d		 jne	 SHORT $LN5@SetDownVis

; 2819 : 	{
; 2820 : 		return FALSE;
; 2821 : 	}
; 2822 : 
; 2823 : 	SetSize(m_downVisual.GetWidth(), m_downVisual.GetHeight());

  00044	8d 8b 50 02 00
	00		 lea	 ecx, DWORD PTR [ebx+592]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	8d 8b 50 02 00
	00		 lea	 ecx, DWORD PTR [ebx+592]
  00055	8b f0		 mov	 esi, eax
  00057	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005c	56		 push	 esi
  0005d	50		 push	 eax
  0005e	8b cb		 mov	 ecx, ebx
  00060	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00065	5f		 pop	 edi

; 2824 : 
; 2825 : 	return TRUE;
; 2826 : }

  00066	5e		 pop	 esi
  00067	b8 01 00 00 00	 mov	 eax, 1
  0006c	5b		 pop	 ebx
  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
$LN5@SetDownVis:
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	33 c0		 xor	 eax, eax
  00075	5b		 pop	 ebx
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
?SetDownVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetDownVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOverVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetOverVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetOverVisual, COMDAT
; _this$ = ecx

; 2792 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 2793 : 	CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b d9		 mov	 ebx, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b f0		 mov	 esi, eax

; 2794 : 	if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 48		 je	 SHORT $LN5@SetOverVis

; 2795 : 	{
; 2796 : 		return FALSE;
; 2797 : 	}
; 2798 : 
; 2799 : 	m_overVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	56		 push	 esi
  0002a	8d 8b c8 01 00
	00		 lea	 ecx, DWORD PTR [ebx+456]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 2800 : 	if (m_overVisual.IsEmpty())

  00035	8d 8b c8 01 00
	00		 lea	 ecx, DWORD PTR [ebx+456]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2d		 jne	 SHORT $LN5@SetOverVis

; 2801 : 	{
; 2802 : 		return FALSE;
; 2803 : 	}
; 2804 : 
; 2805 : 	SetSize(m_overVisual.GetWidth(), m_overVisual.GetHeight());

  00044	8d 8b c8 01 00
	00		 lea	 ecx, DWORD PTR [ebx+456]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	8d 8b c8 01 00
	00		 lea	 ecx, DWORD PTR [ebx+456]
  00055	8b f0		 mov	 esi, eax
  00057	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005c	56		 push	 esi
  0005d	50		 push	 eax
  0005e	8b cb		 mov	 ecx, ebx
  00060	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00065	5f		 pop	 edi

; 2806 : 
; 2807 : 	return TRUE;
; 2808 : }

  00066	5e		 pop	 esi
  00067	b8 01 00 00 00	 mov	 eax, 1
  0006c	5b		 pop	 ebx
  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
$LN5@SetOverVis:
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	33 c0		 xor	 eax, eax
  00075	5b		 pop	 ebx
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
?SetOverVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetOverVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetUpVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetUpVisual@CButton@UI@@QAEHPBD@Z PROC			; UI::CButton::SetUpVisual, COMDAT
; _this$ = ecx

; 2771 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 2772 : 	CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b d9		 mov	 ebx, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b f0		 mov	 esi, eax

; 2773 : 	if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetUpVisua

; 2774 : 	{
; 2775 : 		return FALSE;
; 2776 : 	}
; 2777 : 
; 2778 : 	m_upVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	8d bb 40 01 00
	00		 lea	 edi, DWORD PTR [ebx+320]
  0002f	56		 push	 esi
  00030	8b cf		 mov	 ecx, edi
  00032	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 2779 : 	if (m_upVisual.IsEmpty())

  00037	8b cf		 mov	 ecx, edi
  00039	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0003e	84 c0		 test	 al, al
  00040	75 2d		 jne	 SHORT $LN5@SetUpVisua

; 2780 : 	{
; 2781 : 		return FALSE;
; 2782 : 	}
; 2783 : 
; 2784 : 	SetSize(m_upVisual.GetWidth(), m_upVisual.GetHeight());

  00042	8b cf		 mov	 ecx, edi
  00044	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00049	8b cf		 mov	 ecx, edi
  0004b	8b f0		 mov	 esi, eax
  0004d	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00052	56		 push	 esi
  00053	50		 push	 eax
  00054	8b cb		 mov	 ecx, ebx
  00056	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 2785 : 	//
; 2786 : 	SetCurrentVisual(&m_upVisual);

  0005b	57		 push	 edi
  0005c	8b cb		 mov	 ecx, ebx
  0005e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicExpandedImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00063	5f		 pop	 edi

; 2787 : 	//
; 2788 : 
; 2789 : 	return TRUE;
; 2790 : }

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetUpVisua:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetUpVisual@CButton@UI@@QAEHPBD@Z ENDP			; UI::CButton::SetUpVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CButton@UI@@UAE@XZ PROC				; UI::CButton::~CButton, COMDAT
; _this$ = ecx

; 2767 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2768 : }

  00003	8d 8e d8 02 00
	00		 lea	 ecx, DWORD PTR [esi+728]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CButton@UI@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CGraphicExpandedImageInstance@@UAE@XZ ; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
  00014	8d 8e 50 02 00
	00		 lea	 ecx, DWORD PTR [esi+592]
  0001a	e8 00 00 00 00	 call	 ??1CGraphicExpandedImageInstance@@UAE@XZ ; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
  0001f	8d 8e c8 01 00
	00		 lea	 ecx, DWORD PTR [esi+456]
  00025	e8 00 00 00 00	 call	 ??1CGraphicExpandedImageInstance@@UAE@XZ ; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
  0002a	8d 8e 40 01 00
	00		 lea	 ecx, DWORD PTR [esi+320]
  00030	e8 00 00 00 00	 call	 ??1CGraphicExpandedImageInstance@@UAE@XZ ; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
  00035	8b ce		 mov	 ecx, esi
  00037	5e		 pop	 esi
  00038	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CButton@UI@@UAE@XZ ENDP				; UI::CButton::~CButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CButton@UI@@QAE@PAU_object@@@Z PROC			; UI::CButton::CButton, COMDAT
; _this$ = ecx

; 2763 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CButton@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 2758 : 	:	CWindow(ppyObject),

  00029	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 2763 : {

  00031	8d 8e 40 01 00
	00		 lea	 ecx, DWORD PTR [esi+320]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CButton@UI@@6B@
  00044	c7 86 30 01 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+304], 1
  0004e	c7 86 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+308], 0
  00058	c7 86 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+312], 0
  00062	c7 86 3c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+316], 0
  0006c	e8 00 00 00 00	 call	 ??0CGraphicExpandedImageInstance@@QAE@XZ ; CGraphicExpandedImageInstance::CGraphicExpandedImageInstance
  00071	8d 8e c8 01 00
	00		 lea	 ecx, DWORD PTR [esi+456]
  00077	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007b	e8 00 00 00 00	 call	 ??0CGraphicExpandedImageInstance@@QAE@XZ ; CGraphicExpandedImageInstance::CGraphicExpandedImageInstance
  00080	8d 8e 50 02 00
	00		 lea	 ecx, DWORD PTR [esi+592]
  00086	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0008a	e8 00 00 00 00	 call	 ??0CGraphicExpandedImageInstance@@QAE@XZ ; CGraphicExpandedImageInstance::CGraphicExpandedImageInstance
  0008f	8d 8e d8 02 00
	00		 lea	 ecx, DWORD PTR [esi+728]
  00095	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00099	e8 00 00 00 00	 call	 ??0CGraphicExpandedImageInstance@@QAE@XZ ; CGraphicExpandedImageInstance::CGraphicExpandedImageInstance
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h

; 137  : 	void			AddFlag(DWORD flag)		{ SET_BIT(m_dwFlag, flag);		}

  0009e	81 4e 78 80 00
	00 00		 or	 DWORD PTR [esi+120], 128 ; 00000080H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2765 : }

  000a5	8b c6		 mov	 eax, esi
  000a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b1	59		 pop	 ecx
  000b2	5e		 pop	 esi
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00011	e9 00 00 00 00	 jmp	 ??1CGraphicExpandedImageInstance@@UAE@XZ ; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 c8 01 00
	00		 add	 ecx, 456		; 000001c8H
  0001f	e9 00 00 00 00	 jmp	 ??1CGraphicExpandedImageInstance@@UAE@XZ ; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 50 02 00
	00		 add	 ecx, 592		; 00000250H
  0002d	e9 00 00 00 00	 jmp	 ??1CGraphicExpandedImageInstance@@UAE@XZ ; CGraphicExpandedImageInstance::~CGraphicExpandedImageInstance
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$??0CButton@UI@@QAE@PAU_object@@@Z:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CButton@UI@@QAE@PAU_object@@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CButton@UI@@QAE@PAU_object@@@Z ENDP			; UI::CButton::CButton
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CButton@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CButton@UI@@SAKXZ PROC				; UI::CButton::Type, COMDAT

; 2742 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CButton@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2743 : 	static DWORD s_dwType = GetCRC32("CButton", strlen("CButton"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CButton@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 2744 : 	return (s_dwType);
; 2745 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CButton@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 2743 : 	static DWORD s_dwType = GetCRC32("CButton", strlen("CButton"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CButton@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CButton@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 07		 push	 7
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_07OFEOKGEK@CButton@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CButton@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CButton@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CButton@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CButton@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CButton@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CButton@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CButton@UI@@SAKXZ ENDP				; UI::CButton::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCAniImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCAniImageBox@UI@@UAEPAXI@Z PROC			; UI::CAniImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 40 01 00 00	 push	 320			; 00000140H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCAniImageBox@UI@@UAEPAXI@Z ENDP			; UI::CAniImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CAniImageBox@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CAniImageBox@UI@@MAEHK@Z PROC			; UI::CAniImageBox::OnIsType, COMDAT
; _this$ = ecx

; 2573 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2574 : 	if (CAniImageBox::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CAniImageBox@UI@@SAKXZ ; UI::CAniImageBox::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 2575 : 	{
; 2576 : 		return TRUE;
; 2577 : 	}
; 2578 : 
; 2579 : 	return FALSE;
; 2580 : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CAniImageBox@UI@@MAEHK@Z ENDP			; UI::CAniImageBox::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKeyFrame@CAniImageBox@UI@@MAEXE@Z
_TEXT	SEGMENT
_bFrame$ = 8						; size = 1
?OnKeyFrame@CAniImageBox@UI@@MAEXE@Z PROC		; UI::CAniImageBox::OnKeyFrame, COMDAT
; _this$ = ecx

; 2733 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2734 : 	PyCallClassMemberFunc(m_poHandler, "OnKeyFrame", Py_BuildValue("(i)", bFrame));

  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _bFrame$[ebp]
  00007	56		 push	 esi
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	8b f1		 mov	 esi, ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00016	50		 push	 eax
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CCNGDMCN@OnKeyFrame@
  0001c	ff 76 7c	 push	 DWORD PTR [esi+124]
  0001f	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00024	83 c4 14	 add	 esp, 20			; 00000014H
  00027	5e		 pop	 esi

; 2735 : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?OnKeyFrame@CAniImageBox@UI@@MAEXE@Z ENDP		; UI::CAniImageBox::OnKeyFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnEndFrame@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnEndFrame@CAniImageBox@UI@@MAEXXZ PROC		; UI::CAniImageBox::OnEndFrame, COMDAT
; _this$ = ecx

; 2728 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2729 : 	PyCallClassMemberFunc(m_poHandler, "OnEndFrame", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LBHHAGOH@OnEndFrame@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 2730 : }

  0001a	c3		 ret	 0
?OnEndFrame@CAniImageBox@UI@@MAEXXZ ENDP		; UI::CAniImageBox::OnEndFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
_changePosition$$sroa$161$1$ = -8			; size = 4
_changePosition$$sroa$162$1$ = -4			; size = 4
?OnChangePosition@CAniImageBox@UI@@MAEXXZ PROC		; UI::CAniImageBox::OnChangePosition, COMDAT
; _this$ = ecx

; 2720 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0000b	66 0f 6e 49 38	 movd	 xmm1, DWORD PTR [ecx+56]

; 2721 : 	FChangePosition changePosition;
; 2722 : 	changePosition.fx = m_rect.left;

  00010	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00013	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00014	8b b1 34 01 00
	00		 mov	 esi, DWORD PTR [ecx+308]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2720 : {

  0001a	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001b	8b b9 38 01 00
	00		 mov	 edi, DWORD PTR [ecx+312]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2723 : 	changePosition.fy = m_rect.top;

  00021	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00024	f3 0f 11 45 fc	 movss	 DWORD PTR _changePosition$$sroa$162$1$[ebp], xmm0
  00029	f3 0f 11 4d f8	 movss	 DWORD PTR _changePosition$$sroa$161$1$[ebp], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0002e	3b f7		 cmp	 esi, edi
  00030	74 26		 je	 SHORT $LN17@OnChangePo
$LL18@OnChangePo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2715 : 		pInstance->SetPosition(fx, fy);

  00032	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00034	83 ec 08	 sub	 esp, 8
  00037	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  0003d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00042	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00047	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _changePosition$$sroa$162$1$[ebp]
  0004c	83 c6 04	 add	 esi, 4
  0004f	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _changePosition$$sroa$161$1$[ebp]
  00054	3b f7		 cmp	 esi, edi
  00056	75 da		 jne	 SHORT $LL18@OnChangePo
$LN17@OnChangePo:
  00058	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2725 : }

  00059	5e		 pop	 esi
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?OnChangePosition@CAniImageBox@UI@@MAEXXZ ENDP		; UI::CAniImageBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CAniImageBox@UI@@MAEXXZ PROC			; UI::CAniImageBox::OnRender, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 38 01 00
	00		 mov	 eax, DWORD PTR [ecx+312]
  00006	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0000c	2b c2		 sub	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2702 : {

  0000e	56		 push	 esi

; 2703 : 	if (m_bycurIndex < m_ImageVector.size())

  0000f	0f b6 b1 32 01
	00 00		 movzx	 esi, BYTE PTR [ecx+306]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00016	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2703 : 	if (m_bycurIndex < m_ImageVector.size())

  00019	3b f0		 cmp	 esi, eax
  0001b	73 09		 jae	 SHORT $LN2@OnRender

; 2704 : 	{
; 2705 : 		CGraphicExpandedImageInstance * pImage = m_ImageVector[m_bycurIndex];
; 2706 : 		pImage->Render();

  0001d	8b 0c b2	 mov	 ecx, DWORD PTR [edx+esi*4]
  00020	5e		 pop	 esi
  00021	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN2@OnRender:
  00026	5e		 pop	 esi

; 2707 : 	}
; 2708 : }

  00027	c3		 ret	 0
?OnRender@CAniImageBox@UI@@MAEXXZ ENDP			; UI::CAniImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CAniImageBox@UI@@MAEXXZ PROC			; UI::CAniImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 2682 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2683 : 	++m_bycurDelay;

  00003	8a 86 30 01 00
	00		 mov	 al, BYTE PTR [esi+304]
  00009	fe c0		 inc	 al
  0000b	88 86 30 01 00
	00		 mov	 BYTE PTR [esi+304], al

; 2684 : 	if (m_bycurDelay < m_byDelay)

  00011	3a 86 31 01 00
	00		 cmp	 al, BYTE PTR [esi+305]
  00017	72 49		 jb	 SHORT $LN3@OnUpdate

; 2685 : 	{
; 2686 : 		return;
; 2687 : 	}
; 2688 : 
; 2689 : 	m_bycurDelay = 0;
; 2690 : 
; 2691 : 	OnKeyFrame(m_bycurIndex);

  00019	8b 16		 mov	 edx, DWORD PTR [esi]
  0001b	0f b6 86 32 01
	00 00		 movzx	 eax, BYTE PTR [esi+306]
  00022	50		 push	 eax
  00023	c6 86 30 01 00
	00 00		 mov	 BYTE PTR [esi+304], 0
  0002a	ff 92 c8 00 00
	00		 call	 DWORD PTR [edx+200]

; 2692 : 
; 2693 : 	++m_bycurIndex;

  00030	fe 86 32 01 00
	00		 inc	 BYTE PTR [esi+306]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00036	8b 8e 38 01 00
	00		 mov	 ecx, DWORD PTR [esi+312]
  0003c	2b 8e 34 01 00
	00		 sub	 ecx, DWORD PTR [esi+308]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2694 : 	if (m_bycurIndex >= m_ImageVector.size())

  00042	0f b6 86 32 01
	00 00		 movzx	 eax, BYTE PTR [esi+306]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00049	c1 f9 02	 sar	 ecx, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2694 : 	if (m_bycurIndex >= m_ImageVector.size())

  0004c	3b c1		 cmp	 eax, ecx
  0004e	72 12		 jb	 SHORT $LN3@OnUpdate

; 2695 : 	{
; 2696 : 		m_bycurIndex = 0;
; 2697 : 
; 2698 : 		OnEndFrame();

  00050	8b 06		 mov	 eax, DWORD PTR [esi]
  00052	8b ce		 mov	 ecx, esi
  00054	c6 86 32 01 00
	00 00		 mov	 BYTE PTR [esi+306], 0
  0005b	5e		 pop	 esi
  0005c	ff a0 c4 00 00
	00		 jmp	 DWORD PTR [eax+196]
$LN3@OnUpdate:
  00062	5e		 pop	 esi

; 2699 : 	}
; 2700 : }

  00063	c3		 ret	 0
?OnUpdate@CAniImageBox@UI@@MAEXXZ ENDP			; UI::CAniImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSlotActivatedDiffuseColor@CAniImageBox@UI@@QAEXABV?$vector@MV?$allocator@M@std@@@std@@@Z
_TEXT	SEGMENT
_dxColour$ = 8						; size = 4
?SetSlotActivatedDiffuseColor@CAniImageBox@UI@@QAEXABV?$vector@MV?$allocator@M@std@@@std@@@Z PROC ; UI::CAniImageBox::SetSlotActivatedDiffuseColor, COMDAT
; _this$ = ecx

; 3369 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 3370 : 	for (auto& img : m_ImageVector)

  00004	8b b1 34 01 00
	00		 mov	 esi, DWORD PTR [ecx+308]
  0000a	57		 push	 edi
  0000b	8b b9 38 01 00
	00		 mov	 edi, DWORD PTR [ecx+312]
  00011	3b f7		 cmp	 esi, edi
  00013	74 26		 je	 SHORT $LN3@SetSlotAct
  00015	53		 push	 ebx
  00016	8b 5d 08	 mov	 ebx, DWORD PTR _dxColour$[ebp]
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@SetSlotAct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1962 :         return _My_data._Myfirst[_Pos];

  00020	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 3372 : 		img->SetDiffuseColor(dxColour[0], dxColour[1], dxColour[2], dxColour[3]);

  00022	83 ec 10	 sub	 esp, 16			; 00000010H
  00025	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00027	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0002a	0f 11 04 24	 movups	 XMMWORD PTR [esp], xmm0
  0002e	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
  00033	83 c6 04	 add	 esi, 4
  00036	3b f7		 cmp	 esi, edi
  00038	75 e6		 jne	 SHORT $LL4@SetSlotAct
  0003a	5b		 pop	 ebx
$LN3@SetSlotAct:
  0003b	5f		 pop	 edi

; 3373 : 	}
; 3374 : }

  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?SetSlotActivatedDiffuseColor@CAniImageBox@UI@@QAEXABV?$vector@MV?$allocator@M@std@@@std@@@Z ENDP ; UI::CAniImageBox::SetSlotActivatedDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSlotDiffuseColor@CAniImageBox@UI@@QAEXPBDE@Z
_TEXT	SEGMENT
_pImageInstance$ = 8					; size = 4
_c_szFileName$ = 8					; size = 4
_diffuse_type$ = 12					; size = 1
?SetSlotDiffuseColor@CAniImageBox@UI@@QAEXPBDE@Z PROC	; UI::CAniImageBox::SetSlotDiffuseColor, COMDAT
; _this$ = ecx

; 3337 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi

; 3338 : 	static const float DIFFUSE_COLOR[][4] =
; 3339 : 	{
; 3340 : 		{ 238.00f / 255.0f, 11.00f / 255.0f, 11.00f / 255.0f, 1.0f },
; 3341 : 		{ 255.00f / 255.0f, 255.00f / 255.0f, 0.00f / 255.0f, 1.0f },
; 3342 : 	};
; 3343 : 
; 3344 : 	CResource* pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00005	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00010	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00015	8b d8		 mov	 ebx, eax

; 3345 : 	if (!pResource->IsType(CGraphicImage::Type()))

  00017	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001c	50		 push	 eax
  0001d	8b cb		 mov	 ecx, ebx
  0001f	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00024	84 c0		 test	 al, al
  00026	0f 84 92 00 00
	00		 je	 $LN1@SetSlotDif

; 3346 : 	{
; 3347 : 		return;
; 3348 : 	}
; 3349 : 
; 3350 : 	CGraphicExpandedImageInstance* pImageInstance = CGraphicExpandedImageInstance::New();

  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ; CGraphicExpandedImageInstance::New
  00032	8b f0		 mov	 esi, eax

; 3351 : 
; 3352 : 	pImageInstance->SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00034	53		 push	 ebx
  00035	8b ce		 mov	 ecx, esi
  00037	89 75 08	 mov	 DWORD PTR _pImageInstance$[ebp], esi
  0003a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 3353 : 
; 3354 : 	pImageInstance->SetDiffuseColor(DIFFUSE_COLOR[diffuse_type][0], DIFFUSE_COLOR[diffuse_type][1], DIFFUSE_COLOR[diffuse_type][2], DIFFUSE_COLOR[diffuse_type][3]);

  0003f	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _diffuse_type$[ebp]
  00043	83 ec 10	 sub	 esp, 16			; 00000010H
  00046	c1 e1 04	 shl	 ecx, 4
  00049	0f 10 81 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?DIFFUSE_COLOR@?1??SetSlotDiffuseColor@CAniImageBox@UI@@QAEXPBDE@Z@4QAY03$$CBMA[ecx]
  00050	8b ce		 mov	 ecx, esi
  00052	0f 11 04 24	 movups	 XMMWORD PTR [esp], xmm0
  00056	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor

; 3355 : 
; 3356 : 	if (pImageInstance->IsEmpty())

  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00062	84 c0		 test	 al, al
  00064	74 10		 je	 SHORT $LN3@SetSlotDif

; 3357 : 	{
; 3358 : 		CGraphicExpandedImageInstance::Delete(pImageInstance);

  00066	56		 push	 esi
  00067	e8 00 00 00 00	 call	 ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
  0006c	83 c4 04	 add	 esp, 4
  0006f	5e		 pop	 esi
  00070	5f		 pop	 edi

; 3365 : }

  00071	5b		 pop	 ebx
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
$LN3@SetSlotDif:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00076	8b 87 38 01 00
	00		 mov	 eax, DWORD PTR [edi+312]
  0007c	3b 87 3c 01 00
	00		 cmp	 eax, DWORD PTR [edi+316]
  00082	74 0b		 je	 SHORT $LN8@SetSlotDif

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00084	89 30		 mov	 DWORD PTR [eax], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00086	83 87 38 01 00
	00 04		 add	 DWORD PTR [edi+312], 4

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0008d	eb 10		 jmp	 SHORT $LN7@SetSlotDif
$LN8@SetSlotDif:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0008f	8d 4d 08	 lea	 ecx, DWORD PTR _pImageInstance$[ebp]
  00092	51		 push	 ecx
  00093	50		 push	 eax
  00094	8d 8f 34 01 00
	00		 lea	 ecx, DWORD PTR [edi+308]
  0009a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
$LN7@SetSlotDif:

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0009f	8b b7 38 01 00
	00		 mov	 esi, DWORD PTR [edi+312]
  000a5	2b b7 34 01 00
	00		 sub	 esi, DWORD PTR [edi+308]
  000ab	c1 fe 02	 sar	 esi, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 3364 : 	m_bycurIndex = static_cast<BYTE>(rand() % m_ImageVector.size());

  000ae	e8 00 00 00 00	 call	 _rand
  000b3	33 d2		 xor	 edx, edx
  000b5	f7 f6		 div	 esi
  000b7	5e		 pop	 esi
  000b8	88 97 32 01 00
	00		 mov	 BYTE PTR [edi+306], dl
$LN1@SetSlotDif:

; 3365 : }

  000be	5f		 pop	 edi
  000bf	5b		 pop	 ebx
  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
?SetSlotDiffuseColor@CAniImageBox@UI@@QAEXPBDE@Z ENDP	; UI::CAniImageBox::SetSlotDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRealHeight@CAniImageBox@UI@@QAEJXZ
_TEXT	SEGMENT
?GetRealHeight@CAniImageBox@UI@@QAEJXZ PROC		; UI::CAniImageBox::GetRealHeight, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 38 01 00
	00		 mov	 eax, DWORD PTR [ecx+312]
  00006	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0000c	2b c2		 sub	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2674 : 	if (m_ImageVector.size() == 0)

  0000e	a9 fc ff ff ff	 test	 eax, -4			; fffffffcH
  00013	75 04		 jne	 SHORT $LN2@GetRealHei

; 2675 : 	{
; 2676 : 		return GetHeight();

  00015	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]

; 2680 : }

  00018	c3		 ret	 0
$LN2@GetRealHei:

; 2677 : 	}
; 2678 : 
; 2679 : 	return m_ImageVector[0]->GetHeight();

  00019	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0001b	e9 00 00 00 00	 jmp	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
?GetRealHeight@CAniImageBox@UI@@QAEJXZ ENDP		; UI::CAniImageBox::GetRealHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRealWidth@CAniImageBox@UI@@QAEJXZ
_TEXT	SEGMENT
?GetRealWidth@CAniImageBox@UI@@QAEJXZ PROC		; UI::CAniImageBox::GetRealWidth, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 38 01 00
	00		 mov	 eax, DWORD PTR [ecx+312]
  00006	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0000c	2b c2		 sub	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2664 : 	if (m_ImageVector.size() == 0)

  0000e	a9 fc ff ff ff	 test	 eax, -4			; fffffffcH
  00013	75 04		 jne	 SHORT $LN2@GetRealWid

; 2665 : 	{
; 2666 : 		return GetWidth();

  00015	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]

; 2670 : }

  00018	c3		 ret	 0
$LN2@GetRealWid:

; 2667 : 	}
; 2668 : 
; 2669 : 	return m_ImageVector[0]->GetWidth();

  00019	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0001b	e9 00 00 00 00	 jmp	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
?GetRealWidth@CAniImageBox@UI@@QAEJXZ ENDP		; UI::CAniImageBox::GetRealWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ResetFrame@CAniImageBox@UI@@QAEXXZ
_TEXT	SEGMENT
?ResetFrame@CAniImageBox@UI@@QAEXXZ PROC		; UI::CAniImageBox::ResetFrame, COMDAT
; _this$ = ecx

; 2659 : 	m_bycurIndex = 0;

  00000	c6 81 32 01 00
	00 00		 mov	 BYTE PTR [ecx+306], 0

; 2660 : }

  00007	c3		 ret	 0
?ResetFrame@CAniImageBox@UI@@QAEXXZ ENDP		; UI::CAniImageBox::ResetFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMode$ = 8						; size = 4
?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z PROC		; UI::CAniImageBox::SetRenderingMode, COMDAT
; _this$ = ecx

; 2651 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00004	8b b1 34 01 00
	00		 mov	 esi, DWORD PTR [ecx+308]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2651 : {

  0000a	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b b9 38 01 00
	00		 mov	 edi, DWORD PTR [ecx+312]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f7		 cmp	 esi, edi
  00013	74 1b		 je	 SHORT $LN17@SetRenderi
  00015	53		 push	 ebx
  00016	8b 5d 08	 mov	 ebx, DWORD PTR _iMode$[ebp]
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL18@SetRenderi:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2647 : 		pInstance->SetRenderingMode(iMode);

  00020	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00022	53		 push	 ebx
  00023	e8 00 00 00 00	 call	 ?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ; CGraphicExpandedImageInstance::SetRenderingMode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00028	83 c6 04	 add	 esi, 4
  0002b	3b f7		 cmp	 esi, edi
  0002d	75 f1		 jne	 SHORT $LL18@SetRenderi
  0002f	5b		 pop	 ebx
$LN17@SetRenderi:
  00030	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2655 : }

  00031	5e		 pop	 esi
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ENDP		; UI::CAniImageBox::SetRenderingMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CAniImageBox@UI@@UAEXMMMM@Z
_TEXT	SEGMENT
__$ArrayPad$ = -4					; size = 4
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CAniImageBox@UI@@UAEXMMMM@Z PROC	; UI::CAniImageBox::SetRenderingRect, COMDAT
; _this$ = ecx

; 2633 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00009	33 c5		 xor	 eax, ebp
  0000b	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0000e	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000f	8b b1 34 01 00
	00		 mov	 esi, DWORD PTR [ecx+308]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2633 : {

  00015	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00016	8b b9 38 01 00
	00		 mov	 edi, DWORD PTR [ecx+312]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	3b f7		 cmp	 esi, edi
  0001e	74 3c		 je	 SHORT $LN17@SetRenderi
$LL18@SetRenderi:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2629 : 		pInstance->SetRenderingRect(fLeft, fTop, fRight, fBottom);

  00020	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00025	83 ec 10	 sub	 esp, 16			; 00000010H
  00028	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  00035	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00040	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00046	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  0004b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00050	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00055	83 c6 04	 add	 esi, 4
  00058	3b f7		 cmp	 esi, edi
  0005a	75 c4		 jne	 SHORT $LL18@SetRenderi
$LN17@SetRenderi:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2640 : }

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005f	5f		 pop	 edi
  00060	33 cd		 xor	 ecx, ebp
  00062	5e		 pop	 esi
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CAniImageBox@UI@@UAEXMMMM@Z ENDP	; UI::CAniImageBox::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_pImageInstance$ = 8					; size = 4
_c_szFileName$ = 8					; size = 4
?AppendImage@CAniImageBox@UI@@QAEXPBD@Z PROC		; UI::CAniImageBox::AppendImage, COMDAT
; _this$ = ecx

; 2601 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 2602 : 	CResource* pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00005	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00010	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00015	8b f0		 mov	 esi, eax

; 2603 : 	if (!pResource->IsType(CGraphicImage::Type()))

  00017	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001c	50		 push	 eax
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00024	84 c0		 test	 al, al
  00026	0f 84 9b 00 00
	00		 je	 $LN1@AppendImag

; 2604 : 	{
; 2605 : 		return;
; 2606 : 	}
; 2607 : 
; 2608 : 	CGraphicExpandedImageInstance* pImageInstance = CGraphicExpandedImageInstance::New();

  0002c	57		 push	 edi
  0002d	e8 00 00 00 00	 call	 ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ; CGraphicExpandedImageInstance::New
  00032	8b f8		 mov	 edi, eax

; 2609 : 
; 2610 : 	pImageInstance->SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00034	56		 push	 esi
  00035	8b cf		 mov	 ecx, edi
  00037	89 7d 08	 mov	 DWORD PTR _pImageInstance$[ebp], edi
  0003a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 2611 : 	if (pImageInstance->IsEmpty())

  0003f	8b cf		 mov	 ecx, edi
  00041	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00046	84 c0		 test	 al, al
  00048	74 10		 je	 SHORT $LN3@AppendImag

; 2612 : 	{
; 2613 : 		CGraphicExpandedImageInstance::Delete(pImageInstance);

  0004a	57		 push	 edi
  0004b	e8 00 00 00 00	 call	 ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
  00050	83 c4 04	 add	 esp, 4
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi

; 2622 : }

  00055	5b		 pop	 ebx
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
$LN3@AppendImag:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0005a	8b 83 38 01 00
	00		 mov	 eax, DWORD PTR [ebx+312]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2617 : 	m_ImageVector.push_back(pImageInstance);

  00060	8d 8b 34 01 00
	00		 lea	 ecx, DWORD PTR [ebx+308]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00066	3b 83 3c 01 00
	00		 cmp	 eax, DWORD PTR [ebx+316]
  0006c	74 0b		 je	 SHORT $LN8@AppendImag

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0006e	89 38		 mov	 DWORD PTR [eax], edi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00070	83 83 38 01 00
	00 04		 add	 DWORD PTR [ebx+312], 4

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00077	eb 13		 jmp	 SHORT $LN7@AppendImag
$LN8@AppendImag:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00079	8d 55 08	 lea	 edx, DWORD PTR _pImageInstance$[ebp]
  0007c	52		 push	 edx
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
  00083	8b 7d 08	 mov	 edi, DWORD PTR _pImageInstance$[ebp]
  00086	8d 8b 34 01 00
	00		 lea	 ecx, DWORD PTR [ebx+308]
$LN7@AppendImag:

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0008c	8b b3 38 01 00
	00		 mov	 esi, DWORD PTR [ebx+312]
  00092	2b 31		 sub	 esi, DWORD PTR [ecx]
  00094	c1 fe 02	 sar	 esi, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2619 : 	m_bycurIndex = static_cast<BYTE>(rand() % m_ImageVector.size());

  00097	e8 00 00 00 00	 call	 _rand
  0009c	33 d2		 xor	 edx, edx

; 2620 : 	SetSize(pImageInstance->GetWidth(), pImageInstance->GetHeight());

  0009e	8b cf		 mov	 ecx, edi
  000a0	f7 f6		 div	 esi
  000a2	88 93 32 01 00
	00		 mov	 BYTE PTR [ebx+306], dl
  000a8	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  000ad	8b cf		 mov	 ecx, edi
  000af	8b f0		 mov	 esi, eax
  000b1	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  000b6	56		 push	 esi
  000b7	50		 push	 eax
  000b8	8b cb		 mov	 ecx, ebx
  000ba	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 2621 : 	UpdateRect();

  000bf	8b cb		 mov	 ecx, ebx
  000c1	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  000c6	5f		 pop	 edi
$LN1@AppendImag:

; 2622 : }

  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	5d		 pop	 ebp
  000ca	c2 04 00	 ret	 4
?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ENDP		; UI::CAniImageBox::AppendImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDelay@CAniImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iDelay$ = 8						; size = 4
?SetDelay@CAniImageBox@UI@@QAEXH@Z PROC			; UI::CAniImageBox::SetDelay, COMDAT
; _this$ = ecx

; 2596 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2597 : 	m_byDelay = iDelay;

  00003	8a 45 08	 mov	 al, BYTE PTR _iDelay$[ebp]
  00006	88 81 31 01 00
	00		 mov	 BYTE PTR [ecx+305], al

; 2598 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetDelay@CAniImageBox@UI@@QAEXH@Z ENDP			; UI::CAniImageBox::SetDelay
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CAniImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
tv415 = -16						; size = 4
_pkData$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAniImageBox@UI@@UAE@XZ PROC				; UI::CAniImageBox::~CAniImageBox, COMDAT
; _this$ = ecx

; 2591 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAniImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$1$[ebp], ebx
  0002d	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CAniImageBox@UI@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00033	8b 83 38 01 00
	00		 mov	 eax, DWORD PTR [ebx+312]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00039	8b b3 34 01 00
	00		 mov	 esi, DWORD PTR [ebx+308]
  0003f	3b f0		 cmp	 esi, eax
  00041	74 3f		 je	 SHORT $LN17@CAniImageB
  00043	8b d8		 mov	 ebx, eax
$LL18@CAniImageB:

; 266  :         _Func(*_UFirst);

  00045	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h

; 25   : 		pkInstance->Destroy();

  00047	8b cf		 mov	 ecx, edi
  00049	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0004e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h

; 26   : 		ms_kPool.Free(pkInstance);

  00053	89 7d f0	 mov	 DWORD PTR _pkData$[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00056	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  0005c	74 0b		 je	 SHORT $LN29@CAniImageB

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0005e	89 38		 mov	 DWORD PTR [eax], edi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00060	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, 4

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00067	eb 0f		 jmp	 SHORT $LN28@CAniImageB
$LN29@CAniImageB:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00069	8d 4d f0	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0006c	51		 push	 ecx
  0006d	50		 push	 eax
  0006e	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00073	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
$LN28@CAniImageB:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00078	83 c6 04	 add	 esi, 4
  0007b	3b f3		 cmp	 esi, ebx
  0007d	75 c6		 jne	 SHORT $LL18@CAniImageB
  0007f	8b 5d ec	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN17@CAniImageB:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00082	8b 83 34 01 00
	00		 mov	 eax, DWORD PTR [ebx+308]
  00088	85 c0		 test	 eax, eax
  0008a	74 4d		 je	 SHORT $LN36@CAniImageB

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0008c	8b 8b 3c 01 00
	00		 mov	 ecx, DWORD PTR [ebx+316]
  00092	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00094	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00097	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0009d	72 12		 jb	 SHORT $LN52@CAniImageB

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0009f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000a2	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000a5	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a7	83 c0 fc	 add	 eax, -4			; fffffffcH
  000aa	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000ad	77 43		 ja	 SHORT $LN49@CAniImageB

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000af	8b c2		 mov	 eax, edx
$LN52@CAniImageB:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000b1	51		 push	 ecx
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000b8	c7 83 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+308], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000c2	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000c5	c7 83 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+312], 0

; 2114 :             _Myend   = nullptr;

  000cf	c7 83 3c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+316], 0
$LN36@CAniImageB:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2593 : }

  000d9	8b cb		 mov	 ecx, ebx
  000db	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ea	59		 pop	 ecx
  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c3		 ret	 0
$LN49@CAniImageB:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN63@CAniImageB:
  000f7	cc		 int	 3
  000f8	cc		 int	 3
  000f9	cc		 int	 3
  000fa	cc		 int	 3
  000fb	cc		 int	 3
  000fc	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAniImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAniImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAniImageBox@UI@@UAE@XZ ENDP				; UI::CAniImageBox::~CAniImageBox
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CAniImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CAniImageBox@UI@@QAE@PAU_object@@@Z PROC		; UI::CAniImageBox::CAniImageBox, COMDAT
; _this$ = ecx

; 2587 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CAniImageBox@UI@@6B@

; 2589 : }

  00018	8b c6		 mov	 eax, esi
  0001a	66 c7 86 30 01
	00 00 00 04	 mov	 WORD PTR [esi+304], 1024 ; 00000400H
  00023	c6 86 32 01 00
	00 00		 mov	 BYTE PTR [esi+306], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0002a	c7 86 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+308], 0
  00034	c7 86 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+312], 0
  0003e	c7 86 3c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+316], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2589 : }

  00048	5e		 pop	 esi
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
??0CAniImageBox@UI@@QAE@PAU_object@@@Z ENDP		; UI::CAniImageBox::CAniImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CAniImageBox@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CAniImageBox@UI@@SAKXZ PROC			; UI::CAniImageBox::Type, COMDAT

; 2567 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CAniImageBox@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2568 : 	static DWORD s_dwType = GetCRC32("CAniImageBox", strlen("CAniImageBox"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 2569 : 	return (s_dwType);
; 2570 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 2568 : 	static DWORD s_dwType = GetCRC32("CAniImageBox", strlen("CAniImageBox"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 0c		 push	 12			; 0000000cH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LBBHECOO@CAniImageBox@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CAniImageBox@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CAniImageBox@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CAniImageBox@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CAniImageBox@UI@@SAKXZ ENDP			; UI::CAniImageBox::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCExpandedImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCExpandedImageBox@UI@@UAEPAXI@Z PROC		; UI::CExpandedImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CExpandedImageBox@UI@@UAE@XZ ; UI::CExpandedImageBox::~CExpandedImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 3c 01 00 00	 push	 316			; 0000013cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCExpandedImageBox@UI@@UAEPAXI@Z ENDP		; UI::CExpandedImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CExpandedImageBox@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CExpandedImageBox@UI@@MAEHK@Z PROC		; UI::CExpandedImageBox::OnIsType, COMDAT
; _this$ = ecx

; 2413 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2414 : 	if (CExpandedImageBox::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CExpandedImageBox@UI@@SAKXZ ; UI::CExpandedImageBox::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 2415 : 	{
; 2416 : 		return TRUE;
; 2417 : 	}
; 2418 : 
; 2419 : 	return FALSE;
; 2420 : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CExpandedImageBox@UI@@MAEHK@Z ENDP		; UI::CExpandedImageBox::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CExpandedImageBox@UI@@MAEXXZ PROC		; UI::CExpandedImageBox::OnRender, COMDAT
; _this$ = ecx

; 2550 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2551 : 	if (!m_pImageInstance)

  00003	83 be 30 01 00
	00 00		 cmp	 DWORD PTR [esi+304], 0
  0000a	74 17		 je	 SHORT $LN3@OnRender

; 2552 : 	{
; 2553 : 		return;
; 2554 : 	}
; 2555 : 
; 2556 : 	if (IsShow())

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00011	ff d0		 call	 eax
  00013	84 c0		 test	 al, al
  00015	74 0c		 je	 SHORT $LN3@OnRender

; 2557 : 	{
; 2558 : 		m_pImageInstance->Render();

  00017	8b 8e 30 01 00
	00		 mov	 ecx, DWORD PTR [esi+304]
  0001d	5e		 pop	 esi
  0001e	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:
  00023	5e		 pop	 esi

; 2559 : 	}
; 2560 : }

  00024	c3		 ret	 0
?OnRender@CExpandedImageBox@UI@@MAEXXZ ENDP		; UI::CExpandedImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CExpandedImageBox@UI@@MAEXXZ PROC		; UI::CExpandedImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 2548 : }

  00000	c2 00 00	 ret	 0
?OnUpdate@CExpandedImageBox@UI@@MAEXXZ ENDP		; UI::CExpandedImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdateRenderBox@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdateRenderBox@CExpandedImageBox@UI@@MAEXXZ PROC	; UI::CExpandedImageBox::OnUpdateRenderBox, COMDAT
; _this$ = ecx

; 2536 : 	if (!m_pImageInstance)

  00000	8b 91 30 01 00
	00		 mov	 edx, DWORD PTR [ecx+304]
  00006	85 d2		 test	 edx, edx
  00008	74 0e		 je	 SHORT $LN1@OnUpdateRe

; 2537 : 	{
; 2538 : 		return;
; 2539 : 	}
; 2540 : 
; 2541 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderBox(m_renderBox);

  0000a	8d 81 94 00 00
	00		 lea	 eax, DWORD PTR [ecx+148]
  00010	8b ca		 mov	 ecx, edx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?SetRenderBox@CGraphicExpandedImageInstance@@QAEXAAUtagRECT@@@Z ; CGraphicExpandedImageInstance::SetRenderBox
$LN1@OnUpdateRe:

; 2542 : }

  00018	c3		 ret	 0
?OnUpdateRenderBox@CExpandedImageBox@UI@@MAEXXZ ENDP	; UI::CExpandedImageBox::OnUpdateRenderBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ PROC	; UI::CExpandedImageBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 2437 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2438 : 	if (m_pImageInstance)

  00003	8b 86 30 01 00
	00		 mov	 eax, DWORD PTR [esi+304]
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN2@OnDestroyI

; 2439 : 	{
; 2440 : 		CGraphicExpandedImageInstance::Delete((CGraphicExpandedImageInstance*)m_pImageInstance);

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
  00013	83 c4 04	 add	 esp, 4

; 2441 : 		m_pImageInstance = NULL;

  00016	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
$LN2@OnDestroyI:

; 2442 : 	}
; 2443 : }

  00020	5e		 pop	 esi
  00021	c3		 ret	 0
?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ ENDP	; UI::CExpandedImageBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ PROC	; UI::CExpandedImageBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 2431 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2432 : 	OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 c8 00 00
	00		 call	 DWORD PTR [eax+200]

; 2433 : 
; 2434 : 	m_pImageInstance = CGraphicExpandedImageInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ; CGraphicExpandedImageInstance::New
  00010	89 86 30 01 00
	00		 mov	 DWORD PTR [esi+304], eax
  00016	5e		 pop	 esi

; 2435 : }

  00017	c3		 ret	 0
?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ ENDP	; UI::CExpandedImageBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetPixelColor@CExpandedImageBox@UI@@QAEKKK@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetPixelColor@CExpandedImageBox@UI@@QAEKKK@Z PROC	; UI::CExpandedImageBox::GetPixelColor, COMDAT
; _this$ = ecx

; 2530 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2531 : 	return ((CGraphicExpandedImageInstance*)m_pImageInstance)->GetPixelColor(x, y);

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]

; 2532 : }

  00009	5d		 pop	 ebp

; 2531 : 	return ((CGraphicExpandedImageInstance*)m_pImageInstance)->GetPixelColor(x, y);

  0000a	e9 00 00 00 00	 jmp	 ?GetPixelColor@CGraphicExpandedImageInstance@@QAEKKK@Z ; CGraphicExpandedImageInstance::GetPixelColor
?GetPixelColor@CExpandedImageBox@UI@@QAEKKK@Z ENDP	; UI::CExpandedImageBox::GetPixelColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetTextureRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetTextureRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z PROC ; UI::CExpandedImageBox::SetTextureRenderingRect, COMDAT
; _this$ = ecx

; 2520 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2521 : 	if (!m_pImageInstance)

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 33		 je	 SHORT $LN1@SetTexture

; 2522 : 	{
; 2523 : 		return;
; 2524 : 	}
; 2525 : 
; 2526 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->SetTextureRenderingRect(fLeft, fTop, fRight, fBottom);

  0000d	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0001b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  00020	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00026	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  0002b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00031	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  00036	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003b	e8 00 00 00 00	 call	 ?SetTextureRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetTextureRenderingRect
$LN1@SetTexture:

; 2527 : }

  00040	5d		 pop	 ebp
  00041	c2 10 00	 ret	 16			; 00000010H
?SetTextureRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z ENDP ; UI::CExpandedImageBox::SetTextureRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetExpandedRenderingRect@CExpandedImageBox@UI@@QAEXMMMMMMMM@Z
_TEXT	SEGMENT
_fLeftTop$ = 8						; size = 4
_fLeftBottom$ = 12					; size = 4
_fTopLeft$ = 16						; size = 4
_fTopRight$ = 20					; size = 4
_fRightTop$ = 24					; size = 4
_fRightBottom$ = 28					; size = 4
_fBottomLeft$ = 32					; size = 4
_fBottomRight$ = 36					; size = 4
?SetExpandedRenderingRect@CExpandedImageBox@UI@@QAEXMMMMMMMM@Z PROC ; UI::CExpandedImageBox::SetExpandedRenderingRect, COMDAT
; _this$ = ecx

; 2510 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2511 : 	if (!m_pImageInstance)

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 5f		 je	 SHORT $LN1@SetExpande

; 2512 : 	{
; 2513 : 		return;
; 2514 : 	}
; 2515 : 
; 2516 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->SetExpandedRenderingRect(fLeftTop, fLeftBottom, fTopLeft, fTopRight, fRightTop, fRightBottom, fBottomLeft, fBottomRight);

  0000d	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _fBottomRight$[ebp]
  00012	83 ec 20	 sub	 esp, 32			; 00000020H
  00015	f3 0f 11 44 24
	1c		 movss	 DWORD PTR [esp+28], xmm0
  0001b	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _fBottomLeft$[ebp]
  00020	f3 0f 11 44 24
	18		 movss	 DWORD PTR [esp+24], xmm0
  00026	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _fRightBottom$[ebp]
  0002b	f3 0f 11 44 24
	14		 movss	 DWORD PTR [esp+20], xmm0
  00031	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fRightTop$[ebp]
  00036	f3 0f 11 44 24
	10		 movss	 DWORD PTR [esp+16], xmm0
  0003c	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fTopRight$[ebp]
  00041	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00047	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fTopLeft$[ebp]
  0004c	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00052	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fLeftBottom$[ebp]
  00057	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0005d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeftTop$[ebp]
  00062	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00067	e8 00 00 00 00	 call	 ?SetExpandedRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMMMMMM@Z ; CGraphicExpandedImageInstance::SetExpandedRenderingRect
$LN1@SetExpande:

; 2517 : }

  0006c	5d		 pop	 ebp
  0006d	c2 20 00	 ret	 32			; 00000020H
?SetExpandedRenderingRect@CExpandedImageBox@UI@@QAEXMMMMMMMM@Z ENDP ; UI::CExpandedImageBox::SetExpandedRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetRenderingRect@CExpandedImageBox@UI@@UAEXXZ
_TEXT	SEGMENT
?OnSetRenderingRect@CExpandedImageBox@UI@@UAEXXZ PROC	; UI::CExpandedImageBox::OnSetRenderingRect, COMDAT
; _this$ = ecx

; 2501 : 	if (!m_pImageInstance)

  00000	8b 81 30 01 00
	00		 mov	 eax, DWORD PTR [ecx+304]
  00006	85 c0		 test	 eax, eax
  00008	74 13		 je	 SHORT $LN1@OnSetRende

; 2502 : 	{
; 2503 : 		return;
; 2504 : 	}
; 2505 : 
; 2506 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->iSetRenderingRect(m_renderingRect.left, m_renderingRect.top, m_renderingRect.right, m_renderingRect.bottom);

  0000a	ff 71 70	 push	 DWORD PTR [ecx+112]
  0000d	ff 71 6c	 push	 DWORD PTR [ecx+108]
  00010	ff 71 68	 push	 DWORD PTR [ecx+104]
  00013	ff 71 64	 push	 DWORD PTR [ecx+100]
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?iSetRenderingRect@CGraphicExpandedImageInstance@@QAEXHHHH@Z ; CGraphicExpandedImageInstance::iSetRenderingRect
$LN1@OnSetRende:

; 2507 : }

  0001d	c3		 ret	 0
?OnSetRenderingRect@CExpandedImageBox@UI@@UAEXXZ ENDP	; UI::CExpandedImageBox::OnSetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRenderingHeight@CExpandedImageBox@UI@@UAEHXZ
_TEXT	SEGMENT
?GetRenderingHeight@CExpandedImageBox@UI@@UAEHXZ PROC	; UI::CExpandedImageBox::GetRenderingHeight, COMDAT
; _this$ = ecx

; 2496 : 	return CWindow::GetHeight() + m_renderingRect.bottom + m_renderingRect.top;

  00000	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  00003	03 41 68	 add	 eax, DWORD PTR [ecx+104]
  00006	03 41 30	 add	 eax, DWORD PTR [ecx+48]

; 2497 : }

  00009	c3		 ret	 0
?GetRenderingHeight@CExpandedImageBox@UI@@UAEHXZ ENDP	; UI::CExpandedImageBox::GetRenderingHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRenderingWidth@CExpandedImageBox@UI@@UAEHXZ
_TEXT	SEGMENT
?GetRenderingWidth@CExpandedImageBox@UI@@UAEHXZ PROC	; UI::CExpandedImageBox::GetRenderingWidth, COMDAT
; _this$ = ecx

; 2491 : 	return CWindow::GetWidth() + m_renderingRect.right + m_renderingRect.left;

  00000	8b 41 6c	 mov	 eax, DWORD PTR [ecx+108]
  00003	03 41 64	 add	 eax, DWORD PTR [ecx+100]
  00006	03 41 2c	 add	 eax, DWORD PTR [ecx+44]

; 2492 : }

  00009	c3		 ret	 0
?GetRenderingWidth@CExpandedImageBox@UI@@UAEHXZ ENDP	; UI::CExpandedImageBox::GetRenderingWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMode$ = 8						; size = 4
?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z PROC	; UI::CExpandedImageBox::SetRenderingMode, COMDAT
; _this$ = ecx

; 2484 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2485 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingMode(iMode);

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]

; 2486 : }

  00009	5d		 pop	 ebp

; 2485 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingMode(iMode);

  0000a	e9 00 00 00 00	 jmp	 ?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ; CGraphicExpandedImageInstance::SetRenderingMode
?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z ENDP	; UI::CExpandedImageBox::SetRenderingMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CExpandedImageBox@UI@@UAEXMMMM@Z
_TEXT	SEGMENT
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CExpandedImageBox@UI@@UAEXMMMM@Z PROC	; UI::CExpandedImageBox::SetRenderingRect, COMDAT
; _this$ = ecx

; 2474 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2475 : 	if (!m_pImageInstance)

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 33		 je	 SHORT $LN1@SetRenderi

; 2476 : 	{
; 2477 : 		return;
; 2478 : 	}
; 2479 : 
; 2480 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingRect(fLeft, fTop, fRight, fBottom);

  0000d	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0001b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  00020	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00026	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  0002b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00031	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  00036	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003b	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
$LN1@SetRenderi:

; 2481 : }

  00040	5d		 pop	 ebp
  00041	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CExpandedImageBox@UI@@UAEXMMMM@Z ENDP	; UI::CExpandedImageBox::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRotation@CExpandedImageBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_fRotation$ = 8						; size = 4
?SetRotation@CExpandedImageBox@UI@@QAEXM@Z PROC		; UI::CExpandedImageBox::SetRotation, COMDAT
; _this$ = ecx

; 2465 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2466 : 	if (!m_pImageInstance)

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 10		 je	 SHORT $LN1@SetRotatio

; 2467 : 	{
; 2468 : 		return;
; 2469 : 	}
; 2470 : 
; 2471 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRotation(fRotation);

  0000d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fRotation$[ebp]
  00012	51		 push	 ecx
  00013	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00018	e8 00 00 00 00	 call	 ?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z ; CGraphicExpandedImageInstance::SetRotation
$LN1@SetRotatio:

; 2472 : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetRotation@CExpandedImageBox@UI@@QAEXM@Z ENDP		; UI::CExpandedImageBox::SetRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z PROC		; UI::CExpandedImageBox::SetOrigin, COMDAT
; _this$ = ecx

; 2456 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2457 : 	if (!m_pImageInstance)

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 1d		 je	 SHORT $LN1@SetOrigin

; 2458 : 	{
; 2459 : 		return;
; 2460 : 	}
; 2461 : 
; 2462 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->SetOrigin(fx, fy);

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	83 ec 08	 sub	 esp, 8
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00020	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00025	e8 00 00 00 00	 call	 ?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetOrigin
$LN1@SetOrigin:

; 2463 : }

  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z ENDP		; UI::CExpandedImageBox::SetOrigin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CExpandedImageBox@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetScale@CExpandedImageBox@UI@@QAEXMM@Z PROC		; UI::CExpandedImageBox::SetScale, COMDAT
; _this$ = ecx

; 2446 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx

; 2447 : 	if (!m_pImageInstance)

  00006	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 56		 je	 SHORT $LN1@SetScale

; 2448 : 	{
; 2449 : 		return;
; 2450 : 	}
; 2451 : 
; 2452 : 	((CGraphicExpandedImageInstance*)m_pImageInstance)->SetScale(fx, fy);

  00010	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00015	56		 push	 esi
  00016	83 ec 08	 sub	 esp, 8
  00019	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00024	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00029	e8 00 00 00 00	 call	 ?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetScale

; 2453 : 	CWindow::SetSize(long(float(GetWidth())*fx), long(float(GetHeight())*fy));

  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?GetHeight@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetHeight
  00035	8b cf		 mov	 ecx, edi
  00037	66 0f 6e c0	 movd	 xmm0, eax
  0003b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003e	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _fy$[ebp]
  00043	f3 0f 2c f0	 cvttss2si esi, xmm0
  00047	e8 00 00 00 00	 call	 ?GetWidth@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetWidth
  0004c	56		 push	 esi
  0004d	8b cf		 mov	 ecx, edi
  0004f	66 0f 6e c0	 movd	 xmm0, eax
  00053	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00056	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _fx$[ebp]
  0005b	f3 0f 2c c0	 cvttss2si eax, xmm0
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00065	5e		 pop	 esi
$LN1@SetScale:
  00066	5f		 pop	 edi

; 2454 : }

  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?SetScale@CExpandedImageBox@UI@@QAEXMM@Z ENDP		; UI::CExpandedImageBox::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CExpandedImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CExpandedImageBox@UI@@UAE@XZ PROC			; UI::CExpandedImageBox::~CExpandedImageBox, COMDAT
; _this$ = ecx

; 2426 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CExpandedImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExpandedImageBox@UI@@6B@

; 2427 : 	OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ ; UI::CExpandedImageBox::OnDestroyInstance

; 2428 : }

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CExpandedImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CExpandedImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CExpandedImageBox@UI@@UAE@XZ ENDP			; UI::CExpandedImageBox::~CExpandedImageBox
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z PROC	; UI::CExpandedImageBox::CExpandedImageBox, COMDAT
; _this$ = ecx

; 2423 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExpandedImageBox@UI@@6B@

; 2424 : }

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z ENDP	; UI::CExpandedImageBox::CExpandedImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CExpandedImageBox@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CExpandedImageBox@UI@@SAKXZ PROC			; UI::CExpandedImageBox::Type, COMDAT

; 2407 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CExpandedImageBox@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2408 : 	static DWORD s_dwType = GetCRC32("CExpandedImageBox", strlen("CExpandedImageBox"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 2409 : 	return (s_dwType);
; 2410 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 2408 : 	static DWORD s_dwType = GetCRC32("CExpandedImageBox", strlen("CExpandedImageBox"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 11		 push	 17			; 00000011H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DJHPPMGJ@CExpandedImageBox@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CExpandedImageBox@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CExpandedImageBox@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CExpandedImageBox@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CExpandedImageBox@UI@@SAKXZ ENDP			; UI::CExpandedImageBox::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCMarkBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMarkBox@UI@@UAEPAXI@Z PROC				; UI::CMarkBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMarkBox@UI@@UAE@XZ	; UI::CMarkBox::~CMarkBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 34 01 00 00	 push	 308			; 00000134H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCMarkBox@UI@@UAEPAXI@Z ENDP				; UI::CMarkBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnChangePosition, COMDAT
; _this$ = ecx

; 2394 : 	if (!m_pMarkInstance)

  00000	8b 81 30 01 00
	00		 mov	 eax, DWORD PTR [ecx+304]
  00006	85 c0		 test	 eax, eax
  00008	74 25		 je	 SHORT $LN1@OnChangePo

; 2395 : 	{
; 2396 : 		return;
; 2397 : 	}
; 2398 : 
; 2399 : 	m_pMarkInstance->SetPosition(m_rect.left, m_rect.top);

  0000a	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000f	83 ec 08	 sub	 esp, 8
  00012	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  00020	8b c8		 mov	 ecx, eax
  00022	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?SetPosition@CGraphicMarkInstance@@QAEXMM@Z ; CGraphicMarkInstance::SetPosition
$LN1@OnChangePo:

; 2400 : }

  0002f	c3		 ret	 0
?OnChangePosition@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CMarkBox@UI@@MAEXXZ PROC			; UI::CMarkBox::OnRender, COMDAT
; _this$ = ecx

; 2380 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2381 : 	if (!m_pMarkInstance)

  00003	83 be 30 01 00
	00 00		 cmp	 DWORD PTR [esi+304], 0
  0000a	74 17		 je	 SHORT $LN3@OnRender

; 2382 : 	{
; 2383 : 		return;
; 2384 : 	}
; 2385 : 
; 2386 : 	if (IsShow())

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00011	ff d0		 call	 eax
  00013	84 c0		 test	 al, al
  00015	74 0c		 je	 SHORT $LN3@OnRender

; 2387 : 	{
; 2388 : 		m_pMarkInstance->Render();

  00017	8b 8e 30 01 00
	00		 mov	 ecx, DWORD PTR [esi+304]
  0001d	5e		 pop	 esi
  0001e	e9 00 00 00 00	 jmp	 ?Render@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Render
$LN3@OnRender:
  00023	5e		 pop	 esi

; 2389 : 	}
; 2390 : }

  00024	c3		 ret	 0
?OnRender@CMarkBox@UI@@MAEXXZ ENDP			; UI::CMarkBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CMarkBox@UI@@MAEXXZ PROC			; UI::CMarkBox::OnUpdate, COMDAT
; _this$ = ecx

; 2377 : }

  00000	c2 00 00	 ret	 0
?OnUpdate@CMarkBox@UI@@MAEXXZ ENDP			; UI::CMarkBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 2326 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2327 : 	if (m_pMarkInstance)

  00003	8b 86 30 01 00
	00		 mov	 eax, DWORD PTR [esi+304]
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN2@OnDestroyI

; 2328 : 	{
; 2329 : 		CGraphicMarkInstance::Delete(m_pMarkInstance);

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?Delete@CGraphicMarkInstance@@SAXPAV1@@Z ; CGraphicMarkInstance::Delete
  00013	83 c4 04	 add	 esp, 4

; 2330 : 		m_pMarkInstance = NULL;

  00016	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
$LN2@OnDestroyI:

; 2331 : 	}
; 2332 : }

  00020	5e		 pop	 esi
  00021	c3		 ret	 0
?OnDestroyInstance@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 2320 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2321 : 	OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 c8 00 00
	00		 call	 DWORD PTR [eax+200]

; 2322 : 	m_pMarkInstance = CGraphicMarkInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicMarkInstance@@SAPAV1@XZ ; CGraphicMarkInstance::New
  00010	89 86 30 01 00
	00		 mov	 DWORD PTR [esi+304], eax
  00016	5e		 pop	 esi

; 2323 : }

  00017	c3		 ret	 0
?OnCreateInstance@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CMarkBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_fScale$ = 8						; size = 4
?SetScale@CMarkBox@UI@@QAEXM@Z PROC			; UI::CMarkBox::SetScale, COMDAT
; _this$ = ecx

; 2346 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2347 : 	if (!m_pMarkInstance)

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 10		 je	 SHORT $LN1@SetScale

; 2348 : 	{
; 2349 : 		return;
; 2350 : 	}
; 2351 : 
; 2352 : 	m_pMarkInstance->SetScale(fScale);

  0000d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fScale$[ebp]
  00012	51		 push	 ecx
  00013	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00018	e8 00 00 00 00	 call	 ?SetScale@CGraphicMarkInstance@@QAEXM@Z ; CGraphicMarkInstance::SetScale
$LN1@SetScale:

; 2353 : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetScale@CMarkBox@UI@@QAEXM@Z ENDP			; UI::CMarkBox::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetIndex@CMarkBox@UI@@QAEXI@Z
_TEXT	SEGMENT
_uIndex$ = 8						; size = 4
?SetIndex@CMarkBox@UI@@QAEXI@Z PROC			; UI::CMarkBox::SetIndex, COMDAT
; _this$ = ecx

; 2356 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2357 : 	if (!m_pMarkInstance)

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 06		 je	 SHORT $LN1@SetIndex

; 2363 : }

  0000d	5d		 pop	 ebp

; 2358 : 	{
; 2359 : 		return;
; 2360 : 	}
; 2361 : 
; 2362 : 	m_pMarkInstance->SetIndex(uIndex);

  0000e	e9 00 00 00 00	 jmp	 ?SetIndex@CGraphicMarkInstance@@QAEXI@Z ; CGraphicMarkInstance::SetIndex
$LN1@SetIndex:

; 2363 : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?SetIndex@CMarkBox@UI@@QAEXI@Z ENDP			; UI::CMarkBox::SetIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z PROC		; UI::CMarkBox::SetDiffuseColor, COMDAT
; _this$ = ecx

; 2366 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2367 : 	if (!m_pMarkInstance)

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 33		 je	 SHORT $LN1@SetDiffuse

; 2368 : 	{
; 2369 : 		return;
; 2370 : 	}
; 2371 : 
; 2372 : 	m_pMarkInstance->SetDiffuseColor(fr, fg, fb, fa);

  0000d	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0001b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  00020	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00026	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  0002b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00031	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00036	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003b	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z ; CGraphicMarkInstance::SetDiffuseColor
$LN1@SetDiffuse:

; 2373 : }

  00040	5d		 pop	 ebp
  00041	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z ENDP		; UI::CMarkBox::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?LoadImageA@CMarkBox@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szFilename$ = 8					; size = 4
?LoadImageA@CMarkBox@UI@@QAEXPBD@Z PROC			; UI::CMarkBox::LoadImageA, COMDAT
; _this$ = ecx

; 2335 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 2336 : 	OnCreateInstance();

  00007	8b 07		 mov	 eax, DWORD PTR [edi]
  00009	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 2337 : 
; 2338 : 	m_pMarkInstance->SetImageFileName(c_szFilename);

  0000f	ff 75 08	 push	 DWORD PTR _c_szFilename$[ebp]
  00012	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  00018	e8 00 00 00 00	 call	 ?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z ; CGraphicMarkInstance::SetImageFileName

; 2339 : 	m_pMarkInstance->Load();

  0001d	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  00023	e8 00 00 00 00	 call	 ?Load@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Load

; 2340 : 	SetSize(m_pMarkInstance->GetWidth(), m_pMarkInstance->GetHeight());

  00028	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  0002e	e8 00 00 00 00	 call	 ?GetHeight@CGraphicMarkInstance@@QAEHXZ ; CGraphicMarkInstance::GetHeight
  00033	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  00039	8b f0		 mov	 esi, eax
  0003b	e8 00 00 00 00	 call	 ?GetWidth@CGraphicMarkInstance@@QAEHXZ ; CGraphicMarkInstance::GetWidth
  00040	56		 push	 esi
  00041	50		 push	 eax
  00042	8b cf		 mov	 ecx, edi
  00044	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 2341 : 
; 2342 : 	UpdateRect();

  00049	8b cf		 mov	 ecx, edi
  0004b	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi

; 2343 : }

  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?LoadImageA@CMarkBox@UI@@QAEXPBD@Z ENDP			; UI::CMarkBox::LoadImageA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CMarkBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMarkBox@UI@@UAE@XZ PROC				; UI::CMarkBox::~CMarkBox, COMDAT
; _this$ = ecx

; 2315 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMarkBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMarkBox@UI@@6B@

; 2316 : 	OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CMarkBox@UI@@MAEXXZ ; UI::CMarkBox::OnDestroyInstance

; 2317 : }

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMarkBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMarkBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMarkBox@UI@@UAE@XZ ENDP				; UI::CMarkBox::~CMarkBox
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CMarkBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CMarkBox@UI@@QAE@PAU_object@@@Z PROC			; UI::CMarkBox::CMarkBox, COMDAT
; _this$ = ecx

; 2310 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMarkBox@UI@@6B@

; 2311 : 	m_pMarkInstance = NULL;
; 2312 : }

  00018	8b c6		 mov	 eax, esi
  0001a	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
  00024	5e		 pop	 esi
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??0CMarkBox@UI@@QAE@PAU_object@@@Z ENDP			; UI::CMarkBox::CMarkBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
;	COMDAT ??_GCRenderTarget@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRenderTarget@UI@@UAEPAXI@Z PROC			; UI::CRenderTarget::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 537  : 	~CRenderTarget() = default;

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 8e 3c 01 00
	00		 lea	 ecx, DWORD PTR [esi+316]
  0000c	e8 00 00 00 00	 call	 ??1CGraphicRenderTarget@@QAE@XZ ; CGraphicRenderTarget::~CGraphicRenderTarget
  00011	8b ce		 mov	 ecx, esi
  00013	e8 00 00 00 00	 call	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0e		 je	 SHORT $LN7@scalar
  0001e	68 54 01 00 00	 push	 340			; 00000154H
  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN7@scalar:
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??_GCRenderTarget@UI@@UAEPAXI@Z ENDP			; UI::CRenderTarget::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CRenderTarget@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CRenderTarget@UI@@MAEXXZ PROC			; UI::CRenderTarget::OnRender, COMDAT
; _this$ = ecx

; 2296 : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 2297 : 	CImageBox::OnRender();

  00003	e8 00 00 00 00	 call	 ?OnRender@CImageBox@UI@@MAEXXZ ; UI::CImageBox::OnRender

; 2298 : 
; 2299 : 	const auto& globalPosition = GetRect();
; 2300 : 	renderTarget_.Render(globalPosition.left, globalPosition.top,

  00008	8b 57 38	 mov	 edx, DWORD PTR [edi+56]
  0000b	8d 8f 3c 01 00
	00		 lea	 ecx, DWORD PTR [edi+316]
  00011	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  00014	83 ec 10	 sub	 esp, 16			; 00000010H
  00017	2b c2		 sub	 eax, edx
  00019	66 0f 6e c0	 movd	 xmm0, eax
  0001d	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  00020	2b 47 34	 sub	 eax, DWORD PTR [edi+52]
  00023	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00026	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0002c	66 0f 6e c0	 movd	 xmm0, eax
  00030	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00033	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00039	66 0f 6e c2	 movd	 xmm0, edx
  0003d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00040	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00046	66 0f 6e 47 34	 movd	 xmm0, DWORD PTR [edi+52]
  0004b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0004e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00053	e8 00 00 00 00	 call	 ?Render@CGraphicRenderTarget@@QAEXMMMM@Z ; CGraphicRenderTarget::Render
  00058	5f		 pop	 edi

; 2301 : 						 globalPosition.right - globalPosition.left,
; 2302 : 						 globalPosition.bottom - globalPosition.top);
; 2303 : }

  00059	c3		 ret	 0
?OnRender@CRenderTarget@UI@@MAEXXZ ENDP			; UI::CRenderTarget::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CRenderTarget@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CRenderTarget@UI@@MAEXXZ PROC			; UI::CRenderTarget::OnUpdate, COMDAT
; _this$ = ecx

; 2290 : 	CImageBox::OnUpdate();
; 2291 : 
; 2292 : 	renderTarget_.Update();

  00000	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH
  00006	e9 00 00 00 00	 jmp	 ?Update@CGraphicRenderTarget@@QAEXXZ ; CGraphicRenderTarget::Update
?OnUpdate@CRenderTarget@UI@@MAEXXZ ENDP			; UI::CRenderTarget::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DestroyRender@CRenderTarget@UI@@QAEXXZ
_TEXT	SEGMENT
?DestroyRender@CRenderTarget@UI@@QAEXXZ PROC		; UI::CRenderTarget::DestroyRender, COMDAT
; _this$ = ecx

; 2285 : 	renderTarget_.Destroy();

  00000	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH
  00006	e9 00 00 00 00	 jmp	 ?Destroy@CGraphicRenderTarget@@QAEXXZ ; CGraphicRenderTarget::Destroy
?DestroyRender@CRenderTarget@UI@@QAEXXZ ENDP		; UI::CRenderTarget::DestroyRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRotationMode@CRenderTarget@UI@@QAEX_N@Z
_TEXT	SEGMENT
_enable$ = 8						; size = 1
?SetRotationMode@CRenderTarget@UI@@QAEX_N@Z PROC	; UI::CRenderTarget::SetRotationMode, COMDAT
; _this$ = ecx

; 2279 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2280 : 	renderTarget_.SetRotationMode(enable);

  00003	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH

; 2281 : }

  00009	5d		 pop	 ebp

; 2280 : 	renderTarget_.SetRotationMode(enable);

  0000a	e9 00 00 00 00	 jmp	 ?SetRotationMode@CGraphicRenderTarget@@QAEX_N@Z ; CGraphicRenderTarget::SetRotationMode
?SetRotationMode@CRenderTarget@UI@@QAEX_N@Z ENDP	; UI::CRenderTarget::SetRotationMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRotation@CRenderTarget@UI@@QAEMXZ
_TEXT	SEGMENT
?GetRotation@CRenderTarget@UI@@QAEMXZ PROC		; UI::CRenderTarget::GetRotation, COMDAT
; _this$ = ecx

; 2275 : 	return renderTarget_.GetRotation();

  00000	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH
  00006	e9 00 00 00 00	 jmp	 ?GetRotation@CGraphicRenderTarget@@QAEMXZ ; CGraphicRenderTarget::GetRotation
?GetRotation@CRenderTarget@UI@@QAEMXZ ENDP		; UI::CRenderTarget::GetRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRotation@CRenderTarget@UI@@QAEXM@Z
_TEXT	SEGMENT
_rotation$ = 8						; size = 4
?SetRotation@CRenderTarget@UI@@QAEXM@Z PROC		; UI::CRenderTarget::SetRotation, COMDAT
; _this$ = ecx

; 2269 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2270 : 	renderTarget_.SetRotation(rotation);

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _rotation$[ebp]
  00008	51		 push	 ecx
  00009	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?SetRotation@CGraphicRenderTarget@@QAEXM@Z ; CGraphicRenderTarget::SetRotation

; 2271 : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetRotation@CRenderTarget@UI@@QAEXM@Z ENDP		; UI::CRenderTarget::SetRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetLightPosition@CRenderTarget@UI@@QBEABUD3DXVECTOR3@@XZ
_TEXT	SEGMENT
?GetLightPosition@CRenderTarget@UI@@QBEABUD3DXVECTOR3@@XZ PROC ; UI::CRenderTarget::GetLightPosition, COMDAT
; _this$ = ecx

; 2265 : 	return renderTarget_.GetLightPosition();

  00000	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH
  00006	e9 00 00 00 00	 jmp	 ?GetLightPosition@CGraphicRenderTarget@@QBEABUD3DXVECTOR3@@XZ ; CGraphicRenderTarget::GetLightPosition
?GetLightPosition@CRenderTarget@UI@@QBEABUD3DXVECTOR3@@XZ ENDP ; UI::CRenderTarget::GetLightPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetLightPosition@CRenderTarget@UI@@QAEXUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_position$ = 8						; size = 12
?SetLightPosition@CRenderTarget@UI@@QAEXUD3DXVECTOR3@@@Z PROC ; UI::CRenderTarget::SetLightPosition, COMDAT
; _this$ = ecx

; 2259 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2260 : 	renderTarget_.SetLightPosition(position);

  00003	f3 0f 7e 45 08	 movq	 xmm0, QWORD PTR _position$[ebp]
  00008	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0000b	8b 45 10	 mov	 eax, DWORD PTR _position$[ebp+8]
  0000e	8b d4		 mov	 edx, esp
  00010	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH
  00016	66 0f d6 02	 movq	 QWORD PTR [edx], xmm0
  0001a	89 42 08	 mov	 DWORD PTR [edx+8], eax
  0001d	e8 00 00 00 00	 call	 ?SetLightPosition@CGraphicRenderTarget@@QAEXUD3DXVECTOR3@@@Z ; CGraphicRenderTarget::SetLightPosition

; 2261 : }

  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SetLightPosition@CRenderTarget@UI@@QAEXUD3DXVECTOR3@@@Z ENDP ; UI::CRenderTarget::SetLightPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRenderDistance@CRenderTarget@UI@@QAEMXZ
_TEXT	SEGMENT
?GetRenderDistance@CRenderTarget@UI@@QAEMXZ PROC	; UI::CRenderTarget::GetRenderDistance, COMDAT
; _this$ = ecx

; 2255 : 	return renderTarget_.GetRenderDistance();

  00000	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH
  00006	e9 00 00 00 00	 jmp	 ?GetRenderDistance@CGraphicRenderTarget@@QAEMXZ ; CGraphicRenderTarget::GetRenderDistance
?GetRenderDistance@CRenderTarget@UI@@QAEMXZ ENDP	; UI::CRenderTarget::GetRenderDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderDistance@CRenderTarget@UI@@QAEXM@Z
_TEXT	SEGMENT
_distance$ = 8						; size = 4
?SetRenderDistance@CRenderTarget@UI@@QAEXM@Z PROC	; UI::CRenderTarget::SetRenderDistance, COMDAT
; _this$ = ecx

; 2249 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2250 : 	renderTarget_.SetRenderDistance(distance);

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00008	51		 push	 ecx
  00009	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?SetRenderDistance@CGraphicRenderTarget@@QAEXM@Z ; CGraphicRenderTarget::SetRenderDistance

; 2251 : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetRenderDistance@CRenderTarget@UI@@QAEXM@Z ENDP	; UI::CRenderTarget::SetRenderDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRendererMotion@CRenderTarget@UI@@QAEXI@Z
_TEXT	SEGMENT
_vnum$ = 8						; size = 4
?SetRendererMotion@CRenderTarget@UI@@QAEXI@Z PROC	; UI::CRenderTarget::SetRendererMotion, COMDAT
; _this$ = ecx

; 2244 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2245 : 	renderTarget_.SetRendererMotion(vnum);

  00003	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH

; 2246 : }

  00009	5d		 pop	 ebp

; 2245 : 	renderTarget_.SetRendererMotion(vnum);

  0000a	e9 00 00 00 00	 jmp	 ?SetRendererMotion@CGraphicRenderTarget@@QAEXI@Z ; CGraphicRenderTarget::SetRendererMotion
?SetRendererMotion@CRenderTarget@UI@@QAEXI@Z ENDP	; UI::CRenderTarget::SetRendererMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderSash@CRenderTarget@UI@@QAEXI@Z
_TEXT	SEGMENT
_vnum$ = 8						; size = 4
?SetRenderSash@CRenderTarget@UI@@QAEXI@Z PROC		; UI::CRenderTarget::SetRenderSash, COMDAT
; _this$ = ecx

; 2231 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2232 : 	renderTarget_.SetRenderSash(vnum);

  00003	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH

; 2233 : }

  00009	5d		 pop	 ebp

; 2232 : 	renderTarget_.SetRenderSash(vnum);

  0000a	e9 00 00 00 00	 jmp	 ?SetRenderSash@CGraphicRenderTarget@@QAEXI@Z ; CGraphicRenderTarget::SetRenderSash
?SetRenderSash@CRenderTarget@UI@@QAEXI@Z ENDP		; UI::CRenderTarget::SetRenderSash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderWeapon@CRenderTarget@UI@@QAEXI@Z
_TEXT	SEGMENT
_vnum$ = 8						; size = 4
?SetRenderWeapon@CRenderTarget@UI@@QAEXI@Z PROC		; UI::CRenderTarget::SetRenderWeapon, COMDAT
; _this$ = ecx

; 2225 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2226 : 	renderTarget_.SetRenderWeapon(vnum);

  00003	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH

; 2227 : }

  00009	5d		 pop	 ebp

; 2226 : 	renderTarget_.SetRenderWeapon(vnum);

  0000a	e9 00 00 00 00	 jmp	 ?SetRenderWeapon@CGraphicRenderTarget@@QAEXI@Z ; CGraphicRenderTarget::SetRenderWeapon
?SetRenderWeapon@CRenderTarget@UI@@QAEXI@Z ENDP		; UI::CRenderTarget::SetRenderWeapon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderArmor@CRenderTarget@UI@@QAEXI@Z
_TEXT	SEGMENT
_vnum$ = 8						; size = 4
?SetRenderArmor@CRenderTarget@UI@@QAEXI@Z PROC		; UI::CRenderTarget::SetRenderArmor, COMDAT
; _this$ = ecx

; 2220 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2221 : 	renderTarget_.SetRenderArmor(vnum);

  00003	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH

; 2222 : }

  00009	5d		 pop	 ebp

; 2221 : 	renderTarget_.SetRenderArmor(vnum);

  0000a	e9 00 00 00 00	 jmp	 ?SetRenderArmor@CGraphicRenderTarget@@QAEXI@Z ; CGraphicRenderTarget::SetRenderArmor
?SetRenderArmor@CRenderTarget@UI@@QAEXI@Z ENDP		; UI::CRenderTarget::SetRenderArmor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderHair@CRenderTarget@UI@@QAEXI@Z
_TEXT	SEGMENT
_vnum$ = 8						; size = 4
?SetRenderHair@CRenderTarget@UI@@QAEXI@Z PROC		; UI::CRenderTarget::SetRenderHair, COMDAT
; _this$ = ecx

; 2215 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2216 : 	renderTarget_.SetRenderHair(vnum);

  00003	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH

; 2217 : }

  00009	5d		 pop	 ebp

; 2216 : 	renderTarget_.SetRenderHair(vnum);

  0000a	e9 00 00 00 00	 jmp	 ?SetRenderHair@CGraphicRenderTarget@@QAEXI@Z ; CGraphicRenderTarget::SetRenderHair
?SetRenderHair@CRenderTarget@UI@@QAEXI@Z ENDP		; UI::CRenderTarget::SetRenderHair
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderTarget@CRenderTarget@UI@@QAEXI@Z
_TEXT	SEGMENT
_race$ = 8						; size = 4
?SetRenderTarget@CRenderTarget@UI@@QAEXI@Z PROC		; UI::CRenderTarget::SetRenderTarget, COMDAT
; _this$ = ecx

; 2210 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2211 : 	renderTarget_.SetRenderTarget(race);

  00003	81 c1 3c 01 00
	00		 add	 ecx, 316		; 0000013cH

; 2212 : }

  00009	5d		 pop	 ebp

; 2211 : 	renderTarget_.SetRenderTarget(race);

  0000a	e9 00 00 00 00	 jmp	 ?SetRenderTarget@CGraphicRenderTarget@@QAEXI@Z ; CGraphicRenderTarget::SetRenderTarget
?SetRenderTarget@CRenderTarget@UI@@QAEXI@Z ENDP		; UI::CRenderTarget::SetRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CRenderTarget@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_object$ = 8						; size = 4
??0CRenderTarget@UI@@QAE@PAU_object@@@Z PROC		; UI::CRenderTarget::CRenderTarget, COMDAT
; _this$ = ecx

; 2207 : {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CRenderTarget@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 2206 : 	: CImageBox(object)

  00029	ff 75 08	 push	 DWORD PTR _object$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox

; 2207 : {}

  00031	8d 8e 3c 01 00
	00		 lea	 ecx, DWORD PTR [esi+316]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRenderTarget@UI@@6B@
  00044	e8 00 00 00 00	 call	 ??0CGraphicRenderTarget@@QAE@XZ ; CGraphicRenderTarget::CGraphicRenderTarget
  00049	8b c6		 mov	 eax, esi
  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	5e		 pop	 esi
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRenderTarget@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CRenderTarget@UI@@QAE@PAU_object@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CRenderTarget@UI@@QAE@PAU_object@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CRenderTarget@UI@@QAE@PAU_object@@@Z ENDP		; UI::CRenderTarget::CRenderTarget
; Function compile flags: /Ogtp
;	COMDAT ??_GCImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCImageBox@UI@@UAEPAXI@Z PROC			; UI::CImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 3c 01 00 00	 push	 316			; 0000013cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCImageBox@UI@@UAEPAXI@Z ENDP			; UI::CImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CImageBox@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CImageBox@UI@@MAEHK@Z PROC			; UI::CImageBox::OnIsType, COMDAT
; _this$ = ecx

; 2047 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2048 : 	if (CImageBox::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CImageBox@UI@@SAKXZ ; UI::CImageBox::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 2049 : 	{
; 2050 : 		return TRUE;
; 2051 : 	}
; 2052 : 
; 2053 : 	return FALSE;
; 2054 : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CImageBox@UI@@MAEHK@Z ENDP			; UI::CImageBox::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnChangePosition, COMDAT
; _this$ = ecx

; 2173 : 	if (!m_pImageInstance)

  00000	8b 81 30 01 00
	00		 mov	 eax, DWORD PTR [ecx+304]
  00006	85 c0		 test	 eax, eax
  00008	74 25		 je	 SHORT $LN1@OnChangePo

; 2174 : 	{
; 2175 : 		return;
; 2176 : 	}
; 2177 : 
; 2178 : 	m_pImageInstance->SetPosition(m_rect.left, m_rect.top);

  0000a	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000f	83 ec 08	 sub	 esp, 8
  00012	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  00020	8b c8		 mov	 ecx, eax
  00022	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN1@OnChangePo:

; 2179 : }

  0002f	c3		 ret	 0
?OnChangePosition@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
tv137 = -12						; size = 4
_fPercentage$1$ = -8					; size = 4
_fcurTime$1 = -4					; size = 4
?OnRender@CImageBox@UI@@MAEXXZ PROC			; UI::CImageBox::OnRender, COMDAT
; _this$ = ecx

; 2147 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx

; 2148 : 	if (!m_pImageInstance)

  00009	83 bf 30 01 00
	00 00		 cmp	 DWORD PTR [edi+304], 0
  00010	0f 84 ec 00 00
	00		 je	 $LN5@OnRender

; 2149 : 	{
; 2150 : 		return;
; 2151 : 	}
; 2152 : 
; 2153 : 	if (IsShow())

  00016	8b 07		 mov	 eax, DWORD PTR [edi]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	ff d0		 call	 eax
  0001d	84 c0		 test	 al, al
  0001f	74 0b		 je	 SHORT $LN3@OnRender

; 2154 : 	{
; 2155 : 		m_pImageInstance->Render();

  00021	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  00027	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 2156 : 	}
; 2157 : 
; 2158 : 	if (fCoolTime != 0.0f)

  0002c	f3 0f 10 8f 34
	01 00 00	 movss	 xmm1, DWORD PTR [edi+308]
  00034	0f 57 c0	 xorps	 xmm0, xmm0
  00037	0f 2e c8	 ucomiss xmm1, xmm0
  0003a	9f		 lahf
  0003b	f6 c4 44	 test	 ah, 68			; 00000044H
  0003e	0f 8b be 00 00
	00		 jnp	 $LN5@OnRender

; 2159 : 	{
; 2160 : 		float fcurTime = CTimer::Instance().GetCurrentSecond();

  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  00050	d9 5d fc	 fstp	 DWORD PTR _fcurTime$1[ebp]

; 2161 : 		float fPercentage = (fcurTime - fStartCoolTime) / fCoolTime;

  00053	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fcurTime$1[ebp]

; 2162 : 		CPythonGraphic::Instance().RenderCoolTimeBox(m_rect.left + GetWidth() + 16.0f, m_rect.top + GetHeight() + 16.0f, 16.0f, fPercentage);

  00058	8b cf		 mov	 ecx, edi
  0005a	f3 0f 5c 87 38
	01 00 00	 subss	 xmm0, DWORD PTR [edi+312]
  00062	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00068	f3 0f 5e 87 34
	01 00 00	 divss	 xmm0, DWORD PTR [edi+308]
  00070	f3 0f 11 45 f8	 movss	 DWORD PTR _fPercentage$1$[ebp], xmm0
  00075	e8 00 00 00 00	 call	 ?GetHeight@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetHeight
  0007a	03 47 38	 add	 eax, DWORD PTR [edi+56]
  0007d	8b cf		 mov	 ecx, edi
  0007f	66 0f 6e c0	 movd	 xmm0, eax
  00083	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00086	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41800000
  0008e	f3 0f 11 45 f4	 movss	 DWORD PTR tv137[ebp], xmm0
  00093	e8 00 00 00 00	 call	 ?GetWidth@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetWidth
  00098	03 47 34	 add	 eax, DWORD PTR [edi+52]
  0009b	83 ec 10	 sub	 esp, 16			; 00000010H
  0009e	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _fPercentage$1$[ebp]
  000a3	8b ce		 mov	 ecx, esi
  000a5	66 0f 6e c0	 movd	 xmm0, eax
  000a9	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ac	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  000b2	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41800000
  000ba	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR tv137[ebp]
  000bf	c7 44 24 08 00
	00 80 41	 mov	 DWORD PTR [esp+8], 1098907648 ; 41800000H
  000c7	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	e8 00 00 00 00	 call	 ?RenderCoolTimeBox@CPythonGraphic@@QAEXMMMM@Z ; CPythonGraphic::RenderCoolTimeBox

; 2163 : 
; 2164 : 		if (fcurTime - fStartCoolTime >= fCoolTime)

  000d7	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fcurTime$1[ebp]
  000dc	f3 0f 5c 87 38
	01 00 00	 subss	 xmm0, DWORD PTR [edi+312]
  000e4	5e		 pop	 esi
  000e5	0f 2f 87 34 01
	00 00		 comiss	 xmm0, DWORD PTR [edi+308]
  000ec	72 14		 jb	 SHORT $LN5@OnRender

; 2165 : 		{
; 2166 : 			fCoolTime = 0.0f;

  000ee	c7 87 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+308], 0

; 2167 : 			fStartCoolTime = 0.0f;

  000f8	c7 87 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+312], 0
$LN5@OnRender:
  00102	5f		 pop	 edi

; 2168 : 		}
; 2169 : 	}
; 2170 : }

  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
?OnRender@CImageBox@UI@@MAEXXZ ENDP			; UI::CImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CImageBox@UI@@MAEXXZ PROC			; UI::CImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 2145 : }

  00000	c2 00 00	 ret	 0
?OnUpdate@CImageBox@UI@@MAEXXZ ENDP			; UI::CImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 2074 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2075 : 	if (m_pImageInstance)

  00003	8b 86 30 01 00
	00		 mov	 eax, DWORD PTR [esi+304]
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN2@OnDestroyI

; 2076 : 	{
; 2077 : 		CGraphicImageInstance::Delete(m_pImageInstance);

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  00013	83 c4 04	 add	 esp, 4

; 2078 : 		m_pImageInstance = NULL;

  00016	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
$LN2@OnDestroyI:

; 2079 : 	}
; 2080 : }

  00020	5e		 pop	 esi
  00021	c3		 ret	 0
?OnDestroyInstance@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 2068 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2069 : 	OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 c8 00 00
	00		 call	 DWORD PTR [eax+200]

; 2070 : 
; 2071 : 	m_pImageInstance = CGraphicImageInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New
  00010	89 86 30 01 00
	00		 mov	 DWORD PTR [esi+304], eax
  00016	5e		 pop	 esi

; 2072 : }

  00017	c3		 ret	 0
?OnCreateInstance@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetStartCoolTimeImageBox@CImageBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_SCT$ = 8						; size = 4
?SetStartCoolTimeImageBox@CImageBox@UI@@QAEXM@Z PROC	; UI::CImageBox::SetStartCoolTimeImageBox, COMDAT
; _this$ = ecx

; 2192 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2193 : 	if (!m_pImageInstance)

  00003	83 b9 30 01 00
	00 00		 cmp	 DWORD PTR [ecx+304], 0
  0000a	74 0d		 je	 SHORT $LN1@SetStartCo

; 2194 : 	{
; 2195 : 		return;
; 2196 : 	}
; 2197 : 
; 2198 : 	fStartCoolTime = SCT;

  0000c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _SCT$[ebp]
  00011	f3 0f 11 81 38
	01 00 00	 movss	 DWORD PTR [ecx+312], xmm0
$LN1@SetStartCo:

; 2199 : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetStartCoolTimeImageBox@CImageBox@UI@@QAEXM@Z ENDP	; UI::CImageBox::SetStartCoolTimeImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetCoolTimeImageBox@CImageBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_CT$ = 8						; size = 4
?SetCoolTimeImageBox@CImageBox@UI@@QAEXM@Z PROC		; UI::CImageBox::SetCoolTimeImageBox, COMDAT
; _this$ = ecx

; 2182 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2183 : 	if (!m_pImageInstance)

  00003	83 b9 30 01 00
	00 00		 cmp	 DWORD PTR [ecx+304], 0
  0000a	74 0d		 je	 SHORT $LN1@SetCoolTim

; 2184 : 	{
; 2185 : 		return;
; 2186 : 	}
; 2187 : 
; 2188 : 	fCoolTime = CT;

  0000c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _CT$[ebp]
  00011	f3 0f 11 81 34
	01 00 00	 movss	 DWORD PTR [ecx+308], xmm0
$LN1@SetCoolTim:

; 2189 : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetCoolTimeImageBox@CImageBox@UI@@QAEXM@Z ENDP		; UI::CImageBox::SetCoolTimeImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetHeight@CImageBox@UI@@QAEHXZ
_TEXT	SEGMENT
?GetHeight@CImageBox@UI@@QAEHXZ PROC			; UI::CImageBox::GetHeight, COMDAT
; _this$ = ecx

; 2135 : 	if (!m_pImageInstance)

  00000	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00006	85 c9		 test	 ecx, ecx
  00008	75 03		 jne	 SHORT $LN2@GetHeight

; 2136 : 	{
; 2137 : 		return 0;

  0000a	33 c0		 xor	 eax, eax

; 2141 : }

  0000c	c3		 ret	 0
$LN2@GetHeight:

; 2138 : 	}
; 2139 : 
; 2140 : 	return m_pImageInstance->GetHeight();

  0000d	e9 00 00 00 00	 jmp	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
?GetHeight@CImageBox@UI@@QAEHXZ ENDP			; UI::CImageBox::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetWidth@CImageBox@UI@@QAEHXZ
_TEXT	SEGMENT
?GetWidth@CImageBox@UI@@QAEHXZ PROC			; UI::CImageBox::GetWidth, COMDAT
; _this$ = ecx

; 2125 : 	if (!m_pImageInstance)

  00000	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00006	85 c9		 test	 ecx, ecx
  00008	75 03		 jne	 SHORT $LN2@GetWidth

; 2126 : 	{
; 2127 : 		return 0;

  0000a	33 c0		 xor	 eax, eax

; 2131 : }

  0000c	c3		 ret	 0
$LN2@GetWidth:

; 2128 : 	}
; 2129 : 
; 2130 : 	return m_pImageInstance->GetWidth();

  0000d	e9 00 00 00 00	 jmp	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
?GetWidth@CImageBox@UI@@QAEHXZ ENDP			; UI::CImageBox::GetWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z PROC		; UI::CImageBox::SetDiffuseColor, COMDAT
; _this$ = ecx

; 2114 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2115 : 	if (!m_pImageInstance)

  00003	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [ecx+304]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 33		 je	 SHORT $LN1@SetDiffuse

; 2116 : 	{
; 2117 : 		return;
; 2118 : 	}
; 2119 : 
; 2120 : 	m_pImageInstance->SetDiffuseColor(fr, fg, fb, fa);

  0000d	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0001b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  00020	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00026	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  0002b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00031	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00036	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003b	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
$LN1@SetDiffuse:

; 2121 : }

  00040	5d		 pop	 ebp
  00041	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z ENDP		; UI::CImageBox::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?LoadImageA@CImageBox@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?LoadImageA@CImageBox@UI@@QAEHPBD@Z PROC		; UI::CImageBox::LoadImageA, COMDAT
; _this$ = ecx

; 2083 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2084 : 	if (!c_szFileName[0])

  00004	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0000d	74 79		 je	 SHORT $LN7@LoadImageA

; 2085 : 	{
; 2086 : 		return FALSE;
; 2087 : 	}
; 2088 : 
; 2089 : 	OnCreateInstance();

  0000f	8b 07		 mov	 eax, DWORD PTR [edi]
  00011	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 2090 : 
; 2091 : 	CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00023	8b f0		 mov	 esi, eax

; 2092 : 	if (!pResource)

  00025	85 f6		 test	 esi, esi
  00027	74 5f		 je	 SHORT $LN7@LoadImageA

; 2093 : 	{
; 2094 : 		return FALSE;
; 2095 : 	}
; 2096 : 	if (!pResource->IsType(CGraphicImage::Type()))

  00029	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0002e	50		 push	 eax
  0002f	8b ce		 mov	 ecx, esi
  00031	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00036	84 c0		 test	 al, al
  00038	74 4e		 je	 SHORT $LN7@LoadImageA

; 2097 : 	{
; 2098 : 		return FALSE;
; 2099 : 	}
; 2100 : 
; 2101 : 	m_pImageInstance->SetImagePointer(static_cast<CGraphicImage*>(pResource));

  0003a	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 2102 : 	if (m_pImageInstance->IsEmpty())

  00046	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  0004c	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00051	84 c0		 test	 al, al
  00053	75 33		 jne	 SHORT $LN7@LoadImageA

; 2105 : 	}
; 2106 : 
; 2107 : 	SetSize(m_pImageInstance->GetWidth(), m_pImageInstance->GetHeight());

  00055	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  0005b	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00060	8b 8f 30 01 00
	00		 mov	 ecx, DWORD PTR [edi+304]
  00066	8b f0		 mov	 esi, eax
  00068	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0006d	56		 push	 esi
  0006e	50		 push	 eax
  0006f	8b cf		 mov	 ecx, edi
  00071	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 2108 : 	UpdateRect();

  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  0007d	5f		 pop	 edi

; 2109 : 
; 2110 : 	return TRUE;

  0007e	b8 01 00 00 00	 mov	 eax, 1

; 2111 : }

  00083	5e		 pop	 esi
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
$LN7@LoadImageA:
  00088	5f		 pop	 edi

; 2103 : 	{
; 2104 : 		return FALSE;

  00089	33 c0		 xor	 eax, eax

; 2111 : }

  0008b	5e		 pop	 esi
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
?LoadImageA@CImageBox@UI@@QAEHPBD@Z ENDP		; UI::CImageBox::LoadImageA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CImageBox@UI@@UAE@XZ PROC				; UI::CImageBox::~CImageBox, COMDAT
; _this$ = ecx

; 2063 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImageBox@UI@@6B@

; 2064 : 	OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CImageBox@UI@@MAEXXZ ; UI::CImageBox::OnDestroyInstance

; 2065 : }

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CImageBox@UI@@UAE@XZ ENDP				; UI::CImageBox::~CImageBox
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CImageBox@UI@@QAE@PAU_object@@@Z PROC		; UI::CImageBox::CImageBox, COMDAT
; _this$ = ecx

; 2056 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImageBox@UI@@6B@

; 2057 : 	m_pImageInstance = NULL;
; 2058 : 
; 2059 : 	fCoolTime = 0.0f;
; 2060 : 	fStartCoolTime = 0.0f;
; 2061 : }

  00018	8b c6		 mov	 eax, esi
  0001a	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
  00024	c7 86 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+308], 0
  0002e	c7 86 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+312], 0
  00038	5e		 pop	 esi
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??0CImageBox@UI@@QAE@PAU_object@@@Z ENDP		; UI::CImageBox::CImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CImageBox@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CImageBox@UI@@SAKXZ PROC				; UI::CImageBox::Type, COMDAT

; 2041 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CImageBox@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2042 : 	static DWORD s_dwType = GetCRC32("CImageBox", strlen("CImageBox"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CImageBox@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 2043 : 	return (s_dwType);
; 2044 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CImageBox@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 2042 : 	static DWORD s_dwType = GetCRC32("CImageBox", strlen("CImageBox"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CImageBox@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CImageBox@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 09		 push	 9
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_09KMLFEEMH@CImageBox@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CImageBox@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CImageBox@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CImageBox@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CImageBox@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CImageBox@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CImageBox@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CImageBox@UI@@SAKXZ ENDP				; UI::CImageBox::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCNumberLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCNumberLine@UI@@UAEPAXI@Z PROC			; UI::CNumberLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CNumberLine@UI@@UAE@XZ ; UI::CNumberLine::~CNumberLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 8c 01 00 00	 push	 396			; 0000018cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCNumberLine@UI@@UAEPAXI@Z ENDP			; UI::CNumberLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN4@vector

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN20@vector

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN17@vector

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN20@vector:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2114 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00049	5e		 pop	 esi

; 835  :     }

  0004a	c3		 ret	 0
$LN17@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00050	cc		 int	 3
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CNumberLine@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CNumberLine@UI@@MAEHK@Z PROC			; UI::CNumberLine::OnIsType, COMDAT
; _this$ = ecx

; 1842 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1843 : 	if (CNumberLine::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CNumberLine@UI@@SAKXZ ; UI::CNumberLine::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 1844 : 	{
; 1845 : 		return TRUE;
; 1846 : 	}
; 1847 : 
; 1848 : 	return FALSE;
; 1849 : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CNumberLine@UI@@MAEHK@Z ENDP			; UI::CNumberLine::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CNumberLine@UI@@MAEXXZ
_TEXT	SEGMENT
tv291 = -8						; size = 4
_i$1$ = -4						; size = 4
?OnChangePosition@CNumberLine@UI@@MAEXXZ PROC		; UI::CNumberLine::OnChangePosition, COMDAT
; _this$ = ecx

; 1996 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx

; 1997 : 	int ix = m_x;
; 1998 : 	int iy = m_y;
; 1999 : 
; 2000 : 	if (m_pParent)

  0000a	83 bf 80 00 00
	00 00		 cmp	 DWORD PTR [edi+128], 0
  00011	8b 5f 24	 mov	 ebx, DWORD PTR [edi+36]
  00014	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  00017	74 06		 je	 SHORT $LN9@OnChangePo

; 2001 : 	{
; 2002 : 		ix = m_rect.left;

  00019	8b 5f 34	 mov	 ebx, DWORD PTR [edi+52]

; 2003 : 		iy = m_rect.top;

  0001c	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
$LN9@OnChangePo:

; 2004 : 	}
; 2005 : 
; 2006 : 	switch (m_iHorizontalAlign)

  0001f	8b 87 6c 01 00
	00		 mov	 eax, DWORD PTR [edi+364]
  00025	83 e8 01	 sub	 eax, 1
  00028	74 0d		 je	 SHORT $LN11@OnChangePo
  0002a	83 e8 01	 sub	 eax, 1
  0002d	75 17		 jne	 SHORT $LN2@OnChangePo

; 2012 : 		break;
; 2013 : 	case HORIZONTAL_ALIGN_RIGHT:
; 2014 : 		ix -= int(m_dwWidthSummary);

  0002f	2b 9f 74 01 00
	00		 sub	 ebx, DWORD PTR [edi+372]
  00035	eb 0f		 jmp	 SHORT $LN2@OnChangePo
$LN11@OnChangePo:

; 2007 : 	{
; 2008 : 	case HORIZONTAL_ALIGN_LEFT:
; 2009 : 		break;
; 2010 : 	case HORIZONTAL_ALIGN_CENTER:
; 2011 : 		ix -= int(m_dwWidthSummary) / 2;

  00037	8b 87 74 01 00
	00		 mov	 eax, DWORD PTR [edi+372]
  0003d	99		 cdq
  0003e	2b c2		 sub	 eax, edx
  00040	d1 f8		 sar	 eax, 1
  00042	f7 d8		 neg	 eax
  00044	03 d8		 add	 ebx, eax
$LN2@OnChangePo:

; 2015 : 		break;
; 2016 : 	}
; 2017 : 
; 2018 : 	switch (m_iVerticalAlign)

  00046	8b 87 70 01 00
	00		 mov	 eax, DWORD PTR [edi+368]
  0004c	83 e8 01	 sub	 eax, 1
  0004f	74 0d		 je	 SHORT $LN14@OnChangePo
  00051	83 e8 01	 sub	 eax, 1
  00054	75 17		 jne	 SHORT $LN4@OnChangePo

; 2024 : 		break;
; 2025 : 	case VERTICAL_ALIGN_BOTTOM:
; 2026 : 		iy -= int(m_dwMaxHeight);

  00056	2b 8f 78 01 00
	00		 sub	 ecx, DWORD PTR [edi+376]
  0005c	eb 0f		 jmp	 SHORT $LN4@OnChangePo
$LN14@OnChangePo:

; 2019 : 	{
; 2020 : 	case VERTICAL_ALIGN_TOP:
; 2021 : 		break;
; 2022 : 	case VERTICAL_ALIGN_CENTER:
; 2023 : 		iy -= int(m_dwMaxHeight) / 2;

  0005e	8b 87 78 01 00
	00		 mov	 eax, DWORD PTR [edi+376]
  00064	99		 cdq
  00065	2b c2		 sub	 eax, edx
  00067	d1 f8		 sar	 eax, 1
  00069	f7 d8		 neg	 eax
  0006b	03 c8		 add	 ecx, eax
$LN4@OnChangePo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0006d	8b 87 64 01 00
	00		 mov	 eax, DWORD PTR [edi+356]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2029 : 	for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00073	33 d2		 xor	 edx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00075	2b 87 60 01 00
	00		 sub	 eax, DWORD PTR [edi+352]
  0007b	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2029 : 	for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0007e	89 55 fc	 mov	 DWORD PTR _i$1$[ebp], edx
  00081	85 c0		 test	 eax, eax
  00083	74 71		 je	 SHORT $LN7@OnChangePo
  00085	66 0f 6e c1	 movd	 xmm0, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1931 :         auto& _My_data = _Mypair._Myval2;

  00089	8b 8f 60 01 00
	00		 mov	 ecx, DWORD PTR [edi+352]
  0008f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00092	56		 push	 esi
  00093	f3 0f 11 45 f8	 movss	 DWORD PTR tv291[ebp], xmm0
  00098	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL8@OnChangePo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2031 : 		m_ImageInstanceVector[i]->SetPosition(ix, iy);

  000a0	83 ec 08	 sub	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  000a3	8d 34 95 00 00
	00 00		 lea	 esi, DWORD PTR [edx*4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2031 : 		m_ImageInstanceVector[i]->SetPosition(ix, iy);

  000aa	8b 0c 0e	 mov	 ecx, DWORD PTR [esi+ecx]
  000ad	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b3	66 0f 6e c3	 movd	 xmm0, ebx
  000b7	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  000c4	8b 8f 60 01 00
	00		 mov	 ecx, DWORD PTR [edi+352]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2032 : 		ix += m_ImageInstanceVector[i]->GetWidth();

  000ca	8b 0c 31	 mov	 ecx, DWORD PTR [ecx+esi]
  000cd	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  000d2	8b 55 fc	 mov	 edx, DWORD PTR _i$1$[ebp]
  000d5	03 d8		 add	 ebx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000d7	8b 87 64 01 00
	00		 mov	 eax, DWORD PTR [edi+356]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2029 : 	for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000dd	42		 inc	 edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000de	8b 8f 60 01 00
	00		 mov	 ecx, DWORD PTR [edi+352]
  000e4	2b c1		 sub	 eax, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2029 : 	for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000e6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv291[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000eb	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 2029 : 	for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000ee	89 55 fc	 mov	 DWORD PTR _i$1$[ebp], edx
  000f1	3b d0		 cmp	 edx, eax
  000f3	72 ab		 jb	 SHORT $LL8@OnChangePo
  000f5	5e		 pop	 esi
$LN7@OnChangePo:
  000f6	5f		 pop	 edi

; 2033 : 	}
; 2034 : }

  000f7	5b		 pop	 ebx
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
?OnChangePosition@CNumberLine@UI@@MAEXXZ ENDP		; UI::CNumberLine::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CNumberLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CNumberLine@UI@@MAEXXZ PROC			; UI::CNumberLine::OnRender, COMDAT
; _this$ = ecx

; 1988 : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1989 : 	for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00004	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00006	8b 87 64 01 00
	00		 mov	 eax, DWORD PTR [edi+356]
  0000c	8b 8f 60 01 00
	00		 mov	 ecx, DWORD PTR [edi+352]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1989 : 	for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00017	85 c0		 test	 eax, eax
  00019	74 23		 je	 SHORT $LN3@OnRender
  0001b	0f 1f 44 00 00	 npad	 5
$LL4@OnRender:

; 1990 : 	{
; 1991 : 		m_ImageInstanceVector[i]->Render();

  00020	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00023	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00028	8b 87 64 01 00
	00		 mov	 eax, DWORD PTR [edi+356]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1989 : 	for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0002e	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002f	8b 8f 60 01 00
	00		 mov	 ecx, DWORD PTR [edi+352]
  00035	2b c1		 sub	 eax, ecx
  00037	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1989 : 	for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0003a	3b f0		 cmp	 esi, eax
  0003c	72 e2		 jb	 SHORT $LL4@OnRender
$LN3@OnRender:
  0003e	5f		 pop	 edi

; 1992 : 	}
; 1993 : }

  0003f	5e		 pop	 esi
  00040	c3		 ret	 0
?OnRender@CNumberLine@UI@@MAEXXZ ENDP			; UI::CNumberLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ClearNumber@CNumberLine@UI@@IAEXXZ
_TEXT	SEGMENT
?ClearNumber@CNumberLine@UI@@IAEXXZ PROC		; UI::CNumberLine::ClearNumber, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00000	8b 81 60 01 00
	00		 mov	 eax, DWORD PTR [ecx+352]
  00006	3b 81 64 01 00
	00		 cmp	 eax, DWORD PTR [ecx+356]
  0000c	74 06		 je	 SHORT $LN3@ClearNumbe

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0000e	89 81 64 01 00
	00		 mov	 DWORD PTR [ecx+356], eax
$LN3@ClearNumbe:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3549 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00014	6a 00		 push	 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1982 : 	m_dwWidthSummary = 0;

  00016	c7 81 74 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+372], 0

; 1983 : 	m_dwMaxHeight = 0;

  00020	c7 81 78 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+376], 0

; 1984 : 	m_strNumber = "";

  0002a	81 c1 48 01 00
	00		 add	 ecx, 328		; 00000148H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3549 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00030	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00035	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1985 : }

  0003a	c3		 ret	 0
?ClearNumber@CNumberLine@UI@@IAEXXZ ENDP		; UI::CNumberLine::ClearNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CNumberLine@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_g$ = 12						; size = 4
_b$ = 16						; size = 4
_a$ = 20						; size = 4
?SetDiffuseColor@CNumberLine@UI@@QAEXMMMM@Z PROC	; UI::CNumberLine::SetDiffuseColor, COMDAT
; _this$ = ecx

; 1967 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1968 : 	m_diffuseColor.r = r;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _r$[ebp]
  00008	53		 push	 ebx
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	57		 push	 edi
  0000d	f3 0f 11 86 7c
	01 00 00	 movss	 DWORD PTR [esi+380], xmm0

; 1969 : 	m_diffuseColor.g = g;

  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _g$[ebp]
  0001a	f3 0f 11 86 80
	01 00 00	 movss	 DWORD PTR [esi+384], xmm0

; 1970 : 	m_diffuseColor.b = b;

  00022	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _b$[ebp]
  00027	f3 0f 11 86 84
	01 00 00	 movss	 DWORD PTR [esi+388], xmm0

; 1971 : 	m_diffuseColor.a = a;

  0002f	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _a$[ebp]
  00034	f3 0f 11 86 88
	01 00 00	 movss	 DWORD PTR [esi+392], xmm0

; 1972 : 
; 1973 : 	for (CGraphicImageInstance* pInst : m_ImageInstanceVector)

  0003c	8b 9e 64 01 00
	00		 mov	 ebx, DWORD PTR [esi+356]
  00042	8b be 60 01 00
	00		 mov	 edi, DWORD PTR [esi+352]
  00048	3b fb		 cmp	 edi, ebx
  0004a	74 20		 je	 SHORT $LN3@SetDiffuse
  0004c	0f 1f 40 00	 npad	 4
$LL4@SetDiffuse:

; 1974 : 	{
; 1975 : 		pInst->SetDiffuseColor(m_diffuseColor.r, m_diffuseColor.g, m_diffuseColor.b, m_diffuseColor.a);

  00050	0f 10 86 7c 01
	00 00		 movups	 xmm0, XMMWORD PTR [esi+380]
  00057	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00059	83 ec 10	 sub	 esp, 16			; 00000010H
  0005c	0f 11 04 24	 movups	 XMMWORD PTR [esp], xmm0
  00060	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
  00065	83 c7 04	 add	 edi, 4
  00068	3b fb		 cmp	 edi, ebx
  0006a	75 e4		 jne	 SHORT $LL4@SetDiffuse
$LN3@SetDiffuse:
  0006c	5f		 pop	 edi

; 1976 : 	}
; 1977 : }

  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	5d		 pop	 ebp
  00070	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CNumberLine@UI@@QAEXMMMM@Z ENDP	; UI::CNumberLine::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetNumber@CNumberLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_i$1$ = -88						; size = 4
$T2 = -84						; size = 4
__Result$1$ = -84					; size = 4
_this$GSCopy$1$ = -80					; size = 4
_cChar$1$ = -73						; size = 1
__Back_shift$1$ = -72					; size = 4
_c_szNumber$GSCopy$1$ = -72				; size = 4
__Left_size$1$ = -72					; size = 4
tv3899 = -72						; size = 4
_pInstance$3 = -72					; size = 4
__Old_capacity$1$ = -68					; size = 4
__Ptr$1$ = -68						; size = 4
tv3701 = -68						; size = 4
$T4 = -64						; size = 24
$T5 = -64						; size = 24
$T6 = -64						; size = 24
$T7 = -64						; size = 24
$T8 = -64						; size = 24
$T9 = -64						; size = 24
$T10 = -64						; size = 24
$T11 = -64						; size = 24
_strImageFileName$12 = -40				; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szNumber$ = 8					; size = 4
?SetNumber@CNumberLine@UI@@QAEXPBD@Z PROC		; UI::CNumberLine::SetNumber, COMDAT
; _this$ = ecx

; 1889 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	89 7d b0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  0002f	8b 45 08	 mov	 eax, DWORD PTR _c_szNumber$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  00032	8b c8		 mov	 ecx, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1889 : {

  00034	89 45 b8	 mov	 DWORD PTR _c_szNumber$GSCopy$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  00037	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0003a	66 0f 1f 44 00
	00		 npad	 6
$LL856@SetNumber:
  00040	8a 01		 mov	 al, BYTE PTR [ecx]
  00042	41		 inc	 ecx
  00043	84 c0		 test	 al, al
  00045	75 f9		 jne	 SHORT $LL856@SetNumber

; 4817 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00047	8b 87 58 01 00
	00		 mov	 eax, DWORD PTR [edi+344]

; 415  :             return __builtin_strlen(_First);

  0004d	2b ca		 sub	 ecx, edx

; 2293 :         if (_Large_string_engaged()) {

  0004f	83 bf 5c 01 00
	00 10		 cmp	 DWORD PTR [edi+348], 16	; 00000010H
  00056	8d 97 48 01 00
	00		 lea	 edx, DWORD PTR [edi+328]
  0005c	72 06		 jb	 SHORT $LN852@SetNumber

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  0005e	8b 97 48 01 00
	00		 mov	 edx, DWORD PTR [edi+328]
$LN852@SetNumber:

; 602  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00064	3b c8		 cmp	 ecx, eax
  00066	8b f0		 mov	 esi, eax

; 395  :         return __builtin_memcmp(_First1, _First2, _Count);

  00068	8b 45 b8	 mov	 eax, DWORD PTR _c_szNumber$GSCopy$1$[ebp]

; 602  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0006b	0f 42 f1	 cmovb	 esi, ecx

; 395  :         return __builtin_memcmp(_First1, _First2, _Count);

  0006e	89 45 bc	 mov	 DWORD PTR tv3701[ebp], eax
  00071	83 ee 04	 sub	 esi, 4
  00074	72 18		 jb	 SHORT $LN859@SetNumber
$LL860@SetNumber:
  00076	8b 7d bc	 mov	 edi, DWORD PTR tv3701[ebp]
  00079	8b 02		 mov	 eax, DWORD PTR [edx]
  0007b	3b 07		 cmp	 eax, DWORD PTR [edi]
  0007d	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  00080	75 11		 jne	 SHORT $LN858@SetNumber
  00082	83 45 bc 04	 add	 DWORD PTR tv3701[ebp], 4
  00086	83 c2 04	 add	 edx, 4
  00089	83 ee 04	 sub	 esi, 4
  0008c	73 e8		 jae	 SHORT $LL860@SetNumber
$LN859@SetNumber:
  0008e	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00091	74 49		 je	 SHORT $LN857@SetNumber
$LN858@SetNumber:
  00093	8b 7d bc	 mov	 edi, DWORD PTR tv3701[ebp]
  00096	8a 02		 mov	 al, BYTE PTR [edx]
  00098	3a 07		 cmp	 al, BYTE PTR [edi]
  0009a	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  0009d	75 36		 jne	 SHORT $LN861@SetNumber
  0009f	83 fe fd	 cmp	 esi, -3			; fffffffdH
  000a2	74 38		 je	 SHORT $LN857@SetNumber
  000a4	8b 7d bc	 mov	 edi, DWORD PTR tv3701[ebp]
  000a7	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  000aa	3a 47 01	 cmp	 al, BYTE PTR [edi+1]
  000ad	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  000b0	75 23		 jne	 SHORT $LN861@SetNumber
  000b2	83 fe fe	 cmp	 esi, -2			; fffffffeH
  000b5	74 25		 je	 SHORT $LN857@SetNumber
  000b7	8b 7d bc	 mov	 edi, DWORD PTR tv3701[ebp]
  000ba	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  000bd	3a 47 02	 cmp	 al, BYTE PTR [edi+2]
  000c0	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  000c3	75 10		 jne	 SHORT $LN861@SetNumber
  000c5	83 fe ff	 cmp	 esi, -1
  000c8	74 12		 je	 SHORT $LN857@SetNumber
  000ca	8a 42 03	 mov	 al, BYTE PTR [edx+3]
  000cd	8b 55 bc	 mov	 edx, DWORD PTR tv3701[ebp]
  000d0	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  000d3	74 07		 je	 SHORT $LN857@SetNumber
$LN861@SetNumber:
  000d5	1b c0		 sbb	 eax, eax
  000d7	83 c8 01	 or	 eax, 1
  000da	eb 02		 jmp	 SHORT $LN862@SetNumber
$LN857@SetNumber:
  000dc	33 c0		 xor	 eax, eax
$LN862@SetNumber:

; 604  :     if (_Ans != 0) {

  000de	85 c0		 test	 eax, eax
  000e0	75 0e		 jne	 SHORT $LN253@SetNumber

; 605  :         return _Ans;
; 606  :     }
; 607  : 
; 608  :     if (_Left_size < _Right_size) {

  000e2	39 8f 58 01 00
	00		 cmp	 DWORD PTR [edi+344], ecx
  000e8	72 06		 jb	 SHORT $LN253@SetNumber

; 609  :         return -1;
; 610  :     }
; 611  : 
; 612  :     if (_Left_size > _Right_size) {

  000ea	0f 86 2f 0a 00
	00		 jbe	 $LN1@SetNumber
$LN253@SetNumber:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1895 : 	ClearNumber();

  000f0	8b cf		 mov	 ecx, edi
  000f2	e8 00 00 00 00	 call	 ?ClearNumber@CNumberLine@UI@@IAEXXZ ; UI::CNumberLine::ClearNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  000f7	8b 55 b8	 mov	 edx, DWORD PTR _c_szNumber$GSCopy$1$[ebp]
  000fa	8b ca		 mov	 ecx, edx
  000fc	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  000ff	90		 npad	 1
$LL863@SetNumber:
  00100	8a 01		 mov	 al, BYTE PTR [ecx]
  00102	41		 inc	 ecx
  00103	84 c0		 test	 al, al
  00105	75 f9		 jne	 SHORT $LL863@SetNumber
  00107	2b ce		 sub	 ecx, esi

; 3549 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00109	8d b7 48 01 00
	00		 lea	 esi, DWORD PTR [edi+328]
  0010f	51		 push	 ecx
  00110	52		 push	 edx
  00111	8b ce		 mov	 ecx, esi
  00113	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1899 : 	for (DWORD i = 0; i < m_strNumber.size(); ++i)

  00118	33 c9		 xor	 ecx, ecx
  0011a	89 4d a8	 mov	 DWORD PTR _i$1$[ebp], ecx
  0011d	39 8f 58 01 00
	00		 cmp	 DWORD PTR [edi+344], ecx
  00123	0f 86 ef 09 00
	00		 jbe	 $LN855@SetNumber
  00129	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2284 :         if (_Large_string_engaged()) {

  00130	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00134	8b c6		 mov	 eax, esi
  00136	72 02		 jb	 SHORT $LN40@SetNumber

; 2285 :             _Result = _Unfancy(_Bx._Ptr);

  00138	8b 06		 mov	 eax, DWORD PTR [esi]
$LN40@SetNumber:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1901 : 		char cChar = m_strNumber[i];

  0013a	8a 0c 08	 mov	 cl, BYTE PTR [eax+ecx]
  0013d	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  00140	ba 0f 00 00 00	 mov	 edx, 15			; 0000000fH
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1901 : 		char cChar = m_strNumber[i];

  00145	88 4d b7	 mov	 BYTE PTR _cChar$1$[ebp], cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4998 :         _My_data._Mysize = 0;

  00148	33 f6		 xor	 esi, esi

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  0014a	89 55 bc	 mov	 DWORD PTR __Old_capacity$1$[ebp], edx

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0014d	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0

; 4998 :         _My_data._Mysize = 0;

  00151	89 75 e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], esi

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  00154	89 55 ec	 mov	 DWORD PTR _strImageFileName$12[ebp+20], edx

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00157	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1902 : 		std::string strImageFileName;

  0015b	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi

; 1903 : 
; 1904 : 		if (':' == cChar)

  0015e	80 f9 3a	 cmp	 cl, 58			; 0000003aH
  00161	0f 85 32 01 00
	00		 jne	 $LN6@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5116 :     const auto _Left_size  = _Left.size();

  00167	8b 97 40 01 00
	00		 mov	 edx, DWORD PTR [edi+320]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1906 : 			strImageFileName = m_strPath + "colon.sub";

  0016d	8d 8f 30 01 00
	00		 lea	 ecx, DWORD PTR [edi+304]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5118 :     if (_Left.max_size() - _Left_size < _Right_size) {

  00173	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1906 : 			strImageFileName = m_strPath + "colon.sub";

  00178	89 4d ac	 mov	 DWORD PTR __Result$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5118 :     if (_Left.max_size() - _Left_size < _Right_size) {

  0017b	2b c2		 sub	 eax, edx
  0017d	89 55 b8	 mov	 DWORD PTR __Left_size$1$[ebp], edx
  00180	83 f8 09	 cmp	 eax, 9
  00183	0f 82 b8 09 00
	00		 jb	 $LN846@SetNumber

; 2293 :         if (_Large_string_engaged()) {

  00189	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  0018d	72 05		 jb	 SHORT $LN74@SetNumber

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  0018f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00191	89 4d ac	 mov	 DWORD PTR __Result$1$[ebp], ecx
$LN74@SetNumber:

; 2920 :         size_type _New_capacity = _BUF_SIZE - 1;

  00194	be 0f 00 00 00	 mov	 esi, 15			; 0000000fH

; 2921 :         auto& _My_data          = _Mypair._Myval2;
; 2922 :         _Elem* _Ptr             = _My_data._Bx._Buf;
; 2923 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2924 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2925 : 
; 2926 :         if (_New_capacity < _New_size) {

  00199	8d 7a 09	 lea	 edi, DWORD PTR [edx+9]
  0019c	8d 45 c0	 lea	 eax, DWORD PTR $T11[ebp]
  0019f	89 45 bc	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  001a2	0f 11 45 c0	 movups	 XMMWORD PTR $T11[ebp], xmm0

; 2926 :         if (_New_capacity < _New_size) {

  001a6	3b fe		 cmp	 edi, esi
  001a8	76 6c		 jbe	 SHORT $LN79@SetNumber

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  001aa	8d 72 09	 lea	 esi, DWORD PTR [edx+9]
  001ad	83 ce 0f	 or	 esi, 15			; 0000000fH
  001b0	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  001b6	76 1b		 jbe	 SHORT $LN94@SetNumber

; 4885 :             return _Max;

  001b8	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  001bd	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  001c8	8b 4d ac	 mov	 ecx, DWORD PTR __Result$1$[ebp]
  001cb	83 c4 04	 add	 esp, 4
  001ce	8b 55 b8	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  001d1	eb 3d		 jmp	 SHORT $LN867@SetNumber
$LN94@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4892 :         return (_STD max)(_Masked, _Old + _Old / 2);

  001d3	83 fe 16	 cmp	 esi, 22			; 00000016H
  001d6	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  001db	0f 42 f0	 cmovb	 esi, eax

; 2928 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  001de	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001e1	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  001e6	72 11		 jb	 SHORT $LN102@SetNumber

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  001e8	50		 push	 eax
  001e9	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  001ee	8b 4d ac	 mov	 ecx, DWORD PTR __Result$1$[ebp]
  001f1	83 c4 04	 add	 esp, 4
  001f4	8b 55 b8	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  001f7	eb 17		 jmp	 SHORT $LN867@SetNumber
$LN102@SetNumber:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  001f9	85 c0		 test	 eax, eax
  001fb	74 11		 je	 SHORT $LN103@SetNumber

; 77   :         return ::operator new(_Bytes);

  001fd	50		 push	 eax
  001fe	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  00203	8b 4d ac	 mov	 ecx, DWORD PTR __Result$1$[ebp]

; 77   :         return ::operator new(_Bytes);

  00206	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00209	8b 55 b8	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  0020c	eb 02		 jmp	 SHORT $LN867@SetNumber
$LN103@SetNumber:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0020e	33 c0		 xor	 eax, eax
$LN867@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2930 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  00210	89 45 bc	 mov	 DWORD PTR __Ptr$1$[ebp], eax
  00213	89 45 c0	 mov	 DWORD PTR $T11[ebp], eax
$LN79@SetNumber:

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00216	52		 push	 edx
  00217	51		 push	 ecx

; 2939 :         _My_data._Mysize = _New_size;

  00218	8d 7a 09	 lea	 edi, DWORD PTR [edx+9]

; 2940 :         _My_data._Myres  = _New_capacity;

  0021b	89 75 d4	 mov	 DWORD PTR $T11[ebp+20], esi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0021e	50		 push	 eax

; 2939 :         _My_data._Mysize = _New_size;

  0021f	89 7d d0	 mov	 DWORD PTR $T11[ebp+16], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00222	e8 00 00 00 00	 call	 _memcpy
  00227	8b 4d bc	 mov	 ecx, DWORD PTR __Ptr$1$[ebp]
  0022a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0022d	8b 55 b8	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  00230	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09GPLBLMNE@colon?4sub@

; 5011 :         if (_My_data._Large_string_engaged()) {

  00238	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0023b	66 0f d6 04 11	 movq	 QWORD PTR [ecx+edx], xmm0
  00240	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09GPLBLMNE@colon?4sub@+8
  00245	88 44 11 08	 mov	 BYTE PTR [ecx+edx+8], al

; 2943 :         _Traits::assign(_Ptr[_New_size], _Elem());

  00249	c6 44 11 09 00	 mov	 BYTE PTR [ecx+edx+9], 0

; 5011 :         if (_My_data._Large_string_engaged()) {

  0024e	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00251	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00254	72 2c		 jb	 SHORT $LN120@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00256	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00259	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0025a	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0025c	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00262	72 14		 jb	 SHORT $LN130@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00264	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00267	83 c1 23	 add	 ecx, 35			; 00000023H
  0026a	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0026c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0026f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00272	0f 87 c4 08 00
	00		 ja	 $LN322@SetNumber
$LN130@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00278	51		 push	 ecx
  00279	52		 push	 edx
  0027a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0027f	83 c4 08	 add	 esp, 8
$LN120@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3140 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00282	0f 10 45 c0	 movups	 xmm0, XMMWORD PTR $T11[ebp]
  00286	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0028a	f3 0f 7e 45 d0	 movq	 xmm0, QWORD PTR $T11[ebp+16]
  0028f	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1907 : 		}

  00294	e9 29 07 00 00	 jmp	 $LN23@SetNumber
$LN6@SetNumber:

; 1908 : 		else if ('?' == cChar)

  00299	80 f9 3f	 cmp	 cl, 63			; 0000003fH
  0029c	0f 85 c6 00 00
	00		 jne	 $LN8@SetNumber

; 1909 : 		{
; 1910 : 			strImageFileName = m_strPath + "questionmark.sub";

  002a2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@POBNNLPJ@questionmark?4sub@
  002a7	8d 87 30 01 00
	00		 lea	 eax, DWORD PTR [edi+304]
  002ad	50		 push	 eax
  002ae	8d 45 c0	 lea	 eax, DWORD PTR $T10[ebp]
  002b1	50		 push	 eax
  002b2	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  002b7	8b f0		 mov	 esi, eax
  002b9	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3102 :         if (this == _STD addressof(_Right)) {

  002bc	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  002bf	3b c6		 cmp	 eax, esi
  002c1	74 68		 je	 SHORT $LN302@SetNumber

; 5011 :         if (_My_data._Large_string_engaged()) {

  002c3	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  002c6	83 f9 10	 cmp	 ecx, 16			; 00000010H
  002c9	72 2c		 jb	 SHORT $LN274@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002cb	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  002ce	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002cf	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  002d1	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  002d7	72 14		 jb	 SHORT $LN284@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  002d9	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  002dc	83 c1 23	 add	 ecx, 35			; 00000023H
  002df	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002e1	83 c0 fc	 add	 eax, -4			; fffffffcH
  002e4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002e7	0f 87 4f 08 00
	00		 ja	 $LN322@SetNumber
$LN284@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  002ed	51		 push	 ecx
  002ee	52		 push	 edx
  002ef	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002f4	83 c4 08	 add	 esp, 8
$LN274@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  002f7	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  002fe	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00305	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 3140 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00309	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  0030c	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  00310	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00315	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4998 :         _My_data._Mysize = 0;

  0031a	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  00321	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00328	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN302@SetNumber:

; 5011 :         if (_My_data._Large_string_engaged()) {

  0032b	8b 4d d4	 mov	 ecx, DWORD PTR $T10[ebp+20]
  0032e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00331	0f 82 8b 06 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00337	8b 55 c0	 mov	 edx, DWORD PTR $T10[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0033a	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0033b	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0033d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00343	72 14		 jb	 SHORT $LN325@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00345	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00348	83 c1 23	 add	 ecx, 35			; 00000023H
  0034b	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0034d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00350	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00353	0f 87 e3 07 00
	00		 ja	 $LN322@SetNumber
$LN325@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00359	51		 push	 ecx
  0035a	52		 push	 edx
  0035b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00360	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1911 : 		}

  00363	e9 5a 06 00 00	 jmp	 $LN23@SetNumber
$LN8@SetNumber:

; 1912 : 		else if ('/' == cChar)

  00368	80 f9 2f	 cmp	 cl, 47			; 0000002fH
  0036b	0f 85 c6 00 00
	00		 jne	 $LN10@SetNumber

; 1913 : 		{
; 1914 : 			strImageFileName = m_strPath + "slash.sub";

  00371	68 00 00 00 00	 push	 OFFSET ??_C@_09JMLAABIP@slash?4sub@
  00376	8d 87 30 01 00
	00		 lea	 eax, DWORD PTR [edi+304]
  0037c	50		 push	 eax
  0037d	8d 45 c0	 lea	 eax, DWORD PTR $T9[ebp]
  00380	50		 push	 eax
  00381	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00386	8b f0		 mov	 esi, eax
  00388	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3102 :         if (this == _STD addressof(_Right)) {

  0038b	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0038e	3b c6		 cmp	 eax, esi
  00390	74 68		 je	 SHORT $LN376@SetNumber

; 5011 :         if (_My_data._Large_string_engaged()) {

  00392	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00395	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00398	72 2c		 jb	 SHORT $LN348@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0039a	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0039d	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0039e	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  003a0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  003a6	72 14		 jb	 SHORT $LN358@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  003a8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  003ab	83 c1 23	 add	 ecx, 35			; 00000023H
  003ae	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003b0	83 c0 fc	 add	 eax, -4			; fffffffcH
  003b3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  003b6	0f 87 80 07 00
	00		 ja	 $LN322@SetNumber
$LN358@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  003bc	51		 push	 ecx
  003bd	52		 push	 edx
  003be	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  003c3	83 c4 08	 add	 esp, 8
$LN348@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  003c6	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  003cd	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  003d4	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 3140 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  003d8	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  003db	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  003df	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  003e4	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4998 :         _My_data._Mysize = 0;

  003e9	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  003f0	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  003f7	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN376@SetNumber:

; 5011 :         if (_My_data._Large_string_engaged()) {

  003fa	8b 4d d4	 mov	 ecx, DWORD PTR $T9[ebp+20]
  003fd	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00400	0f 82 bc 05 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00406	8b 55 c0	 mov	 edx, DWORD PTR $T9[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00409	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0040a	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0040c	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00412	72 14		 jb	 SHORT $LN399@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00414	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00417	83 c1 23	 add	 ecx, 35			; 00000023H
  0041a	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0041c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0041f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00422	0f 87 14 07 00
	00		 ja	 $LN322@SetNumber
$LN399@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00428	51		 push	 ecx
  00429	52		 push	 edx
  0042a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0042f	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1915 : 		}

  00432	e9 8b 05 00 00	 jmp	 $LN23@SetNumber
$LN10@SetNumber:

; 1916 : 		else if ('%' == cChar)

  00437	80 f9 25	 cmp	 cl, 37			; 00000025H
  0043a	0f 85 c6 00 00
	00		 jne	 $LN12@SetNumber

; 1917 : 		{
; 1918 : 			strImageFileName = m_strPath + "percent.sub";

  00440	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MHAKIBOD@percent?4sub@
  00445	8d 87 30 01 00
	00		 lea	 eax, DWORD PTR [edi+304]
  0044b	50		 push	 eax
  0044c	8d 45 c0	 lea	 eax, DWORD PTR $T8[ebp]
  0044f	50		 push	 eax
  00450	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00455	8b f0		 mov	 esi, eax
  00457	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3102 :         if (this == _STD addressof(_Right)) {

  0045a	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0045d	3b c6		 cmp	 eax, esi
  0045f	74 68		 je	 SHORT $LN471@SetNumber

; 5011 :         if (_My_data._Large_string_engaged()) {

  00461	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00464	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00467	72 2c		 jb	 SHORT $LN443@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00469	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0046c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0046d	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0046f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00475	72 14		 jb	 SHORT $LN453@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00477	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0047a	83 c1 23	 add	 ecx, 35			; 00000023H
  0047d	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0047f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00482	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00485	0f 87 b1 06 00
	00		 ja	 $LN322@SetNumber
$LN453@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0048b	51		 push	 ecx
  0048c	52		 push	 edx
  0048d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00492	83 c4 08	 add	 esp, 8
$LN443@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00495	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  0049c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  004a3	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 3140 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  004a7	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  004aa	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  004ae	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  004b3	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4998 :         _My_data._Mysize = 0;

  004b8	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  004bf	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  004c6	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN471@SetNumber:

; 5011 :         if (_My_data._Large_string_engaged()) {

  004c9	8b 4d d4	 mov	 ecx, DWORD PTR $T8[ebp+20]
  004cc	83 f9 10	 cmp	 ecx, 16			; 00000010H
  004cf	0f 82 ed 04 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004d5	8b 55 c0	 mov	 edx, DWORD PTR $T8[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  004d8	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004d9	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  004db	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  004e1	72 14		 jb	 SHORT $LN426@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  004e3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  004e6	83 c1 23	 add	 ecx, 35			; 00000023H
  004e9	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004eb	83 c0 fc	 add	 eax, -4			; fffffffcH
  004ee	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  004f1	0f 87 45 06 00
	00		 ja	 $LN322@SetNumber
$LN426@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  004f7	51		 push	 ecx
  004f8	52		 push	 edx
  004f9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  004fe	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1919 : 		}

  00501	e9 bc 04 00 00	 jmp	 $LN23@SetNumber
$LN12@SetNumber:

; 1920 : 		else if ('+' == cChar)

  00506	80 f9 2b	 cmp	 cl, 43			; 0000002bH
  00509	0f 85 c6 00 00
	00		 jne	 $LN14@SetNumber

; 1921 : 		{
; 1922 : 			strImageFileName = m_strPath + "plus.sub";

  0050f	68 00 00 00 00	 push	 OFFSET ??_C@_08FPHNCABK@plus?4sub@
  00514	8d 87 30 01 00
	00		 lea	 eax, DWORD PTR [edi+304]
  0051a	50		 push	 eax
  0051b	8d 45 c0	 lea	 eax, DWORD PTR $T7[ebp]
  0051e	50		 push	 eax
  0051f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00524	8b f0		 mov	 esi, eax
  00526	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3102 :         if (this == _STD addressof(_Right)) {

  00529	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0052c	3b c6		 cmp	 eax, esi
  0052e	74 68		 je	 SHORT $LN539@SetNumber

; 5011 :         if (_My_data._Large_string_engaged()) {

  00530	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00533	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00536	72 2c		 jb	 SHORT $LN511@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00538	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0053b	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0053c	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0053e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00544	72 14		 jb	 SHORT $LN521@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00546	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00549	83 c1 23	 add	 ecx, 35			; 00000023H
  0054c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0054e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00551	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00554	0f 87 e2 05 00
	00		 ja	 $LN322@SetNumber
$LN521@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0055a	51		 push	 ecx
  0055b	52		 push	 edx
  0055c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00561	83 c4 08	 add	 esp, 8
$LN511@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00564	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  0056b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00572	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 3140 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00576	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00579	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0057d	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00582	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4998 :         _My_data._Mysize = 0;

  00587	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  0058e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00595	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN539@SetNumber:

; 5011 :         if (_My_data._Large_string_engaged()) {

  00598	8b 4d d4	 mov	 ecx, DWORD PTR $T7[ebp+20]
  0059b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0059e	0f 82 1e 04 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005a4	8b 55 c0	 mov	 edx, DWORD PTR $T7[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  005a7	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005a8	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  005aa	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  005b0	72 14		 jb	 SHORT $LN494@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  005b2	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  005b5	83 c1 23	 add	 ecx, 35			; 00000023H
  005b8	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  005ba	83 c0 fc	 add	 eax, -4			; fffffffcH
  005bd	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  005c0	0f 87 76 05 00
	00		 ja	 $LN322@SetNumber
$LN494@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  005c6	51		 push	 ecx
  005c7	52		 push	 edx
  005c8	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  005cd	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1923 : 		}

  005d0	e9 ed 03 00 00	 jmp	 $LN23@SetNumber
$LN14@SetNumber:

; 1924 : 		else if ('m' == cChar)

  005d5	80 f9 6d	 cmp	 cl, 109			; 0000006dH
  005d8	0f 85 c6 00 00
	00		 jne	 $LN16@SetNumber

; 1925 : 		{
; 1926 : 			strImageFileName = m_strPath + "m.sub";

  005de	68 00 00 00 00	 push	 OFFSET ??_C@_05PINNHPFB@m?4sub@
  005e3	8d 87 30 01 00
	00		 lea	 eax, DWORD PTR [edi+304]
  005e9	50		 push	 eax
  005ea	8d 45 c0	 lea	 eax, DWORD PTR $T6[ebp]
  005ed	50		 push	 eax
  005ee	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  005f3	8b f0		 mov	 esi, eax
  005f5	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3102 :         if (this == _STD addressof(_Right)) {

  005f8	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  005fb	3b c6		 cmp	 eax, esi
  005fd	74 68		 je	 SHORT $LN580@SetNumber

; 5011 :         if (_My_data._Large_string_engaged()) {

  005ff	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00602	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00605	72 2c		 jb	 SHORT $LN552@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00607	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0060a	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0060b	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0060d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00613	72 14		 jb	 SHORT $LN562@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00615	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00618	83 c1 23	 add	 ecx, 35			; 00000023H
  0061b	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0061d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00620	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00623	0f 87 13 05 00
	00		 ja	 $LN322@SetNumber
$LN562@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00629	51		 push	 ecx
  0062a	52		 push	 edx
  0062b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00630	83 c4 08	 add	 esp, 8
$LN552@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00633	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  0063a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00641	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 3140 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00645	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00648	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0064c	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00651	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4998 :         _My_data._Mysize = 0;

  00656	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  0065d	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00664	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN580@SetNumber:

; 5011 :         if (_My_data._Large_string_engaged()) {

  00667	8b 4d d4	 mov	 ecx, DWORD PTR $T6[ebp+20]
  0066a	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0066d	0f 82 4f 03 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00673	8b 55 c0	 mov	 edx, DWORD PTR $T6[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00676	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00677	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00679	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0067f	72 14		 jb	 SHORT $LN603@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00681	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00684	83 c1 23	 add	 ecx, 35			; 00000023H
  00687	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00689	83 c0 fc	 add	 eax, -4			; fffffffcH
  0068c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0068f	0f 87 a7 04 00
	00		 ja	 $LN322@SetNumber
$LN603@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00695	51		 push	 ecx
  00696	52		 push	 edx
  00697	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0069c	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1927 : 		}

  0069f	e9 1e 03 00 00	 jmp	 $LN23@SetNumber
$LN16@SetNumber:

; 1928 : 		else if ('g' == cChar)

  006a4	80 f9 67	 cmp	 cl, 103			; 00000067H
  006a7	0f 85 c6 00 00
	00		 jne	 $LN18@SetNumber

; 1929 : 		{
; 1930 : 			strImageFileName = m_strPath + "g.sub";

  006ad	68 00 00 00 00	 push	 OFFSET ??_C@_05FJEGFMDH@g?4sub@
  006b2	8d 87 30 01 00
	00		 lea	 eax, DWORD PTR [edi+304]
  006b8	50		 push	 eax
  006b9	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  006bc	50		 push	 eax
  006bd	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  006c2	8b f0		 mov	 esi, eax
  006c4	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3102 :         if (this == _STD addressof(_Right)) {

  006c7	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  006ca	3b c6		 cmp	 eax, esi
  006cc	74 68		 je	 SHORT $LN648@SetNumber

; 5011 :         if (_My_data._Large_string_engaged()) {

  006ce	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  006d1	83 f9 10	 cmp	 ecx, 16			; 00000010H
  006d4	72 2c		 jb	 SHORT $LN620@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006d6	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  006d9	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006da	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  006dc	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  006e2	72 14		 jb	 SHORT $LN630@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  006e4	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  006e7	83 c1 23	 add	 ecx, 35			; 00000023H
  006ea	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006ec	83 c0 fc	 add	 eax, -4			; fffffffcH
  006ef	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  006f2	0f 87 44 04 00
	00		 ja	 $LN322@SetNumber
$LN630@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  006f8	51		 push	 ecx
  006f9	52		 push	 edx
  006fa	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  006ff	83 c4 08	 add	 esp, 8
$LN620@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00702	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00709	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00710	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 3140 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00714	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00717	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0071b	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00720	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4998 :         _My_data._Mysize = 0;

  00725	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  0072c	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00733	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN648@SetNumber:

; 5011 :         if (_My_data._Large_string_engaged()) {

  00736	8b 4d d4	 mov	 ecx, DWORD PTR $T5[ebp+20]
  00739	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0073c	0f 82 80 02 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00742	8b 55 c0	 mov	 edx, DWORD PTR $T5[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00745	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00746	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00748	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0074e	72 14		 jb	 SHORT $LN671@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00750	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00753	83 c1 23	 add	 ecx, 35			; 00000023H
  00756	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00758	83 c0 fc	 add	 eax, -4			; fffffffcH
  0075b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0075e	0f 87 d8 03 00
	00		 ja	 $LN322@SetNumber
$LN671@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00764	51		 push	 ecx
  00765	52		 push	 edx
  00766	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0076b	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1931 : 		}

  0076e	e9 4f 02 00 00	 jmp	 $LN23@SetNumber
$LN18@SetNumber:

; 1932 : 		else if ('p' == cChar)

  00773	80 f9 70	 cmp	 cl, 112			; 00000070H
  00776	0f 85 c6 00 00
	00		 jne	 $LN20@SetNumber

; 1933 : 		{
; 1934 : 			strImageFileName = m_strPath + "p.sub";

  0077c	68 00 00 00 00	 push	 OFFSET ??_C@_05EHJFGOBE@p?4sub@
  00781	8d 87 30 01 00
	00		 lea	 eax, DWORD PTR [edi+304]
  00787	50		 push	 eax
  00788	8d 45 c0	 lea	 eax, DWORD PTR $T4[ebp]
  0078b	50		 push	 eax
  0078c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00791	8b f0		 mov	 esi, eax
  00793	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3102 :         if (this == _STD addressof(_Right)) {

  00796	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  00799	3b c6		 cmp	 eax, esi
  0079b	74 68		 je	 SHORT $LN716@SetNumber

; 5011 :         if (_My_data._Large_string_engaged()) {

  0079d	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  007a0	83 f9 10	 cmp	 ecx, 16			; 00000010H
  007a3	72 2c		 jb	 SHORT $LN688@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007a5	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  007a8	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007a9	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  007ab	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  007b1	72 14		 jb	 SHORT $LN698@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  007b3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  007b6	83 c1 23	 add	 ecx, 35			; 00000023H
  007b9	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  007bb	83 c0 fc	 add	 eax, -4			; fffffffcH
  007be	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  007c1	0f 87 75 03 00
	00		 ja	 $LN322@SetNumber
$LN698@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  007c7	51		 push	 ecx
  007c8	52		 push	 edx
  007c9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  007ce	83 c4 08	 add	 esp, 8
$LN688@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  007d1	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  007d8	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  007df	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 3140 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  007e3	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  007e6	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  007ea	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  007ef	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4998 :         _My_data._Mysize = 0;

  007f4	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  007fb	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00802	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN716@SetNumber:

; 5011 :         if (_My_data._Large_string_engaged()) {

  00805	8b 4d d4	 mov	 ecx, DWORD PTR $T4[ebp+20]
  00808	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0080b	0f 82 b1 01 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00811	8b 55 c0	 mov	 edx, DWORD PTR $T4[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00814	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00815	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00817	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0081d	72 14		 jb	 SHORT $LN739@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0081f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00822	83 c1 23	 add	 ecx, 35			; 00000023H
  00825	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00827	83 c0 fc	 add	 eax, -4			; fffffffcH
  0082a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0082d	0f 87 09 03 00
	00		 ja	 $LN322@SetNumber
$LN739@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00833	51		 push	 ecx
  00834	52		 push	 edx
  00835	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0083a	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1935 : 		}

  0083d	e9 80 01 00 00	 jmp	 $LN23@SetNumber
$LN20@SetNumber:

; 1936 : 		else if (cChar >= '0' && cChar <= '9')

  00842	8a c1		 mov	 al, cl
  00844	2c 30		 sub	 al, 48			; 00000030H
  00846	3c 09		 cmp	 al, 9
  00848	0f 87 a9 02 00
	00		 ja	 $LN22@SetNumber

; 1937 : 		{
; 1938 : 			strImageFileName = m_strPath;

  0084e	8d 87 30 01 00
	00		 lea	 eax, DWORD PTR [edi+304]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3306 :         if (this == _STD addressof(_Right)) {

  00854	8d 7d d8	 lea	 edi, DWORD PTR _strImageFileName$12[ebp]
  00857	3b f8		 cmp	 edi, eax
  00859	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  0085c	74 21		 je	 SHORT $LN771@SetNumber

; 2293 :         if (_Large_string_engaged()) {

  0085e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 3346 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00862	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]

; 2293 :         if (_Large_string_engaged()) {

  00865	72 02		 jb	 SHORT $LN775@SetNumber

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  00867	8b 00		 mov	 eax, DWORD PTR [eax]
$LN775@SetNumber:

; 3346 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00869	51		 push	 ecx
  0086a	50		 push	 eax
  0086b	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  0086e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00873	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  00876	8b 75 e8	 mov	 esi, DWORD PTR _strImageFileName$12[ebp+16]
  00879	8a 4d b7	 mov	 cl, BYTE PTR _cChar$1$[ebp]
  0087c	89 55 bc	 mov	 DWORD PTR __Old_capacity$1$[ebp], edx
$LN771@SetNumber:

; 4198 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  0087f	3b f2		 cmp	 esi, edx

; 4199 :         if (_Old_size < _Mypair._Myval2._Myres) {

  00881	73 1d		 jae	 SHORT $LN782@SetNumber

; 4200 :             _ASAN_STRING_MODIFY(1);
; 4201 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  00883	8d 46 01	 lea	 eax, DWORD PTR [esi+1]

; 2284 :         if (_Large_string_engaged()) {

  00886	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4201 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  00889	89 45 e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], eax

; 2283 :         value_type* _Result = _Bx._Buf;

  0088c	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]

; 2284 :         if (_Large_string_engaged()) {

  0088f	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]

; 4203 :             _Traits::assign(_Ptr[_Old_size], _Ch);

  00893	88 0c 30	 mov	 BYTE PTR [eax+esi], cl

; 4204 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

  00896	c6 44 30 01 00	 mov	 BYTE PTR [eax+esi+1], 0

; 4205 :             return;

  0089b	e9 13 01 00 00	 jmp	 $LN792@SetNumber
$LN782@SetNumber:

; 4938 :         const size_type _Old_size = _My_data._Mysize;

  008a0	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  008a5	2b c6		 sub	 eax, esi

; 4939 :         if (max_size() - _Old_size < _Size_increase) {

  008a7	83 f8 01	 cmp	 eax, 1
  008aa	0f 82 91 02 00
	00		 jb	 $LN846@SetNumber

; 4941 :         }
; 4942 : 
; 4943 :         const size_type _New_size     = _Old_size + _Size_increase;

  008b0	8d 7e 01	 lea	 edi, DWORD PTR [esi+1]

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  008b3	83 cf 0f	 or	 edi, 15			; 0000000fH
  008b6	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  008bc	76 18		 jbe	 SHORT $LN797@SetNumber

; 4885 :             return _Max;

  008be	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  008c3	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  008c8	50		 push	 eax
  008c9	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  008ce	8b 55 bc	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]
  008d1	83 c4 04	 add	 esp, 4
  008d4	eb 5b		 jmp	 SHORT $LN868@SetNumber
$LN797@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4888 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  008d6	8b ca		 mov	 ecx, edx
  008d8	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  008dd	d1 e9		 shr	 ecx, 1
  008df	2b c1		 sub	 eax, ecx
  008e1	3b d0		 cmp	 edx, eax
  008e3	76 18		 jbe	 SHORT $LN798@SetNumber

; 4889 :             return _Max;

  008e5	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  008ea	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  008ef	50		 push	 eax
  008f0	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  008f5	8b 55 bc	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]
  008f8	83 c4 04	 add	 esp, 4
  008fb	eb 34		 jmp	 SHORT $LN868@SetNumber
$LN798@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4892 :         return (_STD max)(_Masked, _Old + _Old / 2);

  008fd	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  00900	3b f8		 cmp	 edi, eax
  00902	0f 42 f8	 cmovb	 edi, eax

; 4947 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00905	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00908	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0090d	72 0e		 jb	 SHORT $LN805@SetNumber

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0090f	50		 push	 eax
  00910	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00915	8b 55 bc	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]
  00918	83 c4 04	 add	 esp, 4
  0091b	eb 14		 jmp	 SHORT $LN868@SetNumber
$LN805@SetNumber:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0091d	85 c0		 test	 eax, eax
  0091f	74 0e		 je	 SHORT $LN806@SetNumber

; 77   :         return ::operator new(_Bytes);

  00921	50		 push	 eax
  00922	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  00927	8b 55 bc	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]

; 77   :         return ::operator new(_Bytes);

  0092a	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0092d	eb 02		 jmp	 SHORT $LN868@SetNumber
$LN806@SetNumber:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0092f	33 c0		 xor	 eax, eax
$LN868@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4956 :         _My_data._Mysize      = _New_size;

  00931	89 45 ac	 mov	 DWORD PTR $T2[ebp], eax
  00934	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00937	89 4d e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], ecx

; 4957 :         _My_data._Myres       = _New_capacity;

  0093a	89 7d ec	 mov	 DWORD PTR _strImageFileName$12[ebp+20], edi

; 4958 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4959 :         if (_BUF_SIZE <= _Old_capacity) {

  0093d	56		 push	 esi
  0093e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00941	72 4f		 jb	 SHORT $LN791@SetNumber

; 4960 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00943	8b 4d d8	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00946	51		 push	 ecx
  00947	50		 push	 eax

; 4960 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00948	89 4d b8	 mov	 DWORD PTR __Back_shift$1$[ebp], ecx

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0094b	e8 00 00 00 00	 call	 _memcpy

; 4212 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  00950	8b 7d ac	 mov	 edi, DWORD PTR $T2[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00953	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4962 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00956	8b 4d bc	 mov	 ecx, DWORD PTR __Old_capacity$1$[ebp]

; 4212 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  00959	8a 45 b7	 mov	 al, BYTE PTR _cChar$1$[ebp]

; 4962 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  0095c	41		 inc	 ecx

; 4212 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  0095d	88 04 3e	 mov	 BYTE PTR [esi+edi], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00960	8b 45 b8	 mov	 eax, DWORD PTR __Back_shift$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4213 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  00963	c6 44 3e 01 00	 mov	 BYTE PTR [esi+edi+1], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00968	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0096e	72 16		 jb	 SHORT $LN828@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00970	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00973	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00976	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00978	83 c0 fc	 add	 eax, -4			; fffffffcH
  0097b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0097e	0f 87 b8 01 00
	00		 ja	 $LN322@SetNumber

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00984	8b c2		 mov	 eax, edx
$LN828@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00986	51		 push	 ecx
  00987	50		 push	 eax
  00988	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0098d	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4964 :         } else {

  00990	eb 1b		 jmp	 SHORT $LN869@SetNumber
$LN791@SetNumber:

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00992	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  00995	51		 push	 ecx
  00996	50		 push	 eax
  00997	e8 00 00 00 00	 call	 _memcpy

; 4212 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  0099c	8b 7d ac	 mov	 edi, DWORD PTR $T2[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0099f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4212 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  009a2	8a 45 b7	 mov	 al, BYTE PTR _cChar$1$[ebp]
  009a5	88 04 3e	 mov	 BYTE PTR [esi+edi], al

; 4213 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  009a8	c6 44 3e 01 00	 mov	 BYTE PTR [esi+edi+1], 0
$LN869@SetNumber:

; 3446 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  009ad	89 7d d8	 mov	 DWORD PTR _strImageFileName$12[ebp], edi
  009b0	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
$LN792@SetNumber:
  009b3	6a 04		 push	 4
  009b5	68 00 00 00 00	 push	 OFFSET ??_C@_04DLFHDFGL@?4sub@
  009ba	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  009bd	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN23@SetNumber:

; 2293 :         if (_Large_string_engaged()) {

  009c2	83 7d ec 10	 cmp	 DWORD PTR _strImageFileName$12[ebp+20], 16 ; 00000010H
  009c6	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  009c9	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1947 : 		if (!CResourceManager::Instance().IsFileExist(strImageFileName.c_str()))

  009cd	50		 push	 eax
  009ce	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@SA_NPBD@Z ; CResourceManager::IsFileExist
  009d3	83 c4 04	 add	 esp, 4
  009d6	84 c0		 test	 al, al
  009d8	75 44		 jne	 SHORT $LN24@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  009da	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1949 : 			continue;

  009dd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  009e4	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  009e7	0f 82 11 01 00
	00		 jb	 $LN2@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009ed	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  009f0	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009f1	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  009f3	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  009f9	72 14		 jb	 SHORT $LN198@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  009fb	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  009fe	83 c1 23	 add	 ecx, 35			; 00000023H
  00a01	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a03	83 c0 fc	 add	 eax, -4			; fffffffcH
  00a06	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00a09	0f 87 2d 01 00
	00		 ja	 $LN322@SetNumber
$LN198@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00a0f	51		 push	 ecx
  00a10	52		 push	 edx
  00a11	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00a16	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1949 : 			continue;

  00a19	e9 e0 00 00 00	 jmp	 $LN2@SetNumber
$LN24@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00a1e	83 7d ec 10	 cmp	 DWORD PTR _strImageFileName$12[ebp+20], 16 ; 00000010H
  00a22	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1952 : 		CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strImageFileName.c_str());

  00a25	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  00a2b	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1952 : 		CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strImageFileName.c_str());

  00a2f	50		 push	 eax
  00a30	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00a35	8b f0		 mov	 esi, eax

; 1953 : 
; 1954 : 		CGraphicImageInstance * pInstance = CGraphicImageInstance::New();

  00a37	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 1955 : 		pInstance->SetImagePointer(pImage);

  00a3c	56		 push	 esi
  00a3d	8b f0		 mov	 esi, eax
  00a3f	89 45 b8	 mov	 DWORD PTR _pInstance$3[ebp], eax
  00a42	8b ce		 mov	 ecx, esi
  00a44	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1956 : 		pInstance->SetDiffuseColor(m_diffuseColor.r, m_diffuseColor.g, m_diffuseColor.b, m_diffuseColor.a);

  00a49	0f 10 87 7c 01
	00 00		 movups	 xmm0, XMMWORD PTR [edi+380]
  00a50	83 ec 10	 sub	 esp, 16			; 00000010H
  00a53	8b ce		 mov	 ecx, esi
  00a55	0f 11 04 24	 movups	 XMMWORD PTR [esp], xmm0
  00a59	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00a5e	8b 87 64 01 00
	00		 mov	 eax, DWORD PTR [edi+356]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1957 : 		m_ImageInstanceVector.push_back(pInstance);

  00a64	8d 8f 60 01 00
	00		 lea	 ecx, DWORD PTR [edi+352]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00a6a	3b 87 68 01 00
	00		 cmp	 eax, DWORD PTR [edi+360]
  00a70	74 0b		 je	 SHORT $LN206@SetNumber

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00a72	89 30		 mov	 DWORD PTR [eax], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00a74	83 87 64 01 00
	00 04		 add	 DWORD PTR [edi+356], 4

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00a7b	eb 0d		 jmp	 SHORT $LN205@SetNumber
$LN206@SetNumber:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00a7d	8d 55 b8	 lea	 edx, DWORD PTR _pInstance$3[ebp]
  00a80	52		 push	 edx
  00a81	50		 push	 eax
  00a82	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
  00a87	8b 75 b8	 mov	 esi, DWORD PTR _pInstance$3[ebp]
$LN205@SetNumber:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1959 : 		m_dwWidthSummary += pInstance->GetWidth();

  00a8a	8b ce		 mov	 ecx, esi
  00a8c	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00a91	01 87 74 01 00
	00		 add	 DWORD PTR [edi+372], eax

; 1960 : 		m_dwMaxHeight = max(m_dwMaxHeight, pInstance->GetHeight());

  00a97	8b ce		 mov	 ecx, esi
  00a99	8b 87 78 01 00
	00		 mov	 eax, DWORD PTR [edi+376]
  00a9f	89 45 b8	 mov	 DWORD PTR tv3899[ebp], eax
  00aa2	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00aa7	39 45 b8	 cmp	 DWORD PTR tv3899[ebp], eax
  00aaa	76 05		 jbe	 SHORT $LN26@SetNumber
  00aac	8b 45 b8	 mov	 eax, DWORD PTR tv3899[ebp]
  00aaf	eb 07		 jmp	 SHORT $LN27@SetNumber
$LN26@SetNumber:
  00ab1	8b ce		 mov	 ecx, esi
  00ab3	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
$LN27@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  00ab8	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1960 : 		m_dwMaxHeight = max(m_dwMaxHeight, pInstance->GetHeight());

  00abb	89 87 78 01 00
	00		 mov	 DWORD PTR [edi+376], eax

; 1961 : 	}

  00ac1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  00ac8	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  00acb	72 31		 jb	 SHORT $LN2@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00acd	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00ad0	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ad1	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00ad3	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00ad9	72 10		 jb	 SHORT $LN239@SetNumber

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00adb	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00ade	83 c1 23	 add	 ecx, 35			; 00000023H
  00ae1	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00ae3	83 c0 fc	 add	 eax, -4			; fffffffcH
  00ae6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00ae9	77 51		 ja	 SHORT $LN322@SetNumber
$LN239@SetNumber:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00aeb	51		 push	 ecx
  00aec	52		 push	 edx
  00aed	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00af2	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1961 : 	}

  00af5	eb 07		 jmp	 SHORT $LN2@SetNumber
$LN22@SetNumber:

; 1939 : 			strImageFileName += cChar;
; 1940 : 			strImageFileName += ".sub";
; 1941 : 		}
; 1942 : 		else
; 1943 : 		{
; 1944 : 			continue;

  00af7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
$LN2@SetNumber:

; 1899 : 	for (DWORD i = 0; i < m_strNumber.size(); ++i)

  00afe	8b 4d a8	 mov	 ecx, DWORD PTR _i$1$[ebp]
  00b01	41		 inc	 ecx
  00b02	89 4d a8	 mov	 DWORD PTR _i$1$[ebp], ecx
  00b05	3b 8f 58 01 00
	00		 cmp	 ecx, DWORD PTR [edi+344]
  00b0b	73 0b		 jae	 SHORT $LN855@SetNumber
  00b0d	8d b7 48 01 00
	00		 lea	 esi, DWORD PTR [edi+328]
  00b13	e9 18 f6 ff ff	 jmp	 $LL4@SetNumber
$LN855@SetNumber:

; 1962 : 
; 1963 : 	OnChangePosition();

  00b18	8b 07		 mov	 eax, DWORD PTR [edi]
  00b1a	8b cf		 mov	 ecx, edi
  00b1c	ff 50 1c	 call	 DWORD PTR [eax+28]
$LN1@SetNumber:

; 1964 : }

  00b1f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00b22	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00b29	59		 pop	 ecx
  00b2a	5f		 pop	 edi
  00b2b	5e		 pop	 esi
  00b2c	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b2f	33 cd		 xor	 ecx, ebp
  00b31	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b36	8b e5		 mov	 esp, ebp
  00b38	5d		 pop	 ebp
  00b39	c2 04 00	 ret	 4
$LN322@SetNumber:
  00b3c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN846@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4940 :             _Xlen_string(); // result too long

  00b41	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN866@SetNumber:
  00b46	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetNumber@CNumberLine@UI@@QAEXPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetNumber@CNumberLine@UI@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetNumber@CNumberLine@UI@@QAEXPBD@Z ENDP		; UI::CNumberLine::SetNumber
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetVerticalAlign@CNumberLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetVerticalAlign@CNumberLine@UI@@QAEXH@Z PROC		; UI::CNumberLine::SetVerticalAlign, COMDAT
; _this$ = ecx

; 1885 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1886 : 	m_iVerticalAlign = iType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iType$[ebp]
  00006	89 81 70 01 00
	00		 mov	 DWORD PTR [ecx+368], eax

; 1887 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetVerticalAlign@CNumberLine@UI@@QAEXH@Z ENDP		; UI::CNumberLine::SetVerticalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z PROC	; UI::CNumberLine::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 1881 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1882 : 	m_iHorizontalAlign = iType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iType$[ebp]
  00006	89 81 6c 01 00
	00		 mov	 DWORD PTR [ecx+364], eax

; 1883 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ENDP	; UI::CNumberLine::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetPath@CNumberLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szPath$ = 8						; size = 4
?SetPath@CNumberLine@UI@@QAEXPBD@Z PROC			; UI::CNumberLine::SetPath, COMDAT
; _this$ = ecx

; 1877 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szPath$[ebp]
  00006	8b c2		 mov	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1877 : {

  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000f	90		 npad	 1
$LL9@SetPath:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL9@SetPath
  00017	2b c7		 sub	 eax, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1878 : 	m_strPath = c_szPath;

  00019	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3549 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001f	50		 push	 eax
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1879 : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?SetPath@CNumberLine@UI@@QAEXPBD@Z ENDP			; UI::CNumberLine::SetPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CNumberLine@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CNumberLine@UI@@UAE@XZ PROC				; UI::CNumberLine::~CNumberLine, COMDAT
; _this$ = ecx

; 1872 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CNumberLine@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@

; 1873 : 	ClearNumber();

  0002b	e8 00 00 00 00	 call	 ?ClearNumber@CNumberLine@UI@@IAEXXZ ; UI::CNumberLine::ClearNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00030	8b 86 60 01 00
	00		 mov	 eax, DWORD PTR [esi+352]
  00036	85 c0		 test	 eax, eax
  00038	74 51		 je	 SHORT $LN6@CNumberLin

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003a	8b 8e 68 01 00
	00		 mov	 ecx, DWORD PTR [esi+360]
  00040	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00045	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004b	72 16		 jb	 SHORT $LN22@CNumberLin

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0004d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00050	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00053	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	83 c0 fc	 add	 eax, -4			; fffffffcH
  00058	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005b	0f 87 e7 00 00
	00		 ja	 $LN74@CNumberLin

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00061	8b c2		 mov	 eax, edx
$LN22@CNumberLin:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00063	51		 push	 ecx
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0006a	c7 86 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+352], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00074	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00077	c7 86 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+356], 0

; 2114 :             _Myend   = nullptr;

  00081	c7 86 68 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+360], 0
$LN6@CNumberLin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  0008b	8b 8e 5c 01 00
	00		 mov	 ecx, DWORD PTR [esi+348]
  00091	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  00094	72 2f		 jb	 SHORT $LN40@CNumberLin
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00096	8b 86 48 01 00
	00		 mov	 eax, DWORD PTR [esi+328]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0009c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000a3	72 16		 jb	 SHORT $LN50@CNumberLin

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000a5	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000a8	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000ab	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ad	83 c0 fc	 add	 eax, -4			; fffffffcH
  000b0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000b3	0f 87 8f 00 00
	00		 ja	 $LN74@CNumberLin

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000b9	8b c2		 mov	 eax, edx
$LN50@CNumberLin:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000bb	51		 push	 ecx
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c2	83 c4 08	 add	 esp, 8
$LN40@CNumberLin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  000c5	c7 86 58 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+344], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  000cf	c7 86 5c 01 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+348], 15	; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000d9	c6 86 48 01 00
	00 00		 mov	 BYTE PTR [esi+328], 0

; 2301 :         return _BUF_SIZE <= _Myres;

  000e0	8b 8e 44 01 00
	00		 mov	 ecx, DWORD PTR [esi+324]
  000e6	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  000e9	72 2b		 jb	 SHORT $LN67@CNumberLin
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000eb	8b 86 30 01 00
	00		 mov	 eax, DWORD PTR [esi+304]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  000f1	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f8	72 12		 jb	 SHORT $LN77@CNumberLin

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000fa	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00100	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00102	83 c0 fc	 add	 eax, -4			; fffffffcH
  00105	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00108	77 3e		 ja	 SHORT $LN74@CNumberLin

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0010a	8b c2		 mov	 eax, edx
$LN77@CNumberLin:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010c	51		 push	 ecx
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00113	83 c4 08	 add	 esp, 8
$LN67@CNumberLin:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1874 : }

  00116	8b ce		 mov	 ecx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00118	c7 86 40 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+320], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00122	c7 86 44 01 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+324], 15	; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0012c	c6 86 30 01 00
	00 00		 mov	 BYTE PTR [esi+304], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1874 : }

  00133	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00138	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0013b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00142	59		 pop	 ecx
  00143	5e		 pop	 esi
  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c3		 ret	 0
$LN74@CNumberLin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00148	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN83@CNumberLin:
  0014d	cc		 int	 3
  0014e	cc		 int	 3
  0014f	cc		 int	 3
  00150	cc		 int	 3
  00151	cc		 int	 3
  00152	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CNumberLine@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CNumberLine@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CNumberLine@UI@@UAE@XZ ENDP				; UI::CNumberLine::~CNumberLine
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pParent$ = 8						; size = 4
??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z PROC		; UI::CNumberLine::CNumberLine, COMDAT
; _this$ = ecx

; 1861 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1860 : CNumberLine::CNumberLine(CWindow * pParent) : CWindow(NULL)

  00029	6a 00		 push	 0
  0002b	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1861 : {

  00030	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
  00036	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@
  0003c	0f 57 c0	 xorps	 xmm0, xmm0
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00046	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 4998 :         _My_data._Mysize = 0;

  00049	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  00050	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00057	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0005a	0f 11 86 48 01
	00 00		 movups	 XMMWORD PTR [esi+328], xmm0

; 4998 :         _My_data._Mysize = 0;

  00061	c7 86 58 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+344], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  0006b	c7 86 5c 01 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+348], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00075	c6 86 48 01 00
	00 00		 mov	 BYTE PTR [esi+328], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0007c	c7 86 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+352], 0
  00086	c7 86 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+356], 0
  00090	c7 86 68 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+360], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3549 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0009a	6a 1d		 push	 29			; 0000001dH
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1861 : {

  000a1	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3549 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000a5	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1869 : 	m_pParent = pParent;

  000aa	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  000ad	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax

; 1870 : }

  000b3	8b c6		 mov	 eax, esi
  000b5	c7 86 6c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+364], 0
  000bf	c7 86 70 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+368], 0
  000c9	c7 86 74 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+372], 0
  000d3	c7 86 78 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+376], 0
  000dd	c7 86 88 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+392], 1065353216 ; 3f800000H
  000e7	c7 86 84 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+388], 1065353216 ; 3f800000H
  000f1	c7 86 80 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+384], 1065353216 ; 3f800000H
  000fb	c7 86 7c 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+380], 1065353216 ; 3f800000H
  00105	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00108	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010f	59		 pop	 ecx
  00110	5e		 pop	 esi
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 48 01 00
	00		 add	 ecx, 328		; 00000148H
  0001f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 60 01 00
	00		 add	 ecx, 352		; 00000160H
  0002d	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ENDP		; UI::CNumberLine::CNumberLine
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CNumberLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CNumberLine@UI@@QAE@PAU_object@@@Z PROC		; UI::CNumberLine::CNumberLine, COMDAT
; _this$ = ecx

; 1852 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNumberLine@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1851 : CNumberLine::CNumberLine(PyObject * ppyObject) : CWindow(ppyObject)

  00029	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1852 : {

  00031	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@
  0003d	0f 57 c0	 xorps	 xmm0, xmm0
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00047	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 4998 :         _My_data._Mysize = 0;

  0004a	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  00051	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00058	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0005b	0f 11 86 48 01
	00 00		 movups	 XMMWORD PTR [esi+328], xmm0

; 4998 :         _My_data._Mysize = 0;

  00062	c7 86 58 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+344], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  0006c	c7 86 5c 01 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+348], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00076	c6 86 48 01 00
	00 00		 mov	 BYTE PTR [esi+328], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0007d	c7 86 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+352], 0
  00087	c7 86 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+356], 0
  00091	c7 86 68 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+360], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3549 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0009b	6a 1d		 push	 29			; 0000001dH
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1852 : {

  000a2	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3549 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000a6	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1854 : 	m_iHorizontalAlign = HORIZONTAL_ALIGN_LEFT;

  000ab	c7 86 6c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+364], 0

; 1855 : 	m_iVerticalAlign = VERTICAL_ALIGN_TOP;
; 1856 : 	m_dwWidthSummary = 0;
; 1857 : 	m_dwMaxHeight = 0;
; 1858 : 	m_diffuseColor.r = m_diffuseColor.g = m_diffuseColor.b = m_diffuseColor.a = 1.0f;
; 1859 : }

  000b5	8b c6		 mov	 eax, esi
  000b7	c7 86 70 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+368], 0
  000c1	c7 86 74 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+372], 0
  000cb	c7 86 78 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+376], 0
  000d5	c7 86 88 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+392], 1065353216 ; 3f800000H
  000df	c7 86 84 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+388], 1065353216 ; 3f800000H
  000e9	c7 86 80 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+384], 1065353216 ; 3f800000H
  000f3	c7 86 7c 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+380], 1065353216 ; 3f800000H
  000fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00100	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00107	59		 pop	 ecx
  00108	5e		 pop	 esi
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 48 01 00
	00		 add	 ecx, 328		; 00000148H
  0001f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 60 01 00
	00		 add	 ecx, 352		; 00000160H
  0002d	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$??0CNumberLine@UI@@QAE@PAU_object@@@Z:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNumberLine@UI@@QAE@PAU_object@@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNumberLine@UI@@QAE@PAU_object@@@Z ENDP		; UI::CNumberLine::CNumberLine
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CNumberLine@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CNumberLine@UI@@SAKXZ PROC			; UI::CNumberLine::Type, COMDAT

; 1836 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CNumberLine@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1837 : 	static DWORD s_dwType = GetCRC32("CNumberLine", strlen("CNumberLine"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CNumberLine@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1838 : 	return (s_dwType);
; 1839 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CNumberLine@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1837 : 	static DWORD s_dwType = GetCRC32("CNumberLine", strlen("CNumberLine"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CNumberLine@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CNumberLine@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 0b		 push	 11			; 0000000bH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HGOBFKBB@CNumberLine@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CNumberLine@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CNumberLine@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CNumberLine@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CNumberLine@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CNumberLine@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CNumberLine@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CNumberLine@UI@@SAKXZ ENDP			; UI::CNumberLine::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCTextLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextLine@UI@@UAEPAXI@Z PROC			; UI::CTextLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CTextLine@UI@@UAE@XZ	; UI::CTextLine::~CTextLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 e8 01 00 00	 push	 488			; 000001e8H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCTextLine@UI@@UAEPAXI@Z ENDP			; UI::CTextLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CTextLine@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CTextLine@UI@@MAEHK@Z PROC			; UI::CTextLine::OnIsType, COMDAT
; _this$ = ecx

; 1609 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1610 : 	if (CTextLine::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CTextLine@UI@@SAKXZ ; UI::CTextLine::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 1611 : 	{
; 1612 : 		return TRUE;
; 1613 : 	}
; 1614 : 
; 1615 : 	return FALSE;
; 1616 : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CTextLine@UI@@MAEHK@Z ENDP			; UI::CTextLine::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
;	COMDAT ?OnUpdateRenderBox@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdateRenderBox@CTextLine@UI@@MAEXXZ PROC		; UI::CTextLine::OnUpdateRenderBox, COMDAT
; _this$ = ecx

; 439  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 440  : 		UpdateTextLineRenderBox();

  00003	e8 00 00 00 00	 call	 ?UpdateTextLineRenderBox@CWindow@UI@@QAEXXZ ; UI::CWindow::UpdateTextLineRenderBox

; 441  : 		m_TextInstance.SetRenderBox(m_renderBox);

  00008	8d 86 94 00 00
	00		 lea	 eax, DWORD PTR [esi+148]
  0000e	50		 push	 eax
  0000f	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
  00015	e8 00 00 00 00	 call	 ?SetRenderBox@CGraphicTextInstance@@QAEXAAUtagRECT@@@Z ; CGraphicTextInstance::SetRenderBox
  0001a	5e		 pop	 esi

; 442  : 	}

  0001b	c3		 ret	 0
?OnUpdateRenderBox@CTextLine@UI@@MAEXXZ ENDP		; UI::CTextLine::OnUpdateRenderBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetText@CTextLine@UI@@MAEXPBD@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
?OnSetText@CTextLine@UI@@MAEXPBD@Z PROC			; UI::CTextLine::OnSetText, COMDAT
; _this$ = ecx

; 1742 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 1743 : 	m_TextInstance.SetValue(c_szText);

  00007	6a ff		 push	 -1
  00009	ff 75 08	 push	 DWORD PTR _c_szText$[ebp]
  0000c	8d 8f 30 01 00
	00		 lea	 ecx, DWORD PTR [edi+304]
  00012	e8 00 00 00 00	 call	 ?SetValue@CGraphicTextInstance@@QAEXPBDI@Z ; CGraphicTextInstance::SetValue

; 1744 : 	m_TextInstance.Update();

  00017	8d 8f 30 01 00
	00		 lea	 ecx, DWORD PTR [edi+304]
  0001d	e8 00 00 00 00	 call	 ?Update@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Update

; 1745 : #ifdef INGAME_WIKI
; 1746 : 	if (m_isInsideRender)

  00022	83 bf 90 00 00
	00 00		 cmp	 DWORD PTR [edi+144], 0
  00029	74 07		 je	 SHORT $LN2@OnSetText

; 1747 : 	{
; 1748 : 		UpdateRenderBoxRecursive();

  0002b	8b cf		 mov	 ecx, edi
  0002d	e8 00 00 00 00	 call	 ?UpdateRenderBoxRecursive@CWindow@UI@@QAEXXZ ; UI::CWindow::UpdateRenderBoxRecursive
$LN2@OnSetText:

; 1749 : 	}
; 1750 : #endif
; 1751 : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?OnSetText@CTextLine@UI@@MAEXPBD@Z ENDP			; UI::CTextLine::OnSetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CTextLine@UI@@MAEXXZ PROC		; UI::CTextLine::OnChangePosition, COMDAT
; _this$ = ecx

; 1823 : {

  00000	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]

; 1824 : 	// FOR_ARABIC_ALIGN
; 1825 : 	//if (m_TextInstance.GetHorizontalAlign() == CGraphicTextInstance::HORIZONTAL_ALIGN_ARABIC)
; 1826 : 	{
; 1827 : 		m_TextInstance.SetPosition(m_rect.left, m_rect.top);

  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00008	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0000b	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  00013	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00019	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0001e	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00024	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00027	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002c	e8 00 00 00 00	 call	 ?SetPosition@CGraphicTextInstance@@QAEXMMM@Z ; CGraphicTextInstance::SetPosition

; 1828 : 	}
; 1829 : }

  00031	c3		 ret	 0
?OnChangePosition@CTextLine@UI@@MAEXXZ ENDP		; UI::CTextLine::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CTextLine@UI@@MAEXXZ PROC			; UI::CTextLine::OnRender, COMDAT
; _this$ = ecx

; 1783 : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f1		 mov	 esi, ecx

; 1784 : 	PyCallClassMemberFunc(m_poHandler, "OnRenderSelected", BuildEmptyTuple());

  00004	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CELBIPME@OnRenderSelected@
  0000f	ff 76 7c	 push	 DWORD PTR [esi+124]
  00012	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 1785 : 
; 1786 : 	RECT* clipRect = nullptr;
; 1787 : 	if (m_clipRect.left != m_clipRect.right || m_clipRect.top != m_clipRect.bottom)

  00017	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001d	33 ff		 xor	 edi, edi
  0001f	3b 46 4c	 cmp	 eax, DWORD PTR [esi+76]
  00022	75 08		 jne	 SHORT $LN3@OnRender
  00024	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  00027	3b 46 50	 cmp	 eax, DWORD PTR [esi+80]
  0002a	74 03		 je	 SHORT $LN2@OnRender
$LN3@OnRender:

; 1788 : 		clipRect = &m_clipRect;

  0002c	8d 7e 44	 lea	 edi, DWORD PTR [esi+68]
$LN2@OnRender:

; 1789 : 
; 1790 : 	if (IsShow())

  0002f	8b 06		 mov	 eax, DWORD PTR [esi]
  00031	8b ce		 mov	 ecx, esi
  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	ff d0		 call	 eax
  00038	84 c0		 test	 al, al
  0003a	74 0c		 je	 SHORT $LN4@OnRender

; 1791 : 	{
; 1792 : 		m_TextInstance.Render(clipRect);

  0003c	57		 push	 edi
  0003d	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
  00043	e8 00 00 00 00	 call	 ?Render@CGraphicTextInstance@@QAEXPAUtagRECT@@@Z ; CGraphicTextInstance::Render
$LN4@OnRender:

; 1793 : 	}
; 1794 : 
; 1795 : 	CWindow::OnRender();

  00048	5f		 pop	 edi
  00049	8b ce		 mov	 ecx, esi
  0004b	5e		 pop	 esi
  0004c	e9 00 00 00 00	 jmp	 ?OnRender@CWindow@UI@@UAEXXZ ; UI::CWindow::OnRender
?OnRender@CTextLine@UI@@MAEXXZ ENDP			; UI::CTextLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CTextLine@UI@@MAEXXZ PROC			; UI::CTextLine::OnUpdate, COMDAT
; _this$ = ecx

; 1774 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1775 : 	if (IsShow())

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00008	ff d0		 call	 eax
  0000a	84 c0		 test	 al, al
  0000c	74 0b		 je	 SHORT $LN2@OnUpdate

; 1776 : 	{
; 1777 : 		m_TextInstance.Update();

  0000e	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
  00014	e8 00 00 00 00	 call	 ?Update@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Update
$LN2@OnUpdate:

; 1778 : 	}
; 1779 : 
; 1780 : 	CWindow::OnUpdate();

  00019	8b ce		 mov	 ecx, esi
  0001b	5e		 pop	 esi
  0001c	e9 00 00 00 00	 jmp	 ?OnUpdate@CWindow@UI@@UAEXXZ ; UI::CWindow::OnUpdate
?OnUpdate@CTextLine@UI@@MAEXXZ ENDP			; UI::CTextLine::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CTextLine@UI@@UAEXMMMM@Z
_TEXT	SEGMENT
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CTextLine@UI@@UAEXMMMM@Z PROC		; UI::CTextLine::SetRenderingRect, COMDAT
; _this$ = ecx

; 1691 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1692 : 	m_TextInstance.SetRenderingRect(fLeft, fTop, fRight, fBottom);

  00003	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00008	83 ec 10	 sub	 esp, 16			; 00000010H
  0000b	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00011	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00017	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  0001c	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00022	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00027	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  00032	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00037	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicTextInstance@@QAEXMMMM@Z ; CGraphicTextInstance::SetRenderingRect

; 1693 : }

  0003c	5d		 pop	 ebp
  0003d	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CTextLine@UI@@UAEXMMMM@Z ENDP		; UI::CTextLine::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetRenderingRect@CTextLine@UI@@UAEXXZ
_TEXT	SEGMENT
_iTextWidth$ = -8					; size = 4
_iTextHeight$ = -4					; size = 4
?OnSetRenderingRect@CTextLine@UI@@UAEXXZ PROC		; UI::CTextLine::OnSetRenderingRect, COMDAT
; _this$ = ecx

; 1815 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1816 : 	int iTextWidth, iTextHeight;
; 1817 : 	GetTextSize(&iTextWidth, &iTextHeight);

  00006	8d 45 fc	 lea	 eax, DWORD PTR _iTextHeight$[ebp]
  00009	56		 push	 esi
  0000a	50		 push	 eax
  0000b	8d 45 f8	 lea	 eax, DWORD PTR _iTextWidth$[ebp]
  0000e	8b f1		 mov	 esi, ecx
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ; UI::CTextLine::GetTextSize

; 1818 : 
; 1819 : 	m_TextInstance.iSetRenderingRect(m_renderingRect.left, -m_renderingRect.top, m_renderingRect.right, m_renderingRect.bottom);

  00016	ff 76 70	 push	 DWORD PTR [esi+112]
  00019	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  0001c	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
  00022	ff 76 6c	 push	 DWORD PTR [esi+108]
  00025	f7 d8		 neg	 eax
  00027	50		 push	 eax
  00028	ff 76 64	 push	 DWORD PTR [esi+100]
  0002b	e8 00 00 00 00	 call	 ?iSetRenderingRect@CGraphicTextInstance@@QAEXHHHH@Z ; CGraphicTextInstance::iSetRenderingRect
  00030	5e		 pop	 esi

; 1820 : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?OnSetRenderingRect@CTextLine@UI@@UAEXXZ ENDP		; UI::CTextLine::OnSetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRenderingHeight@CTextLine@UI@@UAEHXZ
_TEXT	SEGMENT
_iTextWidth$ = -8					; size = 4
_iTextHeight$ = -4					; size = 4
?GetRenderingHeight@CTextLine@UI@@UAEHXZ PROC		; UI::CTextLine::GetRenderingHeight, COMDAT
; _this$ = ecx

; 1807 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1808 : 	int iTextWidth, iTextHeight;
; 1809 : 	GetTextSize(&iTextWidth, &iTextHeight);

  00007	8d 45 fc	 lea	 eax, DWORD PTR _iTextHeight$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 45 f8	 lea	 eax, DWORD PTR _iTextWidth$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ; UI::CTextLine::GetTextSize

; 1810 : 
; 1811 : 	return iTextHeight + m_renderingRect.bottom + m_renderingRect.top;

  00016	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  00019	03 46 68	 add	 eax, DWORD PTR [esi+104]
  0001c	03 45 fc	 add	 eax, DWORD PTR _iTextHeight$[ebp]
  0001f	5e		 pop	 esi

; 1812 : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?GetRenderingHeight@CTextLine@UI@@UAEHXZ ENDP		; UI::CTextLine::GetRenderingHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRenderingWidth@CTextLine@UI@@UAEHXZ
_TEXT	SEGMENT
_iTextHeight$ = -8					; size = 4
_iTextWidth$ = -4					; size = 4
?GetRenderingWidth@CTextLine@UI@@UAEHXZ PROC		; UI::CTextLine::GetRenderingWidth, COMDAT
; _this$ = ecx

; 1799 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1800 : 	int iTextWidth, iTextHeight;
; 1801 : 	GetTextSize(&iTextWidth, &iTextHeight);

  00007	8d 45 f8	 lea	 eax, DWORD PTR _iTextHeight$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 45 fc	 lea	 eax, DWORD PTR _iTextWidth$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ; UI::CTextLine::GetTextSize

; 1802 : 
; 1803 : 	return iTextWidth + m_renderingRect.right + m_renderingRect.left;

  00016	8b 46 6c	 mov	 eax, DWORD PTR [esi+108]
  00019	03 46 64	 add	 eax, DWORD PTR [esi+100]
  0001c	03 45 fc	 add	 eax, DWORD PTR _iTextWidth$[ebp]
  0001f	5e		 pop	 esi

; 1804 : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?GetRenderingWidth@CTextLine@UI@@UAEHXZ ENDP		; UI::CTextLine::GetRenderingWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsShow@CTextLine@UI@@UAE_NXZ
_TEXT	SEGMENT
_cH$1 = -8						; size = 4
_cW$2 = -4						; size = 4
?IsShow@CTextLine@UI@@UAE_NXZ PROC			; UI::CTextLine::IsShow, COMDAT
; _this$ = ecx

; 1754 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 1755 : 	if (!m_bShow)

  00009	80 7e 75 00	 cmp	 BYTE PTR [esi+117], 0
  0000d	74 45		 je	 SHORT $LN5@IsShow

; 1756 : 	{
; 1757 : 		return false;
; 1758 : 	}
; 1759 : 
; 1760 : 	if (m_isInsideRender)

  0000f	83 be 90 00 00
	00 00		 cmp	 DWORD PTR [esi+144], 0
  00016	74 35		 je	 SHORT $LN4@IsShow

; 1761 : 	{
; 1762 : 		int cW, cH;
; 1763 : 		GetTextSize(&cW, &cH);

  00018	8d 45 f8	 lea	 eax, DWORD PTR _cH$1[ebp]
  0001b	50		 push	 eax
  0001c	8d 45 fc	 lea	 eax, DWORD PTR _cW$2[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ; UI::CTextLine::GetTextSize

; 1764 : 		if (m_renderBox.left + m_renderBox.right >= cW || m_renderBox.top + m_renderBox.bottom >= cH)

  00025	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  0002b	03 86 94 00 00
	00		 add	 eax, DWORD PTR [esi+148]
  00031	3b 45 fc	 cmp	 eax, DWORD PTR _cW$2[ebp]
  00034	7d 1e		 jge	 SHORT $LN5@IsShow
  00036	8b 86 a0 00 00
	00		 mov	 eax, DWORD PTR [esi+160]
  0003c	03 86 98 00 00
	00		 add	 eax, DWORD PTR [esi+152]
  00042	3b 45 f8	 cmp	 eax, DWORD PTR _cH$1[ebp]
  00045	5e		 pop	 esi
  00046	0f 9c c0	 setl	 al

; 1771 : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN4@IsShow:

; 1767 : 		}
; 1768 : 	}
; 1769 : 
; 1770 : 	return true;

  0004d	b0 01		 mov	 al, 1
  0004f	5e		 pop	 esi

; 1771 : }

  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
$LN5@IsShow:

; 1765 : 		{
; 1766 : 			return false;

  00054	32 c0		 xor	 al, al
  00056	5e		 pop	 esi

; 1771 : }

  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?IsShow@CTextLine@UI@@UAE_NXZ ENDP			; UI::CTextLine::IsShow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z
_TEXT	SEGMENT
_pnWidth$ = 8						; size = 4
_pnHeight$ = 12						; size = 4
?GetTextSize@CTextLine@UI@@QAEXPAH0@Z PROC		; UI::CTextLine::GetTextSize, COMDAT
; _this$ = ecx

; 1687 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1688 : 	m_TextInstance.GetTextSize(pnWidth, pnHeight);

  00003	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1689 : }

  00009	5d		 pop	 ebp

; 1688 : 	m_TextInstance.GetTextSize(pnWidth, pnHeight);

  0000a	e9 00 00 00 00	 jmp	 ?GetTextSize@CGraphicTextInstance@@QAEXPAH0@Z ; CGraphicTextInstance::GetTextSize
?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ENDP		; UI::CTextLine::GetTextSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetSpecificTextWidth@CTextLine@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
?GetSpecificTextWidth@CTextLine@UI@@QAEHPBD@Z PROC	; UI::CTextLine::GetSpecificTextWidth, COMDAT
; _this$ = ecx

; 1704 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1705 : 	return m_TextInstance.GetSpecificTextWidth(c_szText);

  00003	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1706 : }

  00009	5d		 pop	 ebp

; 1705 : 	return m_TextInstance.GetSpecificTextWidth(c_szText);

  0000a	e9 00 00 00 00	 jmp	 ?GetSpecificTextWidth@CGraphicTextInstance@@QAEHPBD@Z ; CGraphicTextInstance::GetSpecificTextWidth
?GetSpecificTextWidth@CTextLine@UI@@QAEHPBD@Z ENDP	; UI::CTextLine::GetSpecificTextWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetText@CTextLine@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetText@CTextLine@UI@@QAEPBDXZ PROC			; UI::CTextLine::GetText, COMDAT
; _this$ = ecx

; 1701 : 	return m_TextInstance.GetValueStringReference().c_str();

  00000	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00006	e8 00 00 00 00	 call	 ?GetValueStringReference@CGraphicTextInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CGraphicTextInstance::GetValueStringReference
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  0000b	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2293 :         if (_Large_string_engaged()) {

  0000f	72 02		 jb	 SHORT $LN6@GetText
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1701 : 	return m_TextInstance.GetValueStringReference().c_str();

  00011	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetText:

; 1702 : }

  00013	c3		 ret	 0
?GetText@CTextLine@UI@@QAEPBDXZ ENDP			; UI::CTextLine::GetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetText@CTextLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
?SetText@CTextLine@UI@@QAEXPBD@Z PROC			; UI::CTextLine::SetText, COMDAT
; _this$ = ecx

; 1683 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1684 : 	OnSetText(c_szText);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1685 : }

  00005	5d		 pop	 ebp

; 1684 : 	OnSetText(c_szText);

  00006	ff a0 c4 00 00
	00		 jmp	 DWORD PTR [eax+196]
?SetText@CTextLine@UI@@QAEXPBD@Z ENDP			; UI::CTextLine::SetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?TextPositionToRenderPosition@CTextLine@UI@@QAEHH@Z
_TEXT	SEGMENT
_textPos$ = 8						; size = 4
?TextPositionToRenderPosition@CTextLine@UI@@QAEHH@Z PROC ; UI::CTextLine::TextPositionToRenderPosition, COMDAT
; _this$ = ecx

; 1738 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1739 : 	return m_TextInstance.TextPositionToRenderPosition(textPos);

  00003	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1740 : }

  00009	5d		 pop	 ebp

; 1739 : 	return m_TextInstance.TextPositionToRenderPosition(textPos);

  0000a	e9 00 00 00 00	 jmp	 ?TextPositionToRenderPosition@CGraphicTextInstance@@QAEHH@Z ; CGraphicTextInstance::TextPositionToRenderPosition
?TextPositionToRenderPosition@CTextLine@UI@@QAEHH@Z ENDP ; UI::CTextLine::TextPositionToRenderPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetCharPositionByCursor@CTextLine@UI@@QAE?AV?$tuple@HHH@std@@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_cursorPos$ = 12					; size = 4
?GetCharPositionByCursor@CTextLine@UI@@QAE?AV?$tuple@HHH@std@@H@Z PROC ; UI::CTextLine::GetCharPositionByCursor, COMDAT
; _this$ = ecx

; 1734 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1735 : 	return m_TextInstance.CharacterPositionToPixelPosition(cursorPos);

  00003	ff 75 0c	 push	 DWORD PTR _cursorPos$[ebp]
  00006	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  0000c	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000f	e8 00 00 00 00	 call	 ?CharacterPositionToPixelPosition@CGraphicTextInstance@@QAE?AV?$tuple@HHH@std@@H@Z ; CGraphicTextInstance::CharacterPositionToPixelPosition
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1736 : }

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?GetCharPositionByCursor@CTextLine@UI@@QAE?AV?$tuple@HHH@std@@H@Z ENDP ; UI::CTextLine::GetCharPositionByCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetMultilineCursorPosition@CTextLine@UI@@QAEHXZ
_TEXT	SEGMENT
_lx$ = -8						; size = 4
_ly$ = -4						; size = 4
?GetMultilineCursorPosition@CTextLine@UI@@QAEHXZ PROC	; UI::CTextLine::GetMultilineCursorPosition, COMDAT
; _this$ = ecx

; 1728 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1729 : 	long lx, ly;
; 1730 : 	CWindow::GetMouseLocalPosition(lx, ly);

  00007	8d 45 fc	 lea	 eax, DWORD PTR _ly$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 45 f8	 lea	 eax, DWORD PTR _lx$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ; UI::CWindow::GetMouseLocalPosition

; 1731 : 	return m_TextInstance.PixelPositionToCharacterPosition(lx, ly);

  00016	ff 75 fc	 push	 DWORD PTR _ly$[ebp]
  00019	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
  0001f	ff 75 f8	 push	 DWORD PTR _lx$[ebp]
  00022	e8 00 00 00 00	 call	 ?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHHH@Z ; CGraphicTextInstance::PixelPositionToCharacterPosition
  00027	5e		 pop	 esi

; 1732 : }

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?GetMultilineCursorPosition@CTextLine@UI@@QAEHXZ ENDP	; UI::CTextLine::GetMultilineCursorPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetCursorPosition@CTextLine@UI@@QAEHXZ
_TEXT	SEGMENT
_ly$ = -8						; size = 4
_lx$ = -4						; size = 4
?GetCursorPosition@CTextLine@UI@@QAEHXZ PROC		; UI::CTextLine::GetCursorPosition, COMDAT
; _this$ = ecx

; 1722 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1723 : 	long lx, ly;
; 1724 : 	CWindow::GetMouseLocalPosition(lx, ly);

  00007	8d 45 f8	 lea	 eax, DWORD PTR _ly$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 45 fc	 lea	 eax, DWORD PTR _lx$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ; UI::CWindow::GetMouseLocalPosition

; 1725 : 	return m_TextInstance.PixelPositionToCharacterPosition(lx);

  00016	ff 75 fc	 push	 DWORD PTR _lx$[ebp]
  00019	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
  0001f	e8 00 00 00 00	 call	 ?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHH@Z ; CGraphicTextInstance::PixelPositionToCharacterPosition
  00024	5e		 pop	 esi

; 1726 : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?GetCursorPosition@CTextLine@UI@@QAEHXZ ENDP		; UI::CTextLine::GetCursorPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsShowCursor@CTextLine@UI@@QAE_NXZ
_TEXT	SEGMENT
?IsShowCursor@CTextLine@UI@@QAE_NXZ PROC		; UI::CTextLine::IsShowCursor, COMDAT
; _this$ = ecx

; 1718 : 	return m_TextInstance.IsShowCursor();

  00000	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00006	e9 00 00 00 00	 jmp	 ?IsShowCursor@CGraphicTextInstance@@QAE_NXZ ; CGraphicTextInstance::IsShowCursor
?IsShowCursor@CTextLine@UI@@QAE_NXZ ENDP		; UI::CTextLine::IsShowCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?HideCursor@CTextLine@UI@@QAEXXZ
_TEXT	SEGMENT
?HideCursor@CTextLine@UI@@QAEXXZ PROC			; UI::CTextLine::HideCursor, COMDAT
; _this$ = ecx

; 1713 : 	m_TextInstance.HideCursor();

  00000	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00006	e9 00 00 00 00	 jmp	 ?HideCursor@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::HideCursor
?HideCursor@CTextLine@UI@@QAEXXZ ENDP			; UI::CTextLine::HideCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ShowCursor@CTextLine@UI@@QAEXXZ
_TEXT	SEGMENT
?ShowCursor@CTextLine@UI@@QAEXXZ PROC			; UI::CTextLine::ShowCursor, COMDAT
; _this$ = ecx

; 1709 : 	m_TextInstance.ShowCursor();

  00000	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00006	e9 00 00 00 00	 jmp	 ?ShowCursor@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::ShowCursor
?ShowCursor@CTextLine@UI@@QAEXXZ ENDP			; UI::CTextLine::ShowCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetLimitWidth@CTextLine@UI@@QAEXM@Z
_TEXT	SEGMENT
_fWidth$ = 8						; size = 4
?SetLimitWidth@CTextLine@UI@@QAEXM@Z PROC		; UI::CTextLine::SetLimitWidth, COMDAT
; _this$ = ecx

; 1679 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1680 : 	m_TextInstance.SetLimitWidth(fWidth);

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fWidth$[ebp]
  00008	51		 push	 ecx
  00009	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?SetLimitWidth@CGraphicTextInstance@@QAEXM@Z ; CGraphicTextInstance::SetLimitWidth

; 1681 : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SetLimitWidth@CTextLine@UI@@QAEXM@Z ENDP		; UI::CTextLine::SetLimitWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFontColor@CTextLine@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetFontColor@CTextLine@UI@@QAEXK@Z PROC		; UI::CTextLine::SetFontColor, COMDAT
; _this$ = ecx

; 1675 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1676 : 	m_TextInstance.SetColor(dwColor);

  00003	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1677 : }

  00009	5d		 pop	 ebp

; 1676 : 	m_TextInstance.SetColor(dwColor);

  0000a	e9 00 00 00 00	 jmp	 ?SetColor@CGraphicTextInstance@@QAEXK@Z ; CGraphicTextInstance::SetColor
?SetFontColor@CTextLine@UI@@QAEXK@Z ENDP		; UI::CTextLine::SetFontColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFontName@CTextLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_stFontName$ = -40					; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFontName$ = 8					; size = 4
?SetFontName@CTextLine@UI@@QAEXPBD@Z PROC		; UI::CTextLine::SetFontName, COMDAT
; _this$ = ecx

; 1665 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetFontName@CTextLine@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b f1		 mov	 esi, ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _c_szFontName$[ebp]

; 1666 : 	std::string stFontName = c_szFontName;

  0002e	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3446 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00037	6a 04		 push	 4
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_04FAHLGLIA@?4fnt@
  0003e	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1666 : 	std::string stFontName = c_szFontName;

  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3446 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00048	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2301 :         return _BUF_SIZE <= _Myres;

  0004d	83 7d ec 10	 cmp	 DWORD PTR _stFontName$[ebp+20], 16 ; 00000010H

; 2292 :         const value_type* _Result = _Bx._Buf;

  00051	8d 45 d8	 lea	 eax, DWORD PTR _stFontName$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1670 : 	CResource* pkRes = rkResMgr.GetTypeResourcePointer(stFontName.c_str());

  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  0005a	0f 43 45 d8	 cmovae	 eax, DWORD PTR _stFontName$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1670 : 	CResource* pkRes = rkResMgr.GetTypeResourcePointer(stFontName.c_str());

  0005e	6a ff		 push	 -1
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?GetTypeResourcePointer@CResourceManager@@QAEPAVCResource@@PBDH@Z ; CResourceManager::GetTypeResourcePointer

; 1671 : 	CGraphicText* pkResFont = static_cast<CGraphicText*>(pkRes);
; 1672 : 	m_TextInstance.SetTextPointer(pkResFont);

  00066	50		 push	 eax
  00067	8d 8e 30 01 00
	00		 lea	 ecx, DWORD PTR [esi+304]
  0006d	e8 00 00 00 00	 call	 ?SetTextPointer@CGraphicTextInstance@@QAEXPAVCGraphicText@@@Z ; CGraphicTextInstance::SetTextPointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  00072	8b 4d ec	 mov	 ecx, DWORD PTR _stFontName$[ebp+20]
  00075	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  00078	72 28		 jb	 SHORT $LN29@SetFontNam
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	8b 55 d8	 mov	 edx, DWORD PTR _stFontName$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0007d	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007e	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00080	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00086	72 10		 jb	 SHORT $LN39@SetFontNam

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00088	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0008b	83 c1 23	 add	 ecx, 35			; 00000023H
  0008e	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00090	83 c0 fc	 add	 eax, -4			; fffffffcH
  00093	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00096	77 26		 ja	 SHORT $LN48@SetFontNam
$LN39@SetFontNam:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00098	51		 push	 ecx
  00099	52		 push	 edx
  0009a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009f	83 c4 08	 add	 esp, 8
$LN29@SetFontNam:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1673 : }

  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5e		 pop	 esi
  000ae	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b1	33 cd		 xor	 ecx, ebp
  000b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 04 00	 ret	 4
$LN48@SetFontNam:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000be	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN46@SetFontNam:
  000c3	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetFontName@CTextLine@UI@@QAEXPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetFontName@CTextLine@UI@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetFontName@CTextLine@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetFontName@CTextLine@UI@@QAEXPBD@Z ENDP		; UI::CTextLine::SetFontName
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetMultiLine@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetMultiLine@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetMultiLine, COMDAT
; _this$ = ecx

; 1661 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1662 : 	m_TextInstance.SetMultiLine(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1663 : }

  00016	5d		 pop	 ebp

; 1662 : 	m_TextInstance.SetMultiLine(bFlag ? true : false);

  00017	e9 00 00 00 00	 jmp	 ?SetMultiLine@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetMultiLine
?SetMultiLine@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetMultiLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFeather@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetFeather@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetFeather, COMDAT
; _this$ = ecx

; 1657 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1658 : 	m_TextInstance.SetFeather(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1659 : }

  00016	5d		 pop	 ebp

; 1658 : 	m_TextInstance.SetFeather(bFlag ? true : false);

  00017	e9 00 00 00 00	 jmp	 ?SetFeather@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetFeather
?SetFeather@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetFeather
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOutline@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetOutline@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetOutline, COMDAT
; _this$ = ecx

; 1653 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1654 : 	m_TextInstance.SetOutline(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1655 : }

  00016	5d		 pop	 ebp

; 1654 : 	m_TextInstance.SetOutline(bFlag ? true : false);

  00017	e9 00 00 00 00	 jmp	 ?SetOutline@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetOutline
?SetOutline@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetOutline
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSecret@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetSecret@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetSecret, COMDAT
; _this$ = ecx

; 1649 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1650 : 	m_TextInstance.SetSecret(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1651 : }

  00016	5d		 pop	 ebp

; 1650 : 	m_TextInstance.SetSecret(bFlag ? true : false);

  00017	e9 00 00 00 00	 jmp	 ?SetSecret@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetSecret
?SetSecret@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetSecret
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetVerticalAlign@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetVerticalAlign@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetVerticalAlign, COMDAT
; _this$ = ecx

; 1645 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1646 : 	m_TextInstance.SetVerticalAlign(iType);

  00003	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1647 : }

  00009	5d		 pop	 ebp

; 1646 : 	m_TextInstance.SetVerticalAlign(iType);

  0000a	e9 00 00 00 00	 jmp	 ?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetVerticalAlign
?SetVerticalAlign@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetVerticalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 1641 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1642 : 	m_TextInstance.SetHorizonalAlign(iType);

  00003	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1643 : }

  00009	5d		 pop	 ebp

; 1642 : 	m_TextInstance.SetHorizonalAlign(iType);

  0000a	e9 00 00 00 00	 jmp	 ?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetHorizonalAlign
?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetMax@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMax$ = 8						; size = 4
?SetMax@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetMax, COMDAT
; _this$ = ecx

; 1637 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1638 : 	m_TextInstance.SetMax(iMax);

  00003	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H

; 1639 : }

  00009	5d		 pop	 ebp

; 1638 : 	m_TextInstance.SetMax(iMax);

  0000a	e9 00 00 00 00	 jmp	 ?SetMax@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetMax
?SetMax@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetMax
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CTextLine@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CTextLine@UI@@UAE@XZ PROC				; UI::CTextLine::~CTextLine, COMDAT
; _this$ = ecx

; 1624 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CTextLine@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 1625 : 	m_TextInstance.Destroy();

  00026	8d 8f 30 01 00
	00		 lea	 ecx, DWORD PTR [edi+304]
  0002c	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CTextLine@UI@@6B@
  00032	e8 00 00 00 00	 call	 ?Destroy@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Destroy

; 1626 : }

  00037	8d 8f 30 01 00
	00		 lea	 ecx, DWORD PTR [edi+304]
  0003d	e8 00 00 00 00	 call	 ??1CGraphicTextInstance@@UAE@XZ ; CGraphicTextInstance::~CGraphicTextInstance
  00042	8b cf		 mov	 ecx, edi
  00044	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CTextLine@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CTextLine@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CTextLine@UI@@UAE@XZ ENDP				; UI::CTextLine::~CTextLine
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CTextLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CTextLine@UI@@QAE@PAU_object@@@Z PROC		; UI::CTextLine::CTextLine, COMDAT
; _this$ = ecx

; 1618 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CTextLine@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 1617 : CTextLine::CTextLine(PyObject * ppyObject) : CWindow(ppyObject)

  0002a	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1618 : {

  00032	8d 8f 30 01 00
	00		 lea	 ecx, DWORD PTR [edi+304]
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CTextLine@UI@@6B@
  00045	e8 00 00 00 00	 call	 ??0CGraphicTextInstance@@QAE@XZ ; CGraphicTextInstance::CGraphicTextInstance

; 1619 : 	m_TextInstance.SetColor(0.78f, 0.78f, 0.78f);

  0004a	83 ec 10	 sub	 esp, 16			; 00000010H
  0004d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00051	8d 8f 30 01 00
	00		 lea	 ecx, DWORD PTR [edi+304]
  00057	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0005f	c7 44 24 08 14
	ae 47 3f	 mov	 DWORD PTR [esp+8], 1061662228 ; 3f47ae14H
  00067	c7 44 24 04 14
	ae 47 3f	 mov	 DWORD PTR [esp+4], 1061662228 ; 3f47ae14H
  0006f	c7 04 24 14 ae
	47 3f		 mov	 DWORD PTR [esp], 1061662228 ; 3f47ae14H
  00076	e8 00 00 00 00	 call	 ?SetColor@CGraphicTextInstance@@QAEXMMMM@Z ; CGraphicTextInstance::SetColor

; 1620 : 	m_TextInstance.SetHorizonalAlign(CGraphicTextInstance::HORIZONTAL_ALIGN_LEFT);

  0007b	6a 01		 push	 1
  0007d	8d 8f 30 01 00
	00		 lea	 ecx, DWORD PTR [edi+304]
  00083	e8 00 00 00 00	 call	 ?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetHorizonalAlign

; 1621 : 	m_TextInstance.SetVerticalAlign(CGraphicTextInstance::VERTICAL_ALIGN_TOP);

  00088	6a 10		 push	 16			; 00000010H
  0008a	8d 8f 30 01 00
	00		 lea	 ecx, DWORD PTR [edi+304]
  00090	e8 00 00 00 00	 call	 ?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetVerticalAlign

; 1622 : }

  00095	8b c7		 mov	 eax, edi
  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 30 01 00
	00		 add	 ecx, 304		; 00000130H
  00011	e9 00 00 00 00	 jmp	 ??1CGraphicTextInstance@@UAE@XZ ; CGraphicTextInstance::~CGraphicTextInstance
  00016	cc		 int	 3
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
__ehhandler$??0CTextLine@UI@@QAE@PAU_object@@@Z:
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CTextLine@UI@@QAE@PAU_object@@@Z
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CTextLine@UI@@QAE@PAU_object@@@Z ENDP		; UI::CTextLine::CTextLine
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CTextLine@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CTextLine@UI@@SAKXZ PROC				; UI::CTextLine::Type, COMDAT

; 1630 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CTextLine@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1631 : 	static DWORD s_dwType = GetCRC32("CTextLine", strlen("CTextLine"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CTextLine@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1632 : 	return (s_dwType);
; 1633 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CTextLine@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1631 : 	static DWORD s_dwType = GetCRC32("CTextLine", strlen("CTextLine"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CTextLine@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CTextLine@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 09		 push	 9
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_09BAJHDABN@CTextLine@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CTextLine@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CTextLine@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CTextLine@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CTextLine@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CTextLine@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CTextLine@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CTextLine@UI@@SAKXZ ENDP				; UI::CTextLine::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCBar3D@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBar3D@UI@@UAEPAXI@Z PROC				; UI::CBar3D::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBar3D@UI@@UAE@XZ	; UI::CBar3D::~CBar3D
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 3c 01 00 00	 push	 316			; 0000013cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBar3D@UI@@UAEPAXI@Z ENDP				; UI::CBar3D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBar3D@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBar3D@UI@@MAEXXZ PROC			; UI::CBar3D::OnRender, COMDAT
; _this$ = ecx

; 1588 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 1589 : 	CPythonGraphic & rkpyGraphic = CPythonGraphic::Instance();

  00004	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton

; 1590 : 
; 1591 : 	rkpyGraphic.SetDiffuseColor(m_dwCenterColor);

  0000a	8b cf		 mov	 ecx, edi
  0000c	ff b6 38 01 00
	00		 push	 DWORD PTR [esi+312]
  00012	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00017	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 1592 : 	rkpyGraphic.RenderBar2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  0001c	83 ec 14	 sub	 esp, 20			; 00000014H
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	8b cf		 mov	 ecx, edi
  00024	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002c	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00032	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00037	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00040	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00045	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00048	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004e	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00053	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00056	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005b	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d

; 1593 : 
; 1594 : 	rkpyGraphic.SetDiffuseColor(m_dwLeftColor);

  00060	ff b6 30 01 00
	00		 push	 DWORD PTR [esi+304]
  00066	8b cf		 mov	 ecx, edi
  00068	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  0006d	66 0f 6e 4e 38	 movd	 xmm1, DWORD PTR [esi+56]

; 1595 : 	rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.right, m_rect.top);

  00072	83 ec 14	 sub	 esp, 20			; 00000014H
  00075	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  0007a	8b cf		 mov	 ecx, edi
  0007c	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0007f	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00087	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0008a	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  00090	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00096	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  0009b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0009e	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a9	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  000ae	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 1596 : 	rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.left, m_rect.bottom);

  000b3	83 ec 14	 sub	 esp, 20			; 00000014H
  000b6	66 0f 6e 4e 34	 movd	 xmm1, DWORD PTR [esi+52]
  000bb	8b cf		 mov	 ecx, edi
  000bd	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c0	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  000c8	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000cb	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000d1	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  000d6	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000d9	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  000df	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000e5	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000ea	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d

; 1597 : 
; 1598 : 	rkpyGraphic.SetDiffuseColor(m_dwRightColor);

  000ef	ff b6 34 01 00
	00		 push	 DWORD PTR [esi+308]
  000f5	8b cf		 mov	 ecx, edi
  000f7	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  000fc	66 0f 6e 4e 40	 movd	 xmm1, DWORD PTR [esi+64]

; 1599 : 	rkpyGraphic.RenderLine2d(m_rect.left, m_rect.bottom, m_rect.right, m_rect.bottom);

  00101	83 ec 14	 sub	 esp, 20			; 00000014H
  00104	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00109	8b cf		 mov	 ecx, edi
  0010b	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0010e	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00116	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00119	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  0011f	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00125	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  0012a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0012d	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00133	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00138	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0013d	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 1600 : 	rkpyGraphic.RenderLine2d(m_rect.right, m_rect.top, m_rect.right, m_rect.bottom);

  00142	83 ec 14	 sub	 esp, 20			; 00000014H
  00145	66 0f 6e 4e 3c	 movd	 xmm1, DWORD PTR [esi+60]
  0014a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0014d	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00155	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00158	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0015e	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00163	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  00169	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0016c	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00172	8b cf		 mov	 ecx, edi
  00174	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00179	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0017e	5f		 pop	 edi
  0017f	5e		 pop	 esi

; 1601 : }

  00180	c3		 ret	 0
?OnRender@CBar3D@UI@@MAEXXZ ENDP			; UI::CBar3D::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBar3D@UI@@QAEXKKK@Z
_TEXT	SEGMENT
_dwLeft$ = 8						; size = 4
_dwRight$ = 12						; size = 4
_dwCenter$ = 16						; size = 4
?SetColor@CBar3D@UI@@QAEXKKK@Z PROC			; UI::CBar3D::SetColor, COMDAT
; _this$ = ecx

; 1581 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1582 : 	m_dwLeftColor = dwLeft;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwLeft$[ebp]
  00006	89 81 30 01 00
	00		 mov	 DWORD PTR [ecx+304], eax

; 1583 : 	m_dwRightColor = dwRight;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _dwRight$[ebp]
  0000f	89 81 34 01 00
	00		 mov	 DWORD PTR [ecx+308], eax

; 1584 : 	m_dwCenterColor = dwCenter;

  00015	8b 45 10	 mov	 eax, DWORD PTR _dwCenter$[ebp]
  00018	89 81 38 01 00
	00		 mov	 DWORD PTR [ecx+312], eax

; 1585 : }

  0001e	5d		 pop	 ebp
  0001f	c2 0c 00	 ret	 12			; 0000000cH
?SetColor@CBar3D@UI@@QAEXKKK@Z ENDP			; UI::CBar3D::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBar3D@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBar3D@UI@@UAE@XZ PROC				; UI::CBar3D::~CBar3D, COMDAT
; _this$ = ecx

; 1577 : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBar3D@UI@@6B@

; 1578 : }

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBar3D@UI@@UAE@XZ ENDP				; UI::CBar3D::~CBar3D
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBar3D@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBar3D@UI@@QAE@PAU_object@@@Z PROC			; UI::CBar3D::CBar3D, COMDAT
; _this$ = ecx

; 1571 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBar3D@UI@@6B@

; 1572 : 	m_dwLeftColor = D3DXCOLOR(0.2f, 0.2f, 0.2f, 1.0f);
; 1573 : 	m_dwRightColor = D3DXCOLOR(0.7f, 0.7f, 0.7f, 1.0f);
; 1574 : 	m_dwCenterColor = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);
; 1575 : }

  00018	8b c6		 mov	 eax, esi
  0001a	c7 86 30 01 00
	00 33 33 33 ff	 mov	 DWORD PTR [esi+304], -13421773 ; ff333333H
  00024	c7 86 34 01 00
	00 b3 b3 b3 ff	 mov	 DWORD PTR [esi+308], -5000269 ; ffb3b3b3H
  0002e	c7 86 38 01 00
	00 00 00 00 ff	 mov	 DWORD PTR [esi+312], -16777216 ; ff000000H
  00038	5e		 pop	 esi
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??0CBar3D@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBar3D::CBar3D
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CBar3D@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CBar3D@UI@@SAKXZ PROC				; UI::CBar3D::Type, COMDAT

; 1565 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CBar3D@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1566 : 	static DWORD s_dwType = GetCRC32("CBar3D", strlen("CBar3D"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1567 : 	return (s_dwType);
; 1568 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1566 : 	static DWORD s_dwType = GetCRC32("CBar3D", strlen("CBar3D"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 06		 push	 6
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_06ICLMADCA@CBar3D@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CBar3D@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CBar3D@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CBar3D@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CBar3D@UI@@SAKXZ ENDP				; UI::CBar3D::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCLine@UI@@UAEPAXI@Z PROC				; UI::CLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CLine@UI@@UAE@XZ	; UI::CLine::~CLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 34 01 00 00	 push	 308			; 00000134H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCLine@UI@@UAEPAXI@Z ENDP				; UI::CLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CLine@UI@@MAEXXZ PROC				; UI::CLine::OnRender, COMDAT
; _this$ = ecx

; 1554 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 1555 : 	CPythonGraphic & rkpyGraphic = CPythonGraphic::Instance();

  00004	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton

; 1556 : 	rkpyGraphic.SetDiffuseColor(m_dwColor);

  0000a	8b cf		 mov	 ecx, edi
  0000c	ff b6 30 01 00
	00		 push	 DWORD PTR [esi+304]
  00012	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00017	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 1557 : 	rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  0001c	83 ec 14	 sub	 esp, 20			; 00000014H
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	8b cf		 mov	 ecx, edi
  00024	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002c	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00032	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00037	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00040	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00045	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00048	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004e	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00053	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00056	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005b	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi

; 1558 : }

  00062	c3		 ret	 0
?OnRender@CLine@UI@@MAEXXZ ENDP				; UI::CLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CLine@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CLine@UI@@UAEXK@Z PROC			; UI::CLine::SetColor, COMDAT
; _this$ = ecx

; 1549 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1550 : 	m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 81 30 01 00
	00		 mov	 DWORD PTR [ecx+304], eax

; 1551 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetColor@CLine@UI@@UAEXK@Z ENDP			; UI::CLine::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CLine@UI@@UAE@XZ
_TEXT	SEGMENT
??1CLine@UI@@UAE@XZ PROC				; UI::CLine::~CLine, COMDAT
; _this$ = ecx

; 1545 : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CLine@UI@@6B@

; 1546 : }

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CLine@UI@@UAE@XZ ENDP				; UI::CLine::~CLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CLine@UI@@QAE@PAU_object@@@Z PROC			; UI::CLine::CLine, COMDAT
; _this$ = ecx

; 1542 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CLine@UI@@6B@

; 1543 : }

  00018	8b c6		 mov	 eax, esi
  0001a	c7 86 30 01 00
	00 00 00 00 ff	 mov	 DWORD PTR [esi+304], -16777216 ; ff000000H
  00024	5e		 pop	 esi
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??0CLine@UI@@QAE@PAU_object@@@Z ENDP			; UI::CLine::CLine
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBar@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBar@UI@@UAEPAXI@Z PROC				; UI::CBar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBar@UI@@UAE@XZ	; UI::CBar::~CBar
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 34 01 00 00	 push	 308			; 00000134H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBar@UI@@UAEPAXI@Z ENDP				; UI::CBar::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBar@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBar@UI@@MAEXXZ PROC				; UI::CBar::OnRender, COMDAT
; _this$ = ecx

; 1528 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1529 : 	CPythonGraphic::Instance().SetDiffuseColor(m_dwColor);

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00009	ff b6 30 01 00
	00		 push	 DWORD PTR [esi+304]
  0000f	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor

; 1530 : #ifdef INGAME_WIKI
; 1531 : 	CPythonGraphic::Instance().RenderBar2d(m_rect.left + m_renderBox.left, m_rect.top + m_renderBox.top, m_rect.right - m_renderBox.right, m_rect.bottom - m_renderBox.bottom);

  00014	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00017	83 ec 14	 sub	 esp, 20			; 00000014H
  0001a	2b 86 a0 00 00
	00		 sub	 eax, DWORD PTR [esi+160]
  00020	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00026	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002e	66 0f 6e c0	 movd	 xmm0, eax
  00032	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00035	2b 86 9c 00 00
	00		 sub	 eax, DWORD PTR [esi+156]
  0003b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003e	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00044	66 0f 6e c0	 movd	 xmm0, eax
  00048	8b 86 98 00 00
	00		 mov	 eax, DWORD PTR [esi+152]
  0004e	03 46 38	 add	 eax, DWORD PTR [esi+56]
  00051	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00054	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0005a	66 0f 6e c0	 movd	 xmm0, eax
  0005e	8b 86 94 00 00
	00		 mov	 eax, DWORD PTR [esi+148]
  00064	03 46 34	 add	 eax, DWORD PTR [esi+52]
  00067	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00070	66 0f 6e c0	 movd	 xmm0, eax
  00074	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00077	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007c	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  00081	5e		 pop	 esi

; 1532 : #else
; 1533 : 	CPythonGraphic::Instance().RenderBar2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);
; 1534 : #endif
; 1535 : }

  00082	c3		 ret	 0
?OnRender@CBar@UI@@MAEXXZ ENDP				; UI::CBar::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBar@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CBar@UI@@UAEXK@Z PROC				; UI::CBar::SetColor, COMDAT
; _this$ = ecx

; 1523 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1524 : 	m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 81 30 01 00
	00		 mov	 DWORD PTR [ecx+304], eax

; 1525 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetColor@CBar@UI@@UAEXK@Z ENDP				; UI::CBar::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBar@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBar@UI@@UAE@XZ PROC					; UI::CBar::~CBar, COMDAT
; _this$ = ecx

; 1519 : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBar@UI@@6B@

; 1520 : }

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBar@UI@@UAE@XZ ENDP					; UI::CBar::~CBar
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBar@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBar@UI@@QAE@PAU_object@@@Z PROC			; UI::CBar::CBar, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBar@UI@@6B@

; 1517 : }

  00018	8b c6		 mov	 eax, esi
  0001a	c7 86 30 01 00
	00 00 00 00 ff	 mov	 DWORD PTR [esi+304], -16777216 ; ff000000H
  00024	5e		 pop	 esi
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??0CBar@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBar::CBar
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBox@UI@@UAEPAXI@Z PROC				; UI::CBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBox@UI@@UAE@XZ	; UI::CBox::~CBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 34 01 00 00	 push	 308			; 00000134H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBox@UI@@UAEPAXI@Z ENDP				; UI::CBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBox@UI@@MAEXXZ PROC				; UI::CBox::OnRender, COMDAT
; _this$ = ecx

; 1506 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1507 : 	CPythonGraphic::Instance().SetDiffuseColor(m_dwColor);

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00009	ff b6 30 01 00
	00		 push	 DWORD PTR [esi+304]
  0000f	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00014	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 1508 : 	CPythonGraphic::Instance().RenderBox2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00019	83 ec 14	 sub	 esp, 20			; 00000014H
  0001c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00025	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002d	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00033	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00038	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003b	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00041	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00046	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00049	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004f	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00054	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00057	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005c	e8 00 00 00 00	 call	 ?RenderBox2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBox2d
  00061	5e		 pop	 esi

; 1509 : }

  00062	c3		 ret	 0
?OnRender@CBox@UI@@MAEXXZ ENDP				; UI::CBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBox@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CBox@UI@@UAEXK@Z PROC				; UI::CBox::SetColor, COMDAT
; _this$ = ecx

; 1501 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1502 : 	m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 81 30 01 00
	00		 mov	 DWORD PTR [ecx+304], eax

; 1503 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetColor@CBox@UI@@UAEXK@Z ENDP				; UI::CBox::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBox@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBox@UI@@UAE@XZ PROC					; UI::CBox::~CBox, COMDAT
; _this$ = ecx

; 1497 : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBox@UI@@6B@

; 1498 : }

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBox@UI@@UAE@XZ ENDP					; UI::CBox::~CBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBox@UI@@QAE@PAU_object@@@Z PROC			; UI::CBox::CBox, COMDAT
; _this$ = ecx

; 1494 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBox@UI@@6B@

; 1495 : }

  00018	8b c6		 mov	 eax, esi
  0001a	c7 86 30 01 00
	00 00 00 00 ff	 mov	 DWORD PTR [esi+304], -16777216 ; ff000000H
  00024	5e		 pop	 esi
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??0CBox@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBox::CBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCUiWikiRenderTarget@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCUiWikiRenderTarget@UI@@UAEPAXI@Z PROC		; UI::CUiWikiRenderTarget::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CUiWikiRenderTarget@UI@@UAE@XZ ; UI::CUiWikiRenderTarget::~CUiWikiRenderTarget
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 34 01 00 00	 push	 308			; 00000134H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCUiWikiRenderTarget@UI@@UAEPAXI@Z ENDP		; UI::CUiWikiRenderTarget::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ
_TEXT	SEGMENT
_target$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ PROC		; UI::CUiWikiRenderTarget::OnRender, COMDAT
; _this$ = ecx

; 1476 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 1477 : 	if (m_dwIndex == -1 /*(CPythonWikiRenderTarget::START_MODULE)*/)

  00029	8b 86 30 01 00
	00		 mov	 eax, DWORD PTR [esi+304]
  0002f	83 f8 ff	 cmp	 eax, -1
  00032	74 57		 je	 SHORT $LN18@OnRender

; 1482 : 	auto target = CWikiRenderTargetManager::Instance().GetRenderTarget(m_dwIndex);

  00034	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWikiRenderTargetManager@@@@0PAVCWikiRenderTargetManager@@A ; CSingleton<CWikiRenderTargetManager>::ms_singleton
  0003a	50		 push	 eax
  0003b	8d 45 ec	 lea	 eax, DWORD PTR _target$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?GetRenderTarget@CWikiRenderTargetManager@@QAE?AV?$shared_ptr@VCWikiRenderTarget@@@std@@H@Z ; CWikiRenderTargetManager::GetRenderTarget
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory

; 1718 :         return get() != nullptr;

  00044	8b 4d ec	 mov	 ecx, DWORD PTR _target$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1482 : 	auto target = CWikiRenderTargetManager::Instance().GetRenderTarget(m_dwIndex);

  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory

; 1718 :         return get() != nullptr;

  0004e	85 c9		 test	 ecx, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1483 : 	if (!target)

  00050	74 11		 je	 SHORT $LN6@OnRender

; 1484 : 	{
; 1485 : 		return;
; 1486 : 	}
; 1487 : 
; 1488 : 	target->SetRenderingRect(&m_rect);

  00052	8d 46 34	 lea	 eax, DWORD PTR [esi+52]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?SetRenderingRect@CWikiRenderTarget@@QBEXPAUtagRECT@@@Z ; CWikiRenderTarget::SetRenderingRect

; 1489 : 	target->RenderTexture();

  0005b	8b 4d ec	 mov	 ecx, DWORD PTR _target$[ebp]
  0005e	e8 00 00 00 00	 call	 ?RenderTexture@CWikiRenderTarget@@QBEXXZ ; CWikiRenderTarget::RenderTexture
$LN6@OnRender:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory

; 1334 :         if (_Rep) {

  00063	8b 75 f0	 mov	 esi, DWORD PTR _target$[ebp+4]
  00066	85 f6		 test	 esi, esi
  00068	74 21		 je	 SHORT $LN18@OnRender

; 1109 :         if (_MT_DECR(_Uses) == 0) {

  0006a	83 cf ff	 or	 edi, -1
  0006d	8b c7		 mov	 eax, edi
  0006f	f0 0f c1 46 04	 lock	  xadd	 DWORD PTR [esi+4], eax
  00074	75 15		 jne	 SHORT $LN18@OnRender

; 1110 :             _Destroy();

  00076	8b 06		 mov	 eax, DWORD PTR [esi]
  00078	8b ce		 mov	 ecx, esi
  0007a	ff 10		 call	 DWORD PTR [eax]

; 1116 :         if (_MT_DECR(_Weaks) == 0) {

  0007c	f0 0f c1 7e 08	 lock	  xadd	 DWORD PTR [esi+8], edi
  00081	4f		 dec	 edi
  00082	75 07		 jne	 SHORT $LN18@OnRender

; 1117 :             _Delete_this();

  00084	8b 06		 mov	 eax, DWORD PTR [esi]
  00086	8b ce		 mov	 ecx, esi
  00088	ff 50 04	 call	 DWORD PTR [eax+4]
$LN18@OnRender:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1490 : }

  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00095	59		 pop	 ecx
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _target$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCWikiRenderTarget@@@std@@QAE@XZ ; std::shared_ptr<CWikiRenderTarget>::~shared_ptr<CWikiRenderTarget>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnRender@CUiWikiRenderTarget@UI@@MAEXXZ ENDP		; UI::CUiWikiRenderTarget::OnRender
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ
_TEXT	SEGMENT
_target$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ PROC	; UI::CUiWikiRenderTarget::OnUpdateRenderBox, COMDAT
; _this$ = ecx

; 1456 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 1457 : 	if (m_dwIndex == -1 /*(CPythonWikiRenderTarget::START_MODULE)*/)

  00029	8b 86 30 01 00
	00		 mov	 eax, DWORD PTR [esi+304]
  0002f	83 f8 ff	 cmp	 eax, -1
  00032	74 52		 je	 SHORT $LN18@OnUpdateRe

; 1462 : 	auto target = CWikiRenderTargetManager::Instance().GetRenderTarget(m_dwIndex);

  00034	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWikiRenderTargetManager@@@@0PAVCWikiRenderTargetManager@@A ; CSingleton<CWikiRenderTargetManager>::ms_singleton
  0003a	50		 push	 eax
  0003b	8d 45 ec	 lea	 eax, DWORD PTR _target$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?GetRenderTarget@CWikiRenderTargetManager@@QAE?AV?$shared_ptr@VCWikiRenderTarget@@@std@@H@Z ; CWikiRenderTargetManager::GetRenderTarget
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory

; 1718 :         return get() != nullptr;

  00044	8b 4d ec	 mov	 ecx, DWORD PTR _target$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1462 : 	auto target = CWikiRenderTargetManager::Instance().GetRenderTarget(m_dwIndex);

  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory

; 1718 :         return get() != nullptr;

  0004e	85 c9		 test	 ecx, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1463 : 	if (!target)

  00050	74 0c		 je	 SHORT $LN6@OnUpdateRe

; 1464 : 	{
; 1465 : 		return;
; 1466 : 	}
; 1467 : 
; 1468 : 	target->SetRenderingBox(&m_renderBox);

  00052	8d 86 94 00 00
	00		 lea	 eax, DWORD PTR [esi+148]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?SetRenderingBox@CWikiRenderTarget@@QBEXPAUtagRECT@@@Z ; CWikiRenderTarget::SetRenderingBox
$LN6@OnUpdateRe:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory

; 1334 :         if (_Rep) {

  0005e	8b 75 f0	 mov	 esi, DWORD PTR _target$[ebp+4]
  00061	85 f6		 test	 esi, esi
  00063	74 21		 je	 SHORT $LN18@OnUpdateRe

; 1109 :         if (_MT_DECR(_Uses) == 0) {

  00065	83 cf ff	 or	 edi, -1
  00068	8b c7		 mov	 eax, edi
  0006a	f0 0f c1 46 04	 lock	  xadd	 DWORD PTR [esi+4], eax
  0006f	75 15		 jne	 SHORT $LN18@OnUpdateRe

; 1110 :             _Destroy();

  00071	8b 06		 mov	 eax, DWORD PTR [esi]
  00073	8b ce		 mov	 ecx, esi
  00075	ff 10		 call	 DWORD PTR [eax]

; 1116 :         if (_MT_DECR(_Weaks) == 0) {

  00077	f0 0f c1 7e 08	 lock	  xadd	 DWORD PTR [esi+8], edi
  0007c	4f		 dec	 edi
  0007d	75 07		 jne	 SHORT $LN18@OnUpdateRe

; 1117 :             _Delete_this();

  0007f	8b 06		 mov	 eax, DWORD PTR [esi]
  00081	8b ce		 mov	 ecx, esi
  00083	ff 50 04	 call	 DWORD PTR [eax+4]
$LN18@OnUpdateRe:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1469 : }

  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _target$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$shared_ptr@VCWikiRenderTarget@@@std@@QAE@XZ ; std::shared_ptr<CWikiRenderTarget>::~shared_ptr<CWikiRenderTarget>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnUpdateRenderBox@CUiWikiRenderTarget@UI@@UAEXXZ ENDP	; UI::CUiWikiRenderTarget::OnUpdateRenderBox
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetWikiRenderTargetModule@CUiWikiRenderTarget@UI@@QAE_NH@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
tv241 = -4						; size = 4
_iRenderTargetModule$ = 8				; size = 4
?SetWikiRenderTargetModule@CUiWikiRenderTarget@UI@@QAE_NH@Z PROC ; UI::CUiWikiRenderTarget::SetWikiRenderTargetModule, COMDAT
; _this$ = ecx

; 1439 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 1440 : 	if (!CWikiRenderTargetManager::Instance().GetRenderTarget(iRenderTargetModule))

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _iRenderTargetModule$[ebp]
  0000a	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	53		 push	 ebx
  00010	8b f9		 mov	 edi, ecx
  00012	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWikiRenderTargetManager@@@@0PAVCWikiRenderTargetManager@@A ; CSingleton<CWikiRenderTargetManager>::ms_singleton
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?GetRenderTarget@CWikiRenderTargetManager@@QAE?AV?$shared_ptr@VCWikiRenderTarget@@@std@@H@Z ; CWikiRenderTargetManager::GetRenderTarget
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\memory

; 1718 :         return get() != nullptr;

  0001e	8b 30		 mov	 esi, DWORD PTR [eax]
  00020	89 75 fc	 mov	 DWORD PTR tv241[ebp], esi

; 1334 :         if (_Rep) {

  00023	8b 75 f8	 mov	 esi, DWORD PTR $T1[ebp+4]
  00026	85 f6		 test	 esi, esi
  00028	74 24		 je	 SHORT $LN17@SetWikiRen

; 1109 :         if (_MT_DECR(_Uses) == 0) {

  0002a	83 cb ff	 or	 ebx, -1
  0002d	8b c3		 mov	 eax, ebx
  0002f	f0 0f c1 46 04	 lock	  xadd	 DWORD PTR [esi+4], eax
  00034	75 15		 jne	 SHORT $LN20@SetWikiRen

; 1110 :             _Destroy();

  00036	8b 06		 mov	 eax, DWORD PTR [esi]
  00038	8b ce		 mov	 ecx, esi
  0003a	ff 10		 call	 DWORD PTR [eax]

; 1116 :         if (_MT_DECR(_Weaks) == 0) {

  0003c	f0 0f c1 5e 08	 lock	  xadd	 DWORD PTR [esi+8], ebx
  00041	4b		 dec	 ebx
  00042	75 07		 jne	 SHORT $LN20@SetWikiRen

; 1117 :             _Delete_this();

  00044	8b 06		 mov	 eax, DWORD PTR [esi]
  00046	8b ce		 mov	 ecx, esi
  00048	ff 50 04	 call	 DWORD PTR [eax+4]
$LN20@SetWikiRen:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1440 : 	if (!CWikiRenderTargetManager::Instance().GetRenderTarget(iRenderTargetModule))

  0004b	8b 5d 08	 mov	 ebx, DWORD PTR _iRenderTargetModule$[ebp]
$LN17@SetWikiRen:
  0004e	83 7d fc 00	 cmp	 DWORD PTR tv241[ebp], 0
  00052	75 34		 jne	 SHORT $LN3@SetWikiRen

; 1441 : 	{
; 1442 : 		if (!CWikiRenderTargetManager::Instance().CreateRenderTarget(iRenderTargetModule, GetWidth(), GetHeight()))

  00054	ff 77 30	 push	 DWORD PTR [edi+48]
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWikiRenderTargetManager@@@@0PAVCWikiRenderTargetManager@@A ; CSingleton<CWikiRenderTargetManager>::ms_singleton
  0005d	ff 77 2c	 push	 DWORD PTR [edi+44]
  00060	53		 push	 ebx
  00061	e8 00 00 00 00	 call	 ?CreateRenderTarget@CWikiRenderTargetManager@@QAE_NHHH@Z ; CWikiRenderTargetManager::CreateRenderTarget
  00066	84 c0		 test	 al, al
  00068	75 1e		 jne	 SHORT $LN3@SetWikiRen

; 1443 : 		{
; 1444 : 			TraceError("CWikiRenderTargetManager could not create the texture. w %d h %d", GetWidth(), GetHeight());

  0006a	ff 77 30	 push	 DWORD PTR [edi+48]
  0006d	ff 77 2c	 push	 DWORD PTR [edi+44]
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@OFBMEDEK@CWikiRenderTargetManager?5could?5@
  00075	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1445 : 			return false;

  0007d	32 c0		 xor	 al, al
  0007f	5f		 pop	 edi

; 1452 : 	return true;
; 1453 : }

  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
$LN3@SetWikiRen:

; 1446 : 		}
; 1447 : 	}
; 1448 : 
; 1449 : 	m_dwIndex = iRenderTargetModule;
; 1450 : 
; 1451 : 	UpdateRect();

  00088	8b cf		 mov	 ecx, edi
  0008a	89 9f 30 01 00
	00		 mov	 DWORD PTR [edi+304], ebx
  00090	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  00095	5f		 pop	 edi

; 1452 : 	return true;
; 1453 : }

  00096	5e		 pop	 esi
  00097	b0 01		 mov	 al, 1
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 04 00	 ret	 4
?SetWikiRenderTargetModule@CUiWikiRenderTarget@UI@@QAE_NH@Z ENDP ; UI::CUiWikiRenderTarget::SetWikiRenderTargetModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CUiWikiRenderTarget@UI@@UAE@XZ
_TEXT	SEGMENT
??1CUiWikiRenderTarget@UI@@UAE@XZ PROC			; UI::CUiWikiRenderTarget::~CUiWikiRenderTarget, COMDAT
; _this$ = ecx

; 1429 : CUiWikiRenderTarget::~CUiWikiRenderTarget() = default;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CUiWikiRenderTarget@UI@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CUiWikiRenderTarget@UI@@UAE@XZ ENDP			; UI::CUiWikiRenderTarget::~CUiWikiRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CUiWikiRenderTarget@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CUiWikiRenderTarget@UI@@QAE@PAU_object@@@Z PROC	; UI::CUiWikiRenderTarget::CUiWikiRenderTarget, COMDAT
; _this$ = ecx

; 1432 : 	m_dwIndex(-1) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CUiWikiRenderTarget@UI@@6B@
  00018	8b c6		 mov	 eax, esi
  0001a	c7 86 30 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+304], -1
  00024	5e		 pop	 esi
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??0CUiWikiRenderTarget@UI@@QAE@PAU_object@@@Z ENDP	; UI::CUiWikiRenderTarget::CUiWikiRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCWindow@UI@@UAEPAXI@Z PROC				; UI::CWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 30 01 00 00	 push	 304			; 00000130H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCWindow@UI@@UAEPAXI@Z ENDP				; UI::CWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Backout$2 = -48					; size = 12
$T3 = -36						; size = 4
$T4 = -36						; size = 4
$T5 = -32						; size = 4
__Guard$6 = -28						; size = 4
_this$ = -24						; size = 4
$T7 = -20						; size = 4
__Last$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z PROC		; tweeny::tween<float>::tween<float>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 e8	 mov	 DWORD PTR _this$[ebp], esi
  0002d	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00030	8d 5e 0c	 lea	 ebx, DWORD PTR [esi+12]
  00033	89 5d ec	 mov	 DWORD PTR $T7[ebp], ebx
  00036	8b 07		 mov	 eax, DWORD PTR [edi]
  00038	89 06		 mov	 DWORD PTR [esi], eax
  0003a	66 8b 47 04	 mov	 ax, WORD PTR [edi+4]
  0003e	66 89 46 04	 mov	 WORD PTR [esi+4], ax
  00042	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00045	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 748  :         const auto _Count       = static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst);

  00048	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0004d	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  00053	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  0005a	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0

; 748  :         const auto _Count       = static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst);

  00061	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00064	2b 4f 0c	 sub	 ecx, DWORD PTR [edi+12]
  00067	f7 e9		 imul	 ecx
  00069	c1 fa 04	 sar	 edx, 4
  0006c	8b c2		 mov	 eax, edx
  0006e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00071	03 c2		 add	 eax, edx

; 2128 :         if (_Count != 0) {

  00073	0f 84 b1 00 00
	00		 je	 $LN67@tween

; 2069 :         if (_Newcapacity > max_size()) {

  00079	3d aa aa aa 02	 cmp	 eax, 44739242		; 02aaaaaaH
  0007e	0f 87 eb 00 00
	00		 ja	 $LN78@tween

; 2071 :         }
; 2072 : 
; 2073 :         _Buy_raw(_Newcapacity);

  00084	50		 push	 eax
  00085	8b cb		 mov	 ecx, ebx
  00087	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXI@Z ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Buy_raw

; 2130 :             _Tidy_guard<vector> _Guard{this};

  0008c	89 5d e4	 mov	 DWORD PTR __Guard$6[ebp], ebx

; 2137 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

  0008f	8b 33		 mov	 esi, DWORD PTR [ebx]
  00091	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1691 :     auto _UFirst = _Get_unwrapped(_STD move(_First));

  00094	8b 7f 0c	 mov	 edi, DWORD PTR [edi+12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2130 :             _Tidy_guard<vector> _Guard{this};

  00097	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2137 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

  0009e	89 45 f0	 mov	 DWORD PTR __Last$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000a1	89 75 d0	 mov	 DWORD PTR __Backout$2[ebp], esi
  000a4	89 75 d4	 mov	 DWORD PTR __Backout$2[ebp+4], esi
  000a7	89 5d d8	 mov	 DWORD PTR __Backout$2[ebp+8], ebx

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  000aa	3b f8		 cmp	 edi, eax
  000ac	74 68		 je	 SHORT $LN22@tween
  000ae	66 90		 npad	 2
$LL23@tween:
  000b0	8b 07		 mov	 eax, DWORD PTR [edi]
  000b2	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
  000b5	89 06		 mov	 DWORD PTR [esi], eax
  000b7	66 8b 47 04	 mov	 ax, WORD PTR [edi+4]
  000bb	66 89 46 04	 mov	 WORD PTR [esi+4], ax

; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000bf	89 75 e0	 mov	 DWORD PTR $T5[ebp], esi
  000c2	89 5d dc	 mov	 DWORD PTR $T3[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  000c5	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0

; 888  :         return !_Getimpl();

  000cc	8b 4f 2c	 mov	 ecx, DWORD PTR [edi+44]

; 1037 :     function(const function& _Right) {

  000cf	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 892  :         if (!_Right._Empty()) {

  000d3	85 c9		 test	 ecx, ecx
  000d5	74 08		 je	 SHORT $LN46@tween

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  000d7	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d9	53		 push	 ebx
  000da	ff 10		 call	 DWORD PTR [eax]
  000dc	89 43 24	 mov	 DWORD PTR [ebx+36], eax
$LN46@tween:
  000df	8d 5e 30	 lea	 ebx, DWORD PTR [esi+48]

; 866  :         _Set(nullptr);

  000e2	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0
  000e9	89 5d dc	 mov	 DWORD PTR $T4[ebp], ebx

; 888  :         return !_Getimpl();

  000ec	8b 4f 54	 mov	 ecx, DWORD PTR [edi+84]

; 1037 :     function(const function& _Right) {

  000ef	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 892  :         if (!_Right._Empty()) {

  000f3	85 c9		 test	 ecx, ecx
  000f5	74 08		 je	 SHORT $LN56@tween

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  000f7	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f9	53		 push	 ebx
  000fa	ff 10		 call	 DWORD PTR [eax]
  000fc	89 43 24	 mov	 DWORD PTR [ebx+36], eax
$LN56@tween:
  000ff	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  00102	83 c7 60	 add	 edi, 96			; 00000060H
  00105	89 46 58	 mov	 DWORD PTR [esi+88], eax

; 1664 :         ++_Last;

  00108	83 c6 60	 add	 esi, 96			; 00000060H
  0010b	89 75 d4	 mov	 DWORD PTR __Backout$2[ebp+4], esi

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  0010e	3b 7d f0	 cmp	 edi, DWORD PTR __Last$1$[ebp]
  00111	75 9d		 jne	 SHORT $LL23@tween
  00113	8b 5d ec	 mov	 ebx, DWORD PTR $T7[ebp]
$LN22@tween:

; 1658 :         _Destroy_range(_First, _Last, _Al);

  00116	53		 push	 ebx
  00117	56		 push	 esi
  00118	56		 push	 esi
  00119	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >
  0011e	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  00121	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2137 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

  00124	89 73 04	 mov	 DWORD PTR [ebx+4], esi
  00127	8b 75 e8	 mov	 esi, DWORD PTR _this$[ebp]
$LN67@tween:
  0012a	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  0012d	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00130	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00133	8d 47 1c	 lea	 eax, DWORD PTR [edi+28]
  00136	50		 push	 eax
  00137	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  0013e	e8 00 00 00 00	 call	 ??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  00143	8d 47 28	 lea	 eax, DWORD PTR [edi+40]
  00146	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0014a	50		 push	 eax
  0014b	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  0014e	e8 00 00 00 00	 call	 ??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  00153	8a 47 34	 mov	 al, BYTE PTR [edi+52]
  00156	88 46 34	 mov	 BYTE PTR [esi+52], al
  00159	8b c6		 mov	 eax, esi
  0015b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0015e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00165	59		 pop	 ecx
  00166	5f		 pop	 edi
  00167	5e		 pop	 esi
  00168	5b		 pop	 ebx
  00169	8b e5		 mov	 esp, ebp
  0016b	5d		 pop	 ebp
  0016c	c2 04 00	 ret	 4
$LN78@tween:

; 2070 :             _Xlength();

  0016f	e8 00 00 00 00	 call	 ?_Xlength@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xlength
$LN76@tween:
  00174	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$3:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR __Guard$6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > > >::~_Tidy_guard<std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > > >
__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$4:
  00008	8d 4d d0	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >::~_Uninitialized_backout_al<std::allocator<tweeny::detail::tweenpoint<float> > >
__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$9:
  00010	8b 4d dc	 mov	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Func_class@MMMM@std@@QAE@XZ ; std::_Func_class<float,float,float,float>::~_Func_class<float,float,float,float>
__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$5:
  00018	8b 4d e0	 mov	 ecx, DWORD PTR $T5[ebp]
  0001b	83 c1 08	 add	 ecx, 8
  0001e	e9 00 00 00 00	 jmp	 ??1?$tuple@V?$function@$$A6AMMMM@Z@std@@@std@@QAE@XZ
__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$10:
  00023	8b 4d dc	 mov	 ecx, DWORD PTR $T4[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$0:
  0002b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00031	e9 00 00 00 00	 jmp	 ??1?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::~vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >
__unwindfunclet$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z$1:
  00036	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0003c	e9 00 00 00 00	 jmp	 ??1?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@XZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  00041	cc		 int	 3
  00042	cc		 int	 3
  00043	cc		 int	 3
  00044	cc		 int	 3
  00045	cc		 int	 3
__ehhandler$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z:
  00046	90		 npad	 1
  00047	90		 npad	 1
  00048	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0004c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004f	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00052	33 c8		 xor	 ecx, eax
  00054	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00059	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z
  0005e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$tween@M$$V@tweeny@@QAE@ABV01@@Z ENDP		; tweeny::tween<float>::tween<float>
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$tween@M$$V@tweeny@@QAE@XZ
_TEXT	SEGMENT
??1?$tween@M$$V@tweeny@@QAE@XZ PROC			; tweeny::tween<float>::~tween<float>, COMDAT
; _this$ = ecx

; 830  :         _Tidy();

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  00006	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
  0000b	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0000e	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
  00013	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00016	5e		 pop	 esi
  00017	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Tidy
??1?$tween@M$$V@tweeny@@QAE@XZ ENDP			; tweeny::tween<float>::~tween<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$GSCopy$1$ = -132					; size = 4
__Oldsize$1$ = -132					; size = 4
__Bytes$1$ = -128					; size = 4
$T2 = -121						; size = 1
__Backout$3 = -120					; size = 12
_dismissed$ = -120					; size = 12
_i$1$ = -108						; size = 4
_i$4 = -108						; size = 4
_cbVector$GSCopy$1$ = -104				; size = 4
__Ptr$1$ = -100						; size = 4
_<_Args_1>$ = -100					; size = 4
__Temp$5 = -96						; size = 40
$T6 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_cbVector$ = 8						; size = 4
?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z PROC ; tweeny::tween<float>::dispatch, COMDAT
; _this$ = ecx

; 2463 :     void tween<T>::dispatch(std::vector<typename traits::callbackType> & cbVector) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00031	8b 55 08	 mov	 edx, DWORD PTR _cbVector$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00034	33 ff		 xor	 edi, edi
  00036	33 c0		 xor	 eax, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2463 :     void tween<T>::dispatch(std::vector<typename traits::callbackType> & cbVector) {

  00038	89 55 98	 mov	 DWORD PTR _cbVector$GSCopy$1$[ebp], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003b	33 db		 xor	 ebx, ebx
  0003d	89 7d 9c	 mov	 DWORD PTR __Ptr$1$[ebp], edi
  00040	89 7d 88	 mov	 DWORD PTR _dismissed$[ebp], edi
  00043	89 5d 8c	 mov	 DWORD PTR _dismissed$[ebp+4], ebx
  00046	89 45 80	 mov	 DWORD PTR __Bytes$1$[ebp], eax
  00049	89 45 90	 mov	 DWORD PTR _dismissed$[ebp+8], eax

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0004c	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2465 :         for (size_t i = 0; i < cbVector.size(); ++i) {

  0004f	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00051	2b 0a		 sub	 ecx, DWORD PTR [edx]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2464 :         std::vector<size_t> dismissed;

  00053	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00056	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0005b	f7 e9		 imul	 ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2465 :         for (size_t i = 0; i < cbVector.size(); ++i) {

  0005d	89 75 94	 mov	 DWORD PTR _i$4[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00060	c1 fa 04	 sar	 edx, 4
  00063	8b c2		 mov	 eax, edx
  00065	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00068	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2465 :         for (size_t i = 0; i < cbVector.size(); ++i) {

  0006a	0f 84 85 00 00
	00		 je	 $LN3@dispatch
$LL4@dispatch:

; 2467 :             bool dismiss = cb(*this, current);

  00070	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00076	8d 04 bf	 lea	 eax, DWORD PTR [edi+edi*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00079	8b 7d 98	 mov	 edi, DWORD PTR _cbVector$GSCopy$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2467 :             bool dismiss = cb(*this, current);

  0007c	f3 0f 10 42 18	 movss	 xmm0, DWORD PTR [edx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00081	8b 0f		 mov	 ecx, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2467 :             bool dismiss = cb(*this, current);

  00083	f3 0f 11 45 9c	 movss	 DWORD PTR _<_Args_1>$[ebp], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00088	8b 4c c1 24	 mov	 ecx, DWORD PTR [ecx+eax*8+36]

; 870  :         if (_Empty()) {

  0008c	85 c9		 test	 ecx, ecx
  0008e	0f 84 db 02 00
	00		 je	 $LN192@dispatch

; 872  :         }
; 873  :         const auto _Impl = _Getimpl();
; 874  :         return _Impl->_Do_call(_STD forward<_Types>(_Args)...);

  00094	8b 01		 mov	 eax, DWORD PTR [ecx]
  00096	8d 7d 9c	 lea	 edi, DWORD PTR _<_Args_1>$[ebp]
  00099	57		 push	 edi
  0009a	52		 push	 edx
  0009b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0009e	ff d0		 call	 eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2468 :             if (dismiss) dismissed.push_back(i);

  000a0	84 c0		 test	 al, al
  000a2	74 28		 je	 SHORT $LN2@dispatch
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  000a4	3b 5d 80	 cmp	 ebx, DWORD PTR __Bytes$1$[ebp]
  000a7	74 0a		 je	 SHORT $LN179@dispatch

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  000a9	89 33		 mov	 DWORD PTR [ebx], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  000ab	83 c3 04	 add	 ebx, 4
  000ae	89 5d 8c	 mov	 DWORD PTR _dismissed$[ebp+4], ebx

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000b1	eb 19		 jmp	 SHORT $LN2@dispatch
$LN179@dispatch:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000b3	8d 45 94	 lea	 eax, DWORD PTR _i$4[ebp]
  000b6	50		 push	 eax
  000b7	53		 push	 ebx
  000b8	8d 4d 88	 lea	 ecx, DWORD PTR _dismissed$[ebp]
  000bb	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABI@?$vector@IV?$allocator@I@std@@@std@@AAEPAIQAIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Emplace_reallocate<unsigned int const &>
  000c0	8b 45 90	 mov	 eax, DWORD PTR _dismissed$[ebp+8]
  000c3	8b 5d 8c	 mov	 ebx, DWORD PTR _dismissed$[ebp+4]
  000c6	8b 75 94	 mov	 esi, DWORD PTR _i$4[ebp]
  000c9	89 45 80	 mov	 DWORD PTR __Bytes$1$[ebp], eax
$LN2@dispatch:

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000cc	8b 45 98	 mov	 eax, DWORD PTR _cbVector$GSCopy$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2465 :         for (size_t i = 0; i < cbVector.size(); ++i) {

  000cf	46		 inc	 esi
  000d0	8b fe		 mov	 edi, esi
  000d2	89 75 94	 mov	 DWORD PTR _i$4[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000d5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d8	2b 08		 sub	 ecx, DWORD PTR [eax]
  000da	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  000df	f7 e9		 imul	 ecx
  000e1	c1 fa 04	 sar	 edx, 4
  000e4	8b c2		 mov	 eax, edx
  000e6	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000e9	03 c2		 add	 eax, edx
  000eb	3b f8		 cmp	 edi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2465 :         for (size_t i = 0; i < cbVector.size(); ++i) {

  000ed	72 81		 jb	 SHORT $LL4@dispatch
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1967 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000ef	8b 7d 88	 mov	 edi, DWORD PTR _dismissed$[ebp]
  000f2	89 7d 9c	 mov	 DWORD PTR __Ptr$1$[ebp], edi
$LN3@dispatch:

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000f5	2b df		 sub	 ebx, edi
  000f7	c1 fb 02	 sar	 ebx, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2471 :         if (dismissed.size() > 0) {

  000fa	85 db		 test	 ebx, ebx
  000fc	0f 84 b1 01 00
	00		 je	 $LN151@dispatch

; 2472 :             for (size_t i = 0; i < dismissed.size(); ++i) {

  00102	33 f6		 xor	 esi, esi
  00104	89 75 94	 mov	 DWORD PTR _i$1$[ebp], esi
$LL7@dispatch:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00107	8b 45 98	 mov	 eax, DWORD PTR _cbVector$GSCopy$1$[ebp]
  0010a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0010d	8b 38		 mov	 edi, DWORD PTR [eax]
  0010f	2b cf		 sub	 ecx, edi
  00111	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00116	f7 e9		 imul	 ecx
  00118	c1 fa 04	 sar	 edx, 4
  0011b	8b c2		 mov	 eax, edx
  0011d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00120	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2474 :                 cbVector[index] = cbVector.at(cbVector.size() - 1 - i);

  00122	8b c8		 mov	 ecx, eax
  00124	2b ce		 sub	 ecx, esi
  00126	49		 dec	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1967 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00127	3b c1		 cmp	 eax, ecx
  00129	0f 86 4a 02 00
	00		 jbe	 $LN193@dispatch

; 1952 :         return _My_data._Myfirst[_Pos];

  0012f	8b 55 9c	 mov	 edx, DWORD PTR __Ptr$1$[ebp]

; 1971 :         return _My_data._Myfirst[_Pos];

  00132	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]

; 1952 :         return _My_data._Myfirst[_Pos];

  00135	8b 04 b2	 mov	 eax, DWORD PTR [edx+esi*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  00138	33 f6		 xor	 esi, esi
  0013a	89 75 ec	 mov	 DWORD PTR $T6[ebp+36], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  0013d	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00140	8d 3c c7	 lea	 edi, DWORD PTR [edi+eax*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00143	8b 55 98	 mov	 edx, DWORD PTR _cbVector$GSCopy$1$[ebp]

; 1037 :     function(const function& _Right) {

  00146	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 888  :         return !_Getimpl();

  0014a	8b 02		 mov	 eax, DWORD PTR [edx]
  0014c	8b 4c c8 24	 mov	 ecx, DWORD PTR [eax+ecx*8+36]

; 892  :         if (!_Right._Empty()) {

  00150	85 c9		 test	 ecx, ecx
  00152	74 0d		 je	 SHORT $LN57@dispatch

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  00154	8b 01		 mov	 eax, DWORD PTR [ecx]
  00156	8d 55 c8	 lea	 edx, DWORD PTR $T6[ebp]
  00159	52		 push	 edx
  0015a	ff 10		 call	 DWORD PTR [eax]
  0015c	8b f0		 mov	 esi, eax
  0015e	89 75 ec	 mov	 DWORD PTR $T6[ebp+36], esi
$LN57@dispatch:

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00161	8d 45 c8	 lea	 eax, DWORD PTR $T6[ebp]

; 1039 :     }

  00164	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00168	3b f0		 cmp	 esi, eax

; 958  :         if (!_Local() && !_Right._Local()) { // just swap pointers

  0016a	74 16		 je	 SHORT $LN204@dispatch

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0016c	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0016f	3b cf		 cmp	 ecx, edi

; 958  :         if (!_Local() && !_Right._Local()) { // just swap pointers

  00171	74 0f		 je	 SHORT $LN204@dispatch

; 959  :             _Ptrt* _Temp = _Getimpl();

  00173	8b c6		 mov	 eax, esi

; 960  :             _Set(_Right._Getimpl());

  00175	8b f1		 mov	 esi, ecx
  00177	89 75 ec	 mov	 DWORD PTR $T6[ebp+36], esi

; 961  :             _Right._Set(_Temp);

  0017a	89 47 24	 mov	 DWORD PTR [edi+36], eax

; 962  :         } else { // do three-way move

  0017d	e9 c6 00 00 00	 jmp	 $LN123@dispatch
$LN204@dispatch:

; 866  :         _Set(nullptr);

  00182	33 c9		 xor	 ecx, ecx
  00184	89 4d c4	 mov	 DWORD PTR __Temp$5[ebp+36], ecx

; 888  :         return !_Getimpl();

  00187	85 f6		 test	 esi, esi

; 898  :         if (!_Right._Empty()) {

  00189	74 40		 je	 SHORT $LN75@dispatch

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0018b	8d 45 c8	 lea	 eax, DWORD PTR $T6[ebp]
  0018e	3b f0		 cmp	 esi, eax

; 899  :             if (_Right._Local()) { // move and tidy

  00190	75 2f		 jne	 SHORT $LN74@dispatch

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00192	8b 06		 mov	 eax, DWORD PTR [esi]
  00194	8d 4d a0	 lea	 ecx, DWORD PTR __Temp$5[ebp]
  00197	51		 push	 ecx
  00198	8b ce		 mov	 ecx, esi
  0019a	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  0019d	8b 75 ec	 mov	 esi, DWORD PTR $T6[ebp+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  001a0	8b c8		 mov	 ecx, eax
  001a2	89 4d c4	 mov	 DWORD PTR __Temp$5[ebp+36], ecx

; 888  :         return !_Getimpl();

  001a5	85 f6		 test	 esi, esi

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  001a7	74 22		 je	 SHORT $LN75@dispatch

; 952  :             _Getimpl()->_Delete_this(!_Local());

  001a9	8b 16		 mov	 edx, DWORD PTR [esi]
  001ab	8d 45 c8	 lea	 eax, DWORD PTR $T6[ebp]
  001ae	3b f0		 cmp	 esi, eax
  001b0	8b ce		 mov	 ecx, esi
  001b2	0f 95 c0	 setne	 al
  001b5	0f b6 c0	 movzx	 eax, al
  001b8	50		 push	 eax
  001b9	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  001bc	8b 4d c4	 mov	 ecx, DWORD PTR __Temp$5[ebp+36]
  001bf	eb 05		 jmp	 SHORT $LN210@dispatch
$LN74@dispatch:

; 903  :                 _Set(_Right._Getimpl());

  001c1	8b ce		 mov	 ecx, esi
  001c3	89 4d c4	 mov	 DWORD PTR __Temp$5[ebp+36], ecx
$LN210@dispatch:

; 888  :         return !_Getimpl();

  001c6	33 f6		 xor	 esi, esi
  001c8	89 75 ec	 mov	 DWORD PTR $T6[ebp+36], esi
$LN75@dispatch:
  001cb	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  001ce	85 d2		 test	 edx, edx

; 898  :         if (!_Right._Empty()) {

  001d0	74 42		 je	 SHORT $LN91@dispatch

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  001d2	3b d7		 cmp	 edx, edi

; 899  :             if (_Right._Local()) { // move and tidy

  001d4	75 32		 jne	 SHORT $LN90@dispatch

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  001d6	8b 02		 mov	 eax, DWORD PTR [edx]
  001d8	8d 4d c8	 lea	 ecx, DWORD PTR $T6[ebp]
  001db	51		 push	 ecx
  001dc	8b ca		 mov	 ecx, edx
  001de	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  001e1	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  001e4	8b f0		 mov	 esi, eax
  001e6	89 75 ec	 mov	 DWORD PTR $T6[ebp+36], esi

; 888  :         return !_Getimpl();

  001e9	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  001eb	74 16		 je	 SHORT $LN205@dispatch

; 952  :             _Getimpl()->_Delete_this(!_Local());

  001ed	8b 11		 mov	 edx, DWORD PTR [ecx]

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  001ef	3b cf		 cmp	 ecx, edi

; 952  :             _Getimpl()->_Delete_this(!_Local());

  001f1	0f 95 c0	 setne	 al
  001f4	0f b6 c0	 movzx	 eax, al
  001f7	50		 push	 eax
  001f8	ff 52 10	 call	 DWORD PTR [edx+16]

; 902  :             } else { // steal from _Right

  001fb	8b 75 ec	 mov	 esi, DWORD PTR $T6[ebp+36]
  001fe	8b 4d c4	 mov	 ecx, DWORD PTR __Temp$5[ebp+36]
  00201	eb 0a		 jmp	 SHORT $LN211@dispatch
$LN205@dispatch:

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00203	8b 4d c4	 mov	 ecx, DWORD PTR __Temp$5[ebp+36]
  00206	eb 0c		 jmp	 SHORT $LN91@dispatch
$LN90@dispatch:

; 903  :                 _Set(_Right._Getimpl());

  00208	8b f2		 mov	 esi, edx
  0020a	89 75 ec	 mov	 DWORD PTR $T6[ebp+36], esi
$LN211@dispatch:

; 888  :         return !_Getimpl();

  0020d	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
$LN91@dispatch:
  00214	85 c9		 test	 ecx, ecx

; 898  :         if (!_Right._Empty()) {

  00216	74 30		 je	 SHORT $LN123@dispatch

; 982  :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00218	8d 45 a0	 lea	 eax, DWORD PTR __Temp$5[ebp]
  0021b	3b c8		 cmp	 ecx, eax

; 899  :             if (_Right._Local()) { // move and tidy

  0021d	75 26		 jne	 SHORT $LN106@dispatch

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  0021f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00221	57		 push	 edi
  00222	ff 50 04	 call	 DWORD PTR [eax+4]

; 888  :         return !_Getimpl();

  00225	8b 4d c4	 mov	 ecx, DWORD PTR __Temp$5[ebp+36]

; 900  :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00228	89 47 24	 mov	 DWORD PTR [edi+36], eax

; 888  :         return !_Getimpl();

  0022b	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0022d	74 11		 je	 SHORT $LN206@dispatch

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0022f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00231	8d 45 a0	 lea	 eax, DWORD PTR __Temp$5[ebp]
  00234	3b c8		 cmp	 ecx, eax
  00236	0f 95 c0	 setne	 al
  00239	0f b6 c0	 movzx	 eax, al
  0023c	50		 push	 eax
  0023d	ff 52 10	 call	 DWORD PTR [edx+16]
$LN206@dispatch:

; 888  :         return !_Getimpl();

  00240	8b 75 ec	 mov	 esi, DWORD PTR $T6[ebp+36]
  00243	eb 03		 jmp	 SHORT $LN123@dispatch
$LN106@dispatch:

; 903  :                 _Set(_Right._Getimpl());

  00245	89 4f 24	 mov	 DWORD PTR [edi+36], ecx
$LN123@dispatch:

; 888  :         return !_Getimpl();

  00248	85 f6		 test	 esi, esi

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  0024a	74 13		 je	 SHORT $LN5@dispatch

; 952  :             _Getimpl()->_Delete_this(!_Local());

  0024c	8b 16		 mov	 edx, DWORD PTR [esi]
  0024e	8d 45 c8	 lea	 eax, DWORD PTR $T6[ebp]
  00251	3b f0		 cmp	 esi, eax
  00253	8b ce		 mov	 ecx, esi
  00255	0f 95 c0	 setne	 al
  00258	0f b6 c0	 movzx	 eax, al
  0025b	50		 push	 eax
  0025c	ff 52 10	 call	 DWORD PTR [edx+16]
$LN5@dispatch:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2472 :             for (size_t i = 0; i < dismissed.size(); ++i) {

  0025f	8b 75 94	 mov	 esi, DWORD PTR _i$1$[ebp]
  00262	46		 inc	 esi
  00263	89 75 94	 mov	 DWORD PTR _i$1$[ebp], esi
  00266	3b f3		 cmp	 esi, ebx
  00268	0f 82 99 fe ff
	ff		 jb	 $LL7@dispatch
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0026e	8b 45 98	 mov	 eax, DWORD PTR _cbVector$GSCopy$1$[ebp]
  00271	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  00274	8b cf		 mov	 ecx, edi
  00276	2b 08		 sub	 ecx, DWORD PTR [eax]
  00278	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0027d	f7 e9		 imul	 ecx
  0027f	c1 fa 04	 sar	 edx, 4
  00282	8b c2		 mov	 eax, edx
  00284	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00287	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2476 :             cbVector.resize(cbVector.size() - dismissed.size());

  00289	8b f0		 mov	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0028b	89 85 7c ff ff
	ff		 mov	 DWORD PTR __Oldsize$1$[ebp], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2476 :             cbVector.resize(cbVector.size() - dismissed.size());

  00291	2b f3		 sub	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1621 :         if (_Newsize < _Oldsize) { // trim

  00293	3b f0		 cmp	 esi, eax
  00295	73 50		 jae	 SHORT $LN150@dispatch

; 1622 :             const pointer _Newlast = _Myfirst + _Newsize;

  00297	8b 5d 98	 mov	 ebx, DWORD PTR _cbVector$GSCopy$1$[ebp]
  0029a	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]

; 1623 :             _Orphan_range(_Newlast, _Mylast);
; 1624 :             _Destroy_range(_Newlast, _Mylast, _Al);

  0029d	53		 push	 ebx
  0029e	57		 push	 edi
  0029f	8b 13		 mov	 edx, DWORD PTR [ebx]
  002a1	8d 34 c2	 lea	 esi, DWORD PTR [edx+eax*8]
  002a4	56		 push	 esi
  002a5	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
  002aa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1625 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1626 :             _Mylast = _Newlast;

  002ad	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN207@dispatch:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  002b0	8b 7d 9c	 mov	 edi, DWORD PTR __Ptr$1$[ebp]
$LN151@dispatch:
  002b3	85 ff		 test	 edi, edi
  002b5	0f 84 96 00 00
	00		 je	 $LN17@dispatch

; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  002bb	8b 4d 80	 mov	 ecx, DWORD PTR __Bytes$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002be	8b c7		 mov	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  002c0	2b cf		 sub	 ecx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002c2	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  002c5	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  002cb	0f 82 76 00 00
	00		 jb	 $LN33@dispatch

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  002d1	8b 78 fc	 mov	 edi, DWORD PTR [eax-4]
  002d4	83 c1 23	 add	 ecx, 35			; 00000023H
  002d7	2b c7		 sub	 eax, edi

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002d9	83 c0 fc	 add	 eax, -4			; fffffffcH
  002dc	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002df	0f 87 8f 00 00
	00		 ja	 $LN213@dispatch
  002e5	eb 60		 jmp	 SHORT $LN33@dispatch
$LN150@dispatch:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1630 :         if (_Newsize > _Oldsize) { // append

  002e7	76 c7		 jbe	 SHORT $LN207@dispatch

; 1631 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  002e9	8b 5d 98	 mov	 ebx, DWORD PTR _cbVector$GSCopy$1$[ebp]
  002ec	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  002f1	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  002f4	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  002f6	f7 e9		 imul	 ecx
  002f8	c1 fa 04	 sar	 edx, 4
  002fb	8b c2		 mov	 eax, edx
  002fd	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00300	03 c2		 add	 eax, edx

; 1632 :             if (_Newsize > _Oldcapacity) { // reallocate

  00302	3b f0		 cmp	 esi, eax
  00304	76 0e		 jbe	 SHORT $LN152@dispatch

; 1633 :                 _Resize_reallocate(_Newsize, _Val);

  00306	8d 45 87	 lea	 eax, DWORD PTR $T2[ebp]
  00309	8b cb		 mov	 ecx, ebx
  0030b	50		 push	 eax
  0030c	56		 push	 esi
  0030d	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Resize_reallocate<std::_Value_init_tag>

; 1634 :                 return;

  00312	eb 9c		 jmp	 SHORT $LN207@dispatch
$LN152@dispatch:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00314	89 7d 8c	 mov	 DWORD PTR __Backout$3[ebp+4], edi
  00317	89 5d 90	 mov	 DWORD PTR __Backout$3[ebp+8], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1643 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

  0031a	2b b5 7c ff ff
	ff		 sub	 esi, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1902 :     for (; 0 < _Count; --_Count) {

  00320	74 12		 je	 SHORT $LN156@dispatch
$LL157@dispatch:

; 1663 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00322	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0

; 1664 :         ++_Last;

  00329	83 c7 28	 add	 edi, 40			; 00000028H

; 1902 :     for (; 0 < _Count; --_Count) {

  0032c	83 ee 01	 sub	 esi, 1
  0032f	75 f1		 jne	 SHORT $LL157@dispatch

; 1664 :         ++_Last;

  00331	89 7d 8c	 mov	 DWORD PTR __Backout$3[ebp+4], edi
$LN156@dispatch:

; 1906 :     return _Backout._Release();

  00334	8d 4d 88	 lea	 ecx, DWORD PTR __Backout$3[ebp]

; 1668 :         _First = _Last;

  00337	89 7d 88	 mov	 DWORD PTR __Backout$3[ebp], edi

; 1906 :     return _Backout._Release();

  0033a	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1643 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

  0033f	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
  00342	e9 69 ff ff ff	 jmp	 $LN207@dispatch
$LN33@dispatch:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00347	51		 push	 ecx
  00348	57		 push	 edi
  00349	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0034e	83 c4 08	 add	 esp, 8
$LN17@dispatch:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2478 :     }

  00351	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00354	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0035b	59		 pop	 ecx
  0035c	5f		 pop	 edi
  0035d	5e		 pop	 esi
  0035e	5b		 pop	 ebx
  0035f	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00362	33 cd		 xor	 ecx, ebp
  00364	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00369	8b e5		 mov	 esp, ebp
  0036b	5d		 pop	 ebp
  0036c	c2 04 00	 ret	 4
$LN192@dispatch:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 871  :             _Xbad_function_call();

  0036f	e8 00 00 00 00	 call	 ?_Xbad_function_call@std@@YAXXZ ; std::_Xbad_function_call
$LN213@dispatch:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00374	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN193@dispatch:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1968 :             _Xrange();

  00379	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xrange
$LN209@dispatch:
  0037e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z$0:
  00000	8d 4d 88	 lea	 ecx, DWORD PTR _dismissed$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
__unwindfunclet$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z$2:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a 74 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-140]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z ENDP ; tweeny::tween<float>::dispatch
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\array
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z
_TEXT	SEGMENT
_value$GSCopy$1$ = -76					; size = 4
_this$GSCopy$1$ = -72					; size = 4
_<_Args_2>$ = -72					; size = 4
_point$GSCopy$1$ = -68					; size = 4
_<_Args_1>$ = -68					; size = 4
_pointTotal$1$ = -64					; size = 4
_<_Args_0>$ = -64					; size = 4
tv430 = -60						; size = 4
_p$1$ = -60						; size = 4
_easing$ = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_prog$ = 8						; size = 4
_point$ = 12						; size = 4
_value$ = 16						; size = 4
?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z PROC	; tweeny::tween<float>::interpolate, COMDAT
; _this$ = ecx

; 2411 :     inline void tween<T>::interpolate(float prog, unsigned point, T & value) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
  0002d	89 75 b8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00030	8b 45 10	 mov	 eax, DWORD PTR _value$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00033	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00036	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  00039	2b cf		 sub	 ecx, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2411 :     inline void tween<T>::interpolate(float prog, unsigned point, T & value) const {

  0003b	8b 5d 0c	 mov	 ebx, DWORD PTR _point$[ebp]
  0003e	89 45 b4	 mov	 DWORD PTR _value$GSCopy$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00041	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00046	f7 e9		 imul	 ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2411 :     inline void tween<T>::interpolate(float prog, unsigned point, T & value) const {

  00048	89 5d bc	 mov	 DWORD PTR _point$GSCopy$1$[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0004b	c1 fa 04	 sar	 edx, 4
  0004e	8b c2		 mov	 eax, edx
  00050	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00053	03 c2		 add	 eax, edx
  00055	3b c3		 cmp	 eax, ebx
  00057	0f 86 7d 01 00
	00		 jbe	 $LN94@interpolat

; 1980 :         return _My_data._Myfirst[_Pos];

  0005d	8d 04 5b	 lea	 eax, DWORD PTR [ebx+ebx*2]
  00060	c1 e0 05	 shl	 eax, 5
  00063	03 c7		 add	 eax, edi
  00065	89 45 c4	 mov	 DWORD PTR _p$1$[ebp], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1192 :             return *std::max_element(durations.begin(), durations.end());

  00068	8d 58 04	 lea	 ebx, DWORD PTR [eax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\array

; 49   :     _CONSTEXPR17 explicit _Array_const_iterator(pointer _Parg, size_t _Off = 0) noexcept : _Ptr(_Parg + _Off) {}

  0006b	8d 7b 02	 lea	 edi, DWORD PTR [ebx+2]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 9440 :             const auto _Result    = __std_max_element(_First_ptr, _To_address(_Last));

  0006e	57		 push	 edi
  0006f	53		 push	 ebx
  00070	e8 00 00 00 00	 call	 ??$__std_max_element@$$CBG@@YAPBGPBG0@Z ; __std_max_element<unsigned short const >
  00075	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1192 :             return *std::max_element(durations.begin(), durations.end());

  00078	0f b7 00	 movzx	 eax, WORD PTR [eax]
  0007b	66 0f 6e d8	 movd	 xmm3, eax

; 2413 :         auto pointDuration = uint32_t(p.duration() - (p.stacked - (prog * static_cast<float>(total))));

  0007f	8b 45 c4	 mov	 eax, DWORD PTR _p$1$[ebp]
  00082	0f 5b db	 cvtdq2ps xmm3, xmm3
  00085	8b 40 58	 mov	 eax, DWORD PTR [eax+88]
  00088	66 0f 6e c0	 movd	 xmm0, eax
  0008c	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00090	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00093	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0009c	8b 06		 mov	 eax, DWORD PTR [esi]
  0009e	66 0f 6e c8	 movd	 xmm1, eax
  000a2	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  000a6	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000a9	66 0f 5a d0	 cvtpd2ps xmm2, xmm0
  000ad	f2 0f 58 0c c5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000b6	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  000ba	f3 0f 59 4d 08	 mulss	 xmm1, DWORD PTR _prog$[ebp]
  000bf	f3 0f 5c d1	 subss	 xmm2, xmm1
  000c3	f3 0f 5c da	 subss	 xmm3, xmm2
  000c7	0f 28 c3	 movaps	 xmm0, xmm3
  000ca	e8 00 00 00 00	 call	 __ftol3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 9440 :             const auto _Result    = __std_max_element(_First_ptr, _To_address(_Last));

  000cf	57		 push	 edi
  000d0	53		 push	 ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2413 :         auto pointDuration = uint32_t(p.duration() - (p.stacked - (prog * static_cast<float>(total))));

  000d1	8b f0		 mov	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 9440 :             const auto _Result    = __std_max_element(_First_ptr, _To_address(_Last));

  000d3	e8 00 00 00 00	 call	 ??$__std_max_element@$$CBG@@YAPBGPBG0@Z ; __std_max_element<unsigned short const >
  000d8	66 0f 6e c6	 movd	 xmm0, esi
  000dc	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2414 :         float pointTotal = static_cast<float>(pointDuration) / static_cast<float>(p.duration());

  000df	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000e3	c1 ee 1f	 shr	 esi, 31			; 0000001fH

; 1192 :             return *std::max_element(durations.begin(), durations.end());

  000e6	0f b7 00	 movzx	 eax, WORD PTR [eax]

; 2415 :         if (pointTotal > 1.0f) pointTotal = 1.0f;

  000e9	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  000f1	f2 0f 58 04 f5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[esi*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  000fa	33 f6		 xor	 esi, esi
  000fc	89 75 ec	 mov	 DWORD PTR _easing$[ebp+36], esi
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2414 :         float pointTotal = static_cast<float>(pointDuration) / static_cast<float>(p.duration());

  000ff	66 0f 5a c8	 cvtpd2ps xmm1, xmm0
  00103	66 0f 6e c0	 movd	 xmm0, eax
  00107	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0010a	f3 0f 5e c8	 divss	 xmm1, xmm0

; 2415 :         if (pointTotal > 1.0f) pointTotal = 1.0f;

  0010e	f3 0f 5d d1	 minss	 xmm2, xmm1
  00112	f3 0f 11 55 c0	 movss	 DWORD PTR _pointTotal$1$[ebp], xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00117	8b 45 c4	 mov	 eax, DWORD PTR _p$1$[ebp]

; 1037 :     function(const function& _Right) {

  0011a	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi

; 888  :         return !_Getimpl();

  0011d	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]

; 892  :         if (!_Right._Empty()) {

  00120	85 c9		 test	 ecx, ecx
  00122	74 12		 je	 SHORT $LN61@interpolat

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  00124	8b 01		 mov	 eax, DWORD PTR [ecx]
  00126	8d 55 c8	 lea	 edx, DWORD PTR _easing$[ebp]
  00129	52		 push	 edx
  0012a	ff 10		 call	 DWORD PTR [eax]
  0012c	f3 0f 10 55 c0	 movss	 xmm2, DWORD PTR _pointTotal$1$[ebp]
  00131	8b f0		 mov	 esi, eax
  00133	89 75 ec	 mov	 DWORD PTR _easing$[ebp+36], esi
$LN61@interpolat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00136	8b 4d b8	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00139	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2417 :         value = easing(pointTotal, std::get<0>(p.values), std::get<0>(points.at(point+1).values));

  0013e	8b 7d bc	 mov	 edi, DWORD PTR _point$GSCopy$1$[ebp]
  00141	47		 inc	 edi
  00142	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00149	8b 59 0c	 mov	 ebx, DWORD PTR [ecx+12]
  0014c	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0014f	2b cb		 sub	 ecx, ebx
  00151	f7 e9		 imul	 ecx
  00153	c1 fa 04	 sar	 edx, 4
  00156	8b c2		 mov	 eax, edx
  00158	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0015b	03 c2		 add	 eax, edx
  0015d	3b c7		 cmp	 eax, edi
  0015f	76 7e		 jbe	 SHORT $LN95@interpolat

; 1980 :         return _My_data._Myfirst[_Pos];

  00161	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2417 :         value = easing(pointTotal, std::get<0>(p.values), std::get<0>(points.at(point+1).values));

  00164	f3 0f 11 55 c0	 movss	 DWORD PTR _<_Args_0>$[ebp], xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1980 :         return _My_data._Myfirst[_Pos];

  00169	c1 e0 05	 shl	 eax, 5
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2417 :         value = easing(pointTotal, std::get<0>(p.values), std::get<0>(points.at(point+1).values));

  0016c	f3 0f 10 04 18	 movss	 xmm0, DWORD PTR [eax+ebx]
  00171	8b 45 c4	 mov	 eax, DWORD PTR _p$1$[ebp]
  00174	f3 0f 11 45 b8	 movss	 DWORD PTR _<_Args_2>$[ebp], xmm0
  00179	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0017d	f3 0f 11 45 bc	 movss	 DWORD PTR _<_Args_1>$[ebp], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  00182	85 f6		 test	 esi, esi

; 870  :         if (_Empty()) {

  00184	74 5e		 je	 SHORT $LN96@interpolat

; 872  :         }
; 873  :         const auto _Impl = _Getimpl();
; 874  :         return _Impl->_Do_call(_STD forward<_Types>(_Args)...);

  00186	8b 06		 mov	 eax, DWORD PTR [esi]
  00188	8b ce		 mov	 ecx, esi
  0018a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0018d	89 45 c4	 mov	 DWORD PTR tv430[ebp], eax
  00190	8d 45 b8	 lea	 eax, DWORD PTR _<_Args_2>$[ebp]
  00193	50		 push	 eax
  00194	8d 45 bc	 lea	 eax, DWORD PTR _<_Args_1>$[ebp]
  00197	50		 push	 eax
  00198	8d 45 c0	 lea	 eax, DWORD PTR _<_Args_0>$[ebp]
  0019b	50		 push	 eax
  0019c	ff 55 c4	 call	 DWORD PTR tv430[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2417 :         value = easing(pointTotal, std::get<0>(p.values), std::get<0>(points.at(point+1).values));

  0019f	8b 45 b4	 mov	 eax, DWORD PTR _value$GSCopy$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  001a2	8b 4d ec	 mov	 ecx, DWORD PTR _easing$[ebp+36]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2417 :         value = easing(pointTotal, std::get<0>(p.values), std::get<0>(points.at(point+1).values));

  001a5	d9 18		 fstp	 DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  001a7	85 c9		 test	 ecx, ecx

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  001a9	74 11		 je	 SHORT $LN79@interpolat

; 952  :             _Getimpl()->_Delete_this(!_Local());

  001ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  001ad	8d 45 c8	 lea	 eax, DWORD PTR _easing$[ebp]
  001b0	3b c8		 cmp	 ecx, eax
  001b2	0f 95 c0	 setne	 al
  001b5	0f b6 c0	 movzx	 eax, al
  001b8	50		 push	 eax
  001b9	ff 52 10	 call	 DWORD PTR [edx+16]
$LN79@interpolat:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2418 :     }

  001bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001c6	59		 pop	 ecx
  001c7	5f		 pop	 edi
  001c8	5e		 pop	 esi
  001c9	5b		 pop	 ebx
  001ca	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001cd	33 cd		 xor	 ecx, ebp
  001cf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d4	8b e5		 mov	 esp, ebp
  001d6	5d		 pop	 ebp
  001d7	c2 0c 00	 ret	 12			; 0000000cH
$LN94@interpolat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1977 :             _Xrange();

  001da	e8 00 00 00 00	 call	 ?_Xrange@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xrange
$LN95@interpolat:
  001df	e8 00 00 00 00	 call	 ?_Xrange@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xrange
$LN96@interpolat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 871  :             _Xbad_function_call();

  001e4	e8 00 00 00 00	 call	 ?_Xbad_function_call@std@@YAXXZ ; std::_Xbad_function_call
$LN92@interpolat:
  001e9	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z$1:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR _easing$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Func_class@MMMM@std@@QAE@XZ ; std::_Func_class<float,float,float,float>::~_Func_class<float,float,float,float>
__unwindfunclet$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z$0:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR _easing$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$function@$$A6AMMMM@Z@std@@QAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z ENDP	; tweeny::tween<float>::interpolate
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xrange@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xrange, COMDAT

; 2205 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy, COMDAT
; _this$ = ecx

; 2098 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2099 :         auto& _Al         = _Getal();
; 2100 :         auto& _My_data    = _Mypair._Myval2;
; 2101 :         pointer& _Myfirst = _My_data._Myfirst;
; 2102 :         pointer& _Mylast  = _My_data._Mylast;
; 2103 :         pointer& _Myend   = _My_data._Myend;
; 2104 : 
; 2105 :         _My_data._Orphan_all();
; 2106 : 
; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 65		 je	 SHORT $LN2@Tidy

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00009	57		 push	 edi
  0000a	56		 push	 esi
  0000b	ff 76 04	 push	 DWORD PTR [esi+4]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >

; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00014	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00017	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0001c	8b 3e		 mov	 edi, DWORD PTR [esi]
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00021	2b cf		 sub	 ecx, edi
  00023	f7 e9		 imul	 ecx
  00025	c1 fa 04	 sar	 edx, 4
  00028	8b c2		 mov	 eax, edx
  0002a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002d	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002f	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  00032	c1 e1 03	 shl	 ecx, 3

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00035	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0003b	72 12		 jb	 SHORT $LN18@Tidy

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0003d	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  00040	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00043	2b fa		 sub	 edi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  00048	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0004b	77 23		 ja	 SHORT $LN15@Tidy

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0004d	8b fa		 mov	 edi, edx
$LN18@Tidy:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0004f	51		 push	 ecx
  00050	57		 push	 edi
  00051	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00056	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00059	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 2113 :             _Mylast  = nullptr;

  0005f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2114 :             _Myend   = nullptr;

  00066	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0006d	5f		 pop	 edi
$LN2@Tidy:

; 2116 :     }

  0006e	5e		 pop	 esi
  0006f	c3		 ret	 0
$LN15@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Tidy:
  00075	cc		 int	 3
?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Change_array@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@II@Z PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Change_array, COMDAT
; _this$ = ecx

; 2076 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx

; 2077 :         // orphan all iterators, discard old array, acquire new array
; 2078 :         auto& _Al         = _Getal();
; 2079 :         auto& _My_data    = _Mypair._Myval2;
; 2080 :         pointer& _Myfirst = _My_data._Myfirst;
; 2081 :         pointer& _Mylast  = _My_data._Mylast;
; 2082 :         pointer& _Myend   = _My_data._Myend;
; 2083 : 
; 2084 :         _My_data._Orphan_all();
; 2085 : 
; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 07		 mov	 eax, DWORD PTR [edi]
  00008	85 c0		 test	 eax, eax
  0000a	74 51		 je	 SHORT $LN8@Change_arr

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	ff 77 04	 push	 DWORD PTR [edi+4]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@YAXPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@0@QAV10@AAV?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >

; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00017	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0001a	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0001f	8b 37		 mov	 esi, DWORD PTR [edi]
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	2b ce		 sub	 ecx, esi
  00026	f7 e9		 imul	 ecx
  00028	c1 fa 04	 sar	 edx, 4
  0002b	8b c2		 mov	 eax, edx
  0002d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00030	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00032	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  00035	c1 e1 03	 shl	 ecx, 3

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00038	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0003e	72 12		 jb	 SHORT $LN18@Change_arr

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00040	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00043	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00046	2b f2		 sub	 esi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00048	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  0004b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0004e	77 2f		 ja	 SHORT $LN15@Change_arr

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00050	8b f2		 mov	 esi, edx
$LN18@Change_arr:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00052	51		 push	 ecx
  00053	56		 push	 esi
  00054	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00059	83 c4 08	 add	 esp, 8
  0005c	5e		 pop	 esi
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2092 :         _Myfirst = _Newvec;

  0005d	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00060	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00063	89 0f		 mov	 DWORD PTR [edi], ecx
  00065	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00068	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]
  0006b	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  0006e	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00071	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00074	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]
  00077	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0007a	5f		 pop	 edi

; 2096 :     }

  0007b	5d		 pop	 ebp
  0007c	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Change_arr:
  00084	cc		 int	 3
?_Change_array@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@II@Z ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Buy_raw@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXI@Z
_TEXT	SEGMENT
__Newcapacity$ = 8					; size = 4
?_Buy_raw@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXI@Z PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Buy_raw, COMDAT
; _this$ = ecx

; 2042 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2042 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0000a	3d 66 66 66 06	 cmp	 eax, 107374182		; 06666666H
  0000f	77 56		 ja	 SHORT $LN18@Buy_raw

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00011	8d 34 80	 lea	 esi, DWORD PTR [eax+eax*4]
  00014	c1 e6 03	 shl	 esi, 3

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00017	81 fe 00 10 00
	00		 cmp	 esi, 4096		; 00001000H
  0001d	72 19		 jb	 SHORT $LN10@Buy_raw

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2053 :         _Myfirst           = _Newvec;

  00025	89 07		 mov	 DWORD PTR [edi], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00027	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2054 :         _Mylast            = _Newvec;

  0002a	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 2055 :         _Myend             = _Newvec + _Newcapacity;

  0002d	03 c6		 add	 eax, esi
  0002f	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi

; 2056 :     }

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
$LN10@Buy_raw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 234  :     if (_Bytes != 0) {

  00038	85 f6		 test	 esi, esi
  0003a	74 19		 je	 SHORT $LN11@Buy_raw

; 77   :         return ::operator new(_Bytes);

  0003c	56		 push	 esi
  0003d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2053 :         _Myfirst           = _Newvec;

  00042	89 07		 mov	 DWORD PTR [edi], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  00044	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2054 :         _Mylast            = _Newvec;

  00047	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 2055 :         _Myend             = _Newvec + _Newcapacity;

  0004a	03 c6		 add	 eax, esi
  0004c	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 2056 :     }

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN11@Buy_raw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 238  :     return nullptr;

  00055	33 c0		 xor	 eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2053 :         _Myfirst           = _Newvec;

  00057	89 07		 mov	 DWORD PTR [edi], eax

; 2054 :         _Mylast            = _Newvec;

  00059	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 2055 :         _Myend             = _Newvec + _Newcapacity;

  0005c	8b c6		 mov	 eax, esi
  0005e	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi

; 2056 :     }

  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
$LN18@Buy_raw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00067	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN16@Buy_raw:
  0006c	cc		 int	 3
?_Buy_raw@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXI@Z ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >, COMDAT
; _this$ = ecx

; 830  :         _Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
??1?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Backout$2 = -32					; size = 12
$T3 = -20						; size = 4
__Guard$4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Last$1$ = 8						; size = 4
__Right$ = 8						; size = 4
??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >, COMDAT
; _this$ = ecx

; 746  :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 747  :         const auto& _Right_data = _Right._Mypair._Myval2;
; 748  :         const auto _Count       = static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst);

  0002a	8b 75 08	 mov	 esi, DWORD PTR __Right$[ebp]
  0002d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00032	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  00038	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  0003f	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0

; 747  :         const auto& _Right_data = _Right._Mypair._Myval2;
; 748  :         const auto _Count       = static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst);

  00046	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00049	2b 0e		 sub	 ecx, DWORD PTR [esi]
  0004b	f7 e9		 imul	 ecx
  0004d	c1 fa 04	 sar	 edx, 4
  00050	8b c2		 mov	 eax, edx
  00052	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00055	03 c2		 add	 eax, edx

; 2128 :         if (_Count != 0) {

  00057	74 77		 je	 SHORT $LN40@vector

; 2069 :         if (_Newcapacity > max_size()) {

  00059	3d 66 66 66 06	 cmp	 eax, 107374182		; 06666666H
  0005e	0f 87 82 00 00
	00		 ja	 $LN50@vector

; 2071 :         }
; 2072 : 
; 2073 :         _Buy_raw(_Newcapacity);

  00064	50		 push	 eax
  00065	8b cb		 mov	 ecx, ebx
  00067	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXI@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Buy_raw

; 2130 :             _Tidy_guard<vector> _Guard{this};

  0006c	89 5d f0	 mov	 DWORD PTR __Guard$4[ebp], ebx

; 2137 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

  0006f	8b 3b		 mov	 edi, DWORD PTR [ebx]
  00071	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1691 :     auto _UFirst = _Get_unwrapped(_STD move(_First));

  00074	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2130 :             _Tidy_guard<vector> _Guard{this};

  00076	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2137 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

  0007d	89 45 08	 mov	 DWORD PTR __Last$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00080	89 7d e0	 mov	 DWORD PTR __Backout$2[ebp], edi
  00083	89 7d e4	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00086	89 5d e8	 mov	 DWORD PTR __Backout$2[ebp+8], ebx

; 1715 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  00089	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  0008d	3b f0		 cmp	 esi, eax
  0008f	74 31		 je	 SHORT $LN17@vector
$LL18@vector:

; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00091	89 7d ec	 mov	 DWORD PTR $T3[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  00094	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0

; 888  :         return !_Getimpl();

  0009b	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]

; 1037 :     function(const function& _Right) {

  0009e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 892  :         if (!_Right._Empty()) {

  000a2	85 c9		 test	 ecx, ecx
  000a4	74 0b		 je	 SHORT $LN31@vector

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  000a6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a8	57		 push	 edi
  000a9	ff 10		 call	 DWORD PTR [eax]
  000ab	89 47 24	 mov	 DWORD PTR [edi+36], eax
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Last$1$[ebp]
$LN31@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1664 :         ++_Last;

  000b1	83 c7 28	 add	 edi, 40			; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 1039 :     }

  000b4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  000b8	83 c6 28	 add	 esi, 40			; 00000028H

; 1664 :         ++_Last;

  000bb	89 7d e4	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  000be	3b f0		 cmp	 esi, eax
  000c0	75 cf		 jne	 SHORT $LL18@vector
$LN17@vector:

; 1717 :         _Backout._Emplace_back(*_UFirst);
; 1718 :     }
; 1719 : 
; 1720 :     return _Backout._Release();

  000c2	8d 4d e0	 lea	 ecx, DWORD PTR __Backout$2[ebp]

; 1668 :         _First = _Last;

  000c5	89 7d e0	 mov	 DWORD PTR __Backout$2[ebp], edi

; 1720 :     return _Backout._Release();

  000c8	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2137 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

  000cd	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
$LN40@vector:

; 749  :         _Construct_n(_Count, _Right_data._Myfirst, _Right_data._Mylast);
; 750  :     }

  000d0	8b c3		 mov	 eax, ebx
  000d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dc	59		 pop	 ecx
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 04 00	 ret	 4
$LN50@vector:

; 2070 :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@CAXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Xlength
$LN48@vector:
  000eb	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Guard$4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > > >::~_Tidy_guard<std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > > >
__unwindfunclet$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::~_Uninitialized_backout_al<std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
__unwindfunclet$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z$2:
  00010	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@QAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@QAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@I@Z PROC ; std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> >::deallocate, COMDAT
; _this$ = ecx

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	c1 e1 03	 shl	 ecx, 3

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00015	72 12		 jb	 SHORT $LN15@deallocate

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00017	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001a	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001d	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00022	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00025	77 10		 ja	 SHORT $LN12@deallocate

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00027	8b c2		 mov	 eax, edx
$LN15@deallocate:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00029	51		 push	 ecx
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00030	83 c4 08	 add	 esp, 8

; 831  :     }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
$LN12@deallocate:

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00037	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN18@deallocate:
  0003c	cc		 int	 3
?deallocate@?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@std@@QAEXQAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@2@I@Z ENDP ; std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xrange@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ PROC ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xrange, COMDAT

; 2205 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ENDP ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ PROC ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ENDP ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ PROC ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Tidy, COMDAT
; _this$ = ecx

; 2098 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2099 :         auto& _Al         = _Getal();
; 2100 :         auto& _My_data    = _Mypair._Myval2;
; 2101 :         pointer& _Myfirst = _My_data._Myfirst;
; 2102 :         pointer& _Mylast  = _My_data._Mylast;
; 2103 :         pointer& _Myend   = _My_data._Myend;
; 2104 : 
; 2105 :         _My_data._Orphan_all();
; 2106 : 
; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 65		 je	 SHORT $LN2@Tidy

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00009	57		 push	 edi
  0000a	56		 push	 esi
  0000b	ff 76 04	 push	 DWORD PTR [esi+4]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@YAXPAU?$tweenpoint@M@detail@tweeny@@QAU123@AAV?$allocator@U?$tweenpoint@M@detail@tweeny@@@0@@Z ; std::_Destroy_range<std::allocator<tweeny::detail::tweenpoint<float> > >

; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00014	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00017	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001c	8b 3e		 mov	 edi, DWORD PTR [esi]
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00021	2b cf		 sub	 ecx, edi
  00023	f7 e9		 imul	 ecx
  00025	c1 fa 04	 sar	 edx, 4
  00028	8b c2		 mov	 eax, edx
  0002a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002d	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002f	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00032	c1 e1 05	 shl	 ecx, 5

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00035	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0003b	72 12		 jb	 SHORT $LN18@Tidy

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0003d	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  00040	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00043	2b fa		 sub	 edi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  00048	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0004b	77 23		 ja	 SHORT $LN15@Tidy

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0004d	8b fa		 mov	 edi, edx
$LN18@Tidy:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0004f	51		 push	 ecx
  00050	57		 push	 edi
  00051	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00056	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00059	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 2113 :             _Mylast  = nullptr;

  0005f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2114 :             _Myend   = nullptr;

  00066	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0006d	5f		 pop	 edi
$LN2@Tidy:

; 2116 :     }

  0006e	5e		 pop	 esi
  0006f	c3		 ret	 0
$LN15@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Tidy:
  00075	cc		 int	 3
?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ ENDP ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Newcapacity$ = 8					; size = 4
?_Buy_raw@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXI@Z PROC ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Buy_raw, COMDAT
; _this$ = ecx

; 2042 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2042 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0000a	3d aa aa aa 02	 cmp	 eax, 44739242		; 02aaaaaaH
  0000f	77 56		 ja	 SHORT $LN18@Buy_raw

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00011	8d 34 40	 lea	 esi, DWORD PTR [eax+eax*2]
  00014	c1 e6 05	 shl	 esi, 5

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00017	81 fe 00 10 00
	00		 cmp	 esi, 4096		; 00001000H
  0001d	72 19		 jb	 SHORT $LN10@Buy_raw

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2053 :         _Myfirst           = _Newvec;

  00025	89 07		 mov	 DWORD PTR [edi], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00027	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2054 :         _Mylast            = _Newvec;

  0002a	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 2055 :         _Myend             = _Newvec + _Newcapacity;

  0002d	03 c6		 add	 eax, esi
  0002f	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi

; 2056 :     }

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
$LN10@Buy_raw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 234  :     if (_Bytes != 0) {

  00038	85 f6		 test	 esi, esi
  0003a	74 19		 je	 SHORT $LN11@Buy_raw

; 77   :         return ::operator new(_Bytes);

  0003c	56		 push	 esi
  0003d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2053 :         _Myfirst           = _Newvec;

  00042	89 07		 mov	 DWORD PTR [edi], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  00044	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2054 :         _Mylast            = _Newvec;

  00047	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 2055 :         _Myend             = _Newvec + _Newcapacity;

  0004a	03 c6		 add	 eax, esi
  0004c	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 2056 :     }

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN11@Buy_raw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 238  :     return nullptr;

  00055	33 c0		 xor	 eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2053 :         _Myfirst           = _Newvec;

  00057	89 07		 mov	 DWORD PTR [edi], eax

; 2054 :         _Mylast            = _Newvec;

  00059	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 2055 :         _Myend             = _Newvec + _Newcapacity;

  0005c	8b c6		 mov	 eax, esi
  0005e	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi

; 2056 :     }

  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
$LN18@Buy_raw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00067	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN16@Buy_raw:
  0006c	cc		 int	 3
?_Buy_raw@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXI@Z ENDP ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ PROC ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::~vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >, COMDAT
; _this$ = ecx

; 830  :         _Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Tidy
??1?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@QAE@XZ ENDP ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::~vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ?progress@?$tween@M$$V@tweeny@@QBEMXZ
_TEXT	SEGMENT
?progress@?$tween@M$$V@tweeny@@QBEMXZ PROC		; tweeny::tween<float>::progress, COMDAT
; _this$ = ecx

; 2502 :         return currentProgress;

  00000	d9 41 08	 fld	 DWORD PTR [ecx+8]

; 2503 :     }

  00003	c3		 ret	 0
?progress@?$tween@M$$V@tweeny@@QBEMXZ ENDP		; tweeny::tween<float>::progress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_callback$ = 8						; size = 40
?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z PROC ; tweeny::tween<float>::onStep, COMDAT
; _this$ = ecx

; 2427 :     tween<T> & tween<T>::onStep(typename detail::tweentraits<T>::callbackType callback) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00028	8b 5e 20	 mov	 ebx, DWORD PTR [esi+32]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2428 :         onStepCallbacks.push_back(callback);

  0002b	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00035	3b 5e 24	 cmp	 ebx, DWORD PTR [esi+36]
  00038	74 28		 je	 SHORT $LN7@onStep
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  0003a	89 5d f0	 mov	 DWORD PTR $T2[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  0003d	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0

; 888  :         return !_Getimpl();

  00044	8b 7d 2c	 mov	 edi, DWORD PTR _callback$[ebp+36]

; 1037 :     function(const function& _Right) {

  00047	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 888  :         return !_Getimpl();

  0004b	85 ff		 test	 edi, edi

; 892  :         if (!_Right._Empty()) {

  0004d	74 0d		 je	 SHORT $LN19@onStep

; 893  :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  0004f	8b 07		 mov	 eax, DWORD PTR [edi]
  00051	8b cf		 mov	 ecx, edi
  00053	53		 push	 ebx
  00054	ff 10		 call	 DWORD PTR [eax]
  00056	89 43 24	 mov	 DWORD PTR [ebx+36], eax
  00059	8b 7d 2c	 mov	 edi, DWORD PTR _callback$[ebp+36]
$LN19@onStep:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 869  :         ++_Mylast;

  0005c	83 46 20 28	 add	 DWORD PTR [esi+32], 40	; 00000028H

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00060	eb 0d		 jmp	 SHORT $LN6@onStep
$LN7@onStep:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00062	8d 45 08	 lea	 eax, DWORD PTR _callback$[ebp]
  00065	50		 push	 eax
  00066	53		 push	 ebx
  00067	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEPAV?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@1@QAV21@ABV21@@Z ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Emplace_reallocate<std::function<bool __cdecl(tweeny::tween<float> &,float)> const &>
  0006c	8b 7d 2c	 mov	 edi, DWORD PTR _callback$[ebp+36]
$LN6@onStep:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 888  :         return !_Getimpl();

  0006f	85 ff		 test	 edi, edi

; 951  :         if (!_Empty()) { // destroy callable object and maybe delete it

  00071	74 13		 je	 SHORT $LN35@onStep

; 952  :             _Getimpl()->_Delete_this(!_Local());

  00073	8b 17		 mov	 edx, DWORD PTR [edi]
  00075	8d 45 08	 lea	 eax, DWORD PTR _callback$[ebp]
  00078	3b f8		 cmp	 edi, eax
  0007a	0f 95 c1	 setne	 cl
  0007d	0f b6 c9	 movzx	 ecx, cl
  00080	51		 push	 ecx
  00081	8b cf		 mov	 ecx, edi
  00083	ff 52 10	 call	 DWORD PTR [edx+16]
$LN35@onStep:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2430 :     }

  00086	8b c6		 mov	 eax, esi
  00088	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00092	59		 pop	 ecx
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
  00095	5b		 pop	 ebx
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _callback$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@QAE@XZ
__unwindfunclet$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Func_class@_NAAV?$tween@M$$V@tweeny@@M@std@@QAE@XZ ; std::_Func_class<bool,tweeny::tween<float> &,float>::~_Func_class<bool,tweeny::tween<float> &,float>
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z ENDP ; tweeny::tween<float>::onStep
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ?step@?$tween@M$$V@tweeny@@QAEABMM_N@Z
_TEXT	SEGMENT
_t$1$ = -8						; size = 4
_p$ = -8						; size = 4
$T1 = -4						; size = 4
tv267 = 8						; size = 4
$T2 = 8							; size = 4
_dp$ = 8						; size = 4
_suppress$ = 12						; size = 1
?step@?$tween@M$$V@tweeny@@QAEABMM_N@Z PROC		; tweeny::tween<float>::step, COMDAT
; _this$ = ecx

; 2379 :     inline const T & tween<T>::step(float dp, bool suppress) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx

; 2388 :         p = detail::clip(p, 0.0f, 1.0f);

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 2379 :     inline const T & tween<T>::step(float dp, bool suppress) {

  00010	56		 push	 esi
  00011	57		 push	 edi

; 2381 :         seek(currentProgress + dp, true);

  00012	0f be 43 34	 movsx	 eax, BYTE PTR [ebx+52]
  00016	66 0f 6e c0	 movd	 xmm0, eax

; 2388 :         p = detail::clip(p, 0.0f, 1.0f);

  0001a	8d 45 08	 lea	 eax, DWORD PTR $T2[ebp]

; 2380 :         dp *= currentDirection;

  0001d	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 2388 :         p = detail::clip(p, 0.0f, 1.0f);

  00020	50		 push	 eax
  00021	8d 45 fc	 lea	 eax, DWORD PTR $T1[ebp]
  00024	50		 push	 eax
  00025	8d 45 f8	 lea	 eax, DWORD PTR _p$[ebp]
  00028	50		 push	 eax

; 2380 :         dp *= currentDirection;

  00029	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _dp$[ebp]

; 2388 :         p = detail::clip(p, 0.0f, 1.0f);

  0002e	c7 45 08 00 00
	80 3f		 mov	 DWORD PTR $T2[ebp], 1065353216 ; 3f800000H

; 2381 :         seek(currentProgress + dp, true);

  00035	f3 0f 58 43 08	 addss	 xmm0, DWORD PTR [ebx+8]
  0003a	f3 0f 11 45 f8	 movss	 DWORD PTR _p$[ebp], xmm0

; 2388 :         p = detail::clip(p, 0.0f, 1.0f);

  0003f	e8 00 00 00 00	 call	 ??$clip@M@detail@tweeny@@YAMABM00@Z ; tweeny::detail::clip<float>

; 2533 :         auto t = static_cast<uint32_t>(progress * total);

  00044	8b 03		 mov	 eax, DWORD PTR [ebx]

; 2388 :         p = detail::clip(p, 0.0f, 1.0f);

  00046	83 c4 0c	 add	 esp, 12			; 0000000cH
  00049	d9 5d 08	 fstp	 DWORD PTR tv267[ebp]

; 2389 :         currentProgress = p;

  0004c	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR tv267[ebp]
  00051	f3 0f 11 4b 08	 movss	 DWORD PTR [ebx+8], xmm1
  00056	66 0f 6e c0	 movd	 xmm0, eax

; 2533 :         auto t = static_cast<uint32_t>(progress * total);

  0005a	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0005e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00061	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0006a	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0006e	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00072	e8 00 00 00 00	 call	 __ftol3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00077	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2534 :         uint16_t point = 0;

  0007a	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0007c	2b 4b 0c	 sub	 ecx, DWORD PTR [ebx+12]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2535 :         while (t > points.at(point).stacked) point++;

  0007f	33 ff		 xor	 edi, edi
  00081	89 45 f8	 mov	 DWORD PTR _t$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00084	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00089	f7 e9		 imul	 ecx
  0008b	c1 fa 04	 sar	 edx, 4
  0008e	8b ca		 mov	 ecx, edx
  00090	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00093	03 ca		 add	 ecx, edx
  00095	74 7b		 je	 SHORT $LN29@step
  00097	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  0009a	66 0f 1f 44 00
	00		 npad	 6
$LL10@step:

; 1980 :         return _My_data._Myfirst[_Pos];

  000a0	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2535 :         while (t > points.at(point).stacked) point++;

  000a3	8b 7d f8	 mov	 edi, DWORD PTR _t$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1980 :         return _My_data._Myfirst[_Pos];

  000a6	c1 e0 05	 shl	 eax, 5
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2535 :         while (t > points.at(point).stacked) point++;

  000a9	3b 7c 10 58	 cmp	 edi, DWORD PTR [eax+edx+88]
  000ad	76 0a		 jbe	 SHORT $LN11@step
  000af	46		 inc	 esi
  000b0	0f b7 fe	 movzx	 edi, si
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000b3	3b cf		 cmp	 ecx, edi
  000b5	76 5b		 jbe	 SHORT $LN29@step
  000b7	eb e7		 jmp	 SHORT $LL10@step
$LN11@step:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2536 :         if (point > 0 && t <= points.at(point - 1u).stacked) point--;

  000b9	66 85 f6	 test	 si, si
  000bc	74 1a		 je	 SHORT $LN12@step
  000be	0f b7 c6	 movzx	 eax, si
  000c1	48		 dec	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1976 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000c2	3b c8		 cmp	 ecx, eax
  000c4	76 4c		 jbe	 SHORT $LN29@step

; 1980 :         return _My_data._Myfirst[_Pos];

  000c6	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000c9	c1 e0 05	 shl	 eax, 5
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2536 :         if (point > 0 && t <= points.at(point - 1u).stacked) point--;

  000cc	3b 7c 10 58	 cmp	 edi, DWORD PTR [eax+edx+88]
  000d0	77 06		 ja	 SHORT $LN12@step
  000d2	81 c6 ff ff 00
	00		 add	 esi, 65535		; 0000ffffH
$LN12@step:

; 2423 :         interpolate(p, currentPoint, current);

  000d8	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR tv267[ebp]
  000dd	8d 7b 18	 lea	 edi, DWORD PTR [ebx+24]
  000e0	57		 push	 edi
  000e1	0f b7 c6	 movzx	 eax, si
  000e4	50		 push	 eax
  000e5	51		 push	 ecx
  000e6	8b cb		 mov	 ecx, ebx
  000e8	66 89 73 04	 mov	 WORD PTR [ebx+4], si
  000ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f1	e8 00 00 00 00	 call	 ?interpolate@?$tween@M$$V@tweeny@@ABEXMIAAM@Z ; tweeny::tween<float>::interpolate

; 2382 :         if (!suppress) dispatch(onStepCallbacks);

  000f6	80 7d 0c 00	 cmp	 BYTE PTR _suppress$[ebp], 0
  000fa	75 0b		 jne	 SHORT $LN2@step
  000fc	8d 4b 1c	 lea	 ecx, DWORD PTR [ebx+28]
  000ff	51		 push	 ecx
  00100	8b cb		 mov	 ecx, ebx
  00102	e8 00 00 00 00	 call	 ?dispatch@?$tween@M$$V@tweeny@@AAEXAAV?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@@Z ; tweeny::tween<float>::dispatch
$LN2@step:

; 2383 :         return current;

  00107	8b c7		 mov	 eax, edi
  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi
  0010b	5b		 pop	 ebx

; 2384 :     }

  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 08 00	 ret	 8
$LN29@step:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1977 :             _Xrange();

  00112	e8 00 00 00 00	 call	 ?_Xrange@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@CAXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Xrange
$LN30@step:
  00117	cc		 int	 3
?step@?$tween@M$$V@tweeny@@QAEABMM_N@Z ENDP		; tweeny::tween<float>::step
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
;	COMDAT ?to@?$tween@M$$V@tweeny@@QAEAAV12@M@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
?to@?$tween@M$$V@tweeny@@QAEAAV12@M@Z PROC		; tweeny::tween<float>::to, COMDAT
; _this$ = ecx

; 2252 :     template<typename T> inline tween<T> & tween<T>::to(T t) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00007	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2253 :         points.emplace_back(t);

  0000a	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0000d	3b 7e 14	 cmp	 edi, DWORD PTR [esi+20]
  00010	74 3b		 je	 SHORT $LN6@to
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1156 :         inline tweenpoint<Ts...>::tweenpoint(Ts... vs) : values{vs...} {

  00012	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _t$[ebp]

; 1157 :             during(static_cast<uint16_t>(0));

  00017	8b cf		 mov	 ecx, edi
  00019	6a 00		 push	 0
  0001b	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 866  :         _Set(nullptr);

  0001f	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0
  00026	c7 47 54 00 00
	00 00		 mov	 DWORD PTR [edi+84], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 1157 :             during(static_cast<uint16_t>(0));

  0002d	e8 00 00 00 00	 call	 ??$during@G@?$tweenpoint@M@detail@tweeny@@QAEXG@Z ; tweeny::detail::tweenpoint<float>::during<unsigned short>

; 1158 :             via(easing::def);

  00032	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?def@easing@tweeny@@2UdefaultEasing@12@B
  00039	8b cf		 mov	 ecx, edi
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??$via@UdefaultEasing@easing@tweeny@@@?$tweenpoint@M@detail@tweeny@@QAEXUdefaultEasing@easing@2@@Z ; tweeny::detail::tweenpoint<float>::via<tweeny::easing::defaultEasing>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 869  :         ++_Mylast;

  00041	83 46 10 60	 add	 DWORD PTR [esi+16], 96	; 00000060H
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2255 :     }

  00045	8b c6		 mov	 eax, esi
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
$LN6@to:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 45 08	 lea	 eax, DWORD PTR _t$[ebp]
  00050	50		 push	 eax
  00051	57		 push	 edi
  00052	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AAM@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEPAU?$tweenpoint@M@detail@tweeny@@QAU234@AAM@Z ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Emplace_reallocate<float &>
  00057	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2255 :     }

  00058	8b c6		 mov	 eax, esi
  0005a	5e		 pop	 esi
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?to@?$tween@M$$V@tweeny@@QAEAAV12@M@Z ENDP		; tweeny::tween<float>::to
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetRenderingRect@CWindow@UI@@EAEXXZ
_TEXT	SEGMENT
?OnSetRenderingRect@CWindow@UI@@EAEXXZ PROC		; UI::CWindow::OnSetRenderingRect, COMDAT
; _this$ = ecx

; 1421 : }

  00000	c2 00 00	 ret	 0
?OnSetRenderingRect@CWindow@UI@@EAEXXZ ENDP		; UI::CWindow::OnSetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ResetRenderingRect@CWindow@UI@@QAEX_N@Z
_TEXT	SEGMENT
_bCallEvent$ = 8					; size = 1
?ResetRenderingRect@CWindow@UI@@QAEX_N@Z PROC		; UI::CWindow::ResetRenderingRect, COMDAT
; _this$ = ecx

; 1410 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1411 : 	m_renderingRect.bottom = m_renderingRect.left = m_renderingRect.right = m_renderingRect.top = 0;
; 1412 : 
; 1413 : 	if (bCallEvent)

  00003	80 7d 08 00	 cmp	 BYTE PTR _bCallEvent$[ebp], 0
  00007	c7 41 68 00 00
	00 00		 mov	 DWORD PTR [ecx+104], 0
  0000e	c7 41 6c 00 00
	00 00		 mov	 DWORD PTR [ecx+108], 0
  00015	c7 41 64 00 00
	00 00		 mov	 DWORD PTR [ecx+100], 0
  0001c	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0
  00023	74 08		 je	 SHORT $LN2@ResetRende

; 1414 : 	{
; 1415 : 		OnSetRenderingRect();

  00025	8b 01		 mov	 eax, DWORD PTR [ecx]
  00027	ff 90 c0 00 00
	00		 call	 DWORD PTR [eax+192]
$LN2@ResetRende:

; 1416 : 	}
; 1417 : }

  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?ResetRenderingRect@CWindow@UI@@QAEX_N@Z ENDP		; UI::CWindow::ResetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRenderingHeight@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?GetRenderingHeight@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::GetRenderingHeight, COMDAT
; _this$ = ecx

; 1406 : 	return max(0, GetHeight() + m_renderingRect.bottom + m_renderingRect.top);

  00000	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  00003	b8 00 00 00 00	 mov	 eax, 0
  00008	03 51 68	 add	 edx, DWORD PTR [ecx+104]
  0000b	03 51 30	 add	 edx, DWORD PTR [ecx+48]
  0000e	0f 49 c2	 cmovns	 eax, edx

; 1407 : }

  00011	c3		 ret	 0
?GetRenderingHeight@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::GetRenderingHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRenderingWidth@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?GetRenderingWidth@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::GetRenderingWidth, COMDAT
; _this$ = ecx

; 1401 : 	return max(0, GetWidth() + m_renderingRect.right + m_renderingRect.left);

  00000	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  00003	b8 00 00 00 00	 mov	 eax, 0
  00008	03 51 64	 add	 edx, DWORD PTR [ecx+100]
  0000b	03 51 2c	 add	 edx, DWORD PTR [ecx+44]
  0000e	0f 49 c2	 cmovns	 eax, edx

; 1402 : }

  00011	c3		 ret	 0
?GetRenderingWidth@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::GetRenderingWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z
_TEXT	SEGMENT
_fWidth$1$ = -8						; size = 4
_iHeight$1 = -8						; size = 4
_fHeight$1$ = -4					; size = 4
_iWidth$2 = -4						; size = 4
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z PROC		; UI::CWindow::SetRenderingRect, COMDAT
; _this$ = ecx

; 1385 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	66 0f 6e 46 2c	 movd	 xmm0, DWORD PTR [esi+44]

; 1386 : 	float fWidth = float(GetWidth());

  0000e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00011	f3 0f 11 45 f8	 movss	 DWORD PTR _fWidth$1$[ebp], xmm0
  00016	66 0f 6e 46 30	 movd	 xmm0, DWORD PTR [esi+48]

; 1387 : 	float fHeight = float(GetHeight());

  0001b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001e	f3 0f 11 45 fc	 movss	 DWORD PTR _fHeight$1$[ebp], xmm0

; 1388 : 	if (IsType(CTextLine::Type()))

  00023	e8 00 00 00 00	 call	 ?Type@CTextLine@UI@@SAKXZ ; UI::CTextLine::Type
  00028	50		 push	 eax
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?IsType@CWindow@UI@@QAEHK@Z ; UI::CWindow::IsType
  00030	85 c0		 test	 eax, eax
  00032	74 21		 je	 SHORT $LN4@SetRenderi

; 1389 : 	{
; 1390 : 		int iWidth, iHeight;
; 1391 : 		((CTextLine*)this)->GetTextSize(&iWidth, &iHeight);

  00034	8d 45 f8	 lea	 eax, DWORD PTR _iHeight$1[ebp]
  00037	8b ce		 mov	 ecx, esi
  00039	50		 push	 eax
  0003a	8d 45 fc	 lea	 eax, DWORD PTR _iWidth$2[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ; UI::CTextLine::GetTextSize
  00043	66 0f 6e 4d fc	 movd	 xmm1, DWORD PTR _iWidth$2[ebp]
  00048	66 0f 6e 55 f8	 movd	 xmm2, DWORD PTR _iHeight$1[ebp]

; 1392 : 		fWidth = float(iWidth);

  0004d	0f 5b c9	 cvtdq2ps xmm1, xmm1

; 1393 : 		fHeight = float(iHeight);

  00050	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00053	eb 0a		 jmp	 SHORT $LN2@SetRenderi
$LN4@SetRenderi:

; 1388 : 	if (IsType(CTextLine::Type()))

  00055	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _fWidth$1$[ebp]
  0005a	f3 0f 10 55 fc	 movss	 xmm2, DWORD PTR _fHeight$1$[ebp]
$LN2@SetRenderi:

; 1394 : 	}
; 1395 : 
; 1396 : 	iSetRenderingRect(fWidth * fLeft, fHeight * fTop, fWidth * fRight, fHeight * fBottom);

  0005f	0f 28 c2	 movaps	 xmm0, xmm2
  00062	8b 16		 mov	 edx, DWORD PTR [esi]
  00064	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _fBottom$[ebp]
  00069	8b ce		 mov	 ecx, esi
  0006b	f3 0f 59 55 0c	 mulss	 xmm2, DWORD PTR _fTop$[ebp]
  00070	f3 0f 2c c0	 cvttss2si eax, xmm0
  00074	0f 28 c1	 movaps	 xmm0, xmm1
  00077	f3 0f 59 4d 08	 mulss	 xmm1, DWORD PTR _fLeft$[ebp]
  0007c	50		 push	 eax
  0007d	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _fRight$[ebp]
  00082	f3 0f 2c c0	 cvttss2si eax, xmm0
  00086	50		 push	 eax
  00087	f3 0f 2c c2	 cvttss2si eax, xmm2
  0008b	50		 push	 eax
  0008c	f3 0f 2c c1	 cvttss2si eax, xmm1
  00090	50		 push	 eax
  00091	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]
  00097	5e		 pop	 esi

; 1397 : }

  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CWindow@UI@@UAEXMMMM@Z ENDP		; UI::CWindow::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z
_TEXT	SEGMENT
_iLeft$ = 8						; size = 4
_iTop$ = 12						; size = 4
_iRight$ = 16						; size = 4
_iBottom$ = 20						; size = 4
?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z PROC		; UI::CWindow::iSetRenderingRect, COMDAT
; _this$ = ecx

; 1375 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1376 : 	m_renderingRect.left = iLeft;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00006	89 41 64	 mov	 DWORD PTR [ecx+100], eax

; 1377 : 	m_renderingRect.top = iTop;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _iTop$[ebp]
  0000c	89 41 68	 mov	 DWORD PTR [ecx+104], eax

; 1378 : 	m_renderingRect.right = iRight;

  0000f	8b 45 10	 mov	 eax, DWORD PTR _iRight$[ebp]
  00012	89 41 6c	 mov	 DWORD PTR [ecx+108], eax

; 1379 : 	m_renderingRect.bottom = iBottom;

  00015	8b 45 14	 mov	 eax, DWORD PTR _iBottom$[ebp]
  00018	89 41 70	 mov	 DWORD PTR [ecx+112], eax

; 1380 : 
; 1381 : 	OnSetRenderingRect();

  0001b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001d	ff 90 c0 00 00
	00		 call	 DWORD PTR [eax+192]

; 1382 : }

  00023	5d		 pop	 ebp
  00024	c2 10 00	 ret	 16			; 00000010H
?iSetRenderingRect@CWindow@UI@@UAEXHHHH@Z ENDP		; UI::CWindow::iSetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
;	COMDAT ?IsWindow@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?IsWindow@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::IsWindow, COMDAT
; _this$ = ecx

; 224  : 	virtual BOOL	IsWindow() { return TRUE; }

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?IsWindow@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::IsWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CWindow@UI@@UAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CWindow@UI@@UAEHK@Z PROC			; UI::CWindow::OnIsType, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   : 	if (CWindow::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CWindow@UI@@SAKXZ	; UI::CWindow::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 74   : 	{
; 75   : 		return TRUE;
; 76   : 	}
; 77   : 
; 78   : 	return FALSE;
; 79   : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CWindow@UI@@UAEHK@Z ENDP			; UI::CWindow::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
;	COMDAT ?SetColor@CWindow@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CWindow@UI@@UAEXK@Z PROC			; UI::CWindow::SetColor, COMDAT
; _this$ = ecx

; 220  : 	virtual void	SetColor(DWORD dwColor) {}

  00000	c2 04 00	 ret	 4
?SetColor@CWindow@UI@@UAEXK@Z ENDP			; UI::CWindow::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnPressExitKey@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnPressExitKey@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::OnPressExitKey, COMDAT
; _this$ = ecx

; 1289 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1290 : 	long lValue;
; 1291 : 	if (PyCallClassMemberFunc(m_poHandler, "OnPressExitKey", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KEJGBDKK@OnPressExitKey@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnPressExi

; 1292 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1298 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnPressExi:

; 1293 : 		{
; 1294 : 			return TRUE;
; 1295 : 		}
; 1296 : 
; 1297 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1298 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnPressExitKey@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::OnPressExitKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnPressEscapeKey@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnPressEscapeKey@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnPressEscapeKey, COMDAT
; _this$ = ecx

; 1277 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1278 : 	long lValue;
; 1279 : 	if (PyCallClassMemberFunc(m_poHandler, "OnPressEscapeKey", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HCFLIMGH@OnPressEscapeKey@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnPressEsc

; 1280 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1286 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnPressEsc:

; 1281 : 		{
; 1282 : 			return TRUE;
; 1283 : 		}
; 1284 : 
; 1285 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1286 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnPressEscapeKey@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnPressEscapeKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnPressReturnKey@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnPressReturnKey@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnPressReturnKey, COMDAT
; _this$ = ecx

; 1265 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1266 : 	long lValue;
; 1267 : 	if (PyCallClassMemberFunc(m_poHandler, "OnPressReturnKey", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LHAEDNPI@OnPressReturnKey@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnPressRet

; 1268 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1274 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnPressRet:

; 1269 : 		{
; 1270 : 			return TRUE;
; 1271 : 		}
; 1272 : 
; 1273 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1274 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnPressReturnKey@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnPressReturnKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKeyUp@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = 8						; size = 4
_ikey$ = 8						; size = 4
?OnKeyUp@CWindow@UI@@UAEHH@Z PROC			; UI::CWindow::OnKeyUp, COMDAT
; _this$ = ecx

; 1253 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1254 : 	long lValue;
; 1255 : 	if (PyCallClassMemberFunc(m_poHandler, "OnKeyUp", Py_BuildValue("(i)", ikey), &lValue))

  00004	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	8d 4d 08	 lea	 ecx, DWORD PTR _lValue$[ebp]
  00017	51		 push	 ecx
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_07NGNLLPEG@OnKeyUp@
  0001e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  00026	83 c4 18	 add	 esp, 24			; 00000018H
  00029	5e		 pop	 esi
  0002a	84 c0		 test	 al, al
  0002c	74 0c		 je	 SHORT $LN3@OnKeyUp

; 1256 : 		if (0 != lValue)

  0002e	33 c0		 xor	 eax, eax
  00030	39 45 08	 cmp	 DWORD PTR _lValue$[ebp], eax
  00033	0f 95 c0	 setne	 al

; 1262 : }

  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
$LN3@OnKeyUp:

; 1257 : 		{
; 1258 : 			return TRUE;
; 1259 : 		}
; 1260 : 
; 1261 : 	return FALSE;

  0003a	33 c0		 xor	 eax, eax

; 1262 : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?OnKeyUp@CWindow@UI@@UAEHH@Z ENDP			; UI::CWindow::OnKeyUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKeyDown@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = 8						; size = 4
_ikey$ = 8						; size = 4
?OnKeyDown@CWindow@UI@@UAEHH@Z PROC			; UI::CWindow::OnKeyDown, COMDAT
; _this$ = ecx

; 1241 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1242 : 	long lValue;
; 1243 : 	if (PyCallClassMemberFunc(m_poHandler, "OnKeyDown", Py_BuildValue("(i)", ikey), &lValue))

  00004	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	8d 4d 08	 lea	 ecx, DWORD PTR _lValue$[ebp]
  00017	51		 push	 ecx
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_09CMHFBEC@OnKeyDown@
  0001e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  00026	83 c4 18	 add	 esp, 24			; 00000018H
  00029	5e		 pop	 esi
  0002a	84 c0		 test	 al, al
  0002c	74 0c		 je	 SHORT $LN3@OnKeyDown

; 1244 : 		if (0 != lValue)

  0002e	33 c0		 xor	 eax, eax
  00030	39 45 08	 cmp	 DWORD PTR _lValue$[ebp], eax
  00033	0f 95 c0	 setne	 al

; 1250 : }

  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
$LN3@OnKeyDown:

; 1245 : 		{
; 1246 : 			return TRUE;
; 1247 : 		}
; 1248 : 
; 1249 : 	return FALSE;

  0003a	33 c0		 xor	 eax, eax

; 1250 : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?OnKeyDown@CWindow@UI@@UAEHH@Z ENDP			; UI::CWindow::OnKeyDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnScrollEvent@CWindow@UI@@UAEHABH@Z
_TEXT	SEGMENT
_lValue$ = 8						; size = 4
_nLen$ = 8						; size = 4
?OnScrollEvent@CWindow@UI@@UAEHABH@Z PROC		; UI::CWindow::OnScrollEvent, COMDAT
; _this$ = ecx

; 1101 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1102 : 	long lValue;
; 1103 : 	if (PyCallClassMemberFunc(m_poHandler, "OnScrollWheelEvent", Py_BuildValue("(i)", nLen), &lValue))

  00003	8b 45 08	 mov	 eax, DWORD PTR _nLen$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	ff 30		 push	 DWORD PTR [eax]
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00016	8d 4d 08	 lea	 ecx, DWORD PTR _lValue$[ebp]
  00019	51		 push	 ecx
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GMLJAJMG@OnScrollWheelEvent@
  00020	ff 76 7c	 push	 DWORD PTR [esi+124]
  00023	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  00028	83 c4 18	 add	 esp, 24			; 00000018H
  0002b	5e		 pop	 esi
  0002c	84 c0		 test	 al, al
  0002e	74 0c		 je	 SHORT $LN3@OnScrollEv

; 1104 : 		if (0 != lValue)

  00030	33 c0		 xor	 eax, eax
  00032	39 45 08	 cmp	 DWORD PTR _lValue$[ebp], eax
  00035	0f 95 c0	 setne	 al

; 1110 : }

  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
$LN3@OnScrollEv:

; 1105 : 		{
; 1106 : 			return TRUE;
; 1107 : 		}
; 1108 : 
; 1109 : 	return FALSE;

  0003c	33 c0		 xor	 eax, eax

; 1110 : }

  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?OnScrollEvent@CWindow@UI@@UAEHABH@Z ENDP		; UI::CWindow::OnScrollEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseMiddleButtonUp, COMDAT
; _this$ = ecx

; 1086 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1087 : 	long lValue;
; 1088 : 	if (PyCallClassMemberFunc(m_poHandler, "OnMouseMiddleButtonUp", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseMid

; 1089 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1095 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseMid:

; 1090 : 		{
; 1091 : 			return TRUE;
; 1092 : 		}
; 1093 : 
; 1094 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1095 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseMiddleButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseMiddleButtonDown, COMDAT
; _this$ = ecx

; 1074 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1075 : 	long lValue;
; 1076 : 	if (PyCallClassMemberFunc(m_poHandler, "OnMouseMiddleButtonDown", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseMid

; 1077 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1083 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseMid:

; 1078 : 		{
; 1079 : 			return TRUE;
; 1080 : 		}
; 1081 : 
; 1082 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1083 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseMiddleButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseRightButtonDoubleClick, COMDAT
; _this$ = ecx

; 1062 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1063 : 	long lValue;
; 1064 : 	if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonDoubleClick", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseRig

; 1065 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1071 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseRig:

; 1066 : 		{
; 1067 : 			return TRUE;
; 1068 : 		}
; 1069 : 
; 1070 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1071 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseRightButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseRightButtonUp, COMDAT
; _this$ = ecx

; 1050 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1051 : 	long lValue;
; 1052 : 	if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonUp", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseRig

; 1053 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1059 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseRig:

; 1054 : 		{
; 1055 : 			return TRUE;
; 1056 : 		}
; 1057 : 
; 1058 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1059 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseRightButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 1038 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1039 : 	long lValue;
; 1040 : 	if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonDown", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseRig

; 1041 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1047 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseRig:

; 1042 : 		{
; 1043 : 			return TRUE;
; 1044 : 		}
; 1045 : 
; 1046 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1047 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 1026 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1027 : 	long lValue;
; 1028 : 	if (PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonDoubleClick", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseLef

; 1029 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1035 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseLef:

; 1030 : 		{
; 1031 : 			return TRUE;
; 1032 : 		}
; 1033 : 
; 1034 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1035 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 1020 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1021 : 	PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonUp", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1022 : 	return TRUE;

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	5e		 pop	 esi

; 1023 : }

  0001f	c3		 ret	 0
?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 1008 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1009 : 	long lValue;
; 1010 : 	if (PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonDown", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseLef

; 1011 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1017 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseLef:

; 1012 : 		{
; 1013 : 			return TRUE;
; 1014 : 		}
; 1015 : 
; 1016 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1017 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMECloseReadingWndEvent, COMDAT
; _this$ = ecx

; 1229 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1230 : 	long lValue;
; 1231 : 	if (PyCallClassMemberFunc(m_poHandler, "OnIMECloseReadingWnd", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEClose

; 1232 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1238 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEClose:

; 1233 : 		{
; 1234 : 			return TRUE;
; 1235 : 		}
; 1236 : 
; 1237 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1238 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMECloseReadingWndEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMEOpenReadingWndEvent, COMDAT
; _this$ = ecx

; 1217 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1218 : 	long lValue;
; 1219 : 	if (PyCallClassMemberFunc(m_poHandler, "OnIMEOpenReadingWnd", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEOpenR

; 1220 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1226 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEOpenR:

; 1221 : 		{
; 1222 : 			return TRUE;
; 1223 : 		}
; 1224 : 
; 1225 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1226 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMEOpenReadingWndEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMECloseCandidateListEvent, COMDAT
; _this$ = ecx

; 1205 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1206 : 	long lValue;
; 1207 : 	if (PyCallClassMemberFunc(m_poHandler, "OnIMECloseCandidateList", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEClose

; 1208 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1214 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEClose:

; 1209 : 		{
; 1210 : 			return TRUE;
; 1211 : 		}
; 1212 : 
; 1213 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1214 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMECloseCandidateListEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMEOpenCandidateListEvent, COMDAT
; _this$ = ecx

; 1193 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1194 : 	long lValue;
; 1195 : 	if (PyCallClassMemberFunc(m_poHandler, "OnIMEOpenCandidateList", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEOpenC

; 1196 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1202 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEOpenC:

; 1197 : 		{
; 1198 : 			return TRUE;
; 1199 : 		}
; 1200 : 
; 1201 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1202 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMEOpenCandidateListEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnIMEChangeCodePage, COMDAT
; _this$ = ecx

; 1181 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1182 : 	long lValue;
; 1183 : 	if (PyCallClassMemberFunc(m_poHandler, "OnIMEChangeCodePage", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EHKLBB@OnIMEChangeCodePage@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEChang

; 1184 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1190 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEChang:

; 1185 : 		{
; 1186 : 			return TRUE;
; 1187 : 		}
; 1188 : 
; 1189 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1190 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnIMEChangeCodePage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = 8						; size = 4
_ikey$ = 8						; size = 4
?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z PROC		; UI::CWindow::OnIMEKeyDownEvent, COMDAT
; _this$ = ecx

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1170 : 	long lValue;
; 1171 : 	if (PyCallClassMemberFunc(m_poHandler, "OnIMEKeyDown", Py_BuildValue("(i)", ikey), &lValue))

  00004	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	8d 4d 08	 lea	 ecx, DWORD PTR _lValue$[ebp]
  00017	51		 push	 ecx
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BMPDGPBH@OnIMEKeyDown@
  0001e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  00026	83 c4 18	 add	 esp, 24			; 00000018H
  00029	5e		 pop	 esi
  0002a	84 c0		 test	 al, al
  0002c	74 0c		 je	 SHORT $LN3@OnIMEKeyDo

; 1172 : 		if (0 != lValue)

  0002e	33 c0		 xor	 eax, eax
  00030	39 45 08	 cmp	 DWORD PTR _lValue$[ebp], eax
  00033	0f 95 c0	 setne	 al

; 1178 : }

  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
$LN3@OnIMEKeyDo:

; 1173 : 		{
; 1174 : 			return TRUE;
; 1175 : 		}
; 1176 : 
; 1177 : 	return FALSE;

  0003a	33 c0		 xor	 eax, eax

; 1178 : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z ENDP		; UI::CWindow::OnIMEKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMEUpdateSelectionEvent, COMDAT
; _this$ = ecx

; 1157 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1158 : 	long lValue;
; 1159 : 	if (PyCallClassMemberFunc(m_poHandler, "OnIMEUpdateSelection", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@NBAFCOEB@OnIMEUpdateSelection@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEUpdat

; 1160 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1166 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEUpdat:

; 1161 : 		{
; 1162 : 			return TRUE;
; 1163 : 		}
; 1164 : 
; 1165 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1166 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMEUpdateSelectionEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMEUpdateSelectionEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEReturnEvent@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnIMEReturnEvent, COMDAT
; _this$ = ecx

; 1145 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1146 : 	long lValue;
; 1147 : 	if (PyCallClassMemberFunc(m_poHandler, "OnIMEReturn", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PILLCCFN@OnIMEReturn@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMERetur

; 1148 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1154 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMERetur:

; 1149 : 		{
; 1150 : 			return TRUE;
; 1151 : 		}
; 1152 : 
; 1153 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1154 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMEReturnEvent@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnIMEReturnEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMETabEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMETabEvent@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::OnIMETabEvent, COMDAT
; _this$ = ecx

; 1133 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1134 : 	long lValue;
; 1135 : 	if (PyCallClassMemberFunc(m_poHandler, "OnIMETab", BuildEmptyTuple(), &lValue))

  00007	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0000c	8d 4d fc	 lea	 ecx, DWORD PTR _lValue$[ebp]
  0000f	51		 push	 ecx
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_08HFELFLOI@OnIMETab@
  00016	ff 76 7c	 push	 DWORD PTR [esi+124]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMETabEv

; 1136 : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 1142 : }

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMETabEv:

; 1137 : 		{
; 1138 : 			return TRUE;
; 1139 : 		}
; 1140 : 
; 1141 : 	return FALSE;

  00032	33 c0		 xor	 eax, eax

; 1142 : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMETabEvent@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::OnIMETabEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunPressExitKeyEvent, COMDAT
; _this$ = ecx

; 986  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  0000b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 988  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0000d	74 3b		 je	 SHORT $LN3@RunPressEx
  0000f	90		 npad	 1
$LL42@RunPressEx:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00010	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00013	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 990  : 		CWindow * pWindow = *itor;

  00015	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 991  : 
; 992  : 		if (pWindow->RunPressExitKeyEvent())

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressExitKeyEvent
  0001f	85 c0		 test	 eax, eax
  00021	75 2d		 jne	 SHORT $LN65@RunPressEx

; 993  : 		{
; 994  : 			return TRUE;
; 995  : 		}
; 996  : 
; 997  : 		if (pWindow->IsShow())

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
  00025	8b ce		 mov	 ecx, esi
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	ff d0		 call	 eax
  0002c	84 c0		 test	 al, al
  0002e	74 0e		 je	 SHORT $LN2@RunPressEx

; 998  : 			if (pWindow->OnPressExitKey())

  00030	8b 06		 mov	 eax, DWORD PTR [esi]
  00032	8b ce		 mov	 ecx, esi
  00034	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]
  0003a	85 c0		 test	 eax, eax
  0003c	75 12		 jne	 SHORT $LN65@RunPressEx
$LN2@RunPressEx:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0003e	8b 8b 84 00 00
	00		 mov	 ecx, DWORD PTR [ebx+132]

; 183  :         this->_Ptr = _New_ptr;

  00044	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00046	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 988  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00048	75 c6		 jne	 SHORT $LL42@RunPressEx
$LN3@RunPressEx:
  0004a	5f		 pop	 edi

; 999  : 			{
; 1000 : 				return TRUE;
; 1001 : 			}
; 1002 : 	}
; 1003 : 
; 1004 : 	return FALSE;
; 1005 : }

  0004b	5e		 pop	 esi
  0004c	33 c0		 xor	 eax, eax
  0004e	5b		 pop	 ebx
  0004f	c3		 ret	 0
$LN65@RunPressEx:
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	5b		 pop	 ebx
  00058	c3		 ret	 0
?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunPressExitKeyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunPressEscapeKeyEvent, COMDAT
; _this$ = ecx

; 964  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  0000b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 966  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0000d	74 2d		 je	 SHORT $LN69@RunPressEs
  0000f	90		 npad	 1
$LL42@RunPressEs:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00010	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00013	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 968  : 		CWindow * pWindow = *itor;

  00015	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 969  : 
; 970  : 		if (pWindow->IsShow())

  00018	8b ce		 mov	 ecx, esi
  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001f	ff d0		 call	 eax
  00021	84 c0		 test	 al, al
  00023	74 0b		 je	 SHORT $LN2@RunPressEs

; 971  : 			if (pWindow->RunPressEscapeKeyEvent())

  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressEscapeKeyEvent
  0002c	85 c0		 test	 eax, eax
  0002e	75 20		 jne	 SHORT $LN68@RunPressEs
$LN2@RunPressEs:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00030	8b 8b 84 00 00
	00		 mov	 ecx, DWORD PTR [ebx+132]

; 183  :         this->_Ptr = _New_ptr;

  00036	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00038	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 966  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003a	75 d4		 jne	 SHORT $LL42@RunPressEs
$LN69@RunPressEs:

; 972  : 			{
; 973  : 				return TRUE;
; 974  : 			}
; 975  : 	}
; 976  : 
; 977  : 	if (OnPressEscapeKey())

  0003c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0003e	8b cb		 mov	 ecx, ebx
  00040	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]
  00046	f7 d8		 neg	 eax
  00048	5f		 pop	 edi
  00049	1b c0		 sbb	 eax, eax

; 978  : 	{
; 979  : 		return TRUE;
; 980  : 	}
; 981  : 
; 982  : 	return FALSE;
; 983  : }

  0004b	5e		 pop	 esi
  0004c	f7 d8		 neg	 eax
  0004e	5b		 pop	 ebx
  0004f	c3		 ret	 0
$LN68@RunPressEs:
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	5b		 pop	 ebx
  00058	c3		 ret	 0
?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunPressEscapeKeyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunPressReturnKeyEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunPressReturnKeyEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunPressReturnKeyEvent, COMDAT
; _this$ = ecx

; 942  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  0000b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 944  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0000d	74 2d		 je	 SHORT $LN69@RunPressRe
  0000f	90		 npad	 1
$LL42@RunPressRe:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00010	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00013	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 946  : 		CWindow* pWindow = *itor;

  00015	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 947  : 
; 948  : 		if (pWindow->IsShow())

  00018	8b ce		 mov	 ecx, esi
  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001f	ff d0		 call	 eax
  00021	84 c0		 test	 al, al
  00023	74 0b		 je	 SHORT $LN2@RunPressRe

; 949  : 			if (pWindow->RunPressReturnKeyEvent())

  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?RunPressReturnKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressReturnKeyEvent
  0002c	85 c0		 test	 eax, eax
  0002e	75 20		 jne	 SHORT $LN68@RunPressRe
$LN2@RunPressRe:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00030	8b 8b 84 00 00
	00		 mov	 ecx, DWORD PTR [ebx+132]

; 183  :         this->_Ptr = _New_ptr;

  00036	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00038	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 944  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003a	75 d4		 jne	 SHORT $LL42@RunPressRe
$LN69@RunPressRe:

; 950  : 			{
; 951  : 				return TRUE;
; 952  : 			}
; 953  : 	}
; 954  : 
; 955  : 	if (OnPressReturnKey())

  0003c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0003e	8b cb		 mov	 ecx, ebx
  00040	ff 90 98 00 00
	00		 call	 DWORD PTR [eax+152]
  00046	f7 d8		 neg	 eax
  00048	5f		 pop	 edi
  00049	1b c0		 sbb	 eax, eax

; 956  : 	{
; 957  : 		return TRUE;
; 958  : 	}
; 959  : 
; 960  : 	return FALSE;
; 961  : }

  0004b	5e		 pop	 esi
  0004c	f7 d8		 neg	 eax
  0004e	5b		 pop	 ebx
  0004f	c3		 ret	 0
$LN68@RunPressRe:
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	5b		 pop	 ebx
  00058	c3		 ret	 0
?RunPressReturnKeyEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunPressReturnKeyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunKeyUpEvent@CWindow@UI@@QAEHH@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunKeyUpEvent@CWindow@UI@@QAEHH@Z PROC			; UI::CWindow::RunKeyUpEvent, COMDAT
; _this$ = ecx

; 919  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
  00007	57		 push	 edi

; 920  : 	if (OnKeyUp(ikey))

  00008	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0000d	ff 90 94 00 00
	00		 call	 DWORD PTR [eax+148]
  00013	85 c0		 test	 eax, eax
  00015	75 42		 jne	 SHORT $LN64@RunKeyUpEv
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00017	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  0001d	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 926  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001f	74 2f		 je	 SHORT $LN3@RunKeyUpEv
$LL42@RunKeyUpEv:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00021	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00024	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 928  : 		CWindow * pWindow = *itor;

  00026	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 929  : 
; 930  : 		if (pWindow->IsShow())

  00029	8b ce		 mov	 ecx, esi
  0002b	8b 06		 mov	 eax, DWORD PTR [esi]
  0002d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00030	ff d0		 call	 eax
  00032	84 c0		 test	 al, al
  00034	74 0e		 je	 SHORT $LN2@RunKeyUpEv

; 931  : 			if (pWindow->RunKeyUpEvent(ikey))

  00036	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  00039	8b ce		 mov	 ecx, esi
  0003b	e8 00 00 00 00	 call	 ?RunKeyUpEvent@CWindow@UI@@QAEHH@Z ; UI::CWindow::RunKeyUpEvent
  00040	85 c0		 test	 eax, eax
  00042	75 15		 jne	 SHORT $LN64@RunKeyUpEv
$LN2@RunKeyUpEv:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00044	8b 8b 84 00 00
	00		 mov	 ecx, DWORD PTR [ebx+132]

; 183  :         this->_Ptr = _New_ptr;

  0004a	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0004c	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 926  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0004e	75 d1		 jne	 SHORT $LL42@RunKeyUpEv
$LN3@RunKeyUpEv:
  00050	5f		 pop	 edi

; 932  : 			{
; 933  : 				return TRUE;
; 934  : 			}
; 935  : 	}
; 936  : 
; 937  : 	return FALSE;
; 938  : }

  00051	5e		 pop	 esi
  00052	33 c0		 xor	 eax, eax
  00054	5b		 pop	 ebx
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
$LN64@RunKeyUpEv:
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	b8 01 00 00 00	 mov	 eax, 1
  00060	5b		 pop	 ebx
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?RunKeyUpEvent@CWindow@UI@@QAEHH@Z ENDP			; UI::CWindow::RunKeyUpEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z PROC		; UI::CWindow::RunKeyDownEvent, COMDAT
; _this$ = ecx

; 894  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 895  : 	if (OnKeyDown(ikey))

  00004	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  00007	8b f9		 mov	 edi, ecx
  00009	8b 07		 mov	 eax, DWORD PTR [edi]
  0000b	ff 90 90 00 00
	00		 call	 DWORD PTR [eax+144]
  00011	85 c0		 test	 eax, eax
  00013	74 07		 je	 SHORT $LN5@RunKeyDown

; 896  : 	{
; 897  : 		return this;

  00015	8b c7		 mov	 eax, edi
  00017	5f		 pop	 edi

; 916  : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN5@RunKeyDown:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001c	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  00022	53		 push	 ebx
  00023	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  00024	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 901  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00026	74 2f		 je	 SHORT $LN68@RunKeyDown
$LL42@RunKeyDown:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00028	8d 58 04	 lea	 ebx, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  0002b	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 903  : 		CWindow * pWindow = *itor;

  0002d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 904  : 
; 905  : 		if (pWindow->IsShow())

  00030	8b ce		 mov	 ecx, esi
  00032	8b 06		 mov	 eax, DWORD PTR [esi]
  00034	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00037	ff d0		 call	 eax
  00039	84 c0		 test	 al, al
  0003b	74 0e		 je	 SHORT $LN2@RunKeyDown

; 906  : 		{
; 907  : 			CWindow * pProcessedWindow = pWindow->RunKeyDownEvent(ikey);

  0003d	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z ; UI::CWindow::RunKeyDownEvent

; 908  : 			if (NULL != pProcessedWindow)

  00047	85 c0		 test	 eax, eax
  00049	75 0e		 jne	 SHORT $LN69@RunKeyDown
$LN2@RunKeyDown:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0004b	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]

; 183  :         this->_Ptr = _New_ptr;

  00051	8b 03		 mov	 eax, DWORD PTR [ebx]

; 198  :         return this->_Ptr == _Right._Ptr;

  00053	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 901  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00055	75 d1		 jne	 SHORT $LL42@RunKeyDown
$LN68@RunKeyDown:

; 909  : 			{
; 910  : 				return pProcessedWindow;
; 911  : 			}
; 912  : 		}
; 913  : 	}
; 914  : 
; 915  : 	return NULL;

  00057	33 c0		 xor	 eax, eax
$LN69@RunKeyDown:
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	5f		 pop	 edi

; 916  : }

  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z ENDP		; UI::CWindow::RunKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z PROC		; UI::CWindow::RunIMEKeyDownEvent, COMDAT
; _this$ = ecx

; 868  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 869  : 	if (!IsRendering())

  00008	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0000d	84 c0		 test	 al, al
  0000f	74 3d		 je	 SHORT $LN3@RunIMEKeyD

; 870  : 	{
; 871  : 		return FALSE;
; 872  : 	}
; 873  : 
; 874  : 	if (OnIMEKeyDownEvent(ikey))

  00011	8b 06		 mov	 eax, DWORD PTR [esi]
  00013	8b ce		 mov	 ecx, esi
  00015	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00018	53		 push	 ebx
  00019	ff 50 54	 call	 DWORD PTR [eax+84]
  0001c	85 c0		 test	 eax, eax
  0001e	75 37		 jne	 SHORT $LN64@RunIMEKeyD
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00020	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  00026	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 880  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00028	74 24		 je	 SHORT $LN3@RunIMEKeyD
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL42@RunIMEKeyD:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00030	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00033	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 884  : 		if (pWindow->RunIMEKeyDownEvent(ikey))

  00035	53		 push	 ebx
  00036	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00039	e8 00 00 00 00	 call	 ?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z ; UI::CWindow::RunIMEKeyDownEvent
  0003e	85 c0		 test	 eax, eax
  00040	75 15		 jne	 SHORT $LN64@RunIMEKeyD
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00042	8b 8e 84 00 00
	00		 mov	 ecx, DWORD PTR [esi+132]

; 183  :         this->_Ptr = _New_ptr;

  00048	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0004a	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 880  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0004c	75 e2		 jne	 SHORT $LL42@RunIMEKeyD
$LN3@RunIMEKeyD:
  0004e	5f		 pop	 edi

; 885  : 		{
; 886  : 			return TRUE;
; 887  : 		}
; 888  : 	}
; 889  : 
; 890  : 	return FALSE;
; 891  : }

  0004f	5e		 pop	 esi
  00050	33 c0		 xor	 eax, eax
  00052	5b		 pop	 ebx
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
$LN64@RunIMEKeyD:
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	b8 01 00 00 00	 mov	 eax, 1
  0005e	5b		 pop	 ebx
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z ENDP		; UI::CWindow::RunIMEKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMEReturnEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunIMEReturnEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunIMEReturnEvent, COMDAT
; _this$ = ecx

; 842  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 843  : 	if (!IsRendering())

  00004	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00009	84 c0		 test	 al, al
  0000b	74 32		 je	 SHORT $LN3@RunIMERetu

; 844  : 	{
; 845  : 		return FALSE;
; 846  : 	}
; 847  : 
; 848  : 	if (OnIMEReturnEvent())

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	8b cf		 mov	 ecx, edi
  00011	ff 50 4c	 call	 DWORD PTR [eax+76]
  00014	85 c0		 test	 eax, eax
  00016	75 2c		 jne	 SHORT $LN64@RunIMERetu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  0001e	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 854  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00020	74 1d		 je	 SHORT $LN3@RunIMERetu
$LL42@RunIMERetu:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00022	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00025	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 858  : 		if (pWindow->RunIMEReturnEvent())

  00027	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002a	e8 00 00 00 00	 call	 ?RunIMEReturnEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMEReturnEvent
  0002f	85 c0		 test	 eax, eax
  00031	75 11		 jne	 SHORT $LN64@RunIMERetu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00033	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]

; 183  :         this->_Ptr = _New_ptr;

  00039	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0003b	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 854  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003d	75 e3		 jne	 SHORT $LL42@RunIMERetu
$LN3@RunIMERetu:
  0003f	5f		 pop	 edi

; 861  : 		}
; 862  : 	}
; 863  : 
; 864  : 	return FALSE;

  00040	33 c0		 xor	 eax, eax

; 865  : }

  00042	5e		 pop	 esi
  00043	c3		 ret	 0
$LN64@RunIMERetu:
  00044	5f		 pop	 edi

; 859  : 		{
; 860  : 			return TRUE;

  00045	b8 01 00 00 00	 mov	 eax, 1

; 865  : }

  0004a	5e		 pop	 esi
  0004b	c3		 ret	 0
?RunIMEReturnEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunIMEReturnEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMETabEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunIMETabEvent@CWindow@UI@@QAEHXZ PROC			; UI::CWindow::RunIMETabEvent, COMDAT
; _this$ = ecx

; 816  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 817  : 	if (!IsRendering())

  00004	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00009	84 c0		 test	 al, al
  0000b	74 32		 je	 SHORT $LN3@RunIMETabE

; 818  : 	{
; 819  : 		return FALSE;
; 820  : 	}
; 821  : 
; 822  : 	if (OnIMETabEvent())

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	8b cf		 mov	 ecx, edi
  00011	ff 50 48	 call	 DWORD PTR [eax+72]
  00014	85 c0		 test	 eax, eax
  00016	75 2c		 jne	 SHORT $LN64@RunIMETabE
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  0001e	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 828  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00020	74 1d		 je	 SHORT $LN3@RunIMETabE
$LL42@RunIMETabE:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00022	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00025	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 832  : 		if (pWindow->RunIMETabEvent())

  00027	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002a	e8 00 00 00 00	 call	 ?RunIMETabEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMETabEvent
  0002f	85 c0		 test	 eax, eax
  00031	75 11		 jne	 SHORT $LN64@RunIMETabE
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00033	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]

; 183  :         this->_Ptr = _New_ptr;

  00039	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0003b	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 828  : 	for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003d	75 e3		 jne	 SHORT $LL42@RunIMETabE
$LN3@RunIMETabE:
  0003f	5f		 pop	 edi

; 835  : 		}
; 836  : 	}
; 837  : 
; 838  : 	return FALSE;

  00040	33 c0		 xor	 eax, eax

; 839  : }

  00042	5e		 pop	 esi
  00043	c3		 ret	 0
$LN64@RunIMETabE:
  00044	5f		 pop	 edi

; 833  : 		{
; 834  : 			return TRUE;

  00045	b8 01 00 00 00	 mov	 eax, 1

; 839  : }

  0004a	5e		 pop	 esi
  0004b	c3		 ret	 0
?RunIMETabEvent@CWindow@UI@@QAEHXZ ENDP			; UI::CWindow::RunIMETabEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
_TEXT	SEGMENT
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?OnMoveWindow@CWindow@UI@@UAEXJJ@Z PROC			; UI::CWindow::OnMoveWindow, COMDAT
; _this$ = ecx

; 770  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 771  : 	PyCallClassMemberFunc(m_poHandler, "OnMoveWindow", Py_BuildValue("(ii)", lx, ly));

  00004	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _lx$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_04INACLLOK@?$CIii?$CJ@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PFKNBOJP@OnMoveWindow@
  0001d	ff 76 7c	 push	 DWORD PTR [esi+124]
  00020	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	5e		 pop	 esi

; 772  : }

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?OnMoveWindow@CWindow@UI@@UAEXJJ@Z ENDP			; UI::CWindow::OnMoveWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEUpdate@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnIMEUpdate@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnIMEUpdate, COMDAT
; _this$ = ecx

; 811  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 812  : 	PyCallClassMemberFunc(m_poHandler, "OnIMEUpdate", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DGOFHNMI@OnIMEUpdate@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 813  : }

  0001a	c3		 ret	 0
?OnIMEUpdate@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnIMEUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnTop@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnTop@CWindow@UI@@UAEXXZ PROC				; UI::CWindow::OnTop, COMDAT
; _this$ = ecx

; 806  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 807  : 	PyCallClassMemberFunc(m_poHandler, "OnTop", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_05LOOKECNH@OnTop@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 808  : }

  0001a	c3		 ret	 0
?OnTop@CWindow@UI@@UAEXXZ ENDP				; UI::CWindow::OnTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDrop@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnDrop@CWindow@UI@@UAEXXZ PROC				; UI::CWindow::OnDrop, COMDAT
; _this$ = ecx

; 801  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 802  : 	PyCallClassMemberFunc(m_poHandler, "OnDrop", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_06OCNPCIEO@OnDrop@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 803  : }

  0001a	c3		 ret	 0
?OnDrop@CWindow@UI@@UAEXXZ ENDP				; UI::CWindow::OnDrop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOver@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOver@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOver, COMDAT
; _this$ = ecx

; 796  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 797  : 	PyCallClassMemberFunc(m_poHandler, "OnMouseMove", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MGDIFFEM@OnMouseMove@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 798  : }

  0001a	c3		 ret	 0
?OnMouseOver@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOver
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOverOut, COMDAT
; _this$ = ecx

; 791  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 	PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 793  : }

  0001a	c3		 ret	 0
?OnMouseOverOut@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOverIn, COMDAT
; _this$ = ecx

; 786  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 787  : 	PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 788  : }

  0001a	c3		 ret	 0
?OnMouseOverIn@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
_TEXT	SEGMENT
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?OnMouseDrag@CWindow@UI@@UAEXJJ@Z PROC			; UI::CWindow::OnMouseDrag, COMDAT
; _this$ = ecx

; 765  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 766  : 	PyCallClassMemberFunc(m_poHandler, "OnMouseDrag", Py_BuildValue("(ii)", lx, ly));

  00004	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _lx$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_04INACLLOK@?$CIii?$CJ@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ECAEGPAI@OnMouseDrag@
  0001d	ff 76 7c	 push	 DWORD PTR [esi+124]
  00020	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	5e		 pop	 esi

; 767  : }

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?OnMouseDrag@CWindow@UI@@UAEXJJ@Z ENDP			; UI::CWindow::OnMouseDrag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKillFocus@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnKillFocus@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnKillFocus, COMDAT
; _this$ = ecx

; 781  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 782  : 	PyCallClassMemberFunc(m_poHandler, "OnKillFocus", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CEGPCFGM@OnKillFocus@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 783  : }

  0001a	c3		 ret	 0
?OnKillFocus@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnKillFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetFocus@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnSetFocus@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnSetFocus, COMDAT
; _this$ = ecx

; 775  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 776  : 	//PyCallClassMemberFunc(m_poHandler, "OnSetFocus", BuildEmptyTuple());
; 777  : 	PyCallClassMemberFunc(m_poHandler, "OnSetFocus", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GIMNGBCD@OnSetFocus@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 778  : }

  0001a	c3		 ret	 0
?OnSetFocus@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnSetFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
;	COMDAT ?OnChangePosition@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CWindow@UI@@UAEXXZ PROC		; UI::CWindow::OnChangePosition, COMDAT
; _this$ = ecx

; 159  : 	virtual void	OnChangePosition() {}

  00000	c2 00 00	 ret	 0
?OnChangePosition@CWindow@UI@@UAEXXZ ENDP		; UI::CWindow::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z
_TEXT	SEGMENT
_xdif$ = 8						; size = 4
_ydif$ = 12						; size = 4
?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z PROC		; UI::CWindow::OnUpdateLockedCursor, COMDAT
; _this$ = ecx

; 340  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 341  : 	if (!m_poHandler)

  00006	83 7e 7c 00	 cmp	 DWORD PTR [esi+124], 0
  0000a	74 22		 je	 SHORT $LN1@OnUpdateLo

; 342  : 	{
; 343  : 		return;
; 344  : 	}
; 345  : 
; 346  : 	PyCallClassMemberFunc(m_poHandler, "OnUpdateLockedCursor", Py_BuildValue("ii", xdif, ydif));

  0000c	ff 75 0c	 push	 DWORD PTR _ydif$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR _xdif$[ebp]
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@NPECNJEC@OnUpdateLockedCursor@
  00023	ff 76 7c	 push	 DWORD PTR [esi+124]
  00026	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002b	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@OnUpdateLo:
  0002e	5e		 pop	 esi

; 347  : }

  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?OnUpdateLockedCursor@CWindow@UI@@UAEXHJ@Z ENDP		; UI::CWindow::OnUpdateLockedCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnUpdate@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnUpdate, COMDAT
; _this$ = ecx

; 320  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 321  : 	if (!m_poHandler)

  00003	83 7e 7c 00	 cmp	 DWORD PTR [esi+124], 0
  00007	74 3e		 je	 SHORT $LN1@OnUpdate

; 322  : 	{
; 323  : 		return;
; 324  : 	}
; 325  : 
; 326  : 	if (!IsShow())

  00009	8b 06		 mov	 eax, DWORD PTR [esi]
  0000b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000e	ff d0		 call	 eax
  00010	84 c0		 test	 al, al
  00012	74 33		 je	 SHORT $LN1@OnUpdate

; 327  : 	{
; 328  : 		return;
; 329  : 	}
; 330  : 
; 331  : 	static PyObject* poFuncName_OnUpdate = PyString_InternFromString("OnUpdate");

  00014	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  00020	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  00028	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0002e	7f 19		 jg	 SHORT $LN7@OnUpdate
$LN2@OnUpdate:

; 332  : 
; 333  : 	//PyCallClassMemberFunc(m_poHandler, "OnUpdate", BuildEmptyTuple());
; 334  : 	PyCallClassMemberFunc_ByPyString(m_poHandler, poFuncName_OnUpdate, BuildEmptyTuple());

  00030	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00035	50		 push	 eax
  00036	ff 35 00 00 00
	00		 push	 DWORD PTR ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A
  0003c	ff 76 7c	 push	 DWORD PTR [esi+124]
  0003f	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc_ByPyString@@YA_NPAU_object@@00@Z ; PyCallClassMemberFunc_ByPyString
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnUpdate:

; 335  : 
; 336  : }

  00047	5e		 pop	 esi
  00048	c3		 ret	 0
$LN7@OnUpdate:

; 327  : 	{
; 328  : 		return;
; 329  : 	}
; 330  : 
; 331  : 	static PyObject* poFuncName_OnUpdate = PyString_InternFromString("OnUpdate");

  00049	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  0004e	e8 00 00 00 00	 call	 __Init_thread_header
  00053	83 c4 04	 add	 esp, 4
  00056	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA, -1
  0005d	75 d1		 jne	 SHORT $LN2@OnUpdate
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_08DCJEAFK@OnUpdate@
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyString_InternFromString
  0006a	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  0006f	a3 00 00 00 00	 mov	 DWORD PTR ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A, eax
  00074	e8 00 00 00 00	 call	 __Init_thread_footer
  00079	83 c4 08	 add	 esp, 8
  0007c	eb b2		 jmp	 SHORT $LN2@OnUpdate
?OnUpdate@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
;	COMDAT ?OnUpdateRenderBox@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnUpdateRenderBox@CWindow@UI@@UAEXXZ PROC		; UI::CWindow::OnUpdateRenderBox, COMDAT
; _this$ = ecx

; 153  : 	virtual void	OnUpdateRenderBox() {}

  00000	c2 00 00	 ret	 0
?OnUpdateRenderBox@CWindow@UI@@UAEXXZ ENDP		; UI::CWindow::OnUpdateRenderBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnAfterRender@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnAfterRender@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnAfterRender, COMDAT
; _this$ = ecx

; 368  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 369  : 	if (!m_poHandler)

  00003	83 7e 7c 00	 cmp	 DWORD PTR [esi+124], 0
  00007	74 21		 je	 SHORT $LN1@OnAfterRen

; 370  : 	{
; 371  : 		return;
; 372  : 	}
; 373  : 
; 374  : 	if (!IsShow())

  00009	8b 06		 mov	 eax, DWORD PTR [esi]
  0000b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000e	ff d0		 call	 eax
  00010	84 c0		 test	 al, al
  00012	74 16		 je	 SHORT $LN1@OnAfterRen

; 375  : 	{
; 376  : 		return;
; 377  : 	}
; 378  : 
; 379  : 	PyCallClassMemberFunc(m_poHandler, "OnAfterRender", BuildEmptyTuple());

  00014	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PENIBOGB@OnAfterRender@
  0001f	ff 76 7c	 push	 DWORD PTR [esi+124]
  00022	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnAfterRen:

; 380  : }

  0002a	5e		 pop	 esi
  0002b	c3		 ret	 0
?OnAfterRender@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnAfterRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnRender, COMDAT
; _this$ = ecx

; 351  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 352  : 	if (!m_poHandler)

  00003	83 7e 7c 00	 cmp	 DWORD PTR [esi+124], 0
  00007	74 21		 je	 SHORT $LN1@OnRender

; 353  : 	{
; 354  : 		return;
; 355  : 	}
; 356  : 
; 357  : 	if (!IsShow())

  00009	8b 06		 mov	 eax, DWORD PTR [esi]
  0000b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000e	ff d0		 call	 eax
  00010	84 c0		 test	 al, al
  00012	74 16		 je	 SHORT $LN1@OnRender

; 358  : 	{
; 359  : 		return;
; 360  : 	}
; 361  : 
; 362  : 	//PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());
; 363  : 	PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());

  00014	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_08PAJMEILO@OnRender@
  0001f	ff 76 7c	 push	 DWORD PTR [esi+124]
  00022	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnRender:

; 364  : }

  0002a	5e		 pop	 esi
  0002b	c3		 ret	 0
?OnRender@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?UpdateRenderBoxRecursive@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?UpdateRenderBoxRecursive@CWindow@UI@@QAEXXZ PROC	; UI::CWindow::UpdateRenderBoxRecursive, COMDAT
; _this$ = ecx

; 431  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 432  : 	UpdateRenderBox();

  00004	e8 00 00 00 00	 call	 ?UpdateRenderBox@CWindow@UI@@QAEXXZ ; UI::CWindow::UpdateRenderBox
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00009	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	3b f0		 cmp	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 433  : 	for (auto it = m_pChildList.begin(); it != m_pChildList.end(); ++it)

  00013	74 12		 je	 SHORT $LN3@UpdateRend
$LL21@UpdateRend:

; 434  : 	{
; 435  : 		(*it)->UpdateRenderBoxRecursive();

  00015	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00018	e8 00 00 00 00	 call	 ?UpdateRenderBoxRecursive@CWindow@UI@@QAEXXZ ; UI::CWindow::UpdateRenderBoxRecursive
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0001f	3b b7 84 00 00
	00		 cmp	 esi, DWORD PTR [edi+132]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 433  : 	for (auto it = m_pChildList.begin(); it != m_pChildList.end(); ++it)

  00025	75 ee		 jne	 SHORT $LL21@UpdateRend
$LN3@UpdateRend:
  00027	5f		 pop	 edi

; 436  : 	}
; 437  : }

  00028	5e		 pop	 esi
  00029	c3		 ret	 0
?UpdateRenderBoxRecursive@CWindow@UI@@QAEXXZ ENDP	; UI::CWindow::UpdateRenderBoxRecursive
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?UpdateRenderBox@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
_height$1$ = -24					; size = 4
tv482 = -20						; size = 4
_pHeight$1$ = -16					; size = 4
_width$1$ = -12						; size = 4
tv483 = -8						; size = 4
_pWidth$1$ = -4						; size = 4
?UpdateRenderBox@CWindow@UI@@QAEXXZ PROC		; UI::CWindow::UpdateRenderBox, COMDAT
; _this$ = ecx

; 624  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	8b d1		 mov	 edx, ecx

; 625  : 	if (!m_isInsideRender || !m_pParent)

  00008	83 ba 90 00 00
	00 00		 cmp	 DWORD PTR [edx+144], 0
  0000f	53		 push	 ebx
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	0f 84 cf 00 00
	00		 je	 $LN4@UpdateRend
  00018	8b ba 80 00 00
	00		 mov	 edi, DWORD PTR [edx+128]
  0001e	85 ff		 test	 edi, edi
  00020	0f 84 c1 00 00
	00		 je	 $LN4@UpdateRend

; 626  : 	{
; 627  : 		memset(&m_renderBox, 0, sizeof(m_renderBox));
; 628  : 	}
; 629  : 	else
; 630  : 	{
; 631  : 		int width = m_lWidth;

  00026	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]

; 632  : 		int height = m_lHeight;
; 633  : 		int pWidth = m_pParent->GetWidth();
; 634  : 		int pHeight = m_pParent->GetHeight();
; 635  : 
; 636  : 		if (m_x - m_pParent->m_renderBox.left < 0)
; 637  : 		{
; 638  : 			m_renderBox.left = -m_x + m_pParent->m_renderBox.left;
; 639  : 		}
; 640  : 		else
; 641  : 		{
; 642  : 			m_renderBox.left = 0;
; 643  : 		}
; 644  : 
; 645  : 		if (m_y - m_pParent->m_renderBox.top < 0)

  00029	33 f6		 xor	 esi, esi
  0002b	8b 5a 24	 mov	 ebx, DWORD PTR [edx+36]
  0002e	8b 8f 94 00 00
	00		 mov	 ecx, DWORD PTR [edi+148]
  00034	89 45 f4	 mov	 DWORD PTR _width$1$[ebp], eax
  00037	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0003a	89 45 e8	 mov	 DWORD PTR _height$1$[ebp], eax
  0003d	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  00040	89 45 fc	 mov	 DWORD PTR _pWidth$1$[ebp], eax
  00043	8b 47 30	 mov	 eax, DWORD PTR [edi+48]
  00046	89 45 f0	 mov	 DWORD PTR _pHeight$1$[ebp], eax
  00049	8b c3		 mov	 eax, ebx
  0004b	2b c1		 sub	 eax, ecx
  0004d	89 5d f8	 mov	 DWORD PTR tv483[ebp], ebx
  00050	2b cb		 sub	 ecx, ebx
  00052	85 c0		 test	 eax, eax
  00054	0f 49 ce	 cmovns	 ecx, esi
  00057	89 8a 94 00 00
	00		 mov	 DWORD PTR [edx+148], ecx
  0005d	8b 5a 28	 mov	 ebx, DWORD PTR [edx+40]
  00060	8b c3		 mov	 eax, ebx
  00062	8b 8f 98 00 00
	00		 mov	 ecx, DWORD PTR [edi+152]
  00068	2b c1		 sub	 eax, ecx

; 646  : 		{
; 647  : 			m_renderBox.top = -m_y + m_pParent->m_renderBox.top;
; 648  : 		}
; 649  : 		else
; 650  : 		{
; 651  : 			m_renderBox.top = 0;
; 652  : 		}
; 653  : 
; 654  : 		if (m_x + width > pWidth - m_pParent->m_renderBox.right)

  0006a	2b cb		 sub	 ecx, ebx
  0006c	85 c0		 test	 eax, eax
  0006e	8b 45 f8	 mov	 eax, DWORD PTR tv483[ebp]
  00071	0f 49 ce	 cmovns	 ecx, esi
  00074	03 45 f4	 add	 eax, DWORD PTR _width$1$[ebp]
  00077	89 8a 98 00 00
	00		 mov	 DWORD PTR [edx+152], ecx
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _pWidth$1$[ebp]
  00080	8b b7 9c 00 00
	00		 mov	 esi, DWORD PTR [edi+156]
  00086	2b ce		 sub	 ecx, esi
  00088	3b c1		 cmp	 eax, ecx
  0008a	7e 0b		 jle	 SHORT $LN9@UpdateRend

; 655  : 		{
; 656  : 			m_renderBox.right = m_x + width - pWidth + m_pParent->m_renderBox.right;

  0008c	2b 75 fc	 sub	 esi, DWORD PTR _pWidth$1$[ebp]
  0008f	03 75 f8	 add	 esi, DWORD PTR tv483[ebp]
  00092	03 75 f4	 add	 esi, DWORD PTR _width$1$[ebp]

; 657  : 		}

  00095	eb 02		 jmp	 SHORT $LN10@UpdateRend
$LN9@UpdateRend:

; 658  : 		else
; 659  : 		{
; 660  : 			m_renderBox.right = 0;

  00097	33 f6		 xor	 esi, esi
$LN10@UpdateRend:

; 661  : 		}
; 662  : 
; 663  : 		if (m_y + height > pHeight - m_pParent->m_renderBox.bottom)

  00099	8b 4d f0	 mov	 ecx, DWORD PTR _pHeight$1$[ebp]
  0009c	89 b2 9c 00 00
	00		 mov	 DWORD PTR [edx+156], esi
  000a2	8b b7 a0 00 00
	00		 mov	 esi, DWORD PTR [edi+160]
  000a8	2b ce		 sub	 ecx, esi
  000aa	8b 7d e8	 mov	 edi, DWORD PTR _height$1$[ebp]
  000ad	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  000b0	3b c1		 cmp	 eax, ecx
  000b2	7e 1b		 jle	 SHORT $LN11@UpdateRend

; 664  : 		{
; 665  : 			m_renderBox.bottom = m_y + height - pHeight + m_pParent->m_renderBox.bottom;

  000b4	2b 75 f0	 sub	 esi, DWORD PTR _pHeight$1$[ebp]

; 666  : 		}
; 667  : 		else
; 668  : 		{
; 669  : 			m_renderBox.bottom = 0;
; 670  : 		}
; 671  : 	}
; 672  : 
; 673  : 	OnUpdateRenderBox();

  000b7	8b ca		 mov	 ecx, edx
  000b9	8b 02		 mov	 eax, DWORD PTR [edx]
  000bb	03 f3		 add	 esi, ebx
  000bd	03 f7		 add	 esi, edi
  000bf	89 b2 a0 00 00
	00		 mov	 DWORD PTR [edx+160], esi
  000c5	ff 50 10	 call	 DWORD PTR [eax+16]
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx

; 674  : }

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
$LN11@UpdateRend:

; 666  : 		}
; 667  : 		else
; 668  : 		{
; 669  : 			m_renderBox.bottom = 0;
; 670  : 		}
; 671  : 	}
; 672  : 
; 673  : 	OnUpdateRenderBox();

  000cf	8b 02		 mov	 eax, DWORD PTR [edx]
  000d1	8b ca		 mov	 ecx, edx
  000d3	c7 82 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+160], 0
  000dd	ff 50 10	 call	 DWORD PTR [eax+16]
  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx

; 674  : }

  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
$LN4@UpdateRend:
  000e7	0f 57 c0	 xorps	 xmm0, xmm0

; 666  : 		}
; 667  : 		else
; 668  : 		{
; 669  : 			m_renderBox.bottom = 0;
; 670  : 		}
; 671  : 	}
; 672  : 
; 673  : 	OnUpdateRenderBox();

  000ea	8b ca		 mov	 ecx, edx
  000ec	0f 11 82 94 00
	00 00		 movups	 XMMWORD PTR [edx+148], xmm0
  000f3	8b 02		 mov	 eax, DWORD PTR [edx]
  000f5	ff 50 10	 call	 DWORD PTR [eax+16]
  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx

; 674  : }

  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c3		 ret	 0
?UpdateRenderBox@CWindow@UI@@QAEXXZ ENDP		; UI::CWindow::UpdateRenderBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?UpdateTextLineRenderBox@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
_height$ = -24						; size = 4
tv440 = -20						; size = 4
_pHeight$1$ = -16					; size = 4
_width$ = -12						; size = 4
tv439 = -8						; size = 4
_pWidth$1$ = -4						; size = 4
?UpdateTextLineRenderBox@CWindow@UI@@QAEXXZ PROC	; UI::CWindow::UpdateTextLineRenderBox, COMDAT
; _this$ = ecx

; 579  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 580  : 	int width, height;
; 581  : 	((CTextLine*)this)->GetTextSize(&width, &height);

  00009	8d 45 e8	 lea	 eax, DWORD PTR _height$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	50		 push	 eax
  0000f	8d 45 f4	 lea	 eax, DWORD PTR _width$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ; UI::CTextLine::GetTextSize

; 582  : 
; 583  : 	int pWidth = m_pParent->GetWidth();

  00018	8b 96 80 00 00
	00		 mov	 edx, DWORD PTR [esi+128]

; 584  : 	int pHeight = m_pParent->GetHeight();
; 585  : 
; 586  : 	if (m_x - m_pParent->m_renderBox.left < 0)

  0001e	8b 5e 24	 mov	 ebx, DWORD PTR [esi+36]
  00021	89 5d f8	 mov	 DWORD PTR tv439[ebp], ebx
  00024	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00027	8b 7a 30	 mov	 edi, DWORD PTR [edx+48]
  0002a	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  00030	89 45 fc	 mov	 DWORD PTR _pWidth$1$[ebp], eax
  00033	8b c3		 mov	 eax, ebx
  00035	2b c1		 sub	 eax, ecx
  00037	89 7d f0	 mov	 DWORD PTR _pHeight$1$[ebp], edi

; 587  : 	{
; 588  : 		m_renderBox.left = -m_x + m_pParent->m_renderBox.left;
; 589  : 	}
; 590  : 	else
; 591  : 	{
; 592  : 		m_renderBox.left = 0;
; 593  : 	}
; 594  : 
; 595  : 	if (m_y - m_pParent->m_renderBox.top < 0)

  0003a	2b cb		 sub	 ecx, ebx
  0003c	33 ff		 xor	 edi, edi
  0003e	85 c0		 test	 eax, eax
  00040	0f 49 cf	 cmovns	 ecx, edi
  00043	89 8e 94 00 00
	00		 mov	 DWORD PTR [esi+148], ecx
  00049	8b 5e 28	 mov	 ebx, DWORD PTR [esi+40]
  0004c	8b c3		 mov	 eax, ebx
  0004e	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  00054	2b c1		 sub	 eax, ecx

; 596  : 	{
; 597  : 		m_renderBox.top = -m_y + m_pParent->m_renderBox.top;
; 598  : 	}
; 599  : 	else
; 600  : 	{
; 601  : 		m_renderBox.top = 0;
; 602  : 	}
; 603  : 
; 604  : 	if (m_x + width > pWidth - m_pParent->m_renderBox.right)

  00056	2b cb		 sub	 ecx, ebx
  00058	85 c0		 test	 eax, eax
  0005a	8b 45 f8	 mov	 eax, DWORD PTR tv439[ebp]
  0005d	0f 49 cf	 cmovns	 ecx, edi
  00060	89 8e 98 00 00
	00		 mov	 DWORD PTR [esi+152], ecx
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _pWidth$1$[ebp]
  00069	8b 92 9c 00 00
	00		 mov	 edx, DWORD PTR [edx+156]
  0006f	2b ca		 sub	 ecx, edx
  00071	03 45 f4	 add	 eax, DWORD PTR _width$[ebp]
  00074	3b c1		 cmp	 eax, ecx
  00076	7e 0b		 jle	 SHORT $LN6@UpdateText

; 605  : 	{
; 606  : 		m_renderBox.right = m_x + width - pWidth + m_pParent->m_renderBox.right;

  00078	2b 55 fc	 sub	 edx, DWORD PTR _pWidth$1$[ebp]
  0007b	03 55 f8	 add	 edx, DWORD PTR tv439[ebp]
  0007e	03 55 f4	 add	 edx, DWORD PTR _width$[ebp]

; 607  : 	}

  00081	eb 02		 jmp	 SHORT $LN7@UpdateText
$LN6@UpdateText:

; 608  : 	else
; 609  : 	{
; 610  : 		m_renderBox.right = 0;

  00083	33 d2		 xor	 edx, edx
$LN7@UpdateText:

; 611  : 	}
; 612  : 
; 613  : 	if (m_y + height > pHeight - m_pParent->m_renderBox.bottom)

  00085	8b 4d f0	 mov	 ecx, DWORD PTR _pHeight$1$[ebp]
  00088	89 96 9c 00 00
	00		 mov	 DWORD PTR [esi+156], edx
  0008e	8b 96 80 00 00
	00		 mov	 edx, DWORD PTR [esi+128]
  00094	8b 7d e8	 mov	 edi, DWORD PTR _height$[ebp]
  00097	8b 92 a0 00 00
	00		 mov	 edx, DWORD PTR [edx+160]
  0009d	2b ca		 sub	 ecx, edx
  0009f	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  000a2	3b c1		 cmp	 eax, ecx
  000a4	7e 14		 jle	 SHORT $LN8@UpdateText

; 614  : 	{
; 615  : 		m_renderBox.bottom = m_y + height - pHeight + m_pParent->m_renderBox.bottom;

  000a6	2b 55 f0	 sub	 edx, DWORD PTR _pHeight$1$[ebp]
  000a9	03 d3		 add	 edx, ebx
  000ab	03 d7		 add	 edx, edi
  000ad	5f		 pop	 edi

; 616  : 	}
; 617  : 	else
; 618  : 	{
; 619  : 		m_renderBox.bottom = 0;
; 620  : 	}
; 621  : }

  000ae	89 96 a0 00 00
	00		 mov	 DWORD PTR [esi+160], edx
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN8@UpdateText:
  000ba	5f		 pop	 edi
  000bb	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
?UpdateTextLineRenderBox@CWindow@UI@@QAEXXZ ENDP	; UI::CWindow::UpdateTextLineRenderBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRenderBox@CWindow@UI@@QAEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_box$ = 8						; size = 4
?GetRenderBox@CWindow@UI@@QAEXPAUtagRECT@@@Z PROC	; UI::CWindow::GetRenderBox, COMDAT
; _this$ = ecx

; 574  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 575  : 	memcpy(box, &m_renderBox, sizeof(RECT));

  00003	8b 45 08	 mov	 eax, DWORD PTR _box$[ebp]
  00006	0f 10 81 94 00
	00 00		 movups	 xmm0, XMMWORD PTR [ecx+148]
  0000d	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 576  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?GetRenderBox@CWindow@UI@@QAEXPAUtagRECT@@@Z ENDP	; UI::CWindow::GetRenderBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetInsideRender@CWindow@UI@@QAEXH@Z
_TEXT	SEGMENT
_flag$ = 8						; size = 4
?SetInsideRender@CWindow@UI@@QAEXH@Z PROC		; UI::CWindow::SetInsideRender, COMDAT
; _this$ = ecx

; 554  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx

; 555  : 	if (!m_pParent || m_isInsideRender && m_pParent->m_isInsideRender)

  00006	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
  0000c	85 c0		 test	 eax, eax
  0000e	74 59		 je	 SHORT $LN6@SetInsideR
  00010	83 bf 90 00 00
	00 00		 cmp	 DWORD PTR [edi+144], 0
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _flag$[ebp]
  0001a	74 0d		 je	 SHORT $LN7@SetInsideR
  0001c	83 b8 90 00 00
	00 00		 cmp	 DWORD PTR [eax+144], 0
  00023	75 44		 jne	 SHORT $LN6@SetInsideR

; 556  : 	{
; 557  : 		return;
; 558  : 	}
; 559  : 
; 560  : 	if (m_isInsideRender && flag)

  00025	85 c9		 test	 ecx, ecx
  00027	75 40		 jne	 SHORT $LN6@SetInsideR
$LN7@SetInsideR:

; 561  : 	{
; 562  : 		return;
; 563  : 	}
; 564  : 
; 565  : 	m_isInsideRender = flag;

  00029	89 8f 90 00 00
	00		 mov	 DWORD PTR [edi+144], ecx

; 566  : 	UpdateRenderBox();

  0002f	8b cf		 mov	 ecx, edi
  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 ?UpdateRenderBox@CWindow@UI@@QAEXXZ ; UI::CWindow::UpdateRenderBox
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00037	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0003d	8b 30		 mov	 esi, DWORD PTR [eax]
  0003f	3b f0		 cmp	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 567  : 	for (auto it = m_pChildList.begin(); it != m_pChildList.end(); ++it)

  00041	74 25		 je	 SHORT $LN41@SetInsideR
  00043	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL24@SetInsideR:

; 568  : 	{
; 569  : 		(*it)->SetInsideRender(m_isInsideRender);

  00050	ff b7 90 00 00
	00		 push	 DWORD PTR [edi+144]
  00056	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00059	e8 00 00 00 00	 call	 ?SetInsideRender@CWindow@UI@@QAEXH@Z ; UI::CWindow::SetInsideRender
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0005e	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00060	3b b7 84 00 00
	00		 cmp	 esi, DWORD PTR [edi+132]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 567  : 	for (auto it = m_pChildList.begin(); it != m_pChildList.end(); ++it)

  00066	75 e8		 jne	 SHORT $LL24@SetInsideR
$LN41@SetInsideR:
  00068	5e		 pop	 esi
$LN6@SetInsideR:
  00069	5f		 pop	 edi

; 570  : 	}
; 571  : }

  0006a	5d		 pop	 ebp
  0006b	c2 04 00	 ret	 4
?SetInsideRender@CWindow@UI@@QAEXH@Z ENDP		; UI::CWindow::SetInsideRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?__RemoveReserveChildren@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
__Op$1 = -16						; size = 12
_this$1$ = -4						; size = 4
?__RemoveReserveChildren@CWindow@UI@@QAEXXZ PROC	; UI::CWindow::__RemoveReserveChildren, COMDAT
; _this$ = ecx

; 214  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1195 :         return _Mypair._Myval2._Mysize == 0;

  0000c	83 bb a8 00 00
	00 00		 cmp	 DWORD PTR [ebx+168], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 215  : 	if (m_pReserveChildList.empty())

  00013	0f 84 d6 00 00
	00		 je	 $LN71@RemoveRese
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00019	8b 83 a4 00 00
	00		 mov	 eax, DWORD PTR [ebx+164]
  0001f	56		 push	 esi

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00020	8b 30		 mov	 esi, DWORD PTR [eax]
  00022	3b f0		 cmp	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 221  : 	for (it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  00024	0f 84 84 00 00
	00		 je	 $LN3@RemoveRese
  0002a	57		 push	 edi
  0002b	8d bb 84 00 00
	00		 lea	 edi, DWORD PTR [ebx+132]
$LL22@RemoveRese:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1668 :         const auto _Last         = _My_data._Myhead;

  00031	8b 1f		 mov	 ebx, DWORD PTR [edi]

; 1594 :         explicit _List_node_remove_op(list& _List_) noexcept : _List(_List_), _Head(), _Tail(_STD addressof(_Head)) {}

  00033	8d 45 f4	 lea	 eax, DWORD PTR __Op$1[ebp+4]
  00036	33 c9		 xor	 ecx, ecx
  00038	89 45 f8	 mov	 DWORD PTR __Op$1[ebp+8], eax
  0003b	8b d7		 mov	 edx, edi
  0003d	89 4d f4	 mov	 DWORD PTR __Op$1[ebp+4], ecx
  00040	89 55 f0	 mov	 DWORD PTR __Op$1[ebp], edx

; 1670 :         for (auto _First = _Last->_Next; _First != _Last;) {

  00043	8b 03		 mov	 eax, DWORD PTR [ebx]
  00045	3b c3		 cmp	 eax, ebx
  00047	74 38		 je	 SHORT $LN33@RemoveRese
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL32@RemoveRese:

; 1661 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 1671 :             auto _Next = _First->_Next;

  00053	8b 38		 mov	 edi, DWORD PTR [eax]

; 1661 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00055	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]

; 1672 :             if (_Pred(_First->_Myval)) {

  00058	75 1e		 jne	 SHORT $LN63@RemoveRese

; 1605 :             --_List._Mypair._Myval2._Mysize;

  0005a	ff 4a 04	 dec	 DWORD PTR [edx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0005d	8b 10		 mov	 edx, DWORD PTR [eax]

; 654  :     _Val         = static_cast<_Other&&>(_New_val);

  0005f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1607 :             const auto _Prev = _Removed->_Prev;

  00065	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1608 :             _Prev->_Next     = _Next;

  00068	89 11		 mov	 DWORD PTR [ecx], edx

; 1609 :             _Next->_Prev     = _Prev;

  0006a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1610 : 
; 1611 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1612 :             // mark removed node for IDL to snip out later
; 1613 :             _Removed->_Prev = nullptr;
; 1614 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1615 : 
; 1616 :             *_Tail = _Removed;

  0006d	8b 4d f8	 mov	 ecx, DWORD PTR __Op$1[ebp+8]
  00070	89 01		 mov	 DWORD PTR [ecx], eax

; 1617 :             _Tail  = _STD addressof(_Removed->_Next);

  00072	8b 55 f0	 mov	 edx, DWORD PTR __Op$1[ebp]
  00075	89 45 f8	 mov	 DWORD PTR __Op$1[ebp+8], eax
$LN63@RemoveRese:

; 1676 :             _First = _Next;

  00078	8b c7		 mov	 eax, edi
  0007a	3b fb		 cmp	 edi, ebx
  0007c	75 d2		 jne	 SHORT $LL32@RemoveRese
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __Op$1[ebp+4]
$LN33@RemoveRese:

; 1643 :             auto _Target = _Head;

  00081	85 c9		 test	 ecx, ecx

; 1644 :             while (_Target) {

  00083	74 13		 je	 SHORT $LN2@RemoveRese
$LL40@RemoveRese:

; 1645 :                 auto _Next = _Target->_Next;

  00085	8b 39		 mov	 edi, DWORD PTR [ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00087	6a 0c		 push	 12			; 0000000cH
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1651 :                 _Target = _Next;

  00092	8b cf		 mov	 ecx, edi
  00094	85 ff		 test	 edi, edi
  00096	75 ed		 jne	 SHORT $LL40@RemoveRese
$LN2@RemoveRese:

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00098	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0009b	8b 36		 mov	 esi, DWORD PTR [esi]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0009d	8b 83 a4 00 00
	00		 mov	 eax, DWORD PTR [ebx+164]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 221  : 	for (it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  000a3	8d bb 84 00 00
	00		 lea	 edi, DWORD PTR [ebx+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 198  :         return this->_Ptr == _Right._Ptr;

  000a9	3b f0		 cmp	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 221  : 	for (it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  000ab	75 84		 jne	 SHORT $LL22@RemoveRese
  000ad	5f		 pop	 edi
$LN3@RemoveRese:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 325  :         _Head->_Prev->_Next = nullptr;

  000ae	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000b1	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  000b7	8b 00		 mov	 eax, DWORD PTR [eax]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000b9	85 c0		 test	 eax, eax
  000bb	74 16		 je	 SHORT $LN74@RemoveRese
  000bd	0f 1f 00	 npad	 3
$LL75@RemoveRese:

; 329  :             _Pnext = _Pnode->_Next;

  000c0	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000c2	6a 0c		 push	 12			; 0000000cH
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ca	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000cd	8b c6		 mov	 eax, esi
  000cf	85 f6		 test	 esi, esi
  000d1	75 ed		 jne	 SHORT $LL75@RemoveRese
$LN74@RemoveRese:

; 1488 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000d3	8b 83 a4 00 00
	00		 mov	 eax, DWORD PTR [ebx+164]

; 1489 :         _My_data._Myhead->_Prev = _My_data._Myhead;
; 1490 :         _My_data._Mysize        = 0;

  000d9	5e		 pop	 esi
  000da	89 00		 mov	 DWORD PTR [eax], eax
  000dc	8b 83 a4 00 00
	00		 mov	 eax, DWORD PTR [ebx+164]
  000e2	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000e5	c7 83 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+168], 0
$LN71@RemoveRese:
  000ef	5b		 pop	 ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 226  : }

  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
?__RemoveReserveChildren@CWindow@UI@@QAEXXZ ENDP	; UI::CWindow::__RemoveReserveChildren
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z PROC		; UI::CWindow::PickTopWindow, COMDAT
; _this$ = ecx

; 1357 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
  00007	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00008	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  0000e	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1359 : 	for (; ritor != m_pChildList.rend(); ++ritor)

  00010	74 3c		 je	 SHORT $LN62@PickTopWin
$LL42@PickTopWin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00012	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00015	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1361 : 		CWindow * pWin = *ritor;

  00017	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 1362 : 		if (pWin->IsShow())

  0001a	8b ce		 mov	 ecx, esi
  0001c	8b 06		 mov	 eax, DWORD PTR [esi]
  0001e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00021	ff d0		 call	 eax
  00023	84 c0		 test	 al, al
  00025	74 1b		 je	 SHORT $LN2@PickTopWin

; 1363 : 			if (pWin->IsIn(x, y))

  00027	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  0002a	8b ce		 mov	 ecx, esi
  0002c	ff 75 08	 push	 DWORD PTR _x$[ebp]
  0002f	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00034	84 c0		 test	 al, al
  00036	74 0a		 je	 SHORT $LN2@PickTopWin
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h

; 139  : 	bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00038	8b 46 78	 mov	 eax, DWORD PTR [esi+120]
  0003b	c1 e8 09	 shr	 eax, 9
  0003e	a8 01		 test	 al, 1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1364 : 				if (!pWin->IsFlag(CWindow::FLAG_NOT_PICK))

  00040	74 15		 je	 SHORT $LN58@PickTopWin
$LN2@PickTopWin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00042	8b 8b 84 00 00
	00		 mov	 ecx, DWORD PTR [ebx+132]

; 183  :         this->_Ptr = _New_ptr;

  00048	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0004a	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1359 : 	for (; ritor != m_pChildList.rend(); ++ritor)

  0004c	75 c4		 jne	 SHORT $LL42@PickTopWin
$LN62@PickTopWin:
  0004e	5f		 pop	 edi

; 1367 : 				}
; 1368 : 	}
; 1369 : 
; 1370 : 	return NULL;
; 1371 : }

  0004f	5e		 pop	 esi
  00050	33 c0		 xor	 eax, eax
  00052	5b		 pop	 ebx
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
$LN58@PickTopWin:
  00057	5f		 pop	 edi

; 1365 : 				{
; 1366 : 					return pWin;

  00058	8b c6		 mov	 eax, esi

; 1367 : 				}
; 1368 : 	}
; 1369 : 
; 1370 : 	return NULL;
; 1371 : }

  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	5d		 pop	 ebp
  0005d	c2 08 00	 ret	 8
?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z ENDP		; UI::CWindow::PickTopWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
tv436 = 12						; size = 4
_y$ = 12						; size = 4
?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z PROC		; UI::CWindow::PickWindow, COMDAT
; _this$ = ecx

; 1322 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00008	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  0000e	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1324 : 	for (; ritor != m_pChildList.rend(); ++ritor)

  00010	74 58		 je	 SHORT $LN67@PickWindow
  00012	8b 5d 0c	 mov	 ebx, DWORD PTR _y$[ebp]
$LL47@PickWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00015	83 c0 04	 add	 eax, 4
  00018	89 45 0c	 mov	 DWORD PTR tv436[ebp], eax

; 183  :         this->_Ptr = _New_ptr;

  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1326 : 		CWindow * pWin = *ritor;

  0001d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 1327 : 		if (pWin->IsShow())

  00020	8b ce		 mov	 ecx, esi
  00022	8b 06		 mov	 eax, DWORD PTR [esi]
  00024	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00027	ff d0		 call	 eax
  00029	84 c0		 test	 al, al
  0002b	74 2e		 je	 SHORT $LN2@PickWindow
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h

; 139  : 	bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0002d	8b 46 78	 mov	 eax, DWORD PTR [esi+120]
  00030	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00033	a8 01		 test	 al, 1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1329 : 			if (!pWin->IsFlag(CWindow::FLAG_IGNORE_SIZE))

  00035	75 15		 jne	 SHORT $LN8@PickWindow

; 1330 : 			{
; 1331 : 				if (!pWin->IsIn(x, y))

  00037	53		 push	 ebx
  00038	ff 75 08	 push	 DWORD PTR _x$[ebp]
  0003b	8b ce		 mov	 ecx, esi
  0003d	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00042	84 c0		 test	 al, al
  00044	75 06		 jne	 SHORT $LN8@PickWindow

; 1332 : 				{
; 1333 : 					if (0L <= pWin->GetWidth())

  00046	83 7e 2c 00	 cmp	 DWORD PTR [esi+44], 0
  0004a	7d 0f		 jge	 SHORT $LN2@PickWindow
$LN8@PickWindow:

; 1334 : 					{
; 1335 : 						continue;
; 1336 : 					}
; 1337 : 				}
; 1338 : 			}
; 1339 : 
; 1340 : 			CWindow * pResult = pWin->PickWindow(x, y);

  0004c	53		 push	 ebx
  0004d	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00050	8b ce		 mov	 ecx, esi
  00052	e8 00 00 00 00	 call	 ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ; UI::CWindow::PickWindow

; 1341 : 			if (pResult)

  00057	85 c0		 test	 eax, eax
  00059	75 21		 jne	 SHORT $LN1@PickWindow
$LN2@PickWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 183  :         this->_Ptr = _New_ptr;

  0005b	8b 45 0c	 mov	 eax, DWORD PTR tv436[ebp]

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0005e	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]

; 183  :         this->_Ptr = _New_ptr;

  00064	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  00066	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1324 : 	for (; ritor != m_pChildList.rend(); ++ritor)

  00068	75 ab		 jne	 SHORT $LL47@PickWindow
$LN67@PickWindow:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h

; 139  : 	bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0006a	8b 47 78	 mov	 eax, DWORD PTR [edi+120]
  0006d	c1 e8 09	 shr	 eax, 9
  00070	a8 01		 test	 al, 1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 1348 : 	if (IsFlag(CWindow::FLAG_NOT_PICK))

  00072	b8 00 00 00 00	 mov	 eax, 0
  00077	0f 45 f8	 cmovne	 edi, eax
  0007a	8b c7		 mov	 eax, edi
$LN1@PickWindow:

; 1349 : 	{
; 1350 : 		return NULL;
; 1351 : 	}
; 1352 : 
; 1353 : 	return (this);
; 1354 : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ENDP		; UI::CWindow::PickWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsIn@CWindow@UI@@QAE_NXZ
_TEXT	SEGMENT
_lx$ = -8						; size = 4
_ly$ = -4						; size = 4
?IsIn@CWindow@UI@@QAE_NXZ PROC				; UI::CWindow::IsIn, COMDAT
; _this$ = ecx

; 1314 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1315 : 	long lx, ly;
; 1316 : 	UI::CWindowManager::Instance().GetMousePosition(lx, ly);

  00007	8d 45 fc	 lea	 eax, DWORD PTR _ly$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00012	50		 push	 eax
  00013	8d 45 f8	 lea	 eax, DWORD PTR _lx$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 1317 : 
; 1318 : 	return IsIn(lx, ly);

  0001c	ff 75 fc	 push	 DWORD PTR _ly$[ebp]
  0001f	8b ce		 mov	 ecx, esi
  00021	ff 75 f8	 push	 DWORD PTR _lx$[ebp]
  00024	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00029	5e		 pop	 esi

; 1319 : }

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?IsIn@CWindow@UI@@QAE_NXZ ENDP				; UI::CWindow::IsIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsIn@CWindow@UI@@QAE_NJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?IsIn@CWindow@UI@@QAE_NJJ@Z PROC			; UI::CWindow::IsIn, COMDAT
; _this$ = ecx

; 1303 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1304 : 	if (x >= m_rect.left && x <= m_rect.right)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	3b 41 34	 cmp	 eax, DWORD PTR [ecx+52]
  00009	7c 17		 jl	 SHORT $LN3@IsIn
  0000b	3b 41 3c	 cmp	 eax, DWORD PTR [ecx+60]
  0000e	7f 12		 jg	 SHORT $LN3@IsIn

; 1305 : 		if (y >= m_rect.top && y <= m_rect.bottom)

  00010	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00013	3b 41 38	 cmp	 eax, DWORD PTR [ecx+56]
  00016	7c 0a		 jl	 SHORT $LN3@IsIn
  00018	3b 41 40	 cmp	 eax, DWORD PTR [ecx+64]
  0001b	0f 9e c0	 setle	 al

; 1311 : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
$LN3@IsIn:

; 1306 : 		{
; 1307 : 			return true;
; 1308 : 		}
; 1309 : 
; 1310 : 	return false;

  00022	32 c0		 xor	 al, al

; 1311 : }

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?IsIn@CWindow@UI@@QAE_NJJ@Z ENDP			; UI::CWindow::IsIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsTop@CWindow@UI@@QAE_NPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?IsTop@CWindow@UI@@QAE_NPAV12@@Z PROC			; UI::CWindow::IsTop, COMDAT
; _this$ = ecx

; 751  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 752  : 	if (m_pChildList.size() == 0)

  00003	83 b9 88 00 00
	00 00		 cmp	 DWORD PTR [ecx+136], 0
  0000a	74 16		 je	 SHORT $LN27@IsTop
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1234 :         : current(_STD move(_Right)) {}

  0000c	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 183  :         this->_Ptr = _New_ptr;

  00012	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 757  : 	if (*m_pChildList.rbegin() != pWin)

  00015	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00018	3b 45 08	 cmp	 eax, DWORD PTR _pWin$[ebp]
  0001b	0f 94 c0	 sete	 al

; 760  : 	}
; 761  : 
; 762  : 	return true;
; 763  : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
$LN27@IsTop:

; 758  : 	{
; 759  : 		return false;

  00022	32 c0		 xor	 al, al

; 760  : 	}
; 761  : 
; 762  : 	return true;
; 763  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?IsTop@CWindow@UI@@QAE_NPAV12@@Z ENDP			; UI::CWindow::IsTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetTop@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?SetTop@CWindow@UI@@QAEXPAV12@@Z PROC			; UI::CWindow::SetTop, COMDAT
; _this$ = ecx

; 730  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h

; 139  : 	bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00005	8b 7d 08	 mov	 edi, DWORD PTR _pWin$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 730  : {

  00008	8b d9		 mov	 ebx, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h

; 139  : 	bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0000a	8b 47 78	 mov	 eax, DWORD PTR [edi+120]
  0000d	c1 e8 08	 shr	 eax, 8
  00010	a8 01		 test	 al, 1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 731  : 	if (!pWin->IsFlag(CWindow::FLAG_FLOAT))

  00012	74 67		 je	 SHORT $LN4@SetTop
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00014	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]

; 1095 :         return iterator(_Mypair._Myval2._Myhead, _STD addressof(_Mypair._Myval2));

  0001a	8d 8b 84 00 00
	00		 lea	 ecx, DWORD PTR [ebx+132]
  00020	56		 push	 esi

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00021	8b 30		 mov	 esi, DWORD PTR [eax]

; 73   :         return _Ptr == _Right._Ptr;

  00023	3b c6		 cmp	 eax, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 5129 :     for (; _First != _Last; ++_First) {

  00025	74 46		 je	 SHORT $LN3@SetTop
$LL59@SetTop:

; 5130 :         if (*_First == _Val) {

  00027	39 7e 08	 cmp	 DWORD PTR [esi+8], edi
  0002a	74 06		 je	 SHORT $LN118@SetTop
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 51   :         _Ptr = _Ptr->_Next;

  0002c	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  0002e	3b f0		 cmp	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 5129 :     for (; _First != _Last; ++_First) {

  00030	75 f5		 jne	 SHORT $LL59@SetTop
$LN118@SetTop:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00032	3b c6		 cmp	 eax, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 737  : 	if (m_pChildList.end() != itor)

  00034	74 37		 je	 SHORT $LN3@SetTop
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 151  :         return this->_Ptr->_Myval;

  00036	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 739  : 		m_pChildList.push_back(*itor);

  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  0003f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00042	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00044	6a 0c		 push	 12			; 0000000cH
  00046	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00047	89 01		 mov	 DWORD PTR [ecx], eax

; 397  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  00049	8b 16		 mov	 edx, DWORD PTR [esi]
  0004b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 398  :         --_Mysize;

  00051	ff 8b 88 00 00
	00		 dec	 DWORD PTR [ebx+136]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00057	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 742  : 		pWin->OnTop();

  0005c	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0005e	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 742  : 		pWin->OnTop();

  00061	8b cf		 mov	 ecx, edi
  00063	ff 50 3c	 call	 DWORD PTR [eax+60]
  00066	5e		 pop	 esi
  00067	5f		 pop	 edi

; 747  : 	}
; 748  : }

  00068	5b		 pop	 ebx
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
$LN3@SetTop:

; 743  : 	}
; 744  : 	else
; 745  : 	{
; 746  : 		TraceError(" CWindow::SetTop - Failed to find child window\n");

  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@
  00072	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00077	83 c4 04	 add	 esp, 4
  0007a	5e		 pop	 esi
$LN4@SetTop:

; 747  : 	}
; 748  : }

  0007b	5f		 pop	 edi
  0007c	5b		 pop	 ebx
  0007d	5d		 pop	 ebp
  0007e	c2 04 00	 ret	 4
?SetTop@CWindow@UI@@QAEXPAV12@@Z ENDP			; UI::CWindow::SetTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DeleteChild@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?DeleteChild@CWindow@UI@@QAEXPAV12@@Z PROC		; UI::CWindow::DeleteChild, COMDAT
; _this$ = ecx

; 718  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 719  : 	if (m_isUpdatingChildren)

  00003	83 b9 8c 00 00
	00 00		 cmp	 DWORD PTR [ecx+140], 0
  0000a	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  0000d	50		 push	 eax
  0000e	74 0f		 je	 SHORT $LN2@DeleteChil

; 720  : 	{
; 721  : 		m_pReserveChildList.push_back(pWin);

  00010	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00016	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 726  : 	}
; 727  : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN2@DeleteChil:

; 722  : 	}
; 723  : 	else
; 724  : 	{
; 725  : 		m_pChildList.remove(pWin);

  0001f	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00025	e8 00 00 00 00	 call	 ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove

; 726  : 	}
; 727  : }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?DeleteChild@CWindow@UI@@QAEXPAV12@@Z ENDP		; UI::CWindow::DeleteChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsChild@CWindow@UI@@QAE_NPAV12@_N@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
_bCheckRecursive$ = 12					; size = 1
?IsChild@CWindow@UI@@QAE_NPAV12@_N@Z PROC		; UI::CWindow::IsChild, COMDAT
; _this$ = ecx

; 698  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00008	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	3b f0		 cmp	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 701  : 	while (itor != m_pChildList.end())

  00012	74 22		 je	 SHORT $LN40@IsChild
  00014	8a 5d 0c	 mov	 bl, BYTE PTR _bCheckRecursive$[ebp]
$LL2@IsChild:

; 702  : 	{
; 703  : #ifdef INGAME_WIKI
; 704  : 		if (bCheckRecursive)

  00017	84 db		 test	 bl, bl
  00019	74 11		 je	 SHORT $LN5@IsChild

; 705  : 			if ((*itor)->IsChild(pWin, true))

  0001b	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0001e	6a 01		 push	 1
  00020	ff 75 08	 push	 DWORD PTR _pWin$[ebp]
  00023	e8 00 00 00 00	 call	 ?IsChild@CWindow@UI@@QAE_NPAV12@_N@Z ; UI::CWindow::IsChild
  00028	84 c0		 test	 al, al
  0002a	75 13		 jne	 SHORT $LN36@IsChild
$LN5@IsChild:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0002c	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0002e	3b b7 84 00 00
	00		 cmp	 esi, DWORD PTR [edi+132]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 701  : 	while (itor != m_pChildList.end())

  00034	75 e1		 jne	 SHORT $LL2@IsChild
$LN40@IsChild:
  00036	5f		 pop	 edi

; 706  : 			{
; 707  : 				return true;
; 708  : 			}
; 709  : #endif
; 710  : 
; 711  : 		++itor;
; 712  : 	}
; 713  : 
; 714  : 	return false;
; 715  : }

  00037	5e		 pop	 esi
  00038	32 c0		 xor	 al, al
  0003a	5b		 pop	 ebx
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
$LN36@IsChild:
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	b0 01		 mov	 al, 1
  00043	5b		 pop	 ebx
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
?IsChild@CWindow@UI@@QAE_NPAV12@_N@Z ENDP		; UI::CWindow::IsChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetParent@CWindow@UI@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetParent@CWindow@UI@@QAEPAV12@XZ PROC			; UI::CWindow::GetParent, COMDAT
; _this$ = ecx

; 690  : 	return m_pParent;

  00000	8b 81 80 00 00
	00		 mov	 eax, DWORD PTR [ecx+128]

; 691  : }

  00006	c3		 ret	 0
?GetParent@CWindow@UI@@QAEPAV12@XZ ENDP			; UI::CWindow::GetParent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRoot@CWindow@UI@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetRoot@CWindow@UI@@QAEPAV12@XZ PROC			; UI::CWindow::GetRoot, COMDAT
; _this$ = ecx

; 678  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 679  : 	if (m_pParent)

  00003	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00009	57		 push	 edi
  0000a	8d be 80 00 00
	00		 lea	 edi, DWORD PTR [esi+128]
  00010	85 c9		 test	 ecx, ecx
  00012	74 1e		 je	 SHORT $LN11@GetRoot
$LL5@GetRoot:

; 680  : 		if (m_pParent->IsWindow())

  00014	8b 01		 mov	 eax, DWORD PTR [ecx]
  00016	ff 90 ac 00 00
	00		 call	 DWORD PTR [eax+172]
  0001c	85 c0		 test	 eax, eax
  0001e	74 12		 je	 SHORT $LN11@GetRoot

; 681  : 		{
; 682  : 			return m_pParent->GetRoot();

  00020	8b 37		 mov	 esi, DWORD PTR [edi]
  00022	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00028	8d be 80 00 00
	00		 lea	 edi, DWORD PTR [esi+128]
  0002e	85 c9		 test	 ecx, ecx
  00030	75 e2		 jne	 SHORT $LL5@GetRoot
$LN11@GetRoot:
  00032	5f		 pop	 edi

; 683  : 		}
; 684  : 
; 685  : 	return this;
; 686  : }

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c3		 ret	 0
?GetRoot@CWindow@UI@@QAEPAV12@XZ ENDP			; UI::CWindow::GetRoot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsRendering@CWindow@UI@@QAE_NXZ
_TEXT	SEGMENT
?IsRendering@CWindow@UI@@QAE_NXZ PROC			; UI::CWindow::IsRendering, COMDAT
; _this$ = ecx

; 199  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 200  : 	if (!IsShow())

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00008	ff d0		 call	 eax
  0000a	84 c0		 test	 al, al
  0000c	74 19		 je	 SHORT $LN8@IsRenderin
  0000e	66 90		 npad	 2
$LL5@IsRenderin:

; 203  : 	}
; 204  : 
; 205  : 	if (!m_pParent)

  00010	8b b6 80 00 00
	00		 mov	 esi, DWORD PTR [esi+128]
  00016	85 f6		 test	 esi, esi
  00018	74 11		 je	 SHORT $LN9@IsRenderin

; 200  : 	if (!IsShow())

  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	8b ce		 mov	 ecx, esi
  0001e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00021	ff d0		 call	 eax
  00023	84 c0		 test	 al, al
  00025	75 e9		 jne	 SHORT $LL5@IsRenderin
$LN8@IsRenderin:

; 201  : 	{
; 202  : 		return false;

  00027	32 c0		 xor	 al, al
  00029	5e		 pop	 esi

; 208  : 	}
; 209  : 
; 210  : 	return m_pParent->IsRendering();
; 211  : }

  0002a	c3		 ret	 0
$LN9@IsRenderin:

; 206  : 	{
; 207  : 		return true;

  0002b	b0 01		 mov	 al, 1
  0002d	5e		 pop	 esi

; 208  : 	}
; 209  : 
; 210  : 	return m_pParent->IsRendering();
; 211  : }

  0002e	c3		 ret	 0
?IsRendering@CWindow@UI@@QAE_NXZ ENDP			; UI::CWindow::IsRendering
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnHide@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?OnHide@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::OnHide, COMDAT
; _this$ = ecx

; 193  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 194  : 	PyCallClassMemberFunc(m_poHandler, "OnHide", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_06JLNHBMCE@OnHide@
  0000e	ff 76 7c	 push	 DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 195  : }

  0001a	c3		 ret	 0
?OnHide@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::OnHide
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnHideWithChilds@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?OnHideWithChilds@CWindow@UI@@QAEXXZ PROC		; UI::CWindow::OnHideWithChilds, COMDAT
; _this$ = ecx

; 187  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f1		 mov	 esi, ecx

; 188  : 	OnHide();

  00004	e8 00 00 00 00	 call	 ?OnHide@CWindow@UI@@QAEXXZ ; UI::CWindow::OnHide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00009	8b be 84 00 00
	00		 mov	 edi, DWORD PTR [esi+132]
  0000f	8b 37		 mov	 esi, DWORD PTR [edi]

; 73   :         return _Ptr == _Right._Ptr;

  00011	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00013	74 0e		 je	 SHORT $LN25@OnHideWith
$LL35@OnHideWith:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1578 :         return ((*static_cast<_Ty1&&>(_Arg1)).*_Obj)(static_cast<_Types2&&>(_Args2)...);

  00015	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00018	e8 00 00 00 00	 call	 ?OnHideWithChilds@CWindow@UI@@QAEXXZ ; UI::CWindow::OnHideWithChilds
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 51   :         _Ptr = _Ptr->_Next;

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  0001f	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00021	75 f2		 jne	 SHORT $LL35@OnHideWith
$LN25@OnHideWith:
  00023	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 190  : }

  00024	5e		 pop	 esi
  00025	c3		 ret	 0
?OnHideWithChilds@CWindow@UI@@QAEXXZ ENDP		; UI::CWindow::OnHideWithChilds
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsShow@CWindow@UI@@UAE_NXZ
_TEXT	SEGMENT
?IsShow@CWindow@UI@@UAE_NXZ PROC			; UI::CWindow::IsShow, COMDAT
; _this$ = ecx

; 259  : 	if (!m_bShow)

  00000	80 79 75 00	 cmp	 BYTE PTR [ecx+117], 0
  00004	74 30		 je	 SHORT $LN5@IsShow

; 260  : 	{
; 261  : 		return false;
; 262  : 	}
; 263  : 
; 264  : 	if (m_isInsideRender)

  00006	83 b9 90 00 00
	00 00		 cmp	 DWORD PTR [ecx+144], 0
  0000d	74 24		 je	 SHORT $LN4@IsShow

; 265  : 		if (m_renderBox.left + m_renderBox.right >= m_lWidth || m_renderBox.top + m_renderBox.bottom >= m_lHeight)

  0000f	8b 81 9c 00 00
	00		 mov	 eax, DWORD PTR [ecx+156]
  00015	03 81 94 00 00
	00		 add	 eax, DWORD PTR [ecx+148]
  0001b	3b 41 2c	 cmp	 eax, DWORD PTR [ecx+44]
  0001e	7d 16		 jge	 SHORT $LN5@IsShow
  00020	8b 81 a0 00 00
	00		 mov	 eax, DWORD PTR [ecx+160]
  00026	03 81 98 00 00
	00		 add	 eax, DWORD PTR [ecx+152]
  0002c	3b 41 30	 cmp	 eax, DWORD PTR [ecx+48]
  0002f	0f 9c c0	 setl	 al

; 271  : }

  00032	c3		 ret	 0
$LN4@IsShow:

; 268  : 		}
; 269  : 
; 270  : 	return true;

  00033	b0 01		 mov	 al, 1

; 271  : }

  00035	c3		 ret	 0
$LN5@IsShow:

; 266  : 		{
; 267  : 			return false;

  00036	32 c0		 xor	 al, al

; 271  : }

  00038	c3		 ret	 0
?IsShow@CWindow@UI@@UAE_NXZ ENDP			; UI::CWindow::IsShow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Hide@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
$T2 = -164						; size = 56
$T3 = -108						; size = 12
$T4 = -96						; size = 4
$T5 = -96						; size = 4
$T6 = -89						; size = 1
$T7 = -88						; size = 24
$T8 = -64						; size = 24
$T9 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Hide@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Hide, COMDAT
; _this$ = ecx

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Hide@CWindow@UI@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	33 db		 xor	 ebx, ebx
  00032	89 5d a0	 mov	 DWORD PTR $T4[ebp], ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h

; 139  : 	bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00035	8b 47 78	 mov	 eax, DWORD PTR [edi+120]
  00038	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  0003b	a8 01		 test	 al, 1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 147  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  0003d	74 68		 je	 SHORT $LN5@Hide
  0003f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonConfig@@@@0PAVCPythonConfig@@A ; CSingleton<CPythonConfig>::ms_singleton
  00045	8d 4d a8	 lea	 ecx, DWORD PTR $T7[ebp]
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  0004d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BAAKKIGI@ANIMATION_MODE@
  00057	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  0005a	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0005d	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR $T4[ebp], 1
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	8d 45 a8	 lea	 eax, DWORD PTR $T7[ebp]
  0006c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00073	50		 push	 eax
  00074	8d 45 d8	 lea	 eax, DWORD PTR $T9[ebp]
  00077	c7 45 a0 03 00
	00 00		 mov	 DWORD PTR $T4[ebp], 3
  0007e	50		 push	 eax
  0007f	6a 02		 push	 2
  00081	8d 45 c0	 lea	 eax, DWORD PTR $T8[ebp]
  00084	8b ce		 mov	 ecx, esi
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?GetString@CPythonConfig@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4EClassTypes@1@ABV23@1@Z ; CPythonConfig::GetString
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_01HIHLOKLC@1@
  00091	50		 push	 eax
  00092	bb 07 00 00 00	 mov	 ebx, 7
  00097	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  0009c	83 c4 08	 add	 esp, 8
  0009f	c6 45 a7 01	 mov	 BYTE PTR $T6[ebp], 1
  000a3	84 c0		 test	 al, al
  000a5	75 04		 jne	 SHORT $LN6@Hide
$LN5@Hide:
  000a7	c6 45 a7 00	 mov	 BYTE PTR $T6[ebp], 0
$LN6@Hide:
  000ab	f6 c3 04	 test	 bl, 4
  000ae	74 49		 je	 SHORT $LN25@Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  000b0	8b 4d d4	 mov	 ecx, DWORD PTR $T8[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 147  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  000b3	83 e3 fb	 and	 ebx, -5			; fffffffbH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  000b6	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000b9	72 2c		 jb	 SHORT $LN32@Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	8b 55 c0	 mov	 edx, DWORD PTR $T8[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  000be	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bf	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000c1	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000c7	72 14		 jb	 SHORT $LN42@Hide

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000c9	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000cc	83 c1 23	 add	 ecx, 35			; 00000023H
  000cf	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000d1	83 c0 fc	 add	 eax, -4			; fffffffcH
  000d4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000d7	0f 87 a4 01 00
	00		 ja	 $LN94@Hide
$LN42@Hide:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000dd	51		 push	 ecx
  000de	52		 push	 edx
  000df	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000e4	83 c4 08	 add	 esp, 8
$LN32@Hide:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  000e7	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T8[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  000ee	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000f5	c6 45 c0 00	 mov	 BYTE PTR $T8[ebp], 0
$LN25@Hide:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 147  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  000f9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00100	f6 c3 02	 test	 bl, 2
  00103	74 49		 je	 SHORT $LN53@Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00105	8b 4d ec	 mov	 ecx, DWORD PTR $T9[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 147  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  00108	83 e3 fd	 and	 ebx, -3			; fffffffdH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0010b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0010e	72 2c		 jb	 SHORT $LN60@Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00110	8b 55 d8	 mov	 edx, DWORD PTR $T9[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00113	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00114	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00116	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0011c	72 14		 jb	 SHORT $LN70@Hide

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0011e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00121	83 c1 23	 add	 ecx, 35			; 00000023H
  00124	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00126	83 c0 fc	 add	 eax, -4			; fffffffcH
  00129	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0012c	0f 87 4f 01 00
	00		 ja	 $LN94@Hide
$LN70@Hide:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00132	51		 push	 ecx
  00133	52		 push	 edx
  00134	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00139	83 c4 08	 add	 esp, 8
$LN60@Hide:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  0013c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00143	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0014a	c6 45 d8 00	 mov	 BYTE PTR $T9[ebp], 0
$LN53@Hide:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 147  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  0014e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00155	f6 c3 01	 test	 bl, 1
  00158	74 34		 je	 SHORT $LN87@Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0015a	8b 4d bc	 mov	 ecx, DWORD PTR $T7[ebp+20]
  0015d	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00160	72 2c		 jb	 SHORT $LN87@Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00162	8b 55 a8	 mov	 edx, DWORD PTR $T7[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00165	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00166	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00168	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0016e	72 14		 jb	 SHORT $LN97@Hide

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00170	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00173	83 c1 23	 add	 ecx, 35			; 00000023H
  00176	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00178	83 c0 fc	 add	 eax, -4			; fffffffcH
  0017b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0017e	0f 87 fd 00 00
	00		 ja	 $LN94@Hide
$LN97@Hide:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00184	51		 push	 ecx
  00185	52		 push	 edx
  00186	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0018b	83 c4 08	 add	 esp, 8
$LN87@Hide:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 147  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  0018e	80 7d a7 00	 cmp	 BYTE PTR $T6[ebp], 0
  00192	0f 84 c9 00 00
	00		 je	 $LN2@Hide

; 149  : 		m_sizeAnimation = tweeny::from(1.0f)

  00198	51		 push	 ecx
  00199	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0019f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001a6	50		 push	 eax
  001a7	e8 00 00 00 00	 call	 ??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z ; tweeny::from<float>
  001ac	83 c4 04	 add	 esp, 4
  001af	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  001b6	8b c8		 mov	 ecx, eax
  001b8	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  001bf	e8 00 00 00 00	 call	 ?to@?$tween@M$$V@tweeny@@QAEAAV12@M@Z ; tweeny::tween<float>::to
  001c4	68 8c 00 00 00	 push	 140			; 0000008cH
  001c9	8b c8		 mov	 ecx, eax
  001cb	e8 00 00 00 00	 call	 ??$during@H@?$tween@M$$V@tweeny@@QAEAAV01@H@Z ; tweeny::tween<float>::during<int>
  001d0	0f b6 0d 00 00
	00 00		 movzx	 ecx, BYTE PTR ?cubicOut@easing@tweeny@@2UcubicOutEasing@12@B
  001d7	51		 push	 ecx
  001d8	8b c8		 mov	 ecx, eax
  001da	e8 00 00 00 00	 call	 ??$via@UcubicOutEasing@easing@tweeny@@@?$tween@M$$V@tweeny@@QAEAAV01@UcubicOutEasing@easing@1@@Z ; tweeny::tween<float>::via<tweeny::easing::cubicOutEasing>
  001df	83 ec 28	 sub	 esp, 40			; 00000028H
  001e2	8b d0		 mov	 edx, eax
  001e4	8b cc		 mov	 ecx, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 911  :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  001e6	8d 45 a0	 lea	 eax, DWORD PTR $T5[ebp]
  001e9	50		 push	 eax

; 866  :         _Set(nullptr);

  001ea	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 911  :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  001f1	e8 00 00 00 00	 call	 ??$_Test_callable@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@std@@YA_NABV<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@@Z ; std::_Test_callable<<lambda_4e53bff9a6aeda8ea50dcd08e066d322> >
  001f6	83 c4 04	 add	 esp, 4
  001f9	84 c0		 test	 al, al
  001fb	74 0c		 je	 SHORT $LN108@Hide

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  001fd	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$_Func_impl_no_alloc@V<lambda_4e53bff9a6aeda8ea50dcd08e066d322>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
  00203	89 79 04	 mov	 DWORD PTR [ecx+4], edi

; 921  :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  00206	89 49 24	 mov	 DWORD PTR [ecx+36], ecx
$LN108@Hide:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 149  : 		m_sizeAnimation = tweeny::from(1.0f)

  00209	8b ca		 mov	 ecx, edx
  0020b	e8 00 00 00 00	 call	 ?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z ; tweeny::tween<float>::onStep
  00210	50		 push	 eax
  00211	8d 8f f4 00 00
	00		 lea	 ecx, DWORD PTR [edi+244]
  00217	e8 00 00 00 00	 call	 ??$?4AAV?$tween@M$$V@tweeny@@@?$optional@V?$tween@M$$V@tweeny@@@experimental@std@@QAEAAV012@AAV?$tween@M$$V@tweeny@@@Z ; std::experimental::optional<tweeny::tween<float> >::operator=<tweeny::tween<float> &>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 830  :         _Tidy();

  0021c	8d 4d 84	 lea	 ecx, DWORD PTR $T2[ebp+40]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 149  : 		m_sizeAnimation = tweeny::from(1.0f)

  0021f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 830  :         _Tidy();

  00226	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
  0022b	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp+28]
  00231	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
  00236	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp+12]
  0023c	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Tidy
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 574  :     return initialized() ? contained_val() : (throw bad_optional_access("bad optional access"), contained_val());

  00241	80 bf f4 00 00
	00 00		 cmp	 BYTE PTR [edi+244], 0
  00248	74 3c		 je	 SHORT $LN124@Hide
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 177  : 		m_sizeAnimation.value().step(0.0f);

  0024a	6a 00		 push	 0
  0024c	51		 push	 ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 574  :     return initialized() ? contained_val() : (throw bad_optional_access("bad optional access"), contained_val());

  0024d	8d 8f f8 00 00
	00		 lea	 ecx, DWORD PTR [edi+248]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 177  : 		m_sizeAnimation.value().step(0.0f);

  00253	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  0025a	e8 00 00 00 00	 call	 ?step@?$tween@M$$V@tweeny@@QAEABMM_N@Z ; tweeny::tween<float>::step

; 178  : 	}

  0025f	eb 04		 jmp	 SHORT $LN3@Hide
$LN2@Hide:

; 179  : 	else
; 180  : 	{
; 181  : 		m_bShow = false;

  00261	c6 47 75 00	 mov	 BYTE PTR [edi+117], 0
$LN3@Hide:

; 183  : }

  00265	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00268	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0026f	59		 pop	 ecx
  00270	5f		 pop	 edi
  00271	5e		 pop	 esi
  00272	5b		 pop	 ebx
  00273	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00276	33 cd		 xor	 ecx, ebp
  00278	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0027d	8b e5		 mov	 esp, ebp
  0027f	5d		 pop	 ebp
  00280	c3		 ret	 0
$LN94@Hide:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00281	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN124@Hide:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 574  :     return initialized() ? contained_val() : (throw bad_optional_access("bad optional access"), contained_val());

  00286	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KGBCPEAI@bad?5optional?5access@
  0028b	8d 4d 94	 lea	 ecx, DWORD PTR $T3[ebp]
  0028e	e8 00 00 00 00	 call	 ??0bad_optional_access@experimental@std@@QAE@PBD@Z ; std::experimental::bad_optional_access::bad_optional_access
  00293	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_optional_access@experimental@std@@
  00298	8d 45 94	 lea	 eax, DWORD PTR $T3[ebp]
  0029b	50		 push	 eax
  0029c	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN127@Hide:
  002a1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Hide@CWindow@UI@@QAEXXZ$0:
  00000	8b 45 a0	 mov	 eax, DWORD PTR $T4[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0c 00 00
	00		 je	 $LN8@Hide
  0000c	83 65 a0 fe	 and	 DWORD PTR $T4[ebp], -2	; fffffffeH
  00010	8d 4d a8	 lea	 ecx, DWORD PTR $T7[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@Hide:
  00018	c3		 ret	 0
__unwindfunclet$?Hide@CWindow@UI@@QAEXXZ$1:
  00019	8b 45 a0	 mov	 eax, DWORD PTR $T4[ebp]
  0001c	83 e0 02	 and	 eax, 2
  0001f	0f 84 0c 00 00
	00		 je	 $LN10@Hide
  00025	83 65 a0 fd	 and	 DWORD PTR $T4[ebp], -3	; fffffffdH
  00029	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  0002c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@Hide:
  00031	c3		 ret	 0
__unwindfunclet$?Hide@CWindow@UI@@QAEXXZ$3:
  00032	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00038	e9 00 00 00 00	 jmp	 ??1?$tween@M$$V@tweeny@@QAE@XZ
  0003d	cc		 int	 3
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
  00041	cc		 int	 3
__ehhandler$?Hide@CWindow@UI@@QAEXXZ:
  00042	90		 npad	 1
  00043	90		 npad	 1
  00044	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00048	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004b	8b 8a 58 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-168]
  00051	33 c8		 xor	 ecx, eax
  00053	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00058	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0005b	33 c8		 xor	 ecx, eax
  0005d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00062	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Hide@CWindow@UI@@QAEXXZ
  00067	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Hide@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Hide
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Show@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
$T2 = -164						; size = 56
$T3 = -108						; size = 12
$T4 = -96						; size = 4
$T5 = -96						; size = 4
$T6 = -89						; size = 1
$T7 = -88						; size = 24
$T8 = -64						; size = 24
$T9 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Show@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Show, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Show@CWindow@UI@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	33 db		 xor	 ebx, ebx
  00032	89 5d a0	 mov	 DWORD PTR $T4[ebp], ebx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.h

; 139  : 	bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00035	8b 47 78	 mov	 eax, DWORD PTR [edi+120]
  00038	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  0003b	a8 01		 test	 al, 1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 106  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  0003d	74 68		 je	 SHORT $LN5@Show
  0003f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonConfig@@@@0PAVCPythonConfig@@A ; CSingleton<CPythonConfig>::ms_singleton
  00045	8d 4d a8	 lea	 ecx, DWORD PTR $T7[ebp]
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  0004d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BAAKKIGI@ANIMATION_MODE@
  00057	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  0005a	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0005d	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR $T4[ebp], 1
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	8d 45 a8	 lea	 eax, DWORD PTR $T7[ebp]
  0006c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00073	50		 push	 eax
  00074	8d 45 d8	 lea	 eax, DWORD PTR $T9[ebp]
  00077	c7 45 a0 03 00
	00 00		 mov	 DWORD PTR $T4[ebp], 3
  0007e	50		 push	 eax
  0007f	6a 02		 push	 2
  00081	8d 45 c0	 lea	 eax, DWORD PTR $T8[ebp]
  00084	8b ce		 mov	 ecx, esi
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?GetString@CPythonConfig@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4EClassTypes@1@ABV23@1@Z ; CPythonConfig::GetString
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_01HIHLOKLC@1@
  00091	50		 push	 eax
  00092	bb 07 00 00 00	 mov	 ebx, 7
  00097	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  0009c	83 c4 08	 add	 esp, 8
  0009f	c6 45 a7 01	 mov	 BYTE PTR $T6[ebp], 1
  000a3	84 c0		 test	 al, al
  000a5	75 04		 jne	 SHORT $LN6@Show
$LN5@Show:
  000a7	c6 45 a7 00	 mov	 BYTE PTR $T6[ebp], 0
$LN6@Show:
  000ab	f6 c3 04	 test	 bl, 4
  000ae	74 49		 je	 SHORT $LN25@Show
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  000b0	8b 4d d4	 mov	 ecx, DWORD PTR $T8[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 106  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  000b3	83 e3 fb	 and	 ebx, -5			; fffffffbH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  000b6	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000b9	72 2c		 jb	 SHORT $LN32@Show
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	8b 55 c0	 mov	 edx, DWORD PTR $T8[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  000be	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bf	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000c1	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000c7	72 14		 jb	 SHORT $LN42@Show

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000c9	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000cc	83 c1 23	 add	 ecx, 35			; 00000023H
  000cf	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000d1	83 c0 fc	 add	 eax, -4			; fffffffcH
  000d4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000d7	0f 87 bd 01 00
	00		 ja	 $LN94@Show
$LN42@Show:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000dd	51		 push	 ecx
  000de	52		 push	 edx
  000df	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000e4	83 c4 08	 add	 esp, 8
$LN32@Show:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  000e7	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T8[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  000ee	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000f5	c6 45 c0 00	 mov	 BYTE PTR $T8[ebp], 0
$LN25@Show:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 106  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  000f9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00100	f6 c3 02	 test	 bl, 2
  00103	74 49		 je	 SHORT $LN53@Show
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00105	8b 4d ec	 mov	 ecx, DWORD PTR $T9[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 106  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  00108	83 e3 fd	 and	 ebx, -3			; fffffffdH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0010b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0010e	72 2c		 jb	 SHORT $LN60@Show
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00110	8b 55 d8	 mov	 edx, DWORD PTR $T9[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00113	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00114	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00116	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0011c	72 14		 jb	 SHORT $LN70@Show

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0011e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00121	83 c1 23	 add	 ecx, 35			; 00000023H
  00124	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00126	83 c0 fc	 add	 eax, -4			; fffffffcH
  00129	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0012c	0f 87 68 01 00
	00		 ja	 $LN94@Show
$LN70@Show:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00132	51		 push	 ecx
  00133	52		 push	 edx
  00134	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00139	83 c4 08	 add	 esp, 8
$LN60@Show:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  0013c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00143	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0014a	c6 45 d8 00	 mov	 BYTE PTR $T9[ebp], 0
$LN53@Show:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 106  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  0014e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00155	f6 c3 01	 test	 bl, 1
  00158	74 34		 je	 SHORT $LN87@Show
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0015a	8b 4d bc	 mov	 ecx, DWORD PTR $T7[ebp+20]
  0015d	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00160	72 2c		 jb	 SHORT $LN87@Show
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00162	8b 55 a8	 mov	 edx, DWORD PTR $T7[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00165	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00166	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00168	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0016e	72 14		 jb	 SHORT $LN97@Show

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00170	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00173	83 c1 23	 add	 ecx, 35			; 00000023H
  00176	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00178	83 c0 fc	 add	 eax, -4			; fffffffcH
  0017b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0017e	0f 87 16 01 00
	00		 ja	 $LN94@Show
$LN97@Show:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00184	51		 push	 ecx
  00185	52		 push	 edx
  00186	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0018b	83 c4 08	 add	 esp, 8
$LN87@Show:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 106  : 	if (IsFlag(FLAG_ANIMATED_BOARD) && CPythonConfig::Instance().GetString(CPythonConfig::CLASS_OPTION, "ANIMATION_MODE", "0") == "1")

  0018e	80 7d a7 00	 cmp	 BYTE PTR $T6[ebp], 0
  00192	c6 47 75 01	 mov	 BYTE PTR [edi+117], 1
  00196	0f 84 c7 00 00
	00		 je	 $LN2@Show

; 110  : 		m_sizeAnimation = tweeny::from(0.0f)

  0019c	51		 push	 ecx
  0019d	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  001a3	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  001aa	50		 push	 eax
  001ab	e8 00 00 00 00	 call	 ??$from@M@tweeny@@YA?AV?$tween@M$$V@0@M@Z ; tweeny::from<float>
  001b0	83 c4 04	 add	 esp, 4
  001b3	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  001ba	8b c8		 mov	 ecx, eax
  001bc	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  001c3	e8 00 00 00 00	 call	 ?to@?$tween@M$$V@tweeny@@QAEAAV12@M@Z ; tweeny::tween<float>::to
  001c8	68 36 01 00 00	 push	 310			; 00000136H
  001cd	8b c8		 mov	 ecx, eax
  001cf	e8 00 00 00 00	 call	 ??$during@H@?$tween@M$$V@tweeny@@QAEAAV01@H@Z ; tweeny::tween<float>::during<int>
  001d4	0f b6 0d 00 00
	00 00		 movzx	 ecx, BYTE PTR ?cubicOut@easing@tweeny@@2UcubicOutEasing@12@B
  001db	51		 push	 ecx
  001dc	8b c8		 mov	 ecx, eax
  001de	e8 00 00 00 00	 call	 ??$via@UcubicOutEasing@easing@tweeny@@@?$tween@M$$V@tweeny@@QAEAAV01@UcubicOutEasing@easing@1@@Z ; tweeny::tween<float>::via<tweeny::easing::cubicOutEasing>
  001e3	83 ec 28	 sub	 esp, 40			; 00000028H
  001e6	8b d0		 mov	 edx, eax
  001e8	8b cc		 mov	 ecx, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\functional

; 911  :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  001ea	8d 45 a0	 lea	 eax, DWORD PTR $T5[ebp]
  001ed	50		 push	 eax

; 866  :         _Set(nullptr);

  001ee	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 911  :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  001f5	e8 00 00 00 00	 call	 ??$_Test_callable@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@std@@YA_NABV<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@@Z ; std::_Test_callable<<lambda_3ac3554338970f4f53a10d6f6ce8edc5> >
  001fa	83 c4 04	 add	 esp, 4
  001fd	84 c0		 test	 al, al
  001ff	74 0c		 je	 SHORT $LN108@Show

; 811  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00201	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$_Func_impl_no_alloc@V<lambda_3ac3554338970f4f53a10d6f6ce8edc5>@@_NAAV?$tween@M$$V@tweeny@@M@std@@6B@
  00207	89 79 04	 mov	 DWORD PTR [ecx+4], edi

; 921  :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  0020a	89 49 24	 mov	 DWORD PTR [ecx+36], ecx
$LN108@Show:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 110  : 		m_sizeAnimation = tweeny::from(0.0f)

  0020d	8b ca		 mov	 ecx, edx
  0020f	e8 00 00 00 00	 call	 ?onStep@?$tween@M$$V@tweeny@@QAEAAV12@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@Z ; tweeny::tween<float>::onStep
  00214	50		 push	 eax
  00215	8d 8f f4 00 00
	00		 lea	 ecx, DWORD PTR [edi+244]
  0021b	e8 00 00 00 00	 call	 ??$?4AAV?$tween@M$$V@tweeny@@@?$optional@V?$tween@M$$V@tweeny@@@experimental@std@@QAEAAV012@AAV?$tween@M$$V@tweeny@@@Z ; std::experimental::optional<tweeny::tween<float> >::operator=<tweeny::tween<float> &>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 830  :         _Tidy();

  00220	8d 4d 84	 lea	 ecx, DWORD PTR $T2[ebp+40]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 110  : 		m_sizeAnimation = tweeny::from(0.0f)

  00223	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 830  :         _Tidy();

  0022a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
  0022f	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp+28]
  00235	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
  0023a	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp+12]
  00240	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Tidy
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 574  :     return initialized() ? contained_val() : (throw bad_optional_access("bad optional access"), contained_val());

  00245	80 bf f4 00 00
	00 00		 cmp	 BYTE PTR [edi+244], 0
  0024c	74 31		 je	 SHORT $LN124@Show
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 137  : 		m_sizeAnimation.value().step(0.0f);

  0024e	6a 00		 push	 0
  00250	51		 push	 ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 574  :     return initialized() ? contained_val() : (throw bad_optional_access("bad optional access"), contained_val());

  00251	8d 8f f8 00 00
	00		 lea	 ecx, DWORD PTR [edi+248]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 137  : 		m_sizeAnimation.value().step(0.0f);

  00257	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  0025e	e8 00 00 00 00	 call	 ?step@?$tween@M$$V@tweeny@@QAEABMM_N@Z ; tweeny::tween<float>::step
$LN2@Show:

; 143  : }

  00263	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00266	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0026d	59		 pop	 ecx
  0026e	5f		 pop	 edi
  0026f	5e		 pop	 esi
  00270	5b		 pop	 ebx
  00271	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00274	33 cd		 xor	 ecx, ebp
  00276	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0027b	8b e5		 mov	 esp, ebp
  0027d	5d		 pop	 ebp
  0027e	c3		 ret	 0
$LN124@Show:
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 574  :     return initialized() ? contained_val() : (throw bad_optional_access("bad optional access"), contained_val());

  0027f	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KGBCPEAI@bad?5optional?5access@
  00284	8d 4d 94	 lea	 ecx, DWORD PTR $T3[ebp]
  00287	e8 00 00 00 00	 call	 ??0bad_optional_access@experimental@std@@QAE@PBD@Z ; std::experimental::bad_optional_access::bad_optional_access
  0028c	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_optional_access@experimental@std@@
  00291	8d 45 94	 lea	 eax, DWORD PTR $T3[ebp]
  00294	50		 push	 eax
  00295	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN94@Show:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0029a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN127@Show:
  0029f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Show@CWindow@UI@@QAEXXZ$0:
  00000	8b 45 a0	 mov	 eax, DWORD PTR $T4[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0c 00 00
	00		 je	 $LN8@Show
  0000c	83 65 a0 fe	 and	 DWORD PTR $T4[ebp], -2	; fffffffeH
  00010	8d 4d a8	 lea	 ecx, DWORD PTR $T7[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@Show:
  00018	c3		 ret	 0
__unwindfunclet$?Show@CWindow@UI@@QAEXXZ$1:
  00019	8b 45 a0	 mov	 eax, DWORD PTR $T4[ebp]
  0001c	83 e0 02	 and	 eax, 2
  0001f	0f 84 0c 00 00
	00		 je	 $LN10@Show
  00025	83 65 a0 fd	 and	 DWORD PTR $T4[ebp], -3	; fffffffdH
  00029	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  0002c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@Show:
  00031	c3		 ret	 0
__unwindfunclet$?Show@CWindow@UI@@QAEXXZ$3:
  00032	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00038	e9 00 00 00 00	 jmp	 ??1?$tween@M$$V@tweeny@@QAE@XZ
  0003d	cc		 int	 3
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
  00041	cc		 int	 3
__ehhandler$?Show@CWindow@UI@@QAEXXZ:
  00042	90		 npad	 1
  00043	90		 npad	 1
  00044	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00048	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004b	8b 8a 58 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-168]
  00051	33 c8		 xor	 ecx, eax
  00053	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00058	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0005b	33 c8		 xor	 ecx, eax
  0005d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00062	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Show@CWindow@UI@@QAEXXZ
  00067	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Show@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Show
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?UpdateRect@CWindow@UI@@QAEJXZ
_TEXT	SEGMENT
?UpdateRect@CWindow@UI@@QAEJXZ PROC			; UI::CWindow::UpdateRect, COMDAT
; _this$ = ecx

; 447  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 448  : 	m_rect.top		= m_y;
; 449  : 	if (m_pParent)

  00005	8b b7 80 00 00
	00		 mov	 esi, DWORD PTR [edi+128]
  0000b	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  0000e	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
  00011	85 f6		 test	 esi, esi
  00013	74 2f		 je	 SHORT $LN6@UpdateRect

; 450  : 	{
; 451  : 		switch (m_VerticalAlign)

  00015	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00018	83 e8 01	 sub	 eax, 1
  0001b	74 11		 je	 SHORT $LN8@UpdateRect
  0001d	83 e8 01	 sub	 eax, 1
  00020	75 1c		 jne	 SHORT $LN2@UpdateRect

; 452  : 		{
; 453  : 		case VERTICAL_ALIGN_BOTTOM:
; 454  : 			m_rect.top = m_pParent->GetHeight() - m_rect.top;

  00022	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00025	2b c1		 sub	 eax, ecx
  00027	89 47 38	 mov	 DWORD PTR [edi+56], eax
  0002a	8b c8		 mov	 ecx, eax

; 455  : 			break;

  0002c	eb 10		 jmp	 SHORT $LN2@UpdateRect
$LN8@UpdateRect:

; 456  : 		case VERTICAL_ALIGN_CENTER:
; 457  : 			m_rect.top = (m_pParent->GetHeight() - GetHeight()) / 2 + m_rect.top;

  0002e	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00031	2b 47 30	 sub	 eax, DWORD PTR [edi+48]
  00034	99		 cdq
  00035	2b c2		 sub	 eax, edx
  00037	d1 f8		 sar	 eax, 1
  00039	03 c8		 add	 ecx, eax
  0003b	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
$LN2@UpdateRect:

; 458  : 			break;
; 459  : 		}
; 460  : 		m_rect.top += m_pParent->m_rect.top;

  0003e	03 4e 38	 add	 ecx, DWORD PTR [esi+56]
  00041	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
$LN6@UpdateRect:

; 461  : 	}
; 462  : 	m_rect.bottom	= m_rect.top + m_lHeight;

  00044	8b 47 30	 mov	 eax, DWORD PTR [edi+48]

; 463  : 
; 464  : #if defined( _USE_CPP_RTL_FLIP )
; 465  : 	if ( m_pParent == NULL )
; 466  : 	{
; 467  : 		m_rect.left		= m_x;
; 468  : 		m_rect.right	= m_rect.left + m_lWidth;
; 469  : 	}
; 470  : 	else
; 471  : 	{
; 472  : 		if ( m_pParent->IsFlag(UI::CWindow::FLAG_RTL) == true )
; 473  : 		{
; 474  : 			m_rect.left = m_pParent->GetWidth() - m_lWidth - m_x;
; 475  : 			switch (m_HorizontalAlign)
; 476  : 			{
; 477  : 			case HORIZONTAL_ALIGN_RIGHT:
; 478  : 				m_rect.left = - m_x;
; 479  : 				break;
; 480  : 			case HORIZONTAL_ALIGN_CENTER:
; 481  : 				m_rect.left = m_pParent->GetWidth() / 2 - GetWidth() - m_x;
; 482  : 				break;
; 483  : 			}
; 484  : 			m_rect.left += m_pParent->m_rect.left;
; 485  : 			m_rect.right = m_rect.left + m_lWidth;
; 486  : 		}
; 487  : 		else
; 488  : 		{
; 489  : 			m_rect.left		= m_x;
; 490  : 			switch (m_HorizontalAlign)
; 491  : 			{
; 492  : 			case HORIZONTAL_ALIGN_RIGHT:
; 493  : 				m_rect.left = m_pParent->GetWidth() - m_rect.left;
; 494  : 				break;
; 495  : 			case HORIZONTAL_ALIGN_CENTER:
; 496  : 				m_rect.left = (m_pParent->GetWidth() - GetWidth()) / 2 + m_rect.left;
; 497  : 				break;
; 498  : 			}
; 499  : 			m_rect.left += m_pParent->m_rect.left;
; 500  : 			m_rect.right = m_rect.left + m_lWidth;
; 501  : 		}
; 502  : 	}
; 503  : #else
; 504  : 	m_rect.left		= m_x;

  00047	8b 5f 24	 mov	 ebx, DWORD PTR [edi+36]
  0004a	03 c1		 add	 eax, ecx
  0004c	89 47 40	 mov	 DWORD PTR [edi+64], eax
  0004f	89 5f 34	 mov	 DWORD PTR [edi+52], ebx

; 505  : 	if (m_pParent)

  00052	85 f6		 test	 esi, esi
  00054	74 50		 je	 SHORT $LN9@UpdateRect

; 506  : 	{
; 507  : 		switch (m_HorizontalAlign)

  00056	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00059	83 e8 01	 sub	 eax, 1
  0005c	74 16		 je	 SHORT $LN11@UpdateRect
  0005e	83 e8 01	 sub	 eax, 1
  00061	75 2a		 jne	 SHORT $LN4@UpdateRect
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h

; 365  :         return labs(_X);

  00063	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00066	99		 cdq
  00067	33 c2		 xor	 eax, edx
  00069	2b c2		 sub	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 510  : 			m_rect.left = ::abs(m_pParent->GetWidth()) - m_rect.left;

  0006b	2b c3		 sub	 eax, ebx
  0006d	89 47 34	 mov	 DWORD PTR [edi+52], eax
  00070	8b d8		 mov	 ebx, eax

; 511  : 			break;

  00072	eb 19		 jmp	 SHORT $LN4@UpdateRect
$LN11@UpdateRect:

; 512  : 		case HORIZONTAL_ALIGN_CENTER:
; 513  : 			m_rect.left = m_pParent->GetWidth() / 2 - GetWidth() / 2 + m_rect.left;

  00074	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00077	99		 cdq
  00078	2b c2		 sub	 eax, edx
  0007a	8b c8		 mov	 ecx, eax
  0007c	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  0007f	99		 cdq
  00080	2b c2		 sub	 eax, edx
  00082	d1 f9		 sar	 ecx, 1
  00084	d1 f8		 sar	 eax, 1
  00086	2b c8		 sub	 ecx, eax
  00088	03 d9		 add	 ebx, ecx
  0008a	89 5f 34	 mov	 DWORD PTR [edi+52], ebx
$LN4@UpdateRect:

; 516  : 		m_rect.left += 0L < m_pParent->GetWidth() ? m_pParent->m_rect.left : m_pParent->m_rect.right + ::abs(m_pParent->GetWidth());

  0008d	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00090	85 c0		 test	 eax, eax
  00092	7e 05		 jle	 SHORT $LN13@UpdateRect
  00094	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00097	eb 08		 jmp	 SHORT $LN14@UpdateRect
$LN13@UpdateRect:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h

; 365  :         return labs(_X);

  00099	99		 cdq
  0009a	33 c2		 xor	 eax, edx
  0009c	2b c2		 sub	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 516  : 		m_rect.left += 0L < m_pParent->GetWidth() ? m_pParent->m_rect.left : m_pParent->m_rect.right + ::abs(m_pParent->GetWidth());

  0009e	03 46 3c	 add	 eax, DWORD PTR [esi+60]
$LN14@UpdateRect:
  000a1	03 d8		 add	 ebx, eax
  000a3	89 5f 34	 mov	 DWORD PTR [edi+52], ebx
$LN9@UpdateRect:

; 517  : 	}
; 518  : 	m_rect.right = m_rect.left + m_lWidth;

  000a6	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  000a9	03 c3		 add	 eax, ebx
  000ab	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000ae	8b 9f 84 00 00
	00		 mov	 ebx, DWORD PTR [edi+132]
  000b4	8b 33		 mov	 esi, DWORD PTR [ebx]

; 73   :         return _Ptr == _Right._Ptr;

  000b6	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  000b8	74 14		 je	 SHORT $LN37@UpdateRect
  000ba	66 0f 1f 44 00
	00		 npad	 6
$LL47@UpdateRect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1578 :         return ((*static_cast<_Ty1&&>(_Arg1)).*_Obj)(static_cast<_Types2&&>(_Args2)...);

  000c0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000c3	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 51   :         _Ptr = _Ptr->_Next;

  000c8	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  000ca	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  000cc	75 f2		 jne	 SHORT $LL47@UpdateRect
$LN37@UpdateRect:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 522  : 	OnChangePosition();

  000ce	8b 07		 mov	 eax, DWORD PTR [edi]
  000d0	8b cf		 mov	 ecx, edi
  000d2	ff 50 1c	 call	 DWORD PTR [eax+28]

; 523  : 
; 524  : 	return 1;

  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	b8 01 00 00 00	 mov	 eax, 1
  000dc	5b		 pop	 ebx

; 525  : }

  000dd	c3		 ret	 0
?UpdateRect@CWindow@UI@@QAEJXZ ENDP			; UI::CWindow::UpdateRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z
_TEXT	SEGMENT
_rlx$ = 8						; size = 4
_rly$ = 12						; size = 4
?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z PROC	; UI::CWindow::GetMouseLocalPosition, COMDAT
; _this$ = ecx

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 535  : 	CWindowManager::Instance().GetMousePosition(rlx, rly);

  00005	8b 75 08	 mov	 esi, DWORD PTR _rlx$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR _rly$[ebp]
  00014	57		 push	 edi
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 536  : 	rlx = rlx - m_rect.left;

  0001b	8b 43 34	 mov	 eax, DWORD PTR [ebx+52]
  0001e	29 06		 sub	 DWORD PTR [esi], eax

; 537  : 	rly = rly - m_rect.top;

  00020	8b 43 38	 mov	 eax, DWORD PTR [ebx+56]
  00023	29 07		 sub	 DWORD PTR [edi], eax
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx

; 538  : }

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ENDP	; UI::CWindow::GetMouseLocalPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z
_TEXT	SEGMENT
_rlx$ = 8						; size = 4
_rly$ = 12						; size = 4
?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z PROC		; UI::CWindow::GetLocalPosition, COMDAT
; _this$ = ecx

; 528  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 529  : 	rlx = rlx - m_rect.left;

  00003	8b 45 08	 mov	 eax, DWORD PTR _rlx$[ebp]
  00006	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00009	29 10		 sub	 DWORD PTR [eax], edx

; 530  : 	rly = rly - m_rect.top;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rly$[ebp]
  0000e	8b 49 38	 mov	 ecx, DWORD PTR [ecx+56]
  00011	29 08		 sub	 DWORD PTR [eax], ecx

; 531  : }

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z ENDP		; UI::CWindow::GetLocalPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetPosition@CWindow@UI@@QAEXPAJ0@Z
_TEXT	SEGMENT
_plx$ = 8						; size = 4
_ply$ = 12						; size = 4
?GetPosition@CWindow@UI@@QAEXPAJ0@Z PROC		; UI::CWindow::GetPosition, COMDAT
; _this$ = ecx

; 441  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 442  : 	*plx = m_x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _plx$[ebp]
  00006	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00009	89 10		 mov	 DWORD PTR [eax], edx

; 443  : 	*ply = m_y;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _ply$[ebp]
  0000e	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00011	89 08		 mov	 DWORD PTR [eax], ecx

; 444  : }

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetPosition@CWindow@UI@@QAEXPAJ0@Z ENDP		; UI::CWindow::GetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetPosition@CWindow@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetPosition@CWindow@UI@@QAEXJJ@Z PROC			; UI::CWindow::SetPosition, COMDAT
; _this$ = ecx

; 416  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 417  : 	m_x = x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	89 46 24	 mov	 DWORD PTR [esi+36], eax

; 418  : 	m_y = y;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0000f	89 46 28	 mov	 DWORD PTR [esi+40], eax

; 419  : 
; 420  : 	UpdateRect();

  00012	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 421  : #ifdef INGAME_WIKI
; 422  : 	if (m_isInsideRender)

  00017	83 be 90 00 00
	00 00		 cmp	 DWORD PTR [esi+144], 0
  0001e	74 07		 je	 SHORT $LN2@SetPositio

; 423  : 	{
; 424  : 		UpdateRenderBoxRecursive();

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?UpdateRenderBoxRecursive@CWindow@UI@@QAEXXZ ; UI::CWindow::UpdateRenderBoxRecursive
$LN2@SetPositio:
  00027	5e		 pop	 esi

; 425  : 	}
; 426  : #endif
; 427  : }

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?SetPosition@CWindow@UI@@QAEXJJ@Z ENDP			; UI::CWindow::SetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetVerticalAlign@CWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwAlign$ = 8						; size = 4
?SetVerticalAlign@CWindow@UI@@QAEXK@Z PROC		; UI::CWindow::SetVerticalAlign, COMDAT
; _this$ = ecx

; 410  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 411  : 	m_VerticalAlign = (EVerticalAlign)dwAlign;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwAlign$[ebp]
  00006	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 412  : 	UpdateRect();

  00009	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 413  : }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?SetVerticalAlign@CWindow@UI@@QAEXK@Z ENDP		; UI::CWindow::SetVerticalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwAlign$ = 8						; size = 4
?SetHorizontalAlign@CWindow@UI@@QAEXK@Z PROC		; UI::CWindow::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 404  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 405  : 	m_HorizontalAlign = (EHorizontalAlign)dwAlign;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwAlign$[ebp]
  00006	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 406  : 	UpdateRect();

  00009	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 407  : }

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?SetHorizontalAlign@CWindow@UI@@QAEXK@Z ENDP		; UI::CWindow::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSize@CWindow@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?SetSize@CWindow@UI@@QAEXJJ@Z PROC			; UI::CWindow::SetSize, COMDAT
; _this$ = ecx

; 389  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 390  : 	m_lWidth = width;

  00003	8b 55 08	 mov	 edx, DWORD PTR _width$[ebp]

; 391  : 	m_lHeight = height;
; 392  : 
; 393  : 	m_rect.right = m_rect.left + m_lWidth;

  00006	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  00009	03 c2		 add	 eax, edx
  0000b	89 51 2c	 mov	 DWORD PTR [ecx+44], edx
  0000e	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 394  : 	m_rect.bottom = m_rect.top + m_lHeight;

  00011	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _height$[ebp]
  00018	03 c6		 add	 eax, esi

; 395  : #ifdef INGAME_WIKI
; 396  : 	if (m_isInsideRender)

  0001a	83 b9 90 00 00
	00 00		 cmp	 DWORD PTR [ecx+144], 0
  00021	89 71 30	 mov	 DWORD PTR [ecx+48], esi
  00024	89 41 40	 mov	 DWORD PTR [ecx+64], eax
  00027	5e		 pop	 esi
  00028	74 05		 je	 SHORT $LN2@SetSize

; 397  : 	{
; 398  : 		UpdateRenderBoxRecursive();

  0002a	e8 00 00 00 00	 call	 ?UpdateRenderBoxRecursive@CWindow@UI@@QAEXXZ ; UI::CWindow::UpdateRenderBoxRecursive
$LN2@SetSize:

; 399  : 	}
; 400  : #endif
; 401  : }

  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?SetSize@CWindow@UI@@QAEXJJ@Z ENDP			; UI::CWindow::SetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetName@CWindow@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szName$ = 8						; size = 4
?SetName@CWindow@UI@@QAEXPBD@Z PROC			; UI::CWindow::SetName, COMDAT
; _this$ = ecx

; 384  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szName$[ebp]
  00006	8b c2		 mov	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 384  : {

  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000f	90		 npad	 1
$LL9@SetName:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL9@SetName
  00017	2b c7		 sub	 eax, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 385  : 	m_strName = c_szName;

  00019	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3549 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 386  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetName@CWindow@UI@@QAEXPBD@Z ENDP			; UI::CWindow::SetName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathConvert.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathConvert.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathConvert.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CWindow@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetScale@CWindow@UI@@QAEXMM@Z PROC			; UI::CWindow::SetScale, COMDAT
; _this$ = ecx

; 308  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 309  : 	m_v2Scale.x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	f3 0f 11 86 ac
	00 00 00	 movss	 DWORD PTR [esi+172], xmm0

; 310  : 	m_v2Scale.y = fy;

  00013	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00018	f3 0f 11 86 b0
	00 00 00	 movss	 DWORD PTR [esi+176], xmm0

; 311  : 	UpdateRect();

  00020	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 315  : 	XMFLOAT2 vCenter(m_x + (m_lWidth / 2), m_y + (m_lHeight / 2));

  00025	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00028	0f 57 ed	 xorps	 xmm5, xmm5
  0002b	99		 cdq
  0002c	0f 57 e4	 xorps	 xmm4, xmm4
  0002f	2b c2		 sub	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathConvert.inl

; 333  :     return _mm_castpd_ps(_mm_load_sd(reinterpret_cast<const double*>(pSource)));

  00031	f2 0f 10 96 ac
	00 00 00	 movsd	 xmm2, QWORD PTR [esi+172]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 315  : 	XMFLOAT2 vCenter(m_x + (m_lWidth / 2), m_y + (m_lHeight / 2));

  00039	d1 f8		 sar	 eax, 1
  0003b	03 46 24	 add	 eax, DWORD PTR [esi+36]
  0003e	66 0f 6e c8	 movd	 xmm1, eax
  00042	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00045	99		 cdq
  00046	2b c2		 sub	 eax, edx
  00048	d1 f8		 sar	 eax, 1
  0004a	03 46 28	 add	 eax, DWORD PTR [esi+40]
  0004d	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00050	66 0f 6e c0	 movd	 xmm0, eax
  00054	0f 5b c0	 cvtdq2ps xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathConvert.inl

; 333  :     return _mm_castpd_ps(_mm_load_sd(reinterpret_cast<const double*>(pSource)));

  00057	0f 14 c8	 unpcklps xmm1, xmm0
  0005a	0f 57 c0	 xorps	 xmm0, xmm0
  0005d	f2 0f 10 c1	 movsd	 xmm0, xmm1
  00061	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 316  : 	XMStoreFloat4x4((XMFLOAT4X4*)&m_matScaling, XMMatrixTransformation2D(XMLoadFloat2((XMFLOAT2*)&vCenter), NULL, XMLoadFloat2((XMFLOAT2*)&m_v2Scale), XMLoadFloat2((XMFLOAT2*)&vCenter), NULL, XMVectorZero()));

  00064	0f 28 d8	 movaps	 xmm3, xmm0
  00067	e8 00 00 00 00	 call	 ?XMMatrixTransformation2D@DirectX@UI@@YQ?AUXMMATRIX@12@T__m128@2@M00M0@Z ; UI::DirectX::XMMatrixTransformation2D
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directxmath\DirectXMathConvert.inl

; 2129 :     _mm_storeu_ps(&pDestination->_11, M.r[0]);

  0006c	0f 11 86 b4 00
	00 00		 movups	 XMMWORD PTR [esi+180], xmm0

; 2130 :     _mm_storeu_ps(&pDestination->_21, M.r[1]);

  00073	0f 11 8e c4 00
	00 00		 movups	 XMMWORD PTR [esi+196], xmm1

; 2131 :     _mm_storeu_ps(&pDestination->_31, M.r[2]);

  0007a	0f 11 96 d4 00
	00 00		 movups	 XMMWORD PTR [esi+212], xmm2

; 2132 :     _mm_storeu_ps(&pDestination->_41, M.r[3]);

  00081	0f 11 9e e4 00
	00 00		 movups	 XMMWORD PTR [esi+228], xmm3
  00088	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 317  : }

  00089	5d		 pop	 ebp
  0008a	c2 08 00	 ret	 8
?SetScale@CWindow@UI@@QAEXMM@Z ENDP			; UI::CWindow::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Render@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
_newMat$ = -132						; size = 64
_currentMat$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
?Render@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Render, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	57		 push	 edi
  00014	8b f9		 mov	 edi, ecx

; 276  : 	if (!IsShow())

  00016	8b 07		 mov	 eax, DWORD PTR [edi]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	ff d0		 call	 eax
  0001d	84 c0		 test	 al, al
  0001f	0f 84 06 01 00
	00		 je	 $LN1@Render

; 277  : 	{
; 278  : 		return;
; 279  : 	}
; 280  : 
; 281  : 	OnRender();

  00025	8b 07		 mov	 eax, DWORD PTR [edi]
  00027	8b cf		 mov	 ecx, edi
  00029	ff 50 08	 call	 DWORD PTR [eax+8]

; 282  : 
; 283  : 	D3DXMATRIX currentMat;
; 284  : 	STATEMANAGER.GetTransform(D3DTS_WORLD, &currentMat);

  0002c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00032	8d 45 bc	 lea	 eax, DWORD PTR _currentMat$[ebp]
  00035	50		 push	 eax
  00036	68 00 01 00 00	 push	 256			; 00000100H
  0003b	e8 00 00 00 00	 call	 ?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ; CStateManager::GetTransform

; 285  : 
; 286  : 	D3DXMATRIX newMat;
; 287  : 	D3DXMatrixMultiply(&newMat, &currentMat, &m_matScaling);

  00040	8d 87 b4 00 00
	00		 lea	 eax, DWORD PTR [edi+180]
  00046	50		 push	 eax
  00047	8d 45 bc	 lea	 eax, DWORD PTR _currentMat$[ebp]
  0004a	50		 push	 eax
  0004b	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _newMat$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12

; 288  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &newMat);

  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005d	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _newMat$[ebp]
  00063	50		 push	 eax
  00064	68 00 01 00 00	 push	 256			; 00000100H
  00069	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 289  : 
; 290  : 	if (g_bOutlineBoxEnable)

  0006e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_bOutlineBoxEnable@@3HA, 0 ; g_bOutlineBoxEnable
  00075	74 7a		 je	 SHORT $LN3@Render

; 291  : 	{
; 292  : 		CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f);

  00077	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0007d	83 ec 10	 sub	 esp, 16			; 00000010H
  00080	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00088	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00090	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00098	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0009f	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor
  000a4	66 0f 6e 47 40	 movd	 xmm0, DWORD PTR [edi+64]

; 293  : 		CPythonGraphic::Instance().RenderBox2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  000a9	83 ec 14	 sub	 esp, 20			; 00000014H
  000ac	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  000b5	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  000bd	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000c3	66 0f 6e 47 3c	 movd	 xmm0, DWORD PTR [edi+60]
  000c8	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000cb	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000d1	66 0f 6e 47 38	 movd	 xmm0, DWORD PTR [edi+56]
  000d6	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000d9	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000df	66 0f 6e 47 34	 movd	 xmm0, DWORD PTR [edi+52]
  000e4	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ec	e8 00 00 00 00	 call	 ?RenderBox2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBox2d
$LN3@Render:
  000f1	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000f2	8b 9f 84 00 00
	00		 mov	 ebx, DWORD PTR [edi+132]
  000f8	56		 push	 esi
  000f9	8b 33		 mov	 esi, DWORD PTR [ebx]

; 73   :         return _Ptr == _Right._Ptr;

  000fb	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  000fd	74 0f		 je	 SHORT $LN27@Render
  000ff	90		 npad	 1
$LL37@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits

; 1578 :         return ((*static_cast<_Ty1&&>(_Arg1)).*_Obj)(static_cast<_Types2&&>(_Args2)...);

  00100	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00103	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 51   :         _Ptr = _Ptr->_Next;

  00108	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  0010a	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0010c	75 f2		 jne	 SHORT $LL37@Render
$LN27@Render:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 298  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &currentMat);

  0010e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00114	8d 45 bc	 lea	 eax, DWORD PTR _currentMat$[ebp]
  00117	50		 push	 eax
  00118	68 00 01 00 00	 push	 256			; 00000100H
  0011d	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 299  : 
; 300  : #ifdef INGAME_WIKI
; 301  : 	OnAfterRender();

  00122	8b 07		 mov	 eax, DWORD PTR [edi]
  00124	8b cf		 mov	 ecx, edi
  00126	ff 50 0c	 call	 DWORD PTR [eax+12]
  00129	5e		 pop	 esi
  0012a	5b		 pop	 ebx
$LN1@Render:

; 302  : #endif
; 303  : 
; 304  : }

  0012b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012e	33 cd		 xor	 ecx, ebp
  00130	5f		 pop	 edi
  00131	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
?Render@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Update@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Update@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Update, COMDAT
; _this$ = ecx

; 229  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 230  : 	if (!IsShow())

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00008	ff d0		 call	 eax
  0000a	84 c0		 test	 al, al
  0000c	0f 84 9d 00 00
	00		 je	 $LN1@Update

; 231  : 	{
; 232  : 		return;
; 233  : 	}
; 234  : 
; 235  : 	__RemoveReserveChildren();

  00012	56		 push	 esi
  00013	8b cf		 mov	 ecx, edi
  00015	e8 00 00 00 00	 call	 ?__RemoveReserveChildren@CWindow@UI@@QAEXXZ ; UI::CWindow::__RemoveReserveChildren

; 236  : 
; 237  : 	OnUpdate();

  0001a	8b 07		 mov	 eax, DWORD PTR [edi]
  0001c	8b cf		 mov	 ecx, edi
  0001e	ff 50 14	 call	 DWORD PTR [eax+20]

; 238  : 
; 239  : 	if (m_sizeAnimation)

  00021	80 bf f4 00 00
	00 00		 cmp	 BYTE PTR [edi+244], 0
  00028	74 47		 je	 SHORT $LN6@Update

; 240  : 	{
; 241  : 		m_sizeAnimation.value().step(static_cast<uint32_t>(CTimer::instance().GetElapsedMilliecond()));

  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00030	e8 00 00 00 00	 call	 ?GetElapsedMilliecond@CTimer@@QAEKXZ ; CTimer::GetElapsedMilliecond
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\tweeny-3.2.0.h

; 2370 :         return step(static_cast<float>(dt)/static_cast<float>(total), suppress);

  00035	6a 00		 push	 0
  00037	51		 push	 ecx
  00038	8d 8f f8 00 00
	00		 lea	 ecx, DWORD PTR [edi+248]
  0003e	66 0f 6e c8	 movd	 xmm1, eax
  00042	8b 87 f8 00 00
	00		 mov	 eax, DWORD PTR [edi+248]
  00048	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0004b	66 0f 6e c0	 movd	 xmm0, eax
  0004f	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00053	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00056	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0005f	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00063	f3 0f 5e c8	 divss	 xmm1, xmm0
  00067	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0006c	e8 00 00 00 00	 call	 ?step@?$tween@M$$V@tweeny@@QAEABMM_N@Z ; tweeny::tween<float>::step
$LN6@Update:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 244  : 	m_isUpdatingChildren = TRUE;

  00071	c7 87 8c 00 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+140], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1087 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0007b	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00081	8b 08		 mov	 ecx, DWORD PTR [eax]
  00083	3b c8		 cmp	 ecx, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 246  : 	for (it = m_pChildList.begin(); it != m_pChildList.end();)

  00085	74 1d		 je	 SHORT $LN3@Update
  00087	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL2@Update:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00090	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 250  : 		(*it)->Update();

  00092	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00095	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 251  : 		it = it_next;

  0009a	8b ce		 mov	 ecx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 198  :         return this->_Ptr == _Right._Ptr;

  0009c	3b b7 84 00 00
	00		 cmp	 esi, DWORD PTR [edi+132]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 246  : 	for (it = m_pChildList.begin(); it != m_pChildList.end();)

  000a2	75 ec		 jne	 SHORT $LL2@Update
$LN3@Update:

; 252  : 	}
; 253  : 	m_isUpdatingChildren = FALSE;

  000a4	c7 87 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+140], 0
  000ae	5e		 pop	 esi
$LN1@Update:

; 254  : }

  000af	5f		 pop	 edi
  000b0	c3		 ret	 0
?Update@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DestroyHandle@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?DestroyHandle@CWindow@UI@@QAEXXZ PROC			; UI::CWindow::DestroyHandle, COMDAT
; _this$ = ecx

; 101  : 	m_poHandler = NULL;

  00000	c7 41 7c 00 00
	00 00		 mov	 DWORD PTR [ecx+124], 0

; 102  : }

  00007	c3		 ret	 0
?DestroyHandle@CWindow@UI@@QAEXXZ ENDP			; UI::CWindow::DestroyHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Clear@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Clear@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Clear, COMDAT
; _this$ = ecx

; 90   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 9f 84 00 00
	00		 mov	 ebx, DWORD PTR [edi+132]
  0000b	8b 33		 mov	 esi, DWORD PTR [ebx]

; 73   :         return _Ptr == _Right._Ptr;

  0000d	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000f	74 0e		 je	 SHORT $LN21@Clear
$LL31@Clear:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 85   : 		pWin->Clear();

  00011	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00014	e8 00 00 00 00	 call	 ?Clear@CWindow@UI@@QAEXXZ ; UI::CWindow::Clear
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 51   :         _Ptr = _Ptr->_Next;

  00019	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  0001b	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001d	75 f2		 jne	 SHORT $LL31@Clear
$LN21@Clear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1487 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  0001f	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]

; 325  :         _Head->_Prev->_Next = nullptr;

  00025	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00028	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  0002e	8b 01		 mov	 eax, DWORD PTR [ecx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00030	85 c0		 test	 eax, eax
  00032	74 13		 je	 SHORT $LN58@Clear
$LL59@Clear:

; 329  :             _Pnext = _Pnode->_Next;

  00034	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00036	6a 0c		 push	 12			; 0000000cH
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00041	8b c6		 mov	 eax, esi
  00043	85 f6		 test	 esi, esi
  00045	75 ed		 jne	 SHORT $LL59@Clear
$LN58@Clear:

; 1488 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00047	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 95   : 	DestroyHandle();

  0004d	8b cf		 mov	 ecx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1488 :         _My_data._Myhead->_Next = _My_data._Myhead;

  0004f	89 00		 mov	 DWORD PTR [eax], eax

; 1489 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  00051	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  00057	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1490 :         _My_data._Mysize        = 0;

  0005a	c7 87 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+136], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 94   : 	m_pParent = NULL;

  00064	c7 87 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+128], 0

; 95   : 	DestroyHandle();

  0006e	e8 00 00 00 00	 call	 ?DestroyHandle@CWindow@UI@@QAEXXZ ; UI::CWindow::DestroyHandle

; 96   : 	Hide();

  00073	8b cf		 mov	 ecx, edi
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	e9 00 00 00 00	 jmp	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
?Clear@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?AddChild@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?AddChild@CWindow@UI@@QAEXPAV12@@Z PROC			; UI::CWindow::AddChild, COMDAT
; _this$ = ecx

; 541  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 542  : 	m_pChildList.push_back(pWin);

  00006	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  00009	50		 push	 eax
  0000a	8d 8e 84 00 00
	00		 lea	 ecx, DWORD PTR [esi+132]
  00010	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 543  : 	pWin->m_pParent = this;

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _pWin$[ebp]
  00018	89 b1 80 00 00
	00		 mov	 DWORD PTR [ecx+128], esi

; 544  : #ifdef INGAME_WIKI
; 545  : 	if (m_isInsideRender && !pWin->m_isInsideRender)

  0001e	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  00024	5e		 pop	 esi
  00025	85 c0		 test	 eax, eax
  00027	74 12		 je	 SHORT $LN2@AddChild
  00029	83 b9 90 00 00
	00 00		 cmp	 DWORD PTR [ecx+144], 0
  00030	75 09		 jne	 SHORT $LN2@AddChild

; 546  : 	{
; 547  : 		pWin->SetInsideRender(m_isInsideRender);

  00032	89 45 08	 mov	 DWORD PTR _pWin$[ebp], eax

; 548  : 	}
; 549  : #endif
; 550  : }

  00035	5d		 pop	 ebp

; 546  : 	{
; 547  : 		pWin->SetInsideRender(m_isInsideRender);

  00036	e9 00 00 00 00	 jmp	 ?SetInsideRender@CWindow@UI@@QAEXH@Z ; UI::CWindow::SetInsideRender
$LN2@AddChild:

; 548  : 	}
; 549  : #endif
; 550  : }

  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
?AddChild@CWindow@UI@@QAEXPAV12@@Z ENDP			; UI::CWindow::AddChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CWindow@UI@@UAE@XZ PROC				; UI::CWindow::~CWindow, COMDAT
; _this$ = ecx

; 57   : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx
  00003	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CWindow@UI@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 328  :     ~optional_base() { if (init_) storage_.value_.T::~T(); }

  00009	80 bf f4 00 00
	00 00		 cmp	 BYTE PTR [edi+244], 0
  00010	74 21		 je	 SHORT $LN18@CWindow
  00012	8d 8f 20 01 00
	00		 lea	 ecx, DWORD PTR [edi+288]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 830  :         _Tidy();

  00018	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
  0001d	8d 8f 14 01 00
	00		 lea	 ecx, DWORD PTR [edi+276]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@V?$allocator@V?$function@$$A6A_NAAV?$tween@M$$V@tweeny@@M@Z@std@@@2@@std@@AAEXXZ ; std::vector<std::function<bool __cdecl(tweeny::tween<float> &,float)>,std::allocator<std::function<bool __cdecl(tweeny::tween<float> &,float)> > >::_Tidy
  00028	8d 8f 04 01 00
	00		 lea	 ecx, DWORD PTR [edi+260]
  0002e	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$tweenpoint@M@detail@tweeny@@V?$allocator@U?$tweenpoint@M@detail@tweeny@@@std@@@std@@AAEXXZ ; std::vector<tweeny::detail::tweenpoint<float>,std::allocator<tweeny::detail::tweenpoint<float> > >::_Tidy
$LN18@CWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1498 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00033	8b 8f a4 00 00
	00		 mov	 ecx, DWORD PTR [edi+164]
  00039	56		 push	 esi

; 325  :         _Head->_Prev->_Next = nullptr;

  0003a	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  00043	8b 01		 mov	 eax, DWORD PTR [ecx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00045	85 c0		 test	 eax, eax
  00047	74 1a		 je	 SHORT $LN25@CWindow
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL26@CWindow:

; 329  :             _Pnext = _Pnode->_Next;

  00050	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00052	6a 0c		 push	 12			; 0000000cH
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0005d	8b c6		 mov	 eax, esi
  0005f	85 f6		 test	 esi, esi
  00061	75 ed		 jne	 SHORT $LL26@CWindow
$LN25@CWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00063	6a 0c		 push	 12			; 0000000cH
  00065	ff b7 a4 00 00
	00		 push	 DWORD PTR [edi+164]
  0006b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1498 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00070	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00076	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 325  :         _Head->_Prev->_Next = nullptr;

  00079	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0007c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  00082	8b 01		 mov	 eax, DWORD PTR [ecx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00084	85 c0		 test	 eax, eax
  00086	74 13		 je	 SHORT $LN81@CWindow
$LL82@CWindow:

; 329  :             _Pnext = _Pnode->_Next;

  00088	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0008a	6a 0c		 push	 12			; 0000000cH
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00095	8b c6		 mov	 eax, esi
  00097	85 f6		 test	 esi, esi
  00099	75 ed		 jne	 SHORT $LL82@CWindow
$LN81@CWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0009b	6a 0c		 push	 12			; 0000000cH
  0009d	ff b7 84 00 00
	00		 push	 DWORD PTR [edi+132]
  000a3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  000a8	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000ab	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2301 :         return _BUF_SIZE <= _Myres;

  000ae	5e		 pop	 esi
  000af	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  000b2	72 28		 jb	 SHORT $LN142@CWindow
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b4	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  000b7	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000be	72 12		 jb	 SHORT $LN152@CWindow

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000c0	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000c3	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c6	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c8	83 c0 fc	 add	 eax, -4			; fffffffcH
  000cb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000ce	77 20		 ja	 SHORT $LN149@CWindow

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000d0	8b c2		 mov	 eax, edx
$LN152@CWindow:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000d2	51		 push	 ecx
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000d9	83 c4 08	 add	 esp, 8
$LN142@CWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  000dc	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  000e3	c7 47 18 0f 00
	00 00		 mov	 DWORD PTR [edi+24], 15	; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000ea	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
  000ee	5f		 pop	 edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 58   : }

  000ef	c3		 ret	 0
$LN149@CWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f0	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN165@CWindow:
  000f5	cc		 int	 3
??1CWindow@UI@@UAE@XZ ENDP				; UI::CWindow::~CWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CWindow@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CWindow@UI@@QAE@PAU_object@@@Z PROC			; UI::CWindow::CWindow, COMDAT
; _this$ = ecx

; 38   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CWindow@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CWindow@UI@@6B@
  0002f	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00032	0f 11 46 04	 movups	 XMMWORD PTR [esi+4], xmm0

; 4998 :         _My_data._Mysize = 0;

  00036	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4999 :         _My_data._Myres  = _BUF_SIZE - 1;

  0003d	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 5000 :         _My_data._Activate_SSO_buffer();
; 5001 : 
; 5002 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5003 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00044	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 25   : 	m_poHandler(ppyObject),

  00048	8b 45 08	 mov	 eax, DWORD PTR _ppyObject$[ebp]
  0004b	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00052	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  00059	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  00060	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  00067	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006e	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
  00075	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0
  0007c	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
  00083	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  0008a	c6 46 75 00	 mov	 BYTE PTR [esi+117], 0
  0008e	c7 46 78 00 00
	00 00		 mov	 DWORD PTR [esi+120], 0
  00095	89 46 7c	 mov	 DWORD PTR [esi+124], eax

; 26   : 	m_bShow(false),
; 27   : 	m_pParent(NULL),

  00098	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  000a2	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  000a4	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0
  000ae	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  000b8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1834 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  000bd	89 00		 mov	 DWORD PTR [eax], eax

; 1835 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000bf	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1836 :         _Mypair._Myval2._Myhead = _Newhead;

  000c2	89 86 84 00 00
	00		 mov	 DWORD PTR [esi+132], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 29   : 	m_isUpdatingChildren(FALSE)

  000c8	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 30   : #ifdef ENABLE_MOUSEWHEEL_EVENT
; 31   : 	, m_bIsScrollable(false)
; 32   : #endif
; 33   : #ifdef INGAME_WIKI
; 34   : 	, m_isInsideRender(false)

  000d2	c7 86 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+144], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  000dc	6a 0c		 push	 12			; 0000000cH
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 38   : {

  000de	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  000e2	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
  000ec	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  000f6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000fb	0f 57 c0	 xorps	 xmm0, xmm0
  000fe	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1834 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  00101	89 00		 mov	 DWORD PTR [eax], eax

; 1835 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  00103	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1836 :         _Mypair._Myval2._Myhead = _Newhead;

  00106	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 54   : }

  0010c	8b c6		 mov	 eax, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 315  :     constexpr optional_base() noexcept : init_(false), storage_(trivial_init) {};

  0010e	c6 86 f4 00 00
	00 00		 mov	 BYTE PTR [esi+244], 0

; 285  :   constexpr storage_t( trivial_init_t ) noexcept : dummy_() {};

  00115	c6 86 f8 00 00
	00 00		 mov	 BYTE PTR [esi+248], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 46   : 	m_HorizontalAlign = HORIZONTAL_ALIGN_LEFT;

  0011c	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0

; 47   : 	m_VerticalAlign = VERTICAL_ALIGN_TOP;

  00123	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 48   : 	m_rect.bottom = m_rect.left = m_rect.right = m_rect.top = 0;

  0012a	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  00131	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  00138	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  0013f	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0

; 49   : 	m_limitBiasRect.bottom = m_limitBiasRect.left = m_limitBiasRect.right = m_limitBiasRect.top = 0;

  00146	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
  0014d	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0
  00154	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0
  0015b	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0

; 50   : #ifdef INGAME_WIKI
; 51   : 	memset(&m_renderBox, 0, sizeof(m_renderBox));

  00162	0f 11 86 94 00
	00 00		 movups	 XMMWORD PTR [esi+148], xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 2261 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00169	c7 86 ec 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+236], 0
  00173	c7 86 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+232], 0
  0017d	c7 86 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+228], 0
  00187	c7 86 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+224], 0
  00191	c7 86 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+216], 0
  0019b	c7 86 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+212], 0
  001a5	c7 86 d0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+208], 0
  001af	c7 86 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+204], 0
  001b9	c7 86 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+196], 0
  001c3	c7 86 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+192], 0
  001cd	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0
  001d7	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0

; 2262 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 2263 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 2264 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 2265 : 
; 2266 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  001e1	c7 86 f0 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+240], 1065353216 ; 3f800000H
  001eb	c7 86 dc 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+220], 1065353216 ; 3f800000H
  001f5	c7 86 c8 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+200], 1065353216 ; 3f800000H
  001ff	c7 86 b4 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+180], 1065353216 ; 3f800000H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp

; 54   : }

  00209	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0020c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00213	59		 pop	 ecx
  00214	5e		 pop	 esi
  00215	8b e5		 mov	 esp, ebp
  00217	5d		 pop	 ebp
  00218	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00014	e9 00 00 00 00	 jmp	 ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
__ehhandler$??0CWindow@UI@@QAE@PAU_object@@@Z:
  0001e	90		 npad	 1
  0001f	90		 npad	 1
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00027	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CWindow@UI@@QAE@PAU_object@@@Z
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CWindow@UI@@QAE@PAU_object@@@Z ENDP			; UI::CWindow::CWindow
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsType@CWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?IsType@CWindow@UI@@QAEHK@Z PROC			; UI::CWindow::IsType, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	return OnIsType(dwType);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 69   : }

  00005	5d		 pop	 ebp

; 68   : 	return OnIsType(dwType);

  00006	ff a0 a8 00 00
	00		 jmp	 DWORD PTR [eax+168]
?IsType@CWindow@UI@@QAEHK@Z ENDP			; UI::CWindow::IsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CWindow@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CWindow@UI@@SAKXZ PROC				; UI::CWindow::Type, COMDAT

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CWindow@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 62   : 	static DWORD s_dwType = GetCRC32("CWindow", strlen("CWindow"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 63   : 	return (s_dwType);
; 64   : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 62   : 	static DWORD s_dwType = GetCRC32("CWindow", strlen("CWindow"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 07		 push	 7
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_07EFPFKGGH@CWindow@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CWindow@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CWindow@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CWindow@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CWindow@UI@@SAKXZ ENDP				; UI::CWindow::Type
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_optional_access@experimental@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_optional_access@experimental@std@@UAEPAXI@Z PROC ; std::experimental::bad_optional_access::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_optional_access@experimental@std@@UAEPAXI@Z ENDP ; std::experimental::bad_optional_access::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_optional_access@experimental@std@@QAE@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_optional_access@experimental@std@@QAE@ABV012@@Z PROC ; std::experimental::bad_optional_access::bad_optional_access, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_optional_access@experimental@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_optional_access@experimental@std@@QAE@ABV012@@Z ENDP ; std::experimental::bad_optional_access::bad_optional_access
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_optional_access@experimental@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_optional_access@experimental@std@@UAE@XZ PROC	; std::experimental::bad_optional_access::~bad_optional_access, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_optional_access@experimental@std@@UAE@XZ ENDP	; std::experimental::bad_optional_access::~bad_optional_access
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp
;	COMDAT ??0bad_optional_access@experimental@std@@QAE@PBD@Z
_TEXT	SEGMENT
__InitData$1 = -8					; size = 8
_this$ = -4						; size = 4
_what_arg$ = 8						; size = 4
??0bad_optional_access@experimental@std@@QAE@PBD@Z PROC	; std::experimental::bad_optional_access::bad_optional_access, COMDAT
; _this$ = ecx

; 275  :   explicit bad_optional_access(const char* what_arg) : logic_error{what_arg} {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h

; 60   :         __std_exception_data _InitData = { _Message, true };

  00006	8b 45 08	 mov	 eax, DWORD PTR _what_arg$[ebp]
  00009	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 275  :   explicit bad_optional_access(const char* what_arg) : logic_error{what_arg} {}

  0000c	56		 push	 esi
  0000d	8b f1		 mov	 esi, ecx
  0000f	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h

; 58   :         : _Data()

  00012	8d 56 04	 lea	 edx, DWORD PTR [esi+4]

; 60   :         __std_exception_data _InitData = { _Message, true };

  00015	89 45 f8	 mov	 DWORD PTR __InitData$1[ebp], eax

; 61   :         __std_exception_copy(&_InitData, &_Data);

  00018	8d 45 f8	 lea	 eax, DWORD PTR __InitData$1[ebp]
  0001b	52		 push	 edx
  0001c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00022	50		 push	 eax
  00023	66 0f d6 02	 movq	 QWORD PTR [edx], xmm0
  00027	c6 45 fc 01	 mov	 BYTE PTR __InitData$1[ebp+4], 1
  0002b	e8 00 00 00 00	 call	 ___std_exception_copy
  00030	83 c4 08	 add	 esp, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\optional.hpp

; 275  :   explicit bad_optional_access(const char* what_arg) : logic_error{what_arg} {}

  00033	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_optional_access@experimental@std@@6B@
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
??0bad_optional_access@experimental@std@@QAE@PBD@Z ENDP	; std::experimental::bad_optional_access::bad_optional_access
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
;	COMDAT ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$1 = -12						; size = 12
__Val$ = 8						; size = 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove, COMDAT
; _this$ = ecx

; 1660 :     auto remove(const _Ty& _Val) { // erase each element matching _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1594 :         explicit _List_node_remove_op(list& _List_) noexcept : _List(_List_), _Head(), _Tail(_STD addressof(_Head)) {}

  0000b	8d 45 f8	 lea	 eax, DWORD PTR __Op$1[ebp+4]
  0000e	33 d2		 xor	 edx, edx
  00010	89 7d f4	 mov	 DWORD PTR __Op$1[ebp], edi
  00013	89 55 f8	 mov	 DWORD PTR __Op$1[ebp+4], edx
  00016	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax

; 1668 :         const auto _Last         = _My_data._Myhead;

  00019	8b 1f		 mov	 ebx, DWORD PTR [edi]

; 1669 :         const size_type _Oldsize = _My_data._Mysize;
; 1670 :         for (auto _First = _Last->_Next; _First != _Last;) {

  0001b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001d	3b c3		 cmp	 eax, ebx
  0001f	74 36		 je	 SHORT $LN7@remove
  00021	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
$LL6@remove:

; 1661 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 1671 :             auto _Next = _First->_Next;

  00027	8b 30		 mov	 esi, DWORD PTR [eax]

; 1661 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00029	3b 0a		 cmp	 ecx, DWORD PTR [edx]

; 1672 :             if (_Pred(_First->_Myval)) {

  0002b	75 21		 jne	 SHORT $LN37@remove

; 1605 :             --_List._Mypair._Myval2._Mysize;

  0002d	ff 4f 04	 dec	 DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00030	8b 10		 mov	 edx, DWORD PTR [eax]

; 654  :     _Val         = static_cast<_Other&&>(_New_val);

  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1607 :             const auto _Prev = _Removed->_Prev;

  00038	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1608 :             _Prev->_Next     = _Next;

  0003b	89 11		 mov	 DWORD PTR [ecx], edx

; 1609 :             _Next->_Prev     = _Prev;

  0003d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1610 : 
; 1611 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1612 :             // mark removed node for IDL to snip out later
; 1613 :             _Removed->_Prev = nullptr;
; 1614 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1615 : 
; 1616 :             *_Tail = _Removed;

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __Op$1[ebp+8]
  00043	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00046	89 01		 mov	 DWORD PTR [ecx], eax

; 1617 :             _Tail  = _STD addressof(_Removed->_Next);

  00048	8b 7d f4	 mov	 edi, DWORD PTR __Op$1[ebp]
  0004b	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax
$LN37@remove:

; 1676 :             _First = _Next;

  0004e	8b c6		 mov	 eax, esi
  00050	3b f3		 cmp	 esi, ebx
  00052	75 d0		 jne	 SHORT $LL6@remove
  00054	8b 55 f8	 mov	 edx, DWORD PTR __Op$1[ebp+4]
$LN7@remove:

; 1643 :             auto _Target = _Head;

  00057	85 d2		 test	 edx, edx

; 1644 :             while (_Target) {

  00059	74 18		 je	 SHORT $LN15@remove
  0005b	0f 1f 44 00 00	 npad	 5
$LL14@remove:

; 1645 :                 auto _Next = _Target->_Next;

  00060	8b 32		 mov	 esi, DWORD PTR [edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00062	6a 0c		 push	 12			; 0000000cH
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1651 :                 _Target = _Next;

  0006d	8b d6		 mov	 edx, esi
  0006f	85 f6		 test	 esi, esi
  00071	75 ed		 jne	 SHORT $LL14@remove
$LN15@remove:
  00073	5f		 pop	 edi

; 1662 :     }

  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
;	COMDAT ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$2 = -20						; size = 8
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back, COMDAT
; _this$ = ecx

; 1255 :     void push_back(const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 1012 :         if (_Mysize == max_size()) {

  00029	81 7e 04 55 55
	55 15		 cmp	 DWORD PTR [esi+4], 357913941 ; 15555555H

; 1256 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00030	8b 3e		 mov	 edi, DWORD PTR [esi]

; 1012 :         if (_Mysize == max_size()) {

  00032	74 46		 je	 SHORT $LN62@push_back
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1005 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00034	89 75 ec	 mov	 DWORD PTR __Op$2[ebp], esi

; 77   :         return ::operator new(_Bytes);

  00037	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 584  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1012 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00040	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 77   :         return ::operator new(_Bytes);

  00047	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 586  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  0004f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 586  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00052	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00054	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1017 :         ++_Mysize;

  00057	ff 46 04	 inc	 DWORD PTR [esi+4]

; 599  :         const pointer _Insert_after = _Insert_before->_Prev;

  0005a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 600  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  0005d	89 38		 mov	 DWORD PTR [eax], edi

; 601  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  0005f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 602  :         const auto _Result    = this->_Ptr;
; 603  :         this->_Ptr            = pointer{};
; 604  :         _Insert_before->_Prev = _Result;

  00062	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 605  :         _Insert_after->_Next  = _Result;

  00065	89 01		 mov	 DWORD PTR [ecx], eax

; 1257 :     }

  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
$LN62@push_back:

; 1013 :             _Xlength_error("list too long");

  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  0007f	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN60@push_back:
  00084	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list
;	COMDAT ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >, COMDAT
; _this$ = ecx

; 1042 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1498 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 325  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 329  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00017	6a 0c		 push	 12			; 0000000cH
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00029	6a 0c		 push	 12			; 0000000cH
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\list

; 1048 :     }

  00036	c3		 ret	 0
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h
;	COMDAT ?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkInstance$ = 8					; size = 4
?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z PROC ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance, COMDAT

; 24   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 25   : 		pkInstance->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkInstance$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h

; 26   : 		ms_kPool.Free(pkInstance);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@DeleteExpa

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h

; 27   : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@DeleteExpa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
  00039	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterlib\GrpExpandedImageInstance.h

; 27   : 	}

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z ENDP ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN4@vector

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN20@vector

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN17@vector

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN20@vector:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2114 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00049	5e		 pop	 esi

; 835  :     }

  0004a	c3		 ret	 0
$LN17@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00050	cc		 int	 3
??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 315  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
$T2 = 12						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3528 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 3529 :         // assign [_Ptr, _Ptr + _Count)
; 3530 :         if (_Count <= _Mypair._Myval2._Myres) {

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR $T1[ebp], ecx
  00012	3b d9		 cmp	 ebx, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2283 :         value_type* _Result = _Bx._Buf;

  00016	8b fe		 mov	 edi, esi

; 2301 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2284 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2285 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 3e		 mov	 edi, DWORD PTR [esi]
$LN5@assign:

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001f	53		 push	 ebx
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3531 :             _ASAN_STRING_MODIFY(static_cast<difference_type>(_Count - _Mypair._Myval2._Mysize));
; 3532 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3533 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3534 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3535 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 3544 :             },
; 3545 :             _Ptr);
; 3546 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4903 :         if (_New_size > max_size()) {

  0003e	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH
  00044	0f 87 d4 00 00
	00		 ja	 $LN60@assign

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b fb		 mov	 edi, ebx
  0004c	83 cf 0f	 or	 edi, 15			; 0000000fH
  0004f	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 15		 jbe	 SHORT $LN19@assign

; 4885 :             return _Max;

  00057	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0005c	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00067	83 c4 04	 add	 esp, 4
  0006a	eb 52		 jmp	 SHORT $LN58@assign
$LN19@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4888 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0006c	8b d1		 mov	 edx, ecx
  0006e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00073	d1 ea		 shr	 edx, 1
  00075	2b c2		 sub	 eax, edx
  00077	3b c8		 cmp	 ecx, eax
  00079	76 15		 jbe	 SHORT $LN20@assign

; 4889 :             return _Max;

  0007b	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00080	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0008b	83 c4 04	 add	 esp, 4
  0008e	eb 2e		 jmp	 SHORT $LN58@assign
$LN20@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4892 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00090	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  00093	3b f8		 cmp	 edi, eax
  00095	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4910 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00098	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009b	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000a0	72 0b		 jb	 SHORT $LN27@assign

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a8	83 c4 04	 add	 esp, 4
  000ab	eb 11		 jmp	 SHORT $LN58@assign
$LN27@assign:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000ad	85 c0		 test	 eax, eax
  000af	74 0b		 je	 SHORT $LN28@assign

; 77   :         return ::operator new(_Bytes);

  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b7	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000ba	eb 02		 jmp	 SHORT $LN58@assign
$LN28@assign:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000bc	33 c0		 xor	 eax, eax
$LN58@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000be	53		 push	 ebx
  000bf	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4919 :         _Mypair._Myval2._Mysize = _New_size;

  000c2	89 45 0c	 mov	 DWORD PTR $T2[ebp], eax

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c5	50		 push	 eax

; 4919 :         _Mypair._Myval2._Mysize = _New_size;

  000c6	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 4920 :         _Mypair._Myval2._Myres  = _New_capacity;

  000c9	89 7e 14	 mov	 DWORD PTR [esi+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cc	e8 00 00 00 00	 call	 _memcpy

; 3543 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000d1	8b 7d 0c	 mov	 edi, DWORD PTR $T2[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4922 :         if (_BUF_SIZE <= _Old_capacity) {

  000d7	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 3543 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000da	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 4922 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	83 f8 10	 cmp	 eax, 16			; 00000010H
  000e1	72 29		 jb	 SHORT $LN13@assign

; 4923 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e3	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e6	8b 06		 mov	 eax, DWORD PTR [esi]

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000e8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ee	72 12		 jb	 SHORT $LN50@assign

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f0	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f3	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f6	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f8	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000fe	77 19		 ja	 SHORT $LN47@assign

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00100	8b c2		 mov	 eax, edx
$LN50@assign:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00102	51		 push	 ecx
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00109	83 c4 08	 add	 esp, 8
$LN13@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3539 :         return _Reallocate_for(

  0010c	89 3e		 mov	 DWORD PTR [esi], edi

; 3544 :             },
; 3545 :             _Ptr);
; 3546 :     }

  0010e	8b c6		 mov	 eax, esi
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c2 08 00	 ret	 8
$LN47@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00119	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN60@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4904 :             _Xlen_string(); // result too long

  0011e	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN56@assign:
  00123	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
tv509 = -12						; size = 4
$T1 = -8						; size = 4
tv521 = -4						; size = 4
__Old_size$1$ = -4					; size = 4
__Ptr$ = 8						; size = 4
tv514 = 12						; size = 4
$T2 = 12						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 3422 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 3423 :         // append [_Ptr, _Ptr + _Count)
; 3424 :         const size_type _Old_size = _Mypair._Myval2._Mysize;
; 3425 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  00011	8b c2		 mov	 eax, edx
  00013	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00016	2b c1		 sub	 eax, ecx
  00018	89 4d fc	 mov	 DWORD PTR __Old_size$1$[ebp], ecx
  0001b	89 55 f8	 mov	 DWORD PTR $T1[ebp], edx
  0001e	3b d8		 cmp	 ebx, eax
  00020	77 2e		 ja	 SHORT $LN2@append

; 3426 :             _ASAN_STRING_MODIFY(static_cast<difference_type>(_Count));
; 3427 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00022	8d 04 19	 lea	 eax, DWORD PTR [ecx+ebx]
  00025	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 2283 :         value_type* _Result = _Bx._Buf;

  00028	8b c7		 mov	 eax, edi

; 2301 :         return _BUF_SIZE <= _Myres;

  0002a	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2284 :         if (_Large_string_engaged()) {

  0002d	72 02		 jb	 SHORT $LN5@append

; 2285 :             _Result = _Unfancy(_Bx._Ptr);

  0002f	8b 07		 mov	 eax, DWORD PTR [edi]
$LN5@append:

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00031	53		 push	 ebx
  00032	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3428 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3429 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  00035	8d 34 08	 lea	 esi, DWORD PTR [eax+ecx]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 _memmove
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3430 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  00041	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 3443 :     }

  00045	8b c7		 mov	 eax, edi
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
$LN2@append:

; 4939 :         if (max_size() - _Old_size < _Size_increase) {

  00050	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00055	2b c1		 sub	 eax, ecx
  00057	3b c3		 cmp	 eax, ebx
  00059	0f 82 26 01 00
	00		 jb	 $LN68@append

; 4941 :         }
; 4942 : 
; 4943 :         const size_type _New_size     = _Old_size + _Size_increase;

  0005f	8d 34 19	 lea	 esi, DWORD PTR [ecx+ebx]

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00062	83 ce 0f	 or	 esi, 15			; 0000000fH
  00065	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006b	76 18		 jbe	 SHORT $LN19@append

; 4885 :             return _Max;

  0006d	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00072	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  00080	83 c4 04	 add	 esp, 4
  00083	eb 61		 jmp	 SHORT $LN66@append
$LN19@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4888 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00085	8b c2		 mov	 eax, edx
  00087	d1 e8		 shr	 eax, 1
  00089	89 45 0c	 mov	 DWORD PTR tv514[ebp], eax
  0008c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00091	2b 45 0c	 sub	 eax, DWORD PTR tv514[ebp]
  00094	3b d0		 cmp	 edx, eax
  00096	76 18		 jbe	 SHORT $LN20@append

; 4889 :             return _Max;

  00098	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0009d	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  000ab	83 c4 04	 add	 esp, 4
  000ae	eb 36		 jmp	 SHORT $LN66@append
$LN20@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4892 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000b0	8b 45 0c	 mov	 eax, DWORD PTR tv514[ebp]
  000b3	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  000b5	3b f0		 cmp	 esi, eax
  000b7	0f 42 f0	 cmovb	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4947 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000ba	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000bd	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000c2	72 0e		 jb	 SHORT $LN27@append

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  000cd	83 c4 04	 add	 esp, 4
  000d0	eb 14		 jmp	 SHORT $LN66@append
$LN27@append:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000d2	85 c0		 test	 eax, eax
  000d4	74 0e		 je	 SHORT $LN28@append

; 77   :         return ::operator new(_Bytes);

  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  000dc	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]

; 77   :         return ::operator new(_Bytes);

  000df	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000e2	eb 02		 jmp	 SHORT $LN66@append
$LN28@append:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000e4	33 c0		 xor	 eax, eax
$LN66@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4959 :         if (_BUF_SIZE <= _Old_capacity) {

  000e6	83 7d f8 10	 cmp	 DWORD PTR $T1[ebp], 16	; 00000010H
  000ea	8d 14 19	 lea	 edx, DWORD PTR [ecx+ebx]
  000ed	89 77 14	 mov	 DWORD PTR [edi+20], esi
  000f0	8d 34 08	 lea	 esi, DWORD PTR [eax+ecx]
  000f3	89 57 10	 mov	 DWORD PTR [edi+16], edx
  000f6	8d 14 1e	 lea	 edx, DWORD PTR [esi+ebx]
  000f9	89 45 0c	 mov	 DWORD PTR $T2[ebp], eax
  000fc	89 75 fc	 mov	 DWORD PTR tv521[ebp], esi
  000ff	89 55 f4	 mov	 DWORD PTR tv509[ebp], edx
  00102	51		 push	 ecx
  00103	72 56		 jb	 SHORT $LN13@append

; 4960 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00105	8b 37		 mov	 esi, DWORD PTR [edi]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00107	56		 push	 esi
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 _memcpy
  0010e	53		 push	 ebx
  0010f	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00112	ff 75 fc	 push	 DWORD PTR tv521[ebp]
  00115	e8 00 00 00 00	 call	 _memcpy

; 3440 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  0011a	8b 45 f4	 mov	 eax, DWORD PTR tv509[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0011d	83 c4 18	 add	 esp, 24			; 00000018H

; 4962 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00120	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00123	41		 inc	 ecx

; 3440 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00124	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00127	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0012d	72 12		 jb	 SHORT $LN52@append

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0012f	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00132	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00135	2b f2		 sub	 esi, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00137	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  0013a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0013d	77 4b		 ja	 SHORT $LN49@append

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0013f	8b f2		 mov	 esi, edx
$LN52@append:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00141	51		 push	 ecx
  00142	56		 push	 esi
  00143	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3434 :         return _Reallocate_grow_by(

  00148	8b 45 0c	 mov	 eax, DWORD PTR $T2[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0014b	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3434 :         return _Reallocate_grow_by(

  0014e	89 07		 mov	 DWORD PTR [edi], eax

; 3443 :     }

  00150	8b c7		 mov	 eax, edi
  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 08 00	 ret	 8
$LN13@append:

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0015b	57		 push	 edi
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 _memcpy
  00162	53		 push	 ebx
  00163	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00166	56		 push	 esi
  00167	e8 00 00 00 00	 call	 _memcpy

; 3440 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  0016c	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0016f	83 c4 18	 add	 esp, 24			; 00000018H

; 3440 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00172	c6 00 00	 mov	 BYTE PTR [eax], 0

; 3434 :         return _Reallocate_grow_by(

  00175	8b 45 0c	 mov	 eax, DWORD PTR $T2[ebp]
  00178	89 07		 mov	 DWORD PTR [edi], eax

; 3443 :     }

  0017a	8b c7		 mov	 eax, edi
  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 08 00	 ret	 8
$LN68@append:

; 4940 :             _Xlen_string(); // result too long

  00185	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN49@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0018a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN64@append:
  0018f	cc		 int	 3
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3270 :     _CONSTEXPR20 ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2301 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3278 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2674 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b d9		 mov	 ebx, ecx
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	57		 push	 edi

; 415  :             return __builtin_strlen(_First);

  0000c	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  0000f	8b f7		 mov	 esi, edi

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00011	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0

; 2349 :     size_type _Mysize = 0; // current length of string

  00014	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0

; 2350 :     size_type _Myres  = 0; // current storage reserved for string

  0001b	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0

; 415  :             return __builtin_strlen(_First);

  00022	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL39@basic_stri:
  00025	8a 06		 mov	 al, BYTE PTR [esi]
  00027	46		 inc	 esi
  00028	84 c0		 test	 al, al
  0002a	75 f9		 jne	 SHORT $LL39@basic_stri
  0002c	2b f1		 sub	 esi, ecx

; 2740 :         if (_Count > max_size()) {

  0002e	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00034	0f 87 a5 00 00
	00		 ja	 $LN44@basic_stri

; 2742 :         }
; 2743 : 
; 2744 :         auto& _Al       = _Getal();
; 2745 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2746 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2747 : 
; 2748 :         if (_Count < _BUF_SIZE) {

  0003a	c7 43 14 0f 00
	00 00		 mov	 DWORD PTR [ebx+20], 15	; 0000000fH
  00041	83 fe 10	 cmp	 esi, 16			; 00000010H
  00044	73 1d		 jae	 SHORT $LN15@basic_stri

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00046	56		 push	 esi
  00047	57		 push	 edi
  00048	53		 push	 ebx

; 2749 :             _My_data._Mysize = _Count;

  00049	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0004c	e8 00 00 00 00	 call	 _memmove

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2756 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  00054	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  00058	8b c3		 mov	 eax, ebx
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
$LN15@basic_stri:

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00063	8b fe		 mov	 edi, esi
  00065	83 cf 0f	 or	 edi, 15			; 0000000fH
  00068	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006e	76 15		 jbe	 SHORT $LN22@basic_stri

; 4885 :             return _Max;

  00070	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00075	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00080	83 c4 04	 add	 esp, 4
  00083	eb 30		 jmp	 SHORT $LN42@basic_stri
$LN22@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  00085	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  0008a	3b f8		 cmp	 edi, eax
  0008c	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2772 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0008f	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00092	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00097	72 0b		 jb	 SHORT $LN30@basic_stri

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0009f	83 c4 04	 add	 esp, 4
  000a2	eb 11		 jmp	 SHORT $LN42@basic_stri
$LN30@basic_stri:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000a4	85 c0		 test	 eax, eax
  000a6	74 0b		 je	 SHORT $LN31@basic_stri

; 77   :         return ::operator new(_Bytes);

  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ae	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000b1	eb 02		 jmp	 SHORT $LN42@basic_stri
$LN31@basic_stri:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000b3	33 c0		 xor	 eax, eax
$LN42@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000b5	56		 push	 esi
  000b6	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2773 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000b9	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000bc	50		 push	 eax

; 2773 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000bd	89 03		 mov	 DWORD PTR [ebx], eax

; 2774 : 
; 2775 : #if _HAS_CXX20
; 2776 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2777 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 2778 :         }
; 2779 : #endif // _HAS_CXX20
; 2780 : 
; 2781 :         _My_data._Mysize = _Count;

  000bf	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 2782 :         _My_data._Myres  = _New_capacity;

  000c2	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c5	e8 00 00 00 00	 call	 _memcpy

; 2788 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000ca	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	5f		 pop	 edi

; 2788 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000d1	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  000d5	8b c3		 mov	 eax, ebx
  000d7	5e		 pop	 esi
  000d8	5b		 pop	 ebx
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c2 04 00	 ret	 4
$LN44@basic_stri:

; 2741 :             _Xlen_string(); // result too long

  000df	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN40@basic_stri:
  000e4	cc		 int	 3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2368 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 324  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
