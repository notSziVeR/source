; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31942.0 

	TITLE	C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Distribute\ParticleSystemData.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	?_Fake_alloc@std@@3U_Fake_allocator@1@B		; std::_Fake_alloc
PUBLIC	??_7?$CDynamicPool@VCParticleSystemData@@@@6B@	; CDynamicPool<CParticleSystemData>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z ; CDynamicPool<CParticleSystemData>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCParticleSystemData@@@@6B@	; CDynamicPool<CParticleSystemData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8 ; CDynamicPool<CParticleSystemData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCParticleSystemData@@@@8	; CDynamicPool<CParticleSystemData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCParticleSystemData@@@@8	; CDynamicPool<CParticleSystemData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemData@@@@8 ; CDynamicPool<CParticleSystemData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vftable'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z:PROC ; CDynamicPool<CParticleSystemData>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@'
	DB	'@@NEffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8 ; CDynamicPool<CParticleSystemData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCParticleSystemData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemData@@@@8 ; CDynamicPool<CParticleSystemData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCParticleSystemData@@@@8 DD 00H	; CDynamicPool<CParticleSystemData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CParticleSystemData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCParticleSystemData@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCParticleSystemData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCParticleSystemData@@@@6B@ DD 00H	; CDynamicPool<CParticleSystemData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@VCParticleSystemData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCParticleSystemData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCParticleSystemData@@@@6B@ ; CDynamicPool<CParticleSystemData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?_Fake_alloc@std@@3U_Fake_allocator@1@B
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	??1CGotoChild@CTextFileLoader@@QAE@XZ		; CTextFileLoader::CGotoChild::~CGotoChild
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
PUBLIC	?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back
PUBLIC	?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Xlength
PUBLIC	?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Xlength
PUBLIC	??1CParticleSystemData@@UAE@XZ			; CParticleSystemData::~CParticleSystemData
PUBLIC	??0CParticleSystemData@@QAE@XZ			; CParticleSystemData::CParticleSystemData
PUBLIC	?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ ; CParticleSystemData::GetEmitterPropertyPointer
PUBLIC	?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ ; CParticleSystemData::GetParticlePropertyPointer
PUBLIC	?ChangeTexture@CParticleSystemData@@QAEXPBD@Z	; CParticleSystemData::ChangeTexture
PUBLIC	?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z ; CParticleSystemData::BuildDecorator
PUBLIC	?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z ; CParticleSystemData::OnLoadScript
PUBLIC	?OnClear@CParticleSystemData@@MAEXXZ		; CParticleSystemData::OnClear
PUBLIC	?OnIsData@CParticleSystemData@@MAE_NXZ		; CParticleSystemData::OnIsData
PUBLIC	?DestroySystem@CParticleSystemData@@SAXXZ	; CParticleSystemData::DestroySystem
PUBLIC	?New@CParticleSystemData@@SAPAV1@XZ		; CParticleSystemData::New
PUBLIC	?Delete@CParticleSystemData@@SAXPAV1@@Z		; CParticleSystemData::Delete
PUBLIC	??_GCParticleSystemData@@UAEPAXI@Z		; CParticleSystemData::`scalar deleting destructor'
PUBLIC	??1CBaseDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CBaseDecorator::~CBaseDecorator
PUBLIC	??_GCBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CBaseDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::~CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??1CHeaderDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CHeaderDecorator::~CHeaderDecorator
PUBLIC	?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CHeaderDecorator::__Excute
PUBLIC	?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CHeaderDecorator::__Clone
PUBLIC	??_GCHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CHeaderDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::~CPooledObject<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??1CNullDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CNullDecorator::~CNullDecorator
PUBLIC	?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CNullDecorator::__Excute
PUBLIC	?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CNullDecorator::__Clone
PUBLIC	??_GCNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CNullDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??1CTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::~CTextureAnimationCWDecorator
PUBLIC	?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Clone
PUBLIC	?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Excute
PUBLIC	??_GCTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??1CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::~CTextureAnimationCCWDecorator
PUBLIC	?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Clone
PUBLIC	?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Excute
PUBLIC	??_GCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??1CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::~CTextureAnimationRandomDecorator
PUBLIC	?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Clone
PUBLIC	?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Excute
PUBLIC	??_GCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::~CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??1CAirResistanceDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CAirResistanceDecorator::~CAirResistanceDecorator
PUBLIC	??_GCAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CAirResistanceDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::~CPooledObject<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??1CGravityDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CGravityDecorator::~CGravityDecorator
PUBLIC	??_GCGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CGravityDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::~CPooledObject<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??1CRotationDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CRotationDecorator::~CRotationDecorator
PUBLIC	??_GCRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CRotationDecorator::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ ; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>
PUBLIC	?Delete@?$CDynamicPool@VCParticleSystemData@@@@KAXPAVCParticleSystemData@@@Z ; CDynamicPool<CParticleSystemData>::Delete
PUBLIC	?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Xlength
PUBLIC	??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Insert_node
PUBLIC	??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ ; std::set<float,std::less<float>,std::allocator<float> >::~set<float,std::less<float>,std::allocator<float> >
PUBLIC	??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
PUBLIC	??1?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >
PUBLIC	??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
PUBLIC	??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete
PUBLIC	??_G?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor'
PUBLIC	??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
PUBLIC	??1?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::~CTimeEventDecorator<float>
PUBLIC	?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Clone
PUBLIC	?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Excute
PUBLIC	??_G?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
PUBLIC	??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new
PUBLIC	??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete
PUBLIC	??_G?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor'
PUBLIC	??1?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::~CTimeEventDecorator<DWORDCOLOR>
PUBLIC	?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Clone
PUBLIC	?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Excute
PUBLIC	??_G?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
PUBLIC	?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::Delete
PUBLIC	?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >
PUBLIC	?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::Delete
PUBLIC	?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Xlength
PUBLIC	??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >
PUBLIC	??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@AAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Emplace_reallocate<CTimeEvent<DWORDCOLOR> const &>
PUBLIC	??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@AAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>
PUBLIC	??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >
PUBLIC	??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>
PUBLIC	??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>
PUBLIC	??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>
PUBLIC	??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CHeaderDecorator::`vector deleting destructor'
PUBLIC	??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CNullDecorator::`vector deleting destructor'
PUBLIC	??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<float>::`vector deleting destructor'
PUBLIC	??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vector deleting destructor'
PUBLIC	??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vector deleting destructor'
PUBLIC	??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vector deleting destructor'
PUBLIC	??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vector deleting destructor'
PUBLIC	??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CAirResistanceDecorator::`vector deleting destructor'
PUBLIC	??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CGravityDecorator::`vector deleting destructor'
PUBLIC	??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CRotationDecorator::`vector deleting destructor'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A ; CParticleSystemData::ms_kPool
PUBLIC	??_7CParticleSystemData@@6B@			; CParticleSystemData::`vftable'
PUBLIC	??_7CBaseDecorator@NEffectUpdateDecorator@@6B@	; NEffectUpdateDecorator::CBaseDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CHeaderDecorator::`vftable'
PUBLIC	??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CHeaderDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CNullDecorator::`vftable'
PUBLIC	??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CNullDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vftable'
PUBLIC	??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vftable'
PUBLIC	??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vftable'
PUBLIC	??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`vftable'
PUBLIC	??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CGravityDecorator::`vftable'
PUBLIC	??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CGravityDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CRotationDecorator::`vftable'
PUBLIC	??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CRotationDecorator::`vftable'
PUBLIC	??_C@_0BA@BHDCJGBH@emitterproperty@		; `string'
PUBLIC	??_C@_0BB@GFCINCLJ@maxemissioncount@		; `string'
PUBLIC	??_C@_0M@CMAFBHMP@cyclelength@			; `string'
PUBLIC	??_C@_0BA@HFAFNHAP@cycleloopenable@		; `string'
PUBLIC	??_C@_09HBCOMICA@loopcount@			; `string'
PUBLIC	??_C@_0N@CEDHOJLK@emittershape@			; `string'
PUBLIC	??_C@_0BE@NHCLCKPF@emitteradvancedtype@		; `string'
PUBLIC	??_C@_0N@JELCEBGI@emittingsize@			; `string'
PUBLIC	??_C@_0P@CFPFJLBH@emittingradius@		; `string'
PUBLIC	??_C@_0BI@JPHOPPGG@emitteremitfromedgeflag@	; `string'
PUBLIC	??_C@_0BC@DDGDKONG@emittingdirection@		; `string'
PUBLIC	??_C@_0BG@EOBNDMCN@timeeventemittingsize@	; `string'
PUBLIC	??_C@_0CB@BEJHCOPI@timeeventemittingangularvelocit@ ; `string'
PUBLIC	??_C@_0BM@EDKEOBKF@timeeventemittingdirectionx@	; `string'
PUBLIC	??_C@_0BM@FKLPNAOE@timeeventemittingdirectiony@	; `string'
PUBLIC	??_C@_0BM@HBJCIDCH@timeeventemittingdirectionz@	; `string'
PUBLIC	??_C@_0BK@JMDFAGCJ@timeeventemittingvelocity@	; `string'
PUBLIC	??_C@_0CA@KBEMNMAO@timeeventemissioncountpersecond@ ; `string'
PUBLIC	??_C@_0BC@IBAOECEB@timeeventlifetime@		; `string'
PUBLIC	??_C@_0P@NKCDAPOH@timeeventsizex@		; `string'
PUBLIC	??_C@_0P@MDDIDOKG@timeeventsizey@		; `string'
PUBLIC	??_C@_0BB@HGNFNICN@particleproperty@		; `string'
PUBLIC	??_C@_0N@BPEOGKBI@srcblendtype@			; `string'
PUBLIC	??_C@_0O@FMHKLBEP@destblendtype@		; `string'
PUBLIC	??_C@_0BD@DAMHAFBJ@coloroperationtype@		; `string'
PUBLIC	??_C@_0O@EJACNAIE@billboardtype@		; `string'
PUBLIC	??_C@_0N@HLMOOIDA@rotationtype@			; `string'
PUBLIC	??_C@_0O@FAOBKFID@rotationspeed@		; `string'
PUBLIC	??_C@_0BM@BGHFBHHG@rotationrandomstartingbegin@	; `string'
PUBLIC	??_C@_0BK@DKMEPDJP@rotationrandomstartingend@	; `string'
PUBLIC	??_C@_0N@JFNGIJMG@attachenable@			; `string'
PUBLIC	??_C@_0O@DFPNMBJD@stretchenable@		; `string'
PUBLIC	??_C@_0L@BIBLFGDP@texanitype@			; `string'
PUBLIC	??_C@_0M@PDIDMMDH@texanidelay@			; `string'
PUBLIC	??_C@_0BN@DIHGKMNJ@texanirandomstartframeenable@ ; `string'
PUBLIC	??_C@_07GFBFDLBM@gravity@			; `string'
PUBLIC	??_C@_0BB@BHFJHILP@timeeventgravity@		; `string'
PUBLIC	??_C@_0O@IJAIPGAL@airresistance@		; `string'
PUBLIC	??_C@_0BH@IPGEOMGJ@timeeventairresistance@	; `string'
PUBLIC	??_C@_0BA@GAPFNHG@timeeventscalex@		; `string'
PUBLIC	??_C@_0BA@BPBEGMDH@timeeventscaley@		; `string'
PUBLIC	??_C@_0BC@ICGDLNPI@timeeventcolorred@		; `string'
PUBLIC	??_C@_0BE@OFLANGNK@timeeventcolorgreen@		; `string'
PUBLIC	??_C@_0BD@KLGCJHDO@timeeventcolorblue@		; `string'
PUBLIC	??_C@_0P@KALIPJCI@timeeventalpha@		; `string'
PUBLIC	??_C@_0BC@KIMDBAHB@timeeventrotation@		; `string'
PUBLIC	??_C@_0N@HNMKMDCI@texturefiles@			; `string'
PUBLIC	?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool
PUBLIC	??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vftable'
PUBLIC	??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vftable'
PUBLIC	??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool
PUBLIC	??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vftable'
PUBLIC	??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vftable'
PUBLIC	??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vftable'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CParticleSystemData@@6B@			; CParticleSystemData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCParticleSystemData@@@8			; CParticleSystemData `RTTI Type Descriptor'
PUBLIC	??_R3CParticleSystemData@@8			; CParticleSystemData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CParticleSystemData@@8			; CParticleSystemData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CParticleSystemData@@8		; CParticleSystemData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CEffectElementBase@@8		; CEffectElementBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCEffectElementBase@@@8			; CEffectElementBase `RTTI Type Descriptor'
PUBLIC	??_R3CEffectElementBase@@8			; CEffectElementBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectElementBase@@8			; CEffectElementBase::`RTTI Base Class Array'
PUBLIC	??_R4CBaseDecorator@NEffectUpdateDecorator@@6B@	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CBaseDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CBaseDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CBaseDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CHeaderDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CHeaderDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CHeaderDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CHeaderDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CNullDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CNullDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CNullDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CNullDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNullDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CNullDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNullDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CNullDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CNullDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Complete Object Locator'
PUBLIC	??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAirResistanceDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAirResistanceDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CGravityDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CGravityDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGravityDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGravityDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CRotationDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CRotationDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRotationDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRotationDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Complete Object Locator'
PUBLIC	__real@00000000
PUBLIC	__real@3eb0c6f7a0b5ed8d
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@437f0000
PUBLIC	__real@43800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?GetOnlyPathName@@YAPBDPBD@Z:PROC		; GetOnlyPathName
EXTRN	?IsGlobalFileName@@YA_NPBD@Z:PROC		; IsGlobalFileName
EXTRN	?GetFileName@CTextFileLoader@@QAEPBDXZ:PROC	; CTextFileLoader::GetFileName
EXTRN	?SetChildNode@CTextFileLoader@@QAEHPBD@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenBoolean
EXTRN	?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z:PROC ; CTextFileLoader::GetTokenByte
EXTRN	?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z:PROC ; CTextFileLoader::GetTokenWord
EXTRN	?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenInteger
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z:PROC ; CTextFileLoader::GetTokenPosition
EXTRN	?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z:PROC ; GetTokenTimeEventFloat
EXTRN	??0CEffectElementBase@@QAE@XZ:PROC		; CEffectElementBase::CEffectElementBase
EXTRN	??1CEffectElementBase@@UAE@XZ:PROC		; CEffectElementBase::~CEffectElementBase
EXTRN	?Clear@CEffectElementBase@@QAEXXZ:PROC		; CEffectElementBase::Clear
EXTRN	??0CEmitterProperty@@QAE@XZ:PROC		; CEmitterProperty::CEmitterProperty
EXTRN	??1CEmitterProperty@@UAE@XZ:PROC		; CEmitterProperty::~CEmitterProperty
EXTRN	?Clear@CEmitterProperty@@QAEXXZ:PROC		; CEmitterProperty::Clear
EXTRN	??0CParticleProperty@@QAE@XZ:PROC		; CParticleProperty::CParticleProperty
EXTRN	??1CParticleProperty@@UAE@XZ:PROC		; CParticleProperty::~CParticleProperty
EXTRN	?Clear@CParticleProperty@@QAEXXZ:PROC		; CParticleProperty::Clear
EXTRN	?InsertTexture@CParticleProperty@@QAEXPBD@Z:PROC ; CParticleProperty::InsertTexture
EXTRN	?SetTexture@CParticleProperty@@QAE_NPBD@Z:PROC	; CParticleProperty::SetTexture
EXTRN	??_ECParticleSystemData@@UAEPAXI@Z:PROC		; CParticleSystemData::`vector deleting destructor'
EXTRN	?random@@YAKXZ:PROC				; random
EXTRN	?random_range@@YAJJJ@Z:PROC			; random_range
EXTRN	??_ECBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CBaseDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_ECHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CHeaderDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_ECNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CNullDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	?__Excute@CAirResistanceDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z:PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::__Excute
EXTRN	?__Clone@CAirResistanceDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z:PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::__Clone
EXTRN	??_ECAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	?__Excute@CGravityDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z:PROC ; NEffectUpdateDecorator::CGravityDecorator::__Excute
EXTRN	?__Clone@CGravityDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z:PROC ; NEffectUpdateDecorator::CGravityDecorator::__Clone
EXTRN	??_ECGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CGravityDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	?__Excute@CRotationDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z:PROC ; NEffectUpdateDecorator::CRotationDecorator::__Excute
EXTRN	?__Clone@CRotationDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z:PROC ; NEffectUpdateDecorator::CRotationDecorator::__Clone
EXTRN	??_ECRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CRotationDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vector deleting destructor'
EXTRN	??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vector deleting destructor'
EXTRN	??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CParticleSystemData@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CParticleSystemData@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3eb0c6f7a0b5ed8d
CONST	SEGMENT
__real@3eb0c6f7a0b5ed8d DQ 03eb0c6f7a0b5ed8dr	; 1e-06
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R4?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRotationDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CRotationDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CRotationDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CRotationDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CRotationDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRotationDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGravityDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CGravityDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CGravityDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CGravityDecorator@NEffectUpdateDecorator@@8 DD 00H	; NEffectUpdateDecorator::CGravityDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CGravityDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGravityDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpda'
	DB	'teDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAirResistanceDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CAirResistanceDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CAirResistanceDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CAirResistanceDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAirResistanceDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NE'
	DB	'ffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextureAnimationRandomDecorator@NEffectUpdateDecora'
	DB	'tor@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator'
	DB	'@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffec'
	DB	'tUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@'
	DB	'@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@'
	DB	'@NEffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDec'
	DB	'orator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpda'
	DB	'teDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTimeEventDecorator<float> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CNullDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorat'
	DB	'or@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNullDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CNullDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CNullDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CNullDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CNullDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CNullDecorator@NEffectUpdateDecorator@@8 DD 00H	; NEffectUpdateDecorator::CNullDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CNullDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNullDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CNullDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecor'
	DB	'ator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CHeaderDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CHeaderDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CHeaderDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CHeaderDecorator@NEffectUpdateDecorator@@8 DD 00H	; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CHeaderDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCHeaderDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CBaseDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CBaseDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CBaseDecorator::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CBaseDecorator@NEffectUpdateDecorator@@8 DD 00H	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CBaseDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBaseDecorator@NEffectUpdateDecorator@@6B@
rdata$r	SEGMENT
??_R4CBaseDecorator@NEffectUpdateDecorator@@6B@ DD 00H	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CEffectElementBase@@8
rdata$r	SEGMENT
??_R2CEffectElementBase@@8 DD FLAT:??_R1A@?0A@EA@CEffectElementBase@@8 ; CEffectElementBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEffectElementBase@@8
rdata$r	SEGMENT
??_R3CEffectElementBase@@8 DD 00H			; CEffectElementBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEffectElementBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectElementBase@@@8
data$rs	SEGMENT
??_R0?AVCEffectElementBase@@@8 DD FLAT:??_7type_info@@6B@ ; CEffectElementBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectElementBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectElementBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectElementBase@@8 DD FLAT:??_R0?AVCEffectElementBase@@@8 ; CEffectElementBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectElementBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CParticleSystemData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CParticleSystemData@@8 DD FLAT:??_R0?AVCParticleSystemData@@@8 ; CParticleSystemData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CParticleSystemData@@8
rdata$r	ENDS
;	COMDAT ??_R2CParticleSystemData@@8
rdata$r	SEGMENT
??_R2CParticleSystemData@@8 DD FLAT:??_R1A@?0A@EA@CParticleSystemData@@8 ; CParticleSystemData::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CEffectElementBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CParticleSystemData@@8
rdata$r	SEGMENT
??_R3CParticleSystemData@@8 DD 00H			; CParticleSystemData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CParticleSystemData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCParticleSystemData@@@8
data$rs	SEGMENT
??_R0?AVCParticleSystemData@@@8 DD FLAT:??_7type_info@@6B@ ; CParticleSystemData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCParticleSystemData@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CParticleSystemData@@6B@
rdata$r	SEGMENT
??_R4CParticleSystemData@@6B@ DD 00H			; CParticleSystemData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCParticleSystemData@@@8
	DD	FLAT:??_R3CParticleSystemData@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vftable'
	DD	FLAT:??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vftable'
	DD	FLAT:??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vftable'
	DD	FLAT:??_E?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vftable'
	DD	FLAT:??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vftable'
	DD	FLAT:??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vftable'
	DD	FLAT:??_E?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_0N@HNMKMDCI@texturefiles@
CONST	SEGMENT
??_C@_0N@HNMKMDCI@texturefiles@ DB 'texturefiles', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KIMDBAHB@timeeventrotation@
CONST	SEGMENT
??_C@_0BC@KIMDBAHB@timeeventrotation@ DB 'timeeventrotation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KALIPJCI@timeeventalpha@
CONST	SEGMENT
??_C@_0P@KALIPJCI@timeeventalpha@ DB 'timeeventalpha', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KLGCJHDO@timeeventcolorblue@
CONST	SEGMENT
??_C@_0BD@KLGCJHDO@timeeventcolorblue@ DB 'timeeventcolorblue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OFLANGNK@timeeventcolorgreen@
CONST	SEGMENT
??_C@_0BE@OFLANGNK@timeeventcolorgreen@ DB 'timeeventcolorgreen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ICGDLNPI@timeeventcolorred@
CONST	SEGMENT
??_C@_0BC@ICGDLNPI@timeeventcolorred@ DB 'timeeventcolorred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BPBEGMDH@timeeventscaley@
CONST	SEGMENT
??_C@_0BA@BPBEGMDH@timeeventscaley@ DB 'timeeventscaley', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GAPFNHG@timeeventscalex@
CONST	SEGMENT
??_C@_0BA@GAPFNHG@timeeventscalex@ DB 'timeeventscalex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IPGEOMGJ@timeeventairresistance@
CONST	SEGMENT
??_C@_0BH@IPGEOMGJ@timeeventairresistance@ DB 'timeeventairresistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IJAIPGAL@airresistance@
CONST	SEGMENT
??_C@_0O@IJAIPGAL@airresistance@ DB 'airresistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BHFJHILP@timeeventgravity@
CONST	SEGMENT
??_C@_0BB@BHFJHILP@timeeventgravity@ DB 'timeeventgravity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GFBFDLBM@gravity@
CONST	SEGMENT
??_C@_07GFBFDLBM@gravity@ DB 'gravity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DIHGKMNJ@texanirandomstartframeenable@
CONST	SEGMENT
??_C@_0BN@DIHGKMNJ@texanirandomstartframeenable@ DB 'texanirandomstartfra'
	DB	'meenable', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PDIDMMDH@texanidelay@
CONST	SEGMENT
??_C@_0M@PDIDMMDH@texanidelay@ DB 'texanidelay', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BIBLFGDP@texanitype@
CONST	SEGMENT
??_C@_0L@BIBLFGDP@texanitype@ DB 'texanitype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DFPNMBJD@stretchenable@
CONST	SEGMENT
??_C@_0O@DFPNMBJD@stretchenable@ DB 'stretchenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JFNGIJMG@attachenable@
CONST	SEGMENT
??_C@_0N@JFNGIJMG@attachenable@ DB 'attachenable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DKMEPDJP@rotationrandomstartingend@
CONST	SEGMENT
??_C@_0BK@DKMEPDJP@rotationrandomstartingend@ DB 'rotationrandomstartinge'
	DB	'nd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BGHFBHHG@rotationrandomstartingbegin@
CONST	SEGMENT
??_C@_0BM@BGHFBHHG@rotationrandomstartingbegin@ DB 'rotationrandomstartin'
	DB	'gbegin', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FAOBKFID@rotationspeed@
CONST	SEGMENT
??_C@_0O@FAOBKFID@rotationspeed@ DB 'rotationspeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HLMOOIDA@rotationtype@
CONST	SEGMENT
??_C@_0N@HLMOOIDA@rotationtype@ DB 'rotationtype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EJACNAIE@billboardtype@
CONST	SEGMENT
??_C@_0O@EJACNAIE@billboardtype@ DB 'billboardtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DAMHAFBJ@coloroperationtype@
CONST	SEGMENT
??_C@_0BD@DAMHAFBJ@coloroperationtype@ DB 'coloroperationtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FMHKLBEP@destblendtype@
CONST	SEGMENT
??_C@_0O@FMHKLBEP@destblendtype@ DB 'destblendtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPEOGKBI@srcblendtype@
CONST	SEGMENT
??_C@_0N@BPEOGKBI@srcblendtype@ DB 'srcblendtype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HGNFNICN@particleproperty@
CONST	SEGMENT
??_C@_0BB@HGNFNICN@particleproperty@ DB 'particleproperty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MDDIDOKG@timeeventsizey@
CONST	SEGMENT
??_C@_0P@MDDIDOKG@timeeventsizey@ DB 'timeeventsizey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NKCDAPOH@timeeventsizex@
CONST	SEGMENT
??_C@_0P@NKCDAPOH@timeeventsizex@ DB 'timeeventsizex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IBAOECEB@timeeventlifetime@
CONST	SEGMENT
??_C@_0BC@IBAOECEB@timeeventlifetime@ DB 'timeeventlifetime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KBEMNMAO@timeeventemissioncountpersecond@
CONST	SEGMENT
??_C@_0CA@KBEMNMAO@timeeventemissioncountpersecond@ DB 'timeeventemission'
	DB	'countpersecond', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JMDFAGCJ@timeeventemittingvelocity@
CONST	SEGMENT
??_C@_0BK@JMDFAGCJ@timeeventemittingvelocity@ DB 'timeeventemittingveloci'
	DB	'ty', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HBJCIDCH@timeeventemittingdirectionz@
CONST	SEGMENT
??_C@_0BM@HBJCIDCH@timeeventemittingdirectionz@ DB 'timeeventemittingdire'
	DB	'ctionz', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FKLPNAOE@timeeventemittingdirectiony@
CONST	SEGMENT
??_C@_0BM@FKLPNAOE@timeeventemittingdirectiony@ DB 'timeeventemittingdire'
	DB	'ctiony', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EDKEOBKF@timeeventemittingdirectionx@
CONST	SEGMENT
??_C@_0BM@EDKEOBKF@timeeventemittingdirectionx@ DB 'timeeventemittingdire'
	DB	'ctionx', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BEJHCOPI@timeeventemittingangularvelocit@
CONST	SEGMENT
??_C@_0CB@BEJHCOPI@timeeventemittingangularvelocit@ DB 'timeeventemitting'
	DB	'angularvelocity', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EOBNDMCN@timeeventemittingsize@
CONST	SEGMENT
??_C@_0BG@EOBNDMCN@timeeventemittingsize@ DB 'timeeventemittingsize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DDGDKONG@emittingdirection@
CONST	SEGMENT
??_C@_0BC@DDGDKONG@emittingdirection@ DB 'emittingdirection', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JPHOPPGG@emitteremitfromedgeflag@
CONST	SEGMENT
??_C@_0BI@JPHOPPGG@emitteremitfromedgeflag@ DB 'emitteremitfromedgeflag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CFPFJLBH@emittingradius@
CONST	SEGMENT
??_C@_0P@CFPFJLBH@emittingradius@ DB 'emittingradius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JELCEBGI@emittingsize@
CONST	SEGMENT
??_C@_0N@JELCEBGI@emittingsize@ DB 'emittingsize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NHCLCKPF@emitteradvancedtype@
CONST	SEGMENT
??_C@_0BE@NHCLCKPF@emitteradvancedtype@ DB 'emitteradvancedtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CEDHOJLK@emittershape@
CONST	SEGMENT
??_C@_0N@CEDHOJLK@emittershape@ DB 'emittershape', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HBCOMICA@loopcount@
CONST	SEGMENT
??_C@_09HBCOMICA@loopcount@ DB 'loopcount', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HFAFNHAP@cycleloopenable@
CONST	SEGMENT
??_C@_0BA@HFAFNHAP@cycleloopenable@ DB 'cycleloopenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CMAFBHMP@cyclelength@
CONST	SEGMENT
??_C@_0M@CMAFBHMP@cyclelength@ DB 'cyclelength', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GFCINCLJ@maxemissioncount@
CONST	SEGMENT
??_C@_0BB@GFCINCLJ@maxemissioncount@ DB 'maxemissioncount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BHDCJGBH@emitterproperty@
CONST	SEGMENT
??_C@_0BA@BHDCJGBH@emitterproperty@ DB 'emitterproperty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CRotationDecorator::`vftable'
	DD	FLAT:??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CRotationDecorator::`vftable'
	DD	FLAT:??_ECRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CRotationDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CRotationDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CGravityDecorator::`vftable'
	DD	FLAT:??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CGravityDecorator::`vftable'
	DD	FLAT:??_ECGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CGravityDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CGravityDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`vftable'
	DD	FLAT:??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`vftable'
	DD	FLAT:??_ECAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CAirResistanceDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CAirResistanceDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CNullDecorator::`vftable'
	DD	FLAT:??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CNullDecorator::`vftable'
	DD	FLAT:??_ECNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CHeaderDecorator::`vftable'
	DD	FLAT:??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CHeaderDecorator::`vftable'
	DD	FLAT:??_ECHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
CONST	SEGMENT
??_7CBaseDecorator@NEffectUpdateDecorator@@6B@ DD FLAT:??_R4CBaseDecorator@NEffectUpdateDecorator@@6B@ ; NEffectUpdateDecorator::CBaseDecorator::`vftable'
	DD	FLAT:??_ECBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7CParticleSystemData@@6B@
CONST	SEGMENT
??_7CParticleSystemData@@6B@ DD FLAT:??_R4CParticleSystemData@@6B@ ; CParticleSystemData::`vftable'
	DD	FLAT:??_ECParticleSystemData@@UAEPAXI@Z
	DD	FLAT:?OnClear@CParticleSystemData@@MAEXXZ
	DD	FLAT:?OnIsData@CParticleSystemData@@MAE_NXZ
	DD	FLAT:?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A DD FLAT:??_7?$CDynamicPool@VCParticleSystemData@@@@6B@ ; CParticleSystemData::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABM@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABM@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@ABM@Z$1
__ehfuncinfo$??$?0ABM@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABM@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABM@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@MPAX@std@@_N@1@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABM@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@MPAX@std@@_N@1@ABM@Z$2
__ehfuncinfo$??$_Emplace@ABM@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@MPAX@std@@_N@1@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABM@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@MPAX@std@@_N@1@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCParticleSystemData@@@@QAEPAVCParticleSystemData@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCParticleSystemData@@@@QAEPAVCParticleSystemData@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCParticleSystemData@@@@QAEPAVCParticleSystemData@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCParticleSystemData@@@@QAEPAVCParticleSystemData@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CParticleSystemData@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CParticleSystemData@@SAPAV1@XZ$0
__ehfuncinfo$?New@CParticleSystemData@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CParticleSystemData@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z DD 019930522H
	DD	03bH
	DD	FLAT:__unwindtable$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$5
	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$10
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$11
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$12
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$13
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$14
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$15
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$16
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$17
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$18
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$19
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$20
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$21
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$22
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$23
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$24
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$25
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$26
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$27
	DD	02dH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$28
	DD	02eH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$29
	DD	02fH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$30
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	030H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$31
	DD	0ffffffffH
	DD	00H
	DD	030H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$32
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	030H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$33
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CParticleSystemData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CParticleSystemData@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CParticleSystemData@@QAE@XZ$1
__ehfuncinfo$??0CParticleSystemData@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CParticleSystemData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CRotationDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CRotationDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CGravityDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CGravityDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CAirResistanceDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CAirResistanceDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z
??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<float>::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z
??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<float>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CNullDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CNullDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CHeaderDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CHeaderDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >, COMDAT
; _this$ = ecx

; 1017 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 255  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 14		 push	 20			; 00000014H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 1018 :             _Al.deallocate(_Ptr, 1);
; 1019 :         }
; 1020 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@AAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv639 = -8						; size = 4
tv622 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@AAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN88@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN89@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv639[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv622[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 908  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN73@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv622[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN73@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv639[ebp]
  00124	03 cf		 add	 ecx, edi

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00126	5f		 pop	 edi

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 921  :     }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN88@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Xlength
$LN89@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@AAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z
_TEXT	SEGMENT
tv644 = -12						; size = 4
tv655 = -8						; size = 4
__Newsize$1$ = -4					; size = 4
$T4 = 8							; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  0000a	8b 75 08	 mov	 esi, DWORD PTR __Whereptr$[ebp]
  0000d	57		 push	 edi
  0000e	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00010	8b fe		 mov	 edi, esi

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00015	2b f9		 sub	 edi, ecx
  00017	2b c1		 sub	 eax, ecx
  00019	c1 ff 03	 sar	 edi, 3
  0001c	c1 f8 03	 sar	 eax, 3

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001f	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00024	0f 84 44 01 00
	00		 je	 $LN101@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002a	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002d	40		 inc	 eax

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 45 fc	 mov	 DWORD PTR __Newsize$1$[ebp], eax

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 03	 sar	 edx, 3

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 13		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 f8 ff ff ff	 mov	 eax, -8			; fffffff8H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv655[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	eb 44		 jmp	 SHORT $LN99@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00058	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005b	8b 4d fc	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  0005e	3b c1		 cmp	 eax, ecx
  00060	0f 43 c8	 cmovae	 ecx, eax
  00063	81 f9 ff ff ff
	1f		 cmp	 ecx, 536870911		; 1fffffffH
  00069	0f 87 04 01 00
	00		 ja	 $LN102@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0006f	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00076	89 45 f8	 mov	 DWORD PTR tv655[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00079	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007e	72 0b		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00086	83 c4 04	 add	 esp, 4
  00089	eb 11		 jmp	 SHORT $LN99@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008b	85 c0		 test	 eax, eax
  0008d	74 0b		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00095	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  00098	eb 02		 jmp	 SHORT $LN99@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  0009a	33 c0		 xor	 eax, eax
$LN99@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009c	8d 14 f8	 lea	 edx, DWORD PTR [eax+edi*8]
  0009f	89 45 08	 mov	 DWORD PTR $T4[ebp], eax
  000a2	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a5	89 55 f4	 mov	 DWORD PTR tv644[ebp], edx
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ad	89 0a		 mov	 DWORD PTR [edx], ecx
  000af	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 900  :         _Constructed_first = _Newvec + _Whereoff;
; 901  : 
; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b2	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  000b5	8b 13		 mov	 edx, DWORD PTR [ebx]
  000b7	3b f7		 cmp	 esi, edi
  000b9	75 1e		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000bb	8b 75 08	 mov	 esi, DWORD PTR $T4[ebp]

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000be	3b d7		 cmp	 edx, edi
  000c0	74 53		 je	 SHORT $LN75@Emplace_re
$LL54@Emplace_re:

; 1663 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000c2	8b 02		 mov	 eax, DWORD PTR [edx]

; 1664 :         ++_Last;

  000c4	8d 76 08	 lea	 esi, DWORD PTR [esi+8]
  000c7	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000ca	83 c2 08	 add	 edx, 8

; 1663 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000cd	89 46 f8	 mov	 DWORD PTR [esi-8], eax
  000d0	89 4e fc	 mov	 DWORD PTR [esi-4], ecx

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000d3	3b d7		 cmp	 edx, edi
  000d5	75 eb		 jne	 SHORT $LL54@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 908  :         } else { // provide basic guarantee

  000d7	eb 3c		 jmp	 SHORT $LN75@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1652 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000d9	8b 7d 08	 mov	 edi, DWORD PTR $T4[ebp]

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000dc	3b d6		 cmp	 edx, esi
  000de	74 15		 je	 SHORT $LN64@Emplace_re
$LL65@Emplace_re:

; 1663 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000e0	8b 02		 mov	 eax, DWORD PTR [edx]

; 1664 :         ++_Last;

  000e2	8d 7f 08	 lea	 edi, DWORD PTR [edi+8]
  000e5	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000e8	83 c2 08	 add	 edx, 8

; 1663 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000eb	89 47 f8	 mov	 DWORD PTR [edi-8], eax
  000ee	89 4f fc	 mov	 DWORD PTR [edi-4], ecx

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000f1	3b d6		 cmp	 edx, esi
  000f3	75 eb		 jne	 SHORT $LL65@Emplace_re
$LN64@Emplace_re:

; 1793 :     const auto _ULast = _Get_unwrapped(_Last);

  000f5	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]

; 1794 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1795 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1796 : #if _HAS_CXX20
; 1797 :         if (!_STD is_constant_evaluated())
; 1798 : #endif // _HAS_CXX20
; 1799 :         {
; 1800 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1801 :             return _Dest + (_ULast - _UFirst);
; 1802 :         }
; 1803 :     }
; 1804 : 
; 1805 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  000f8	3b f7		 cmp	 esi, edi
  000fa	74 19		 je	 SHORT $LN75@Emplace_re
  000fc	8b 55 f4	 mov	 edx, DWORD PTR tv644[ebp]
  000ff	2b d6		 sub	 edx, esi
$LL76@Emplace_re:

; 1663 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00101	8b 06		 mov	 eax, DWORD PTR [esi]
  00103	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00106	89 44 32 08	 mov	 DWORD PTR [edx+esi+8], eax
  0010a	89 4c 32 0c	 mov	 DWORD PTR [edx+esi+12], ecx

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  0010e	83 c6 08	 add	 esi, 8
  00111	3b f7		 cmp	 esi, edi
  00113	75 ec		 jne	 SHORT $LL76@Emplace_re
$LN75@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  00115	8b 03		 mov	 eax, DWORD PTR [ebx]
  00117	85 c0		 test	 eax, eax
  00119	74 2c		 je	 SHORT $LN37@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0011b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0011e	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00120	83 e1 f8	 and	 ecx, -8			; fffffff8H

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00123	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00129	72 12		 jb	 SHORT $LN47@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0012b	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0012e	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00131	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00133	83 c0 fc	 add	 eax, -4			; fffffffcH
  00136	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00139	77 2e		 ja	 SHORT $LN44@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0013b	8b c2		 mov	 eax, edx
$LN47@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0013d	51		 push	 ecx
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00144	83 c4 08	 add	 esp, 8
$LN37@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2092 :         _Myfirst = _Newvec;

  00147	8b 45 08	 mov	 eax, DWORD PTR $T4[ebp]

; 2093 :         _Mylast  = _Newvec + _Newsize;

  0014a	8b 4d fc	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  0014d	89 03		 mov	 DWORD PTR [ebx], eax

; 909  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);
; 910  :             _Constructed_first = _Newvec;
; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);
; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00151	8d 0c c8	 lea	 ecx, DWORD PTR [eax+ecx*8]
  00154	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00157	8b 4d f8	 mov	 ecx, DWORD PTR tv655[ebp]
  0015a	03 c8		 add	 ecx, eax

; 909  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);
; 910  :             _Constructed_first = _Newvec;
; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);
; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0015c	8b 45 f4	 mov	 eax, DWORD PTR tv644[ebp]

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  0015f	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx

; 909  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);
; 910  :             _Constructed_first = _Newvec;
; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);
; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00162	5b		 pop	 ebx

; 921  :     }

  00163	8b e5		 mov	 esp, ebp
  00165	5d		 pop	 ebp
  00166	c2 08 00	 ret	 8
$LN44@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00169	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN101@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  0016e	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Xlength
$LN102@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00173	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN98@Emplace_re:
  00178	cc		 int	 3
??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@AAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z
_TEXT	SEGMENT
tv948 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
$T4 = -4						; size = 4
tv947 = 8						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@AAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z PROC ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Emplace_reallocate<CTimeEvent<DWORDCOLOR> const &>, COMDAT
; _this$ = ecx

; 875  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 876  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 877  :         _Alty& _Al        = _Getal();
; 878  :         auto& _My_data    = _Mypair._Myval2;
; 879  :         pointer& _Myfirst = _My_data._Myfirst;
; 880  :         pointer& _Mylast  = _My_data._Mylast;
; 881  : 
; 882  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 883  : 
; 884  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00008	8b 75 08	 mov	 esi, DWORD PTR __Whereptr$[ebp]
  0000b	8b de		 mov	 ebx, esi
  0000d	57		 push	 edi
  0000e	8b f9		 mov	 edi, ecx
  00010	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00012	2b d9		 sub	 ebx, ecx

; 885  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00014	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00017	2b c1		 sub	 eax, ecx
  00019	c1 fb 03	 sar	 ebx, 3
  0001c	c1 f8 03	 sar	 eax, 3

; 886  : 
; 887  :         if (_Oldsize == max_size()) {

  0001f	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00024	0f 84 54 01 00
	00		 je	 $LN127@Emplace_re

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002a	8b 57 08	 mov	 edx, DWORD PTR [edi+8]

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  0002d	40		 inc	 eax

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 889  :         }
; 890  : 
; 891  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 45 f8	 mov	 DWORD PTR __Newsize$1$[ebp], eax

; 1942 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 03	 sar	 edx, 3

; 2029 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 2030 :             return _Max; // geometric growth would overflow

  00045	b8 f8 ff ff ff	 mov	 eax, -8			; fffffff8H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2030 :             return _Max; // geometric growth would overflow

  0004b	89 45 f4	 mov	 DWORD PTR tv948[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b d0		 mov	 edx, eax
  00058	eb 4b		 jmp	 SHORT $LN125@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2033 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  00060	3b c1		 cmp	 eax, ecx
  00062	0f 43 c8	 cmovae	 ecx, eax
  00065	81 f9 ff ff ff
	1f		 cmp	 ecx, 536870911		; 1fffffffH
  0006b	0f 87 12 01 00
	00		 ja	 $LN128@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00071	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00078	89 45 f4	 mov	 DWORD PTR tv948[ebp], eax

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007b	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00080	72 0d		 jb	 SHORT $LN24@Emplace_re

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00088	83 c4 04	 add	 esp, 4
  0008b	8b d0		 mov	 edx, eax
  0008d	eb 16		 jmp	 SHORT $LN125@Emplace_re
$LN24@Emplace_re:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  0008f	85 c0		 test	 eax, eax
  00091	74 10		 je	 SHORT $LN25@Emplace_re

; 77   :         return ::operator new(_Bytes);

  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00099	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  0009c	89 45 fc	 mov	 DWORD PTR $T4[ebp], eax
  0009f	8b d0		 mov	 edx, eax
  000a1	eb 05		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000a3	33 d2		 xor	 edx, edx
$LN125@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 899  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a5	89 55 fc	 mov	 DWORD PTR $T4[ebp], edx
$LN23@Emplace_re:
  000a8	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
  000ab	8d 1c da	 lea	 ebx, DWORD PTR [edx+ebx*8]
  000ae	89 5d 08	 mov	 DWORD PTR tv947[ebp], ebx
  000b1	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b3	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  000b5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000b8	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 902  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000bb	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
  000be	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000c0	3b f3		 cmp	 esi, ebx
  000c2	75 6f		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  000c4	3b cb		 cmp	 ecx, ebx
  000c6	74 15		 je	 SHORT $LN123@Emplace_re
$LL60@Emplace_re:
  000c8	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1664 :         ++_Last;

  000ca	8d 52 08	 lea	 edx, DWORD PTR [edx+8]
  000cd	89 42 f8	 mov	 DWORD PTR [edx-8], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  000d0	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  000d3	83 c1 08	 add	 ecx, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  000d6	89 42 fc	 mov	 DWORD PTR [edx-4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  000d9	3b cb		 cmp	 ecx, ebx
  000db	75 eb		 jne	 SHORT $LL60@Emplace_re
$LN123@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2086 :         if (_Myfirst) { // destroy and deallocate old array

  000dd	8b 5d 08	 mov	 ebx, DWORD PTR tv947[ebp]
$LN93@Emplace_re:
  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	85 c0		 test	 eax, eax
  000e4	74 2c		 je	 SHORT $LN43@Emplace_re

; 2087 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2088 :             _ASAN_VECTOR_REMOVE;
; 2089 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e6	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000e9	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000eb	83 e1 f8	 and	 ecx, -8			; fffffff8H

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000ee	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f4	72 12		 jb	 SHORT $LN53@Emplace_re

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f6	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f9	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fc	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fe	83 c0 fc	 add	 eax, -4			; fffffffcH
  00101	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00104	77 73		 ja	 SHORT $LN50@Emplace_re

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00106	8b c2		 mov	 eax, edx
$LN53@Emplace_re:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00108	51		 push	 ecx
  00109	50		 push	 eax
  0010a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010f	83 c4 08	 add	 esp, 8
$LN43@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2092 :         _Myfirst = _Newvec;

  00112	8b 45 fc	 mov	 eax, DWORD PTR $T4[ebp]

; 2093 :         _Mylast  = _Newvec + _Newsize;

  00115	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  00118	89 07		 mov	 DWORD PTR [edi], eax
  0011a	8d 0c c8	 lea	 ecx, DWORD PTR [eax+ecx*8]
  0011d	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00120	8b 4d f4	 mov	 ecx, DWORD PTR tv948[ebp]
  00123	03 c8		 add	 ecx, eax

; 903  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 904  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);
; 905  :             } else {
; 906  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 907  :             }
; 908  :         } else { // provide basic guarantee
; 909  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);
; 910  :             _Constructed_first = _Newvec;
; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);
; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  00125	8b c3		 mov	 eax, ebx

; 2094 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 903  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 904  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);
; 905  :             } else {
; 906  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 907  :             }
; 908  :         } else { // provide basic guarantee
; 909  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);
; 910  :             _Constructed_first = _Newvec;
; 911  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);
; 912  :         }
; 913  :         _CATCH_ALL
; 914  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 915  :         _Al.deallocate(_Newvec, _Newcapacity);
; 916  :         _RERAISE;
; 917  :         _CATCH_END
; 918  : 
; 919  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 920  :         return _Newvec + _Whereoff;

  0012a	5f		 pop	 edi
  0012b	5e		 pop	 esi
  0012c	5b		 pop	 ebx

; 921  :     }

  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 08 00	 ret	 8
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  00133	3b ce		 cmp	 ecx, esi
  00135	74 15		 je	 SHORT $LN76@Emplace_re
$LL77@Emplace_re:
  00137	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1664 :         ++_Last;

  00139	8d 52 08	 lea	 edx, DWORD PTR [edx+8]
  0013c	89 42 f8	 mov	 DWORD PTR [edx-8], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  0013f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  00142	83 c1 08	 add	 ecx, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  00145	89 42 fc	 mov	 DWORD PTR [edx-4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  00148	3b ce		 cmp	 ecx, esi
  0014a	75 eb		 jne	 SHORT $LL77@Emplace_re
$LN76@Emplace_re:

; 1793 :     const auto _ULast = _Get_unwrapped(_Last);

  0014c	8b 57 04	 mov	 edx, DWORD PTR [edi+4]

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  0014f	3b f2		 cmp	 esi, edx
  00151	74 8a		 je	 SHORT $LN123@Emplace_re
  00153	8b 5d 08	 mov	 ebx, DWORD PTR tv947[ebp]
  00156	8b cb		 mov	 ecx, ebx
  00158	2b ce		 sub	 ecx, esi
  0015a	66 0f 1f 44 00
	00		 npad	 6
$LL94@Emplace_re:
  00160	8b 06		 mov	 eax, DWORD PTR [esi]
  00162	89 44 31 08	 mov	 DWORD PTR [ecx+esi+8], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	89 44 31 0c	 mov	 DWORD PTR [ecx+esi+12], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1806 :     for (; _UFirst != _ULast; ++_UFirst) {

  0016d	83 c6 08	 add	 esi, 8
  00170	3b f2		 cmp	 esi, edx
  00172	75 ec		 jne	 SHORT $LL94@Emplace_re

; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {

  00174	e9 67 ff ff ff	 jmp	 $LN93@Emplace_re
$LN50@Emplace_re:

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00179	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN127@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 888  :             _Xlength();

  0017e	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Xlength
$LN128@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00183	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN124@Emplace_re:
  00188	cc		 int	 3
??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@AAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z ENDP ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Emplace_reallocate<CTimeEvent<DWORDCOLOR> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >, COMDAT
; _this$ = ecx

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 654  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00023	6a 14		 push	 20			; 00000014H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 748  :         }
; 749  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >
??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
;	COMDAT ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z
_TEXT	SEGMENT
__UMid$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z PROC ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>, COMDAT

; 6630 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 6596 :     auto _UFirst      = _Get_unwrapped(_First);

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]

; 6630 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00008	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1162 :         return _Last - _First; // assume the iterator will do debug checking

  00009	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  0000c	2b f3		 sub	 esi, ebx
  0000e	c1 fe 03	 sar	 esi, 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6603 :         if (_Count <= 0) {

  00011	85 f6		 test	 esi, esi
  00013	7e 36		 jle	 SHORT $LN66@equal_rang
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 197  : 	return lhs.m_fTime < rhs;

  00015	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  00018	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0001c	0f 1f 40 00	 npad	 4
$LL4@equal_rang:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6609 :         _Diff _Count2    = _Count / 2;

  00020	8b d6		 mov	 edx, esi
  00022	d1 ea		 shr	 edx, 1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 197  : 	return lhs.m_fTime < rhs;

  00024	f3 0f 10 04 d3	 movss	 xmm0, DWORD PTR [ebx+edx*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1134 :         _Where += _Off;

  00029	8d 04 d3	 lea	 eax, DWORD PTR [ebx+edx*8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 197  : 	return lhs.m_fTime < rhs;

  0002c	0f 2f c8	 comiss	 xmm1, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1134 :         _Where += _Off;

  0002f	89 45 fc	 mov	 DWORD PTR __UMid$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6611 :         if (_DEBUG_LT_PRED(_Pred, *_UMid, _Val)) { // range begins above _UMid, loop

  00032	76 0c		 jbe	 SHORT $LN8@equal_rang

; 6612 :             _UFirst = _Next_iter(_UMid);

  00034	8d 58 08	 lea	 ebx, DWORD PTR [eax+8]

; 6613 :             _Count -= _Count2 + 1;

  00037	83 c8 ff	 or	 eax, -1
  0003a	2b c2		 sub	 eax, edx
  0003c	03 f0		 add	 esi, eax

; 6614 :         } else if (_Pred(_Val, *_UMid)) {

  0003e	eb 07		 jmp	 SHORT $LN11@equal_rang
$LN8@equal_rang:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 203  : 	return lhs < rhs.m_fTime;

  00040	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6614 :         } else if (_Pred(_Val, *_UMid)) {

  00043	76 1a		 jbe	 SHORT $LN10@equal_rang

; 6615 :             _Count = _Count2; // range in first half, loop

  00045	8b f2		 mov	 esi, edx
$LN11@equal_rang:

; 6603 :         if (_Count <= 0) {

  00047	85 f6		 test	 esi, esi
  00049	7f d5		 jg	 SHORT $LL4@equal_rang
$LN66@equal_rang:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  0004b	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6604 :             _Seek_wrapped(_Last, _UFirst); // empty range

  0004e	8b c3		 mov	 eax, ebx

; 6605 :             _Seek_wrapped(_First, _UFirst);

  00050	8b cb		 mov	 ecx, ebx

; 6632 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00054	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6632 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  00057	8b c2		 mov	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00059	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6633 : }

  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
$LN10@equal_rang:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 5939 :     auto _UFirst                = _Get_unwrapped(_First);

  0005f	8b cb		 mov	 ecx, ebx
  00061	57		 push	 edi

; 5940 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5941 : 
; 5942 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00062	85 d2		 test	 edx, edx
  00064	74 22		 je	 SHORT $LN29@equal_rang
$LL28@equal_rang:

; 5943 :         const _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00066	8b fa		 mov	 edi, edx
  00068	d1 ef		 shr	 edi, 1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 197  : 	return lhs.m_fTime < rhs;

  0006a	0f 2f 0c f9	 comiss	 xmm1, DWORD PTR [ecx+edi*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1134 :         _Where += _Off;

  0006e	8d 04 f9	 lea	 eax, DWORD PTR [ecx+edi*8]

; 5945 :         if (_Pred(*_UMid, _Val)) { // try top half

  00071	76 0c		 jbe	 SHORT $LN30@equal_rang

; 5946 :             _UFirst = _Next_iter(_UMid);

  00073	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]

; 5947 :             _Count -= _Count2 + 1;

  00076	83 c8 ff	 or	 eax, -1
  00079	2b c7		 sub	 eax, edi
  0007b	03 d0		 add	 edx, eax

; 5948 :         } else {

  0007d	eb 02		 jmp	 SHORT $LN31@equal_rang
$LN30@equal_rang:

; 5949 :             _Count = _Count2;

  0007f	8b d7		 mov	 edx, edi
$LN31@equal_rang:

; 5940 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5941 : 
; 5942 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00081	85 d2		 test	 edx, edx
  00083	7f e1		 jg	 SHORT $LL28@equal_rang
  00085	8b 45 fc	 mov	 eax, DWORD PTR __UMid$1$[ebp]
$LN29@equal_rang:

; 1134 :         _Where += _Off;

  00088	c1 e6 03	 shl	 esi, 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6619 :             auto _ULast2 = _STD upper_bound(_Next_iter(_UMid), _UFirst, _Val, _Pass_fn(_Pred));

  0008b	83 c0 08	 add	 eax, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 5968 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));

  0008e	2b f0		 sub	 esi, eax

; 1162 :         return _Last - _First; // assume the iterator will do debug checking

  00090	03 f3		 add	 esi, ebx
  00092	c1 fe 03	 sar	 esi, 3

; 5970 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00095	85 f6		 test	 esi, esi
  00097	7e 2a		 jle	 SHORT $LN47@equal_rang
  00099	0f 1f 80 00 00
	00 00		 npad	 7
$LL46@equal_rang:

; 5971 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  000a0	8b fe		 mov	 edi, esi
  000a2	d1 ef		 shr	 edi, 1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 203  : 	return lhs < rhs.m_fTime;

  000a4	f3 0f 10 04 f8	 movss	 xmm0, DWORD PTR [eax+edi*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 1134 :         _Where += _Off;

  000a9	8d 14 f8	 lea	 edx, DWORD PTR [eax+edi*8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 203  : 	return lhs < rhs.m_fTime;

  000ac	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility

; 5973 :         if (_Pred(_Val, *_UMid)) {

  000af	76 04		 jbe	 SHORT $LN48@equal_rang

; 5974 :             _Count = _Count2;

  000b1	8b f7		 mov	 esi, edi

; 5975 :         } else { // try top half

  000b3	eb 0a		 jmp	 SHORT $LN49@equal_rang
$LN48@equal_rang:

; 5976 :             _UFirst = _Next_iter(_UMid);

  000b5	8d 42 08	 lea	 eax, DWORD PTR [edx+8]

; 5977 :             _Count -= _Count2 + 1;

  000b8	83 ca ff	 or	 edx, -1
  000bb	2b d7		 sub	 edx, edi
  000bd	03 f2		 add	 esi, edx
$LN49@equal_rang:

; 5969 : 
; 5970 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  000bf	85 f6		 test	 esi, esi
  000c1	7f dd		 jg	 SHORT $LL46@equal_rang
$LN47@equal_rang:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  000c3	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  000c6	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6632 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  000c9	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6632 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  000cc	8b c2		 mov	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  000ce	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 6633 : }

  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c3		 ret	 0
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ENDP ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 280  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::Delete, COMDAT

; 232  : 		::operator delete (pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >, COMDAT
; _this$ = ecx

; 136  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0002d	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00030	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00033	3b f3		 cmp	 esi, ebx
  00035	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00037	ff 36		 push	 DWORD PTR [esi]
  00039	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003e	83 c6 04	 add	 esi, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 232  : 		::operator delete (pkData);

  00041	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00044	3b f3		 cmp	 esi, ebx
  00046	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00048	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0004e	74 03		 je	 SHORT $LN26@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00050	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN26@CDynamicPo:

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00053	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00056	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00059	74 03		 je	 SHORT $LN29@CDynamicPo

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN29@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 41		 je	 SHORT $LN35@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN51@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 7b		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN51@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  0008b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00092	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00095	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2114 :             _Myend   = nullptr;

  0009c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN35@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a6	85 c0		 test	 eax, eax
  000a8	74 41		 je	 SHORT $LN60@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000aa	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000ad	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b8	72 12		 jb	 SHORT $LN76@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ba	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000bd	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000c0	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c8	77 33		 ja	 SHORT $LN73@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000ca	8b c2		 mov	 eax, edx
$LN76@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  000d3	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  000da	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  000dd	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2114 :             _Myend   = nullptr;

  000e4	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN60@CDynamicPo:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 146  : 	}

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
$LN73@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN86@CDynamicPo:
  00102	cc		 int	 3
  00103	cc		 int	 3
  00104	cc		 int	 3
  00105	cc		 int	 3
  00106	cc		 int	 3
  00107	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_G?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 122  : 	virtual ~CTimeEventDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 24		 push	 36			; 00000024H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_G?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
tv729 = -4						; size = 4
_length$1$ = 8						; size = 4
_d$ = 8							; size = 4
?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Excute, COMDAT
; _this$ = ecx

; 142  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx
  00007	56		 push	 esi
  00008	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  00009	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0000c	39 53 10	 cmp	 DWORD PTR [ebx+16], edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 143  : 		if (it_start == it_end)

  0000f	75 0b		 jne	 SHORT $LN4@Excute

; 72   : 		m_PrevDecorator->m_NextDecorator = m_NextDecorator;

  00011	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00014	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00017	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 144  : 		{
; 145  : 			RemoveMe();
; 146  : 		}

  0001a	eb 68		 jmp	 SHORT $LN62@Excute
$LN4@Excute:

; 147  : 		else if (it_cur->m_fTime > d.fTime)

  0001c	8b 73 18	 mov	 esi, DWORD PTR [ebx+24]
  0001f	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00022	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00026	f3 0f 10 17	 movss	 xmm2, DWORD PTR [edi]
  0002a	0f 2f c2	 comiss	 xmm0, xmm2
  0002d	76 11		 jbe	 SHORT $LN55@Excute
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 146  : 		m_dwColor = r.m_dwColor;

  0002f	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00032	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 172  : 	}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN55@Excute:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  00040	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00043	3b c2		 cmp	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 153  : 			while (it_next != it_end && it_next->m_fTime <= d.fTime)

  00045	74 2c		 je	 SHORT $LN61@Excute
  00047	8b c8		 mov	 ecx, eax
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@Excute:
  00050	0f 2f 11	 comiss	 xmm2, DWORD PTR [ecx]
  00053	8b f8		 mov	 edi, eax
  00055	89 75 fc	 mov	 DWORD PTR tv729[ebp], esi
  00058	72 12		 jb	 SHORT $LN59@Excute
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  0005a	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  0005d	83 c6 08	 add	 esi, 8
  00060	8b c8		 mov	 ecx, eax
  00062	89 73 18	 mov	 DWORD PTR [ebx+24], esi
  00065	89 43 1c	 mov	 DWORD PTR [ebx+28], eax

; 156  :         return _Ptr == _Right._Ptr;

  00068	3b ca		 cmp	 ecx, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 153  : 			while (it_next != it_end && it_next->m_fTime <= d.fTime)

  0006a	75 e4		 jne	 SHORT $LL2@Excute
$LN59@Excute:
  0006c	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  0006f	3b c2		 cmp	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 157  : 			if (it_next == it_end)

  00071	75 2b		 jne	 SHORT $LN8@Excute
$LN61@Excute:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 146  : 		m_dwColor = r.m_dwColor;

  00073	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00076	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00079	89 01		 mov	 DWORD PTR [ecx], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 72   : 		m_PrevDecorator->m_NextDecorator = m_NextDecorator;

  0007b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0007e	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00081	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN62@Excute:

; 172  : 	}

  00084	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00087	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0008a	6a 01		 push	 1
  0008c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0008f	8b cb		 mov	 ecx, ebx
  00091	8b 03		 mov	 eax, DWORD PTR [ebx]
  00093	ff 10		 call	 DWORD PTR [eax]
  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	5b		 pop	 ebx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
$LN8@Excute:

; 158  : 			{
; 159  : 				// setting value
; 160  : 				*pData = it_cur->m_Value;
; 161  : 
; 162  : 				RemoveMe();
; 163  : 			}
; 164  : 			else
; 165  : 			{
; 166  : 				float length = it_next->m_fTime - it_cur->m_fTime;

  0009e	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  000a2	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]

; 168  : 				*pData = it_cur->m_Value * (1 - (d.fTime - it_cur->m_fTime) / length) ;

  000a6	f3 0f 5c d0	 subss	 xmm2, xmm0
  000aa	f3 0f 5c c8	 subss	 xmm1, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  000ae	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 168  : 				*pData = it_cur->m_Value * (1 - (d.fTime - it_cur->m_fTime) / length) ;

  000b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000b9	f3 0f 5e d1	 divss	 xmm2, xmm1
  000bd	f3 0f 11 4d 08	 movss	 DWORD PTR _length$1$[ebp], xmm1
  000c2	f3 0f 5c c2	 subss	 xmm0, xmm2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 152  : 		DWORD idx = DWORD(f * 256);

  000c6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@43800000
  000ce	e8 00 00 00 00	 call	 __ftol3

; 153  : 		m_dwColor =

  000d3	8b d6		 mov	 edx, esi
  000d5	81 e6 ff 00 ff
	00		 and	 esi, 16711935		; 00ff00ffH
  000db	0f af f0	 imul	 esi, eax
  000de	c1 ea 08	 shr	 edx, 8
  000e1	8b ca		 mov	 ecx, edx
  000e3	81 e2 ff 00 ff
	00		 and	 edx, 16711935		; 00ff00ffH
  000e9	81 e1 ff 00 ff
	ff		 and	 ecx, -65281		; ffff00ffH
  000ef	0f af d0	 imul	 edx, eax
  000f2	0f af c8	 imul	 ecx, eax

; 146  : 		m_dwColor = r.m_dwColor;

  000f5	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]

; 153  : 		m_dwColor =

  000f8	c1 ee 08	 shr	 esi, 8
  000fb	33 f1		 xor	 esi, ecx
  000fd	81 e6 ff 00 ff
	00		 and	 esi, 16711935		; 00ff00ffH
  00103	33 f2		 xor	 esi, edx

; 146  : 		m_dwColor = r.m_dwColor;

  00105	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 169  : 				*pData += it_next->m_Value * ((d.fTime - it_cur->m_fTime) / length);

  00107	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  0010a	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  0010e	8b 73 1c	 mov	 esi, DWORD PTR [ebx+28]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 169  : 				*pData += it_next->m_Value * ((d.fTime - it_cur->m_fTime) / length);

  00111	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  00115	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 169  : 				*pData += it_next->m_Value * ((d.fTime - it_cur->m_fTime) / length);

  00118	f3 0f 5e 45 08	 divss	 xmm0, DWORD PTR _length$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 152  : 		DWORD idx = DWORD(f * 256);

  0011d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@43800000
  00125	e8 00 00 00 00	 call	 __ftol3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 169  : 				*pData += it_next->m_Value * ((d.fTime - it_cur->m_fTime) / length);

  0012a	8b 53 20	 mov	 edx, DWORD PTR [ebx+32]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 153  : 		m_dwColor =

  0012d	8b fe		 mov	 edi, esi
  0012f	c1 ef 08	 shr	 edi, 8
  00132	81 e6 ff 00 ff
	00		 and	 esi, 16711935		; 00ff00ffH
  00138	0f af f0	 imul	 esi, eax
  0013b	8b cf		 mov	 ecx, edi
  0013d	81 e1 ff 00 ff
	ff		 and	 ecx, -65281		; ffff00ffH
  00143	81 e7 ff 00 ff
	00		 and	 edi, 16711935		; 00ff00ffH
  00149	0f af c8	 imul	 ecx, eax
  0014c	0f af f8	 imul	 edi, eax
  0014f	c1 ee 08	 shr	 esi, 8
  00152	33 f1		 xor	 esi, ecx
  00154	81 e6 ff 00 ff
	00		 and	 esi, 16711935		; 00ff00ffH
  0015a	33 f7		 xor	 esi, edi

; 163  : 		m_dwColor += r.m_dwColor;

  0015c	01 32		 add	 DWORD PTR [edx], esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 172  : 	}

  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
$T2 = 8							; size = 4
_pFirstInstance$ = 8					; size = 4
_pInstance$ = 12					; size = 4
?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Clone, COMDAT
; _this$ = ecx

; 140  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pFirstInstance, CParticleInstance* pInstance) { return new CTimeEventDecorator(*this, pFirstInstance, pInstance); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	57		 push	 edi
  00006	6a 24		 push	 36			; 00000024H
  00008	8b d9		 mov	 ebx, ecx
  0000a	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new
  0000f	8b f8		 mov	 edi, eax
  00011	83 c4 04	 add	 esp, 4
  00014	89 7d fc	 mov	 DWORD PTR $T1[ebp], edi
  00017	85 ff		 test	 edi, edi
  00019	74 5d		 je	 SHORT $LN3@Clone

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  0001b	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00022	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00029	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 134  : 	{

  00030	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00036	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  0003d	56		 push	 esi

; 129  : 		:	it_start(ted.it_start),

  0003e	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00041	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 130  : 		  it_end(ted.it_end),

  00044	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  00047	89 57 14	 mov	 DWORD PTR [edi+20], edx

; 131  : 		  it_cur(ted.it_cur),

  0004a	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  0004d	89 47 18	 mov	 DWORD PTR [edi+24], eax

; 132  : 		  it_next(ted.it_next),

  00050	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00053	89 47 1c	 mov	 DWORD PTR [edi+28], eax

; 133  : 		  pData((T*)( (unsigned char*)ted.pData - (DWORD)pFirstInstance + (DWORD)pInstance))

  00056	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00059	2b 4d 08	 sub	 ecx, DWORD PTR _pFirstInstance$[ebp]
  0005c	8b 45 0c	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0005f	03 c1		 add	 eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  00061	3b f2		 cmp	 esi, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 133  : 		  pData((T*)( (unsigned char*)ted.pData - (DWORD)pFirstInstance + (DWORD)pInstance))

  00063	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  00066	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 135  : 		if (it_start == it_end)

  00067	75 05		 jne	 SHORT $LN7@Clone
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 146  : 		m_dwColor = r.m_dwColor;

  00069	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]
  0006c	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Clone:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 140  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pFirstInstance, CParticleInstance* pInstance) { return new CTimeEventDecorator(*this, pFirstInstance, pInstance); }

  0006e	8b c7		 mov	 eax, edi
  00070	5f		 pop	 edi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
$LN3@Clone:
  00078	5f		 pop	 edi
  00079	33 c0		 xor	 eax, eax
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::~CTimeEventDecorator<DWORDCOLOR>, COMDAT
; _this$ = ecx

; 122  : 	virtual ~CTimeEventDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::~CTimeEventDecorator<DWORDCOLOR>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 24		 push	 36			; 00000024H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_G?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 122  : 	virtual ~CTimeEventDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 24		 push	 36			; 00000024H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_G?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
tv553 = -4						; size = 4
_d$ = 8							; size = 4
?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Excute, COMDAT
; _this$ = ecx

; 142  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  00008	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]
  0000b	39 7e 10	 cmp	 DWORD PTR [esi+16], edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 143  : 		if (it_start == it_end)

  0000e	75 22		 jne	 SHORT $LN4@Excute

; 72   : 		m_PrevDecorator->m_NextDecorator = m_NextDecorator;

  00010	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00013	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 74   : 		delete this;

  00016	6a 01		 push	 1
  00018	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0001b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00021	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00024	8b ce		 mov	 ecx, esi
  00026	8b 06		 mov	 eax, DWORD PTR [esi]
  00028	ff 10		 call	 DWORD PTR [eax]
  0002a	5f		 pop	 edi

; 170  : 			}
; 171  : 		}
; 172  : 	}

  0002b	5e		 pop	 esi
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
$LN4@Excute:

; 144  : 		{
; 145  : 			RemoveMe();
; 146  : 		}
; 147  : 		else if (it_cur->m_fTime > d.fTime)

  00032	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00035	53		 push	 ebx
  00036	8b 5d 08	 mov	 ebx, DWORD PTR _d$[ebp]
  00039	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0003d	f3 0f 10 13	 movss	 xmm2, DWORD PTR [ebx]
  00041	0f 2f c2	 comiss	 xmm0, xmm2
  00044	76 11		 jbe	 SHORT $LN31@Excute

; 148  : 		{
; 149  : 			*pData = it_cur->m_Value;

  00046	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00049	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004c	5b		 pop	 ebx
  0004d	5f		 pop	 edi
  0004e	89 01		 mov	 DWORD PTR [ecx], eax

; 170  : 			}
; 171  : 		}
; 172  : 	}

  00050	5e		 pop	 esi
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
$LN31@Excute:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  00057	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0005a	3b c7		 cmp	 eax, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 153  : 			while (it_next != it_end && it_next->m_fTime <= d.fTime)

  0005c	74 25		 je	 SHORT $LN38@Excute
  0005e	8b c8		 mov	 ecx, eax
$LL2@Excute:
  00060	0f 2f 11	 comiss	 xmm2, DWORD PTR [ecx]
  00063	8b d8		 mov	 ebx, eax
  00065	89 55 fc	 mov	 DWORD PTR tv553[ebp], edx
  00068	72 12		 jb	 SHORT $LN35@Excute
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  0006a	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  0006d	83 c2 08	 add	 edx, 8
  00070	8b c8		 mov	 ecx, eax
  00072	89 56 18	 mov	 DWORD PTR [esi+24], edx
  00075	89 46 1c	 mov	 DWORD PTR [esi+28], eax

; 156  :         return _Ptr == _Right._Ptr;

  00078	3b cf		 cmp	 ecx, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 153  : 			while (it_next != it_end && it_next->m_fTime <= d.fTime)

  0007a	75 e4		 jne	 SHORT $LL2@Excute
$LN35@Excute:
  0007c	8b 5d 08	 mov	 ebx, DWORD PTR _d$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  0007f	3b c7		 cmp	 eax, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 157  : 			if (it_next == it_end)

  00081	75 2b		 jne	 SHORT $LN8@Excute
$LN38@Excute:

; 158  : 			{
; 159  : 				// setting value
; 160  : 				*pData = it_cur->m_Value;

  00083	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00086	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 74   : 		delete this;

  00089	6a 01		 push	 1

; 158  : 			{
; 159  : 				// setting value
; 160  : 				*pData = it_cur->m_Value;

  0008b	89 01		 mov	 DWORD PTR [ecx], eax

; 72   : 		m_PrevDecorator->m_NextDecorator = m_NextDecorator;

  0008d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00090	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 73   : 		m_NextDecorator->m_PrevDecorator = m_PrevDecorator;

  00096	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00099	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0009c	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 74   : 		delete this;

  0009f	8b ce		 mov	 ecx, esi
  000a1	8b 06		 mov	 eax, DWORD PTR [esi]
  000a3	ff 10		 call	 DWORD PTR [eax]
  000a5	5b		 pop	 ebx
  000a6	5f		 pop	 edi

; 170  : 			}
; 171  : 		}
; 172  : 	}

  000a7	5e		 pop	 esi
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c2 04 00	 ret	 4
$LN8@Excute:

; 161  : 
; 162  : 				RemoveMe();
; 163  : 			}
; 164  : 			else
; 165  : 			{
; 166  : 				float length = it_next->m_fTime - it_cur->m_fTime;

  000ae	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  000b2	f3 0f 5c 0a	 subss	 xmm1, DWORD PTR [edx]

; 167  : 				//*pData = it_cur->m_Value + (it_next->m_Value - it_cur->m_Value)*(d.fTime-it_cur->m_fTime)/length;
; 168  : 				*pData = it_cur->m_Value * (1 - (d.fTime - it_cur->m_fTime) / length) ;

  000b6	f3 0f 5c 12	 subss	 xmm2, DWORD PTR [edx]
  000ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000c2	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  000c5	f3 0f 5e d1	 divss	 xmm2, xmm1
  000c9	f3 0f 5c c2	 subss	 xmm0, xmm2
  000cd	f3 0f 59 42 04	 mulss	 xmm0, DWORD PTR [edx+4]
  000d2	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 169  : 				*pData += it_next->m_Value * ((d.fTime - it_cur->m_fTime) / length);

  000d6	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  000d9	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  000dd	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  000e0	5b		 pop	 ebx
  000e1	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  000e5	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000e8	5f		 pop	 edi

; 170  : 			}
; 171  : 		}
; 172  : 	}

  000e9	5e		 pop	 esi
  000ea	f3 0f 5e c1	 divss	 xmm0, xmm1
  000ee	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  000f3	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  000f7	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 04 00	 ret	 4
?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pFirstInstance$ = 8					; size = 4
_pInstance$ = 12					; size = 4
?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Clone, COMDAT
; _this$ = ecx

; 140  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pFirstInstance, CParticleInstance* pInstance) { return new CTimeEventDecorator(*this, pFirstInstance, pInstance); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	57		 push	 edi
  00006	6a 24		 push	 36			; 00000024H
  00008	8b d9		 mov	 ebx, ecx
  0000a	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  0000f	8b f8		 mov	 edi, eax
  00011	83 c4 04	 add	 esp, 4
  00014	89 7d fc	 mov	 DWORD PTR $T1[ebp], edi
  00017	85 ff		 test	 edi, edi
  00019	74 5e		 je	 SHORT $LN3@Clone

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  0001b	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00022	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00029	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 134  : 	{

  00030	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00036	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  0003d	56		 push	 esi

; 129  : 		:	it_start(ted.it_start),

  0003e	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00041	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 130  : 		  it_end(ted.it_end),

  00044	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  00047	89 57 14	 mov	 DWORD PTR [edi+20], edx

; 131  : 		  it_cur(ted.it_cur),

  0004a	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  0004d	89 47 18	 mov	 DWORD PTR [edi+24], eax

; 132  : 		  it_next(ted.it_next),

  00050	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00053	89 47 1c	 mov	 DWORD PTR [edi+28], eax

; 133  : 		  pData((T*)( (unsigned char*)ted.pData - (DWORD)pFirstInstance + (DWORD)pInstance))

  00056	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00059	2b 4d 08	 sub	 ecx, DWORD PTR _pFirstInstance$[ebp]
  0005c	8b 45 0c	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0005f	03 c1		 add	 eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  00061	3b f2		 cmp	 esi, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 133  : 		  pData((T*)( (unsigned char*)ted.pData - (DWORD)pFirstInstance + (DWORD)pInstance))

  00063	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  00066	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 135  : 		if (it_start == it_end)

  00067	75 06		 jne	 SHORT $LN7@Clone

; 136  : 		{
; 137  : 			*pData = T();

  00069	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN7@Clone:

; 140  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pFirstInstance, CParticleInstance* pInstance) { return new CTimeEventDecorator(*this, pFirstInstance, pInstance); }

  0006f	8b c7		 mov	 eax, edi
  00071	5f		 pop	 edi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
$LN3@Clone:
  00079	5f		 pop	 edi
  0007a	33 c0		 xor	 eax, eax
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::~CTimeEventDecorator<float>, COMDAT
; _this$ = ecx

; 122  : 	virtual ~CTimeEventDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::~CTimeEventDecorator<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_TimeEventContainer$ = 8				; size = 4
_pValue$ = 12						; size = 4
??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>, COMDAT
; _this$ = ecx

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00004	8b 55 08	 mov	 edx, DWORD PTR _TimeEventContainer$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 112  : 	{

  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	89 7d fc	 mov	 DWORD PTR _this$[ebp], edi

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  0000e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00015	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  0001c	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 112  : 	{

  00023	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00029	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00030	8b 32		 mov	 esi, DWORD PTR [edx]
  00032	89 77 10	 mov	 DWORD PTR [edi+16], esi
  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 47 18	 mov	 DWORD PTR [edi+24], eax
  00040	8b 12		 mov	 edx, DWORD PTR [edx]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 111  : 		  pData(pValue)

  00042	8b 45 0c	 mov	 eax, DWORD PTR _pValue$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00045	89 57 1c	 mov	 DWORD PTR [edi+28], edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 111  : 		  pData(pValue)

  00048	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 156  :         return _Ptr == _Right._Ptr;

  0004b	3b f1		 cmp	 esi, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 113  : 		if (it_start == it_end)

  0004d	75 10		 jne	 SHORT $LN2@CTimeEvent

; 114  : 		{
; 115  : 			*pValue = T();

  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 121  : 	}

  00055	8b c7		 mov	 eax, edi
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
$LN2@CTimeEvent:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  0005f	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  00062	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 121  : 	}

  00065	8b c7		 mov	 eax, edi
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 08 00	 ret	 8
??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 24		 push	 36			; 00000024H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z
_TEXT	SEGMENT
$T4 = -24						; size = 8
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z PROC ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>, COMDAT
; _this$ = ecx

; 1218 :     pair<iterator, bool> insert(const value_type& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$1$[ebp], ecx

; 1611 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  0002b	8b 19		 mov	 ebx, DWORD PTR [ecx]
  0002d	33 f6		 xor	 esi, esi
  0002f	8b d3		 mov	 edx, ebx
  00031	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]

; 1612 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1613 :         while (!_Trynode->_Isnil) {

  00034	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00038	75 2e		 jne	 SHORT $LN9@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  0003a	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0003d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00041	8b c7		 mov	 eax, edi
$LL8@insert:
  00043	0f 2f 40 10	 comiss	 xmm0, DWORD PTR [eax+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1614 :             _Result._Location._Parent = _Trynode;

  00047	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  00049	0f 97 c1	 seta	 cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1615 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  0004c	84 c9		 test	 cl, cl
  0004e	74 05		 je	 SHORT $LN10@insert

; 1616 :                 _Result._Location._Child = _Tree_child::_Right;
; 1617 :                 _Trynode                 = _Trynode->_Right;

  00050	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 1618 :             } else {

  00053	eb 04		 jmp	 SHORT $LN11@insert
$LN10@insert:

; 1619 :                 _Result._Location._Child = _Tree_child::_Left;
; 1620 :                 _Result._Bound           = _Trynode;

  00055	8b d0		 mov	 edx, eax

; 1621 :                 _Trynode                 = _Trynode->_Left;

  00057	8b 00		 mov	 eax, DWORD PTR [eax]
$LN11@insert:

; 1612 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1613 :         while (!_Trynode->_Isnil) {

  00059	0f b6 f1	 movzx	 esi, cl
  0005c	83 f6 01	 xor	 esi, 1
  0005f	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00063	74 de		 je	 SHORT $LL8@insert
  00065	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
$LN9@insert:

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00068	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  0006c	75 16		 jne	 SHORT $LN4@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef

; 143  :         return _Left < _Right;

  0006e	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00071	f3 0f 10 42 10	 movss	 xmm0, DWORD PTR [edx+16]
  00076	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00079	0f 97 c0	 seta	 al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1605 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0007c	84 c0		 test	 al, al
  0007e	75 04		 jne	 SHORT $LN4@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00080	32 c9		 xor	 cl, cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1003 :                 return {_Loc._Bound, false};

  00082	eb 4b		 jmp	 SHORT $LN89@insert
$LN4@insert:

; 1629 :         if (max_size() == _Get_scary()->_Mysize) {

  00084	81 79 04 cc cc
	cc 0c		 cmp	 DWORD PTR [ecx+4], 214748364 ; 0cccccccH
  0008b	74 5e		 je	 SHORT $LN107@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1005 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0008d	89 4d e8	 mov	 DWORD PTR $T4[ebp], ecx

; 77   :         return ::operator new(_Bytes);

  00090	6a 14		 push	 20			; 00000014H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 785  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00092	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 1012 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00099	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 77   :         return ::operator new(_Bytes);

  000a0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  000a5	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  000a7	83 c4 04	 add	 esp, 4

; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000aa	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1026 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000ad	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 680  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000ae	8b 00		 mov	 eax, DWORD PTR [eax]
  000b0	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000b3	89 19		 mov	 DWORD PTR [ecx], ebx

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000b5	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000b8	89 59 08	 mov	 DWORD PTR [ecx+8], ebx

; 1026 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000bb	56		 push	 esi

; 811  :         this->_Ptr->_Color = _Red;

  000bc	66 c7 41 0c 00
	00		 mov	 WORD PTR [ecx+12], 0

; 1026 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000c2	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000c5	57		 push	 edi
  000c6	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 172  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  000cb	8b d0		 mov	 edx, eax
  000cd	b1 01		 mov	 cl, 1
$LN89@insert:
  000cf	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000d2	89 10		 mov	 DWORD PTR [eax], edx
  000d4	88 48 04	 mov	 BYTE PTR [eax+4], cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1221 :     }

  000d7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000da	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e1	59		 pop	 ecx
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 08 00	 ret	 8
$LN107@insert:

; 1630 :             _Throw_tree_length_error();

  000eb	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN105@insert:
  000f0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z$2:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ENDP ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; Function compile flags: /Ogtp
;	COMDAT ??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ PROC ; std::set<float,std::less<float>,std::allocator<float> >::~set<float,std::less<float>,std::allocator<float> >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >
??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ ENDP ; std::set<float,std::less<float>,std::allocator<float> >::~set<float,std::less<float>,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<float> >::_Insert_node, COMDAT
; _this$ = ecx

; 646  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 647  :         ++_Mysize;
; 648  :         const auto _Head  = _Myhead;
; 649  :         _Newnode->_Parent = _Loc._Parent;

  00004	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00007	53		 push	 ebx
  00008	8b d9		 mov	 ebx, ecx
  0000a	57		 push	 edi
  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Newnode$[ebp]
  0000e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00010	ff 43 04	 inc	 DWORD PTR [ebx+4]
  00013	89 45 fc	 mov	 DWORD PTR __Head$1$[ebp], eax
  00016	89 57 04	 mov	 DWORD PTR [edi+4], edx

; 650  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  00019	3b d0		 cmp	 edx, eax
  0001b	75 16		 jne	 SHORT $LN5@Insert_nod

; 651  :             _Head->_Left     = _Newnode;

  0001d	89 38		 mov	 DWORD PTR [eax], edi

; 652  :             _Head->_Parent   = _Newnode;

  0001f	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 653  :             _Head->_Right    = _Newnode;

  00022	89 78 08	 mov	 DWORD PTR [eax+8], edi

; 712  :         return _Newnode;
; 713  :     }

  00025	8b c7		 mov	 eax, edi
  00027	c6 47 0c 01	 mov	 BYTE PTR [edi+12], 1
  0002b	5f		 pop	 edi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 654  :             _Newnode->_Color = _Black; // the root is black
; 655  :             return _Newnode;
; 656  :         }
; 657  : 
; 658  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 659  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00033	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00037	75 0d		 jne	 SHORT $LN6@Insert_nod

; 660  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 661  :             _Loc._Parent->_Right = _Newnode;

  00039	89 7a 08	 mov	 DWORD PTR [edx+8], edi

; 662  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003c	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0003f	75 0d		 jne	 SHORT $LN9@Insert_nod

; 663  :                 _Head->_Right = _Newnode;

  00041	89 78 08	 mov	 DWORD PTR [eax+8], edi

; 664  :             }
; 665  :         } else { // add to left of _Loc._Parent

  00044	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 666  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 667  :             _Loc._Parent->_Left = _Newnode;

  00046	89 3a		 mov	 DWORD PTR [edx], edi

; 668  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00048	3b 10		 cmp	 edx, DWORD PTR [eax]
  0004a	75 02		 jne	 SHORT $LN9@Insert_nod

; 669  :                 _Head->_Left = _Newnode;

  0004c	89 38		 mov	 DWORD PTR [eax], edi
$LN9@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00051	8b c7		 mov	 eax, edi
  00053	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  00057	0f 85 7d 01 00
	00		 jne	 $LN3@Insert_nod
  0005d	56		 push	 esi
  0005e	66 90		 npad	 2
$LL2@Insert_nod:

; 674  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00063	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00066	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00068	3b d1		 cmp	 edx, ecx
  0006a	0f 85 aa 00 00
	00		 jne	 $LN10@Insert_nod

; 675  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00070	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 676  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00073	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  00077	0f 84 a3 00 00
	00		 je	 $LN54@Insert_nod

; 677  :                     _Pnode->_Parent->_Color          = _Black;
; 678  :                     _Parent_sibling->_Color          = _Black;
; 679  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 680  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 681  :                 } else { // parent's sibling has red and black children
; 682  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  0007d	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  00080	3b c6		 cmp	 eax, esi
  00082	75 37		 jne	 SHORT $LN51@Insert_nod

; 462  :         _Wherenode->_Right = _Pnode->_Left;

  00084	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 683  :                         _Pnode = _Pnode->_Parent;

  00086	8b c2		 mov	 eax, edx

; 462  :         _Wherenode->_Right = _Pnode->_Left;

  00088	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

  0008b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0008d	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00091	75 03		 jne	 SHORT $LN34@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN34@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

  00096	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00099	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

  0009c	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0009e	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  000a1	75 05		 jne	 SHORT $LN35@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

  000a3	89 71 04	 mov	 DWORD PTR [ecx+4], esi
  000a6	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000a8	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000ab	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000ad	75 04		 jne	 SHORT $LN37@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

  000af	89 31		 mov	 DWORD PTR [ecx], esi

; 474  :         } else {

  000b1	eb 03		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

  000b3	89 71 08	 mov	 DWORD PTR [ecx+8], esi
$LN38@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

  000b6	89 06		 mov	 DWORD PTR [esi], eax

; 479  :         _Wherenode->_Parent = _Pnode;

  000b8	89 72 04	 mov	 DWORD PTR [edx+4], esi
$LN51@Insert_nod:

; 684  :                         _Lrotate(_Pnode);
; 685  :                     }
; 686  : 
; 687  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000bb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000be	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 688  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000c2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c5	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000c8	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 689  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000cc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000cf	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000d2	8b 32		 mov	 esi, DWORD PTR [edx]

; 484  :         _Wherenode->_Left = _Pnode->_Right;

  000d4	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000d7	89 0a		 mov	 DWORD PTR [edx], ecx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

  000d9	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000dc	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  000e0	75 03		 jne	 SHORT $LN20@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

  000e2	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN20@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

  000e5	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000e8	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

  000eb	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000ed	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  000f0	75 0b		 jne	 SHORT $LN21@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

  000f2	89 71 04	 mov	 DWORD PTR [ecx+4], esi

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

  000f5	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

  000f8	e9 cc 00 00 00	 jmp	 $LN53@Insert_nod
$LN21@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  000fd	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00100	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00103	75 0b		 jne	 SHORT $LN23@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

  00105	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

  00108	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

  0010b	e9 b9 00 00 00	 jmp	 $LN53@Insert_nod
$LN23@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

  00110	89 31		 mov	 DWORD PTR [ecx], esi

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

  00112	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

  00115	e9 af 00 00 00	 jmp	 $LN53@Insert_nod
$LN10@Insert_nod:

; 692  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 693  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  0011a	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  0011e	75 1d		 jne	 SHORT $LN15@Insert_nod
$LN54@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00120	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1
  00124	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  00128	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0012b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0012e	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0
  00132	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00135	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00138	e9 8f 00 00 00	 jmp	 $LN32@Insert_nod
$LN15@Insert_nod:

; 694  :                     _Pnode->_Parent->_Color          = _Black;
; 695  :                     _Parent_sibling->_Color          = _Black;
; 696  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 697  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 698  :                 } else { // parent's sibling has red and black children
; 699  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  0013d	8b 32		 mov	 esi, DWORD PTR [edx]
  0013f	3b c6		 cmp	 eax, esi
  00141	75 3a		 jne	 SHORT $LN46@Insert_nod

; 484  :         _Wherenode->_Left = _Pnode->_Right;

  00143	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 700  :                         _Pnode = _Pnode->_Parent;

  00146	8b c2		 mov	 eax, edx

; 484  :         _Wherenode->_Left = _Pnode->_Right;

  00148	89 08		 mov	 DWORD PTR [eax], ecx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

  0014a	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0014d	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00151	75 03		 jne	 SHORT $LN41@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

  00153	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN41@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

  00156	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00159	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

  0015c	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0015e	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00161	75 05		 jne	 SHORT $LN42@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

  00163	89 71 04	 mov	 DWORD PTR [ecx+4], esi
  00166	eb 0f		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00168	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0016b	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0016e	75 05		 jne	 SHORT $LN44@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

  00170	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 496  :         } else {

  00173	eb 02		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

  00175	89 31		 mov	 DWORD PTR [ecx], esi
$LN45@Insert_nod:

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

  00177	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 501  :         _Wherenode->_Parent = _Pnode;

  0017a	89 72 04	 mov	 DWORD PTR [edx+4], esi
$LN46@Insert_nod:

; 701  :                         _Rrotate(_Pnode);
; 702  :                     }
; 703  : 
; 704  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  0017d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00180	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 705  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00184	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00187	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0018a	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 706  :                     _Lrotate(_Pnode->_Parent->_Parent);

  0018e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00191	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00194	8b 72 08	 mov	 esi, DWORD PTR [edx+8]

; 462  :         _Wherenode->_Right = _Pnode->_Left;

  00197	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00199	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

  0019c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0019e	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  001a2	75 03		 jne	 SHORT $LN27@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

  001a4	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN27@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

  001a7	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  001aa	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

  001ad	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  001af	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  001b2	75 05		 jne	 SHORT $LN28@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

  001b4	89 71 04	 mov	 DWORD PTR [ecx+4], esi
  001b7	eb 0e		 jmp	 SHORT $LN31@Insert_nod
$LN28@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001b9	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  001bc	3b 11		 cmp	 edx, DWORD PTR [ecx]
  001be	75 04		 jne	 SHORT $LN30@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

  001c0	89 31		 mov	 DWORD PTR [ecx], esi

; 474  :         } else {

  001c2	eb 03		 jmp	 SHORT $LN31@Insert_nod
$LN30@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

  001c4	89 71 08	 mov	 DWORD PTR [ecx+8], esi
$LN31@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

  001c7	89 16		 mov	 DWORD PTR [esi], edx
$LN53@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001c9	89 72 04	 mov	 DWORD PTR [edx+4], esi
$LN32@Insert_nod:
  001cc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001cf	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  001d3	0f 84 87 fe ff
	ff		 je	 $LL2@Insert_nod
  001d9	5e		 pop	 esi
$LN3@Insert_nod:

; 707  :                 }
; 708  :             }
; 709  :         }
; 710  : 
; 711  :         _Head->_Parent->_Color = _Black; // root is always black

  001da	8b 45 fc	 mov	 eax, DWORD PTR __Head$1$[ebp]
  001dd	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001e0	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 712  :         return _Newnode;
; 713  :     }

  001e4	8b c7		 mov	 eax, edi
  001e6	5f		 pop	 edi
  001e7	5b		 pop	 ebx
  001e8	8b e5		 mov	 esp, ebp
  001ea	5d		 pop	 ebp
  001eb	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<float> >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >, COMDAT
; _this$ = ecx

; 1079 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 37		 mov	 esi, DWORD PTR [edi]
  00006	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 21		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 654  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  0001f	6a 14		 push	 20			; 00000014H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
$LN7@Tree:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00030	6a 14		 push	 20			; 00000014H
  00032	ff 37		 push	 DWORD PTR [edi]
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00039	83 c4 08	 add	 esp, 8
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 1086 :     }

  0003e	c3		 ret	 0
??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CParticleSystemData::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A ; CParticleSystemData::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ ; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>
??__F?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CParticleSystemData::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ??__E?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CParticleSystemData::ms_kPool'', COMDAT

; 6    : CDynamicPool<CParticleSystemData>		CParticleSystemData::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CParticleSystemData::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CParticleSystemData::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z PROC ; CDynamicPool<CParticleSystemData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ ; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z ENDP ; CDynamicPool<CParticleSystemData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ PROC ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ ENDP ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCParticleSystemData@@@@KAXPAVCParticleSystemData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCParticleSystemData@@@@KAXPAVCParticleSystemData@@@Z PROC ; CDynamicPool<CParticleSystemData>::Delete, COMDAT

; 113  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  : 		delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 115  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCParticleSystemData@@@@KAXPAVCParticleSystemData@@@Z ENDP ; CDynamicPool<CParticleSystemData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ PROC	; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>, COMDAT
; _this$ = ecx

; 18   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCParticleSystemData@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 2114 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 2114 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 26   : 	}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ ENDP	; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CRotationDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 292  : 	}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CRotationDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CRotationDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CRotationDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CRotationDecorator::~CRotationDecorator, COMDAT
; _this$ = ecx

; 292  : 	}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CRotationDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CRotationDecorator::~CRotationDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 10		 push	 16			; 00000010H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::~CPooledObject<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::~CPooledObject<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CGravityDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	virtual ~CGravityDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CGravityDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CGravityDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CGravityDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CGravityDecorator::~CGravityDecorator, COMDAT
; _this$ = ecx

; 280  : 	virtual ~CGravityDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CGravityDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CGravityDecorator::~CGravityDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 10		 push	 16			; 00000010H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::~CPooledObject<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::~CPooledObject<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 269  : 	virtual ~CAirResistanceDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CAirResistanceDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CAirResistanceDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CAirResistanceDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::~CAirResistanceDecorator, COMDAT
; _this$ = ecx

; 269  : 	virtual ~CAirResistanceDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CAirResistanceDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CAirResistanceDecorator::~CAirResistanceDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 10		 push	 16			; 00000010H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::~CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::~CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 243  : 	virtual ~CTextureAnimationRandomDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 20		 push	 32			; 00000020H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Excute, COMDAT
; _this$ = ecx

; 247  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 248  : 		fLastFrameTime -= d.fElapsedTime;

  00003	8b 45 08	 mov	 eax, DWORD PTR _d$[ebp]
  00006	0f 57 d2	 xorps	 xmm2, xmm2
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  00011	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]

; 249  : 		if (fLastFrameTime < 0.0f && n != 0)

  00016	0f 2f d0	 comiss	 xmm2, xmm0
  00019	f3 0f 11 46 14	 movss	 DWORD PTR [esi+20], xmm0
  0001e	76 1e		 jbe	 SHORT $LN6@Excute
  00020	8a 46 10	 mov	 al, BYTE PTR [esi+16]
  00023	84 c0		 test	 al, al
  00025	74 17		 je	 SHORT $LN6@Excute

; 250  : 		{
; 251  : 			*pIdx = (BYTE)random_range(0, n - 1);

  00027	0f b6 c0	 movzx	 eax, al
  0002a	48		 dec	 eax
  0002b	50		 push	 eax
  0002c	6a 00		 push	 0
  0002e	e8 00 00 00 00	 call	 ?random_range@@YAJJJ@Z	; random_range
  00033	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00036	83 c4 08	 add	 esp, 8
  00039	0f 57 d2	 xorps	 xmm2, xmm2
  0003c	88 01		 mov	 BYTE PTR [ecx], al
$LN6@Excute:

; 252  : 		}
; 253  : 		while (fLastFrameTime < 0.0f)

  0003e	f3 0f 10 4e 14	 movss	 xmm1, DWORD PTR [esi+20]
  00043	0f 2f d1	 comiss	 xmm2, xmm1
  00046	76 19		 jbe	 SHORT $LN3@Excute

; 254  : 		{
; 255  : 			fLastFrameTime += fFrameTime;

  00048	f3 0f 10 5e 18	 movss	 xmm3, DWORD PTR [esi+24]
  0004d	0f 1f 00	 npad	 3
$LL2@Excute:
  00050	0f 28 c3	 movaps	 xmm0, xmm3
  00053	f3 0f 58 c8	 addss	 xmm1, xmm0
  00057	0f 2f d1	 comiss	 xmm2, xmm1
  0005a	f3 0f 11 4e 14	 movss	 DWORD PTR [esi+20], xmm1
  0005f	77 ef		 ja	 SHORT $LL2@Excute
$LN3@Excute:
  00061	5e		 pop	 esi

; 256  : 		}
; 257  : 	}

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pfi$ = 8						; size = 4
_pi$ = 12						; size = 4
?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Clone, COMDAT
; _this$ = ecx

; 245  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationRandomDecorator(fFrameTime, n, (BYTE*)((unsigned char*)pi + ((BYTE*)pIdx - (BYTE*)pfi))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	6a 20		 push	 32			; 00000020H
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new
  0000e	83 c4 04	 add	 esp, 4
  00011	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00014	85 c0		 test	 eax, eax
  00016	74 4a		 je	 SHORT $LN3@Clone
  00018	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  0001b	8a 4e 10	 mov	 cl, BYTE PTR [esi+16]
  0001e	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00023	2b 55 08	 sub	 edx, DWORD PTR _pfi$[ebp]
  00026	03 55 0c	 add	 edx, DWORD PTR _pi$[ebp]

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00029	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00030	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00037	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 242  : 	CTextureAnimationRandomDecorator(float fFrameTime, BYTE n, BYTE * pIdx) : n(n), pIdx(pIdx), fFrameTime(fFrameTime), fLastFrameTime(fFrameTime) {}

  0003e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00044	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@
  0004b	88 48 10	 mov	 BYTE PTR [eax+16], cl
  0004e	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
  00053	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
  00058	89 50 1c	 mov	 DWORD PTR [eax+28], edx
  0005b	5e		 pop	 esi

; 245  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationRandomDecorator(fFrameTime, n, (BYTE*)((unsigned char*)pi + ((BYTE*)pIdx - (BYTE*)pfi))); }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
$LN3@Clone:
  00062	33 c0		 xor	 eax, eax
  00064	5e		 pop	 esi
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::~CTextureAnimationRandomDecorator, COMDAT
; _this$ = ecx

; 243  : 	virtual ~CTextureAnimationRandomDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::~CTextureAnimationRandomDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 20		 push	 32			; 00000020H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 217  : 	virtual ~CTextureAnimationCCWDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 20		 push	 32			; 00000020H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Excute, COMDAT
; _this$ = ecx

; 221  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 222  : 		fLastFrameTime -= d.fElapsedTime;

  00003	8b 45 08	 mov	 eax, DWORD PTR _d$[ebp]
  00006	8b d1		 mov	 edx, ecx
  00008	0f 57 c9	 xorps	 xmm1, xmm1
  0000b	f3 0f 10 42 14	 movss	 xmm0, DWORD PTR [edx+20]
  00010	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]

; 223  : 		while (fLastFrameTime < 0.0f)

  00015	0f 2f c8	 comiss	 xmm1, xmm0
  00018	f3 0f 11 42 14	 movss	 DWORD PTR [edx+20], xmm0
  0001d	76 2c		 jbe	 SHORT $LN3@Excute
  0001f	90		 npad	 1
$LL2@Excute:

; 224  : 		{
; 225  : 			fLastFrameTime += fFrameTime;

  00020	f3 0f 58 42 18	 addss	 xmm0, DWORD PTR [edx+24]

; 226  : 
; 227  : 			if (--(*pIdx) >= n && n != 0) // Because variable is unsigned..

  00025	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00028	f3 0f 11 42 14	 movss	 DWORD PTR [edx+20], xmm0
  0002d	fe 08		 dec	 BYTE PTR [eax]
  0002f	8a 4a 10	 mov	 cl, BYTE PTR [edx+16]
  00032	38 08		 cmp	 BYTE PTR [eax], cl
  00034	72 0b		 jb	 SHORT $LN4@Excute
  00036	84 c9		 test	 cl, cl
  00038	74 07		 je	 SHORT $LN4@Excute

; 228  : 			{
; 229  : 				*pIdx = BYTE(n - 1);

  0003a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0003d	fe c9		 dec	 cl
  0003f	88 08		 mov	 BYTE PTR [eax], cl
$LN4@Excute:

; 223  : 		while (fLastFrameTime < 0.0f)

  00041	f3 0f 10 42 14	 movss	 xmm0, DWORD PTR [edx+20]
  00046	0f 2f c8	 comiss	 xmm1, xmm0
  00049	77 d5		 ja	 SHORT $LL2@Excute
$LN3@Excute:

; 230  : 			}
; 231  : 		}
; 232  : 	}

  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pfi$ = 8						; size = 4
_pi$ = 12						; size = 4
?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Clone, COMDAT
; _this$ = ecx

; 219  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationCCWDecorator(fFrameTime, n, (BYTE*)((unsigned char*)pi + ((BYTE*)pIdx - (BYTE*)pfi))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	6a 20		 push	 32			; 00000020H
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new
  0000e	83 c4 04	 add	 esp, 4
  00011	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00014	85 c0		 test	 eax, eax
  00016	74 4a		 je	 SHORT $LN3@Clone
  00018	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  0001b	8a 4e 10	 mov	 cl, BYTE PTR [esi+16]
  0001e	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00023	2b 55 08	 sub	 edx, DWORD PTR _pfi$[ebp]
  00026	03 55 0c	 add	 edx, DWORD PTR _pi$[ebp]

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00029	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00030	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00037	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 216  : 	CTextureAnimationCCWDecorator(float fFrameTime, BYTE n, BYTE * pIdx) : n(n), pIdx(pIdx), fFrameTime(fFrameTime), fLastFrameTime(fFrameTime) {}

  0003e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00044	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@
  0004b	88 48 10	 mov	 BYTE PTR [eax+16], cl
  0004e	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
  00053	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
  00058	89 50 1c	 mov	 DWORD PTR [eax+28], edx
  0005b	5e		 pop	 esi

; 219  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationCCWDecorator(fFrameTime, n, (BYTE*)((unsigned char*)pi + ((BYTE*)pIdx - (BYTE*)pfi))); }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
$LN3@Clone:
  00062	33 c0		 xor	 eax, eax
  00064	5e		 pop	 esi
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::~CTextureAnimationCCWDecorator, COMDAT
; _this$ = ecx

; 217  : 	virtual ~CTextureAnimationCCWDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::~CTextureAnimationCCWDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 20		 push	 32			; 00000020H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 192  : 	virtual ~CTextureAnimationCWDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 20		 push	 32			; 00000020H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Excute, COMDAT
; _this$ = ecx

; 196  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		fLastFrameTime -= d.fElapsedTime;

  00003	8b 45 08	 mov	 eax, DWORD PTR _d$[ebp]
  00006	0f 57 c9	 xorps	 xmm1, xmm1
  00009	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  0000e	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]

; 198  : 		while (fLastFrameTime < 0.0f)

  00013	0f 2f c8	 comiss	 xmm1, xmm0
  00016	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0
  0001b	76 2a		 jbe	 SHORT $LN3@Excute
  0001d	0f 1f 00	 npad	 3
$LL2@Excute:

; 199  : 		{
; 200  : 			fLastFrameTime += fFrameTime;

  00020	f3 0f 58 41 18	 addss	 xmm0, DWORD PTR [ecx+24]

; 201  : 			if (++(*pIdx) >= n)

  00025	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00028	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0
  0002d	fe 00		 inc	 BYTE PTR [eax]
  0002f	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  00032	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  00035	72 06		 jb	 SHORT $LN4@Excute

; 202  : 			{
; 203  : 				*pIdx = 0;

  00037	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0003a	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN4@Excute:

; 198  : 		while (fLastFrameTime < 0.0f)

  0003d	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  00042	0f 2f c8	 comiss	 xmm1, xmm0
  00045	77 d9		 ja	 SHORT $LL2@Excute
$LN3@Excute:

; 204  : 			}
; 205  : 		}
; 206  : 	}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pfi$ = 8						; size = 4
_pi$ = 12						; size = 4
?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Clone, COMDAT
; _this$ = ecx

; 194  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationCWDecorator(fFrameTime, n, (BYTE*)((unsigned char*)pi + ((BYTE*)pIdx - (BYTE*)pfi))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	6a 20		 push	 32			; 00000020H
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new
  0000e	83 c4 04	 add	 esp, 4
  00011	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00014	85 c0		 test	 eax, eax
  00016	74 4a		 je	 SHORT $LN3@Clone
  00018	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  0001b	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0001e	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00023	2b 55 08	 sub	 edx, DWORD PTR _pfi$[ebp]
  00026	03 55 0c	 add	 edx, DWORD PTR _pi$[ebp]

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00029	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00030	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00037	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 191  : 	CTextureAnimationCWDecorator(float fFrameTime, DWORD n, BYTE * pIdx) : n(n), pIdx(pIdx), fFrameTime(fFrameTime), fLastFrameTime(fFrameTime) {}

  0003e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00044	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@
  0004b	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0004e	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
  00053	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
  00058	89 50 1c	 mov	 DWORD PTR [eax+28], edx
  0005b	5e		 pop	 esi

; 194  : 	virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationCWDecorator(fFrameTime, n, (BYTE*)((unsigned char*)pi + ((BYTE*)pIdx - (BYTE*)pfi))); }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
$LN3@Clone:
  00062	33 c0		 xor	 eax, eax
  00064	5e		 pop	 esi
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::~CTextureAnimationCWDecorator, COMDAT
; _this$ = ecx

; 192  : 	virtual ~CTextureAnimationCWDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::~CTextureAnimationCWDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 20		 push	 32			; 00000020H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CNullDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 94   : 	virtual ~CNullDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CNullDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CNullDecorator::__Clone, COMDAT
; _this$ = ecx

; 98   : 	virtual CBaseDecorator* __Clone(CParticleInstance*, CParticleInstance* ) { return new CNullDecorator; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	6a 10		 push	 16			; 00000010H
  00006	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new
  0000b	83 c4 04	 add	 esp, 4
  0000e	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00011	85 c0		 test	 eax, eax
  00013	74 28		 je	 SHORT $LN3@Clone

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0001c	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00023	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 93   : 	CNullDecorator() {}

  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00030	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@

; 98   : 	virtual CBaseDecorator* __Clone(CParticleInstance*, CParticleInstance* ) { return new CNullDecorator; }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
$LN3@Clone:
  0003d	33 c0		 xor	 eax, eax
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CNullDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CNullDecorator::__Excute, COMDAT
; _this$ = ecx

; 97   : 	virtual void __Excute(const CDecoratorData & d) {}

  00000	c2 04 00	 ret	 4
?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CNullDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CNullDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CNullDecorator@NEffectUpdateDecorator@@UAE@XZ PROC	; NEffectUpdateDecorator::CNullDecorator::~CNullDecorator, COMDAT
; _this$ = ecx

; 94   : 	virtual ~CNullDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CNullDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP	; NEffectUpdateDecorator::CNullDecorator::~CNullDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 10		 push	 16			; 00000010H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::~CPooledObject<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::~CPooledObject<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CHeaderDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 84   : 	virtual ~CHeaderDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CHeaderDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CHeaderDecorator::__Clone, COMDAT
; _this$ = ecx

; 87   : 	virtual CBaseDecorator* __Clone(CParticleInstance*, CParticleInstance*) { return new CHeaderDecorator; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	6a 10		 push	 16			; 00000010H
  00006	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new
  0000b	83 c4 04	 add	 esp, 4
  0000e	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00011	85 c0		 test	 eax, eax
  00013	74 28		 je	 SHORT $LN3@Clone

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0001c	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00023	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 83   : 	CHeaderDecorator() {}

  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00030	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@

; 87   : 	virtual CBaseDecorator* __Clone(CParticleInstance*, CParticleInstance*) { return new CHeaderDecorator; }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
$LN3@Clone:
  0003d	33 c0		 xor	 eax, eax
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CHeaderDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CHeaderDecorator::__Excute, COMDAT
; _this$ = ecx

; 86   : 	virtual void __Excute(const CDecoratorData&) {}

  00000	c2 04 00	 ret	 4
?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CHeaderDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CHeaderDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CHeaderDecorator@NEffectUpdateDecorator@@UAE@XZ PROC	; NEffectUpdateDecorator::CHeaderDecorator::~CHeaderDecorator, COMDAT
; _this$ = ecx

; 84   : 	virtual ~CHeaderDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CHeaderDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP	; NEffectUpdateDecorator::CHeaderDecorator::~CHeaderDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 262  : 		ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 263  : 	}

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new, COMDAT

; 256  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 177  : 		if (m_kVct_pkFree.empty())

  00010	75 4a		 jne	 SHORT $LN4@operator

; 228  : 		return (T*)::operator new (sizeof(T));

  00012	6a 10		 push	 16			; 00000010H
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00019	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 228  : 		return (T*)::operator new (sizeof(T));

  0001f	83 c4 04	 add	 esp, 4

; 179  : 			T* pkNewData = New();

  00022	89 45 fc	 mov	 DWORD PTR _pkNewData$1[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00025	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+12
  0002b	74 13		 je	 SHORT $LN13@operator

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0002d	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0002f	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00036	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00040	8d 45 fc	 lea	 eax, DWORD PTR _pkNewData$1[ebp]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+4
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@AAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>
  0004f	8b 45 fc	 mov	 eax, DWORD PTR _pkNewData$1[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 181  : 			++m_uUsedCapacity;

  00052	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+32

; 258  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN4@operator:

; 185  : 		T* pkFreeData = m_kVct_pkFree.back();

  0005c	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  0005f	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00062	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 258  : 	}

  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::~CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 252  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@

; 253  : 	}

  00006	c3		 ret	 0
??1?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::~CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CBaseDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GCBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CBaseDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CBaseDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CBaseDecorator@NEffectUpdateDecorator@@UAE@XZ PROC	; NEffectUpdateDecorator::CBaseDecorator::~CBaseDecorator, COMDAT
; _this$ = ecx

; 25   : 	virtual ~CBaseDecorator() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00006	c3		 ret	 0
??1CBaseDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP	; NEffectUpdateDecorator::CBaseDecorator::~CBaseDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCParticleSystemData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCParticleSystemData@@UAEPAXI@Z PROC			; CParticleSystemData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CParticleSystemData@@UAE@XZ ; CParticleSystemData::~CParticleSystemData
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 4c 01 00 00	 push	 332			; 0000014cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCParticleSystemData@@UAEPAXI@Z ENDP			; CParticleSystemData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?Delete@CParticleSystemData@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkData$ = 8						; size = 4
?Delete@CParticleSystemData@@SAXPAV1@@Z PROC		; CParticleSystemData::Delete, COMDAT

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 20   : 	pkData->Clear();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkData$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Clear@CEffectElementBase@@QAEXXZ ; CEffectElementBase::Clear
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 21   : 	ms_kPool.Free(pkData);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 22   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@AAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>
  00039	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 22   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CParticleSystemData@@SAXPAV1@@Z ENDP		; CParticleSystemData::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?New@CParticleSystemData@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CParticleSystemData@@SAPAV1@XZ PROC		; CParticleSystemData::New, COMDAT

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CParticleSystemData@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1927 :         return _My_data._Myfirst == _My_data._Mylast;

  00023	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 63   : 		if (m_kVct_pkFree.empty())

  00029	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+16, ecx
  0002f	0f 85 83 00 00
	00		 jne	 $LN4@New

; 65   : 			T* pkNewData = new T;

  00035	68 4c 01 00 00	 push	 332			; 0000014cH
  0003a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003f	83 c4 04	 add	 esp, 4
  00042	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	85 c0		 test	 eax, eax
  0004e	74 09		 je	 SHORT $LN6@New
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ??0CParticleSystemData@@QAE@XZ ; CParticleSystemData::CParticleSystemData
  00057	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00059	33 c0		 xor	 eax, eax
$LN7@New:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0005b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 65   : 			T* pkNewData = new T;

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	89 45 f0	 mov	 DWORD PTR _pkNewData$3[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0006b	3b 0d 0c 00 00
	00		 cmp	 ecx, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+12
  00071	74 1e		 je	 SHORT $LN14@New

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00073	89 01		 mov	 DWORD PTR [ecx], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  00075	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8, 4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 67   : 			++m_uUsedCapacity;

  0007c	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+32
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 16   : }

  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
$LN14@New:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00091	8d 45 f0	 lea	 eax, DWORD PTR _pkNewData$3[ebp]
  00094	50		 push	 eax
  00095	51		 push	 ecx
  00096	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+4
  0009b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@AAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>
  000a0	8b 45 f0	 mov	 eax, DWORD PTR _pkNewData$3[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 67   : 			++m_uUsedCapacity;

  000a3	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+32
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 16   : }

  000a9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b3	59		 pop	 ecx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
$LN4@New:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 71   : 		T* pkFreeData = m_kVct_pkFree.back();

  000b8	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1776 :         --_Mylast;

  000bb	83 c1 fc	 add	 ecx, -4			; fffffffcH
  000be	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 16   : }

  000c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ce	59		 pop	 ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CParticleSystemData@@SAPAV1@XZ$0:
  00000	68 4c 01 00 00	 push	 332			; 0000014cH
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?New@CParticleSystemData@@SAPAV1@XZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CParticleSystemData@@SAPAV1@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CParticleSystemData@@SAPAV1@XZ ENDP		; CParticleSystemData::New
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?DestroySystem@CParticleSystemData@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CParticleSystemData@@SAXXZ PROC		; CParticleSystemData::DestroySystem, COMDAT

; 9    : {

  00000	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+4
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 9    : {

  00007	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 21		 je	 SHORT $LN38@DestroySys
$LL20@DestroySys:

; 266  :         _Func(*_UFirst);

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 114  : 		delete pkData;

  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN26@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN26@DestroySys:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\algorithm

; 265  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
  00025	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8
  0002b	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	3b f7		 cmp	 esi, edi
$LN38@DestroySys:
  00033	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20
  00039	0f 45 fe	 cmovne	 edi, esi
  0003c	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+16, ecx
  00042	89 3d 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8, edi
  00048	0f 45 0d 10 00
	00 00		 cmovne	 ecx, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+16
  0004f	5f		 pop	 edi
  00050	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20, ecx
  00056	5e		 pop	 esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 11   : }

  00057	c3		 ret	 0
?DestroySystem@CParticleSystemData@@SAXXZ ENDP		; CParticleSystemData::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?OnIsData@CParticleSystemData@@MAE_NXZ
_TEXT	SEGMENT
?OnIsData@CParticleSystemData@@MAE_NXZ PROC		; CParticleSystemData::OnIsData, COMDAT
; _this$ = ecx

; 371  : 	return true;

  00000	b0 01		 mov	 al, 1

; 372  : }

  00002	c3		 ret	 0
?OnIsData@CParticleSystemData@@MAE_NXZ ENDP		; CParticleSystemData::OnIsData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?OnClear@CParticleSystemData@@MAEXXZ
_TEXT	SEGMENT
?OnClear@CParticleSystemData@@MAEXXZ PROC		; CParticleSystemData::OnClear, COMDAT
; _this$ = ecx

; 364  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 365  : 	m_EmitterProperty.Clear();

  00003	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00006	e8 00 00 00 00	 call	 ?Clear@CEmitterProperty@@QAEXXZ ; CEmitterProperty::Clear

; 366  : 	m_ParticleProperty.Clear();

  0000b	8d 8e c4 00 00
	00		 lea	 ecx, DWORD PTR [esi+196]
  00011	5e		 pop	 esi
  00012	e9 00 00 00 00	 jmp	 ?Clear@CParticleProperty@@QAEXXZ ; CParticleProperty::Clear
?OnClear@CParticleSystemData@@MAEXXZ ENDP		; CParticleSystemData::OnClear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
_result$3 = -216					; size = 8
_result$4 = -208					; size = 8
_result$5 = -200					; size = 8
_fAirResistance$6 = -192				; size = 4
_fGravity$7 = -188					; size = 4
_pTextureVector$8 = -184				; size = 4
_t$9 = -180						; size = 8
$T10 = -180						; size = 8
$T11 = -180						; size = 8
$T12 = -180						; size = 8
$T13 = -180						; size = 8
_TimeEventA$14 = -172					; size = 12
__Left$1$ = -160					; size = 4
$T15 = -160						; size = 4
_rTextFileLoader$GSCopy$1$ = -156			; size = 4
_TimeEventG$16 = -152					; size = 12
_result$17 = -140					; size = 8
_f$18 = -140						; size = 8
_f$19 = -140						; size = 8
_TimeEventB$20 = -132					; size = 12
$T21 = -132						; size = 12
$T22 = -132						; size = 12
_TimeEventR$23 = -120					; size = 12
_times$24 = -108					; size = 8
__Result$2$ = -104					; size = 4
_GotoChild$25 = -104					; size = 4
_fB$1$ = -100						; size = 4
_i$1$ = -100						; size = 4
_fG$1$ = -96						; size = 4
__New_size$1$ = -96					; size = 4
_dwG$1$ = -96						; size = 4
_fR$1$ = -92						; size = 4
_dwR$1$ = -92						; size = 4
tv6199 = -92						; size = 4
_TimeEventFloat$26 = -88				; size = 8
_TimeEventFloat$27 = -88				; size = 8
_TimeEventFloat$28 = -88				; size = 8
_TimeEventFloat$29 = -88				; size = 8
_TimeEventFloat$30 = -88				; size = 8
_TimeEventFloat$31 = -88				; size = 8
_GotoChild$32 = -84					; size = 4
__Right_size$1$ = -80					; size = 4
_fElapsedTime$ = -80					; size = 4
_fA$1$ = -76						; size = 4
__Ptr$1$ = -76						; size = 4
_fElapsedTime$ = -76					; size = 4
_fElapsedTime$ = -76					; size = 4
_fElapsedTime$ = -76					; size = 4
$T33 = -69						; size = 1
$T34 = -69						; size = 1
$T35 = -69						; size = 1
$T36 = -69						; size = 1
$T37 = -69						; size = 1
_this$GSCopy$1$ = -68					; size = 4
_strTextureFileName$38 = -64				; size = 24
$T39 = -40						; size = 24
$T40 = -40						; size = 24
$T41 = -40						; size = 24
$T42 = -40						; size = 24
$T43 = -40						; size = 24
$T44 = -40						; size = 24
$T45 = -40						; size = 24
$T46 = -40						; size = 24
$T47 = -40						; size = 24
$T48 = -40						; size = 24
$T49 = -40						; size = 24
$T50 = -40						; size = 24
$T51 = -40						; size = 24
$T52 = -40						; size = 24
$T53 = -40						; size = 24
$T54 = -40						; size = 24
$T55 = -40						; size = 24
$T56 = -40						; size = 24
$T57 = -40						; size = 24
$T58 = -40						; size = 24
$T59 = -40						; size = 24
$T60 = -40						; size = 24
$T61 = -40						; size = 24
$T62 = -40						; size = 24
$T63 = -40						; size = 24
$T64 = -40						; size = 24
$T65 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z PROC ; CParticleSystemData::OnLoadScript, COMDAT
; _this$ = ecx

; 34   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f1		 mov	 esi, ecx
  0002f	89 75 bc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00032	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h

; 47   : 			m_pOwner->SetChildNode(c_szKey);

  00035	8b cf		 mov	 ecx, edi
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BHDCJGBH@emitterproperty@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 34   : {

  0003c	89 bd 64 ff ff
	ff		 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h

; 45   : 		CGotoChild(CTextFileLoader * pOwner, const char * c_szKey) : m_pOwner(pOwner)

  00042	89 7d 98	 mov	 DWORD PTR _GotoChild$25[ebp], edi

; 47   : 			m_pOwner->SetChildNode(c_szKey);

  00045	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 38   : 		if (!rTextFileLoader.GetTokenDoubleWord("maxemissioncount", &m_EmitterProperty.m_dwMaxEmissionCount))

  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GFCINCLJ@maxemissioncount@
  0004f	8d 4d d8	 lea	 ecx, DWORD PTR $T65[ebp]
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00059	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005e	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  00061	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00065	50		 push	 eax
  00066	8d 45 d8	 lea	 eax, DWORD PTR $T65[ebp]
  00069	8b cf		 mov	 ecx, edi
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00071	8b 4d ec	 mov	 ecx, DWORD PTR $T65[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 38   : 		if (!rTextFileLoader.GetTokenDoubleWord("maxemissioncount", &m_EmitterProperty.m_dwMaxEmissionCount))

  00074	85 c0		 test	 eax, eax
  00076	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0007a	0f 94 c0	 sete	 al
  0007d	88 45 bb	 mov	 BYTE PTR $T37[ebp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  00080	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00083	72 2f		 jb	 SHORT $LN139@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00085	8b 55 d8	 mov	 edx, DWORD PTR $T65[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00088	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00089	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0008b	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00091	72 14		 jb	 SHORT $LN149@OnLoadScri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00093	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00096	83 c1 23	 add	 ecx, 35			; 00000023H
  00099	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0009e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a1	0f 87 a2 14 00
	00		 ja	 $LN362@OnLoadScri
$LN149@OnLoadScri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  000a7	51		 push	 ecx
  000a8	52		 push	 edx
  000a9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ae	8a 45 bb	 mov	 al, BYTE PTR $T37[ebp]
  000b1	83 c4 08	 add	 esp, 8
$LN139@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 38   : 		if (!rTextFileLoader.GetTokenDoubleWord("maxemissioncount", &m_EmitterProperty.m_dwMaxEmissionCount))

  000b4	84 c0		 test	 al, al
  000b6	0f 85 60 14 00
	00		 jne	 $LN108@OnLoadScri

; 43   : 		if (!rTextFileLoader.GetTokenFloat("cyclelength", &m_EmitterProperty.m_fCycleLength))

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CMAFBHMP@cyclelength@
  000c1	8d 4d d8	 lea	 ecx, DWORD PTR $T64[ebp]
  000c4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c9	83 c6 1c	 add	 esi, 28			; 0000001cH
  000cc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000d0	56		 push	 esi
  000d1	8d 45 d8	 lea	 eax, DWORD PTR $T64[ebp]
  000d4	8b cf		 mov	 ecx, edi
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  000dc	8b 4d ec	 mov	 ecx, DWORD PTR $T64[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 43   : 		if (!rTextFileLoader.GetTokenFloat("cyclelength", &m_EmitterProperty.m_fCycleLength))

  000df	85 c0		 test	 eax, eax
  000e1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000e5	0f 94 c0	 sete	 al
  000e8	88 45 bb	 mov	 BYTE PTR $T36[ebp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  000eb	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000ee	72 2f		 jb	 SHORT $LN170@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f0	8b 55 d8	 mov	 edx, DWORD PTR $T64[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  000f3	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f4	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f6	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000fc	72 14		 jb	 SHORT $LN180@OnLoadScri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000fe	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00101	83 c1 23	 add	 ecx, 35			; 00000023H
  00104	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00106	83 c0 fc	 add	 eax, -4			; fffffffcH
  00109	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0010c	0f 87 3c 14 00
	00		 ja	 $LN1090@OnLoadScri
$LN180@OnLoadScri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00112	51		 push	 ecx
  00113	52		 push	 edx
  00114	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00119	8a 45 bb	 mov	 al, BYTE PTR $T36[ebp]
  0011c	83 c4 08	 add	 esp, 8
$LN170@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 43   : 		if (!rTextFileLoader.GetTokenFloat("cyclelength", &m_EmitterProperty.m_fCycleLength))

  0011f	84 c0		 test	 al, al
  00121	74 06		 je	 SHORT $LN21@OnLoadScri

; 44   : 		{
; 45   : 			m_EmitterProperty.m_fCycleLength = 0.05f;

  00123	c7 06 cd cc 4c
	3d		 mov	 DWORD PTR [esi], 1028443341 ; 3d4ccccdH
$LN21@OnLoadScri:

; 47   : 		if (!rTextFileLoader.GetTokenBoolean("cycleloopenable", &m_EmitterProperty.m_bCycleLoopFlag))

  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HFAFNHAP@cycleloopenable@
  0012e	8d 4d d8	 lea	 ecx, DWORD PTR $T63[ebp]
  00131	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00136	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00139	8d 45 d8	 lea	 eax, DWORD PTR $T63[ebp]
  0013c	83 c6 20	 add	 esi, 32			; 00000020H
  0013f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00143	56		 push	 esi
  00144	50		 push	 eax
  00145	8b cf		 mov	 ecx, edi
  00147	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0014c	8b 4d ec	 mov	 ecx, DWORD PTR $T63[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 47   : 		if (!rTextFileLoader.GetTokenBoolean("cycleloopenable", &m_EmitterProperty.m_bCycleLoopFlag))

  0014f	85 c0		 test	 eax, eax
  00151	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00155	0f 94 c0	 sete	 al
  00158	88 45 bb	 mov	 BYTE PTR $T35[ebp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0015b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0015e	72 2f		 jb	 SHORT $LN197@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00160	8b 55 d8	 mov	 edx, DWORD PTR $T63[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00163	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00164	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00166	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0016c	72 14		 jb	 SHORT $LN207@OnLoadScri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0016e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00171	83 c1 23	 add	 ecx, 35			; 00000023H
  00174	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00176	83 c0 fc	 add	 eax, -4			; fffffffcH
  00179	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0017c	0f 87 d1 13 00
	00		 ja	 $LN1091@OnLoadScri
$LN207@OnLoadScri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00182	51		 push	 ecx
  00183	52		 push	 edx
  00184	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00189	8a 45 bb	 mov	 al, BYTE PTR $T35[ebp]
  0018c	83 c4 08	 add	 esp, 8
$LN197@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 47   : 		if (!rTextFileLoader.GetTokenBoolean("cycleloopenable", &m_EmitterProperty.m_bCycleLoopFlag))

  0018f	84 c0		 test	 al, al
  00191	74 06		 je	 SHORT $LN22@OnLoadScri

; 48   : 		{
; 49   : 			m_EmitterProperty.m_bCycleLoopFlag = FALSE;

  00193	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN22@OnLoadScri:

; 51   : 		if (!rTextFileLoader.GetTokenInteger("loopcount", &m_EmitterProperty.m_iLoopCount))

  00199	68 00 00 00 00	 push	 OFFSET ??_C@_09HBCOMICA@loopcount@
  0019e	8d 4d d8	 lea	 ecx, DWORD PTR $T62[ebp]
  001a1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001a6	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  001a9	8d 45 d8	 lea	 eax, DWORD PTR $T62[ebp]
  001ac	83 c6 24	 add	 esi, 36			; 00000024H
  001af	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  001b3	56		 push	 esi
  001b4	50		 push	 eax
  001b5	8b cf		 mov	 ecx, edi
  001b7	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  001bc	8b 4d ec	 mov	 ecx, DWORD PTR $T62[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 51   : 		if (!rTextFileLoader.GetTokenInteger("loopcount", &m_EmitterProperty.m_iLoopCount))

  001bf	85 c0		 test	 eax, eax
  001c1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001c5	0f 94 c0	 sete	 al
  001c8	88 45 bb	 mov	 BYTE PTR $T34[ebp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  001cb	83 f9 10	 cmp	 ecx, 16			; 00000010H
  001ce	72 2f		 jb	 SHORT $LN224@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d0	8b 55 d8	 mov	 edx, DWORD PTR $T62[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  001d3	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d4	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001d6	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  001dc	72 14		 jb	 SHORT $LN234@OnLoadScri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001de	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  001e1	83 c1 23	 add	 ecx, 35			; 00000023H
  001e4	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001e6	83 c0 fc	 add	 eax, -4			; fffffffcH
  001e9	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001ec	0f 87 66 13 00
	00		 ja	 $LN1092@OnLoadScri
$LN234@OnLoadScri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  001f2	51		 push	 ecx
  001f3	52		 push	 edx
  001f4	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001f9	8a 45 bb	 mov	 al, BYTE PTR $T34[ebp]
  001fc	83 c4 08	 add	 esp, 8
$LN224@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 51   : 		if (!rTextFileLoader.GetTokenInteger("loopcount", &m_EmitterProperty.m_iLoopCount))

  001ff	84 c0		 test	 al, al
  00201	74 06		 je	 SHORT $LN23@OnLoadScri

; 52   : 		{
; 53   : 			m_EmitterProperty.m_iLoopCount = 0;

  00203	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN23@OnLoadScri:

; 56   : 		if (!rTextFileLoader.GetTokenByte("emittershape", &m_EmitterProperty.m_byEmitterShape))

  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CEDHOJLK@emittershape@
  0020e	8d 4d d8	 lea	 ecx, DWORD PTR $T61[ebp]
  00211	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00216	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00219	8b cf		 mov	 ecx, edi
  0021b	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0021f	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  00222	50		 push	 eax
  00223	8d 45 d8	 lea	 eax, DWORD PTR $T61[ebp]
  00226	50		 push	 eax
  00227	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0022c	8b 4d ec	 mov	 ecx, DWORD PTR $T61[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 56   : 		if (!rTextFileLoader.GetTokenByte("emittershape", &m_EmitterProperty.m_byEmitterShape))

  0022f	85 c0		 test	 eax, eax
  00231	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00235	0f 94 c0	 sete	 al
  00238	88 45 bb	 mov	 BYTE PTR $T33[ebp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  0023b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0023e	72 2f		 jb	 SHORT $LN251@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00240	8b 55 d8	 mov	 edx, DWORD PTR $T61[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00243	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00244	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00246	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0024c	72 14		 jb	 SHORT $LN261@OnLoadScri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0024e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00251	83 c1 23	 add	 ecx, 35			; 00000023H
  00254	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00256	83 c0 fc	 add	 eax, -4			; fffffffcH
  00259	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0025c	0f 87 fb 12 00
	00		 ja	 $LN1093@OnLoadScri
$LN261@OnLoadScri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00262	51		 push	 ecx
  00263	52		 push	 edx
  00264	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00269	8a 45 bb	 mov	 al, BYTE PTR $T33[ebp]
  0026c	83 c4 08	 add	 esp, 8
$LN251@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 56   : 		if (!rTextFileLoader.GetTokenByte("emittershape", &m_EmitterProperty.m_byEmitterShape))

  0026f	84 c0		 test	 al, al
  00271	0f 85 a5 12 00
	00		 jne	 $LN108@OnLoadScri

; 57   : 		{
; 58   : 			return FALSE;
; 59   : 		}
; 60   : 
; 61   : 		if (!rTextFileLoader.GetTokenByte("emitteradvancedtype", &m_EmitterProperty.m_byEmitterAdvancedType))

  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NHCLCKPF@emitteradvancedtype@
  0027c	8d 4d d8	 lea	 ecx, DWORD PTR $T60[ebp]
  0027f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00284	8d 46 29	 lea	 eax, DWORD PTR [esi+41]
  00287	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0028b	50		 push	 eax
  0028c	8d 45 d8	 lea	 eax, DWORD PTR $T60[ebp]
  0028f	8b cf		 mov	 ecx, edi
  00291	50		 push	 eax
  00292	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00297	8d 4d d8	 lea	 ecx, DWORD PTR $T60[ebp]
  0029a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0029e	8b f0		 mov	 esi, eax
  002a0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002a5	85 f6		 test	 esi, esi
  002a7	75 07		 jne	 SHORT $LN25@OnLoadScri

; 62   : 		{
; 63   : 			m_EmitterProperty.m_byEmitterShape = CEmitterProperty::EMITTER_ADVANCED_TYPE_FREE;

  002a9	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  002ac	c6 40 28 00	 mov	 BYTE PTR [eax+40], 0
$LN25@OnLoadScri:

; 64   : 		}
; 65   : 		if (!rTextFileLoader.GetTokenPosition("emittingsize", &m_EmitterProperty.m_v3EmittingSize))

  002b0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JELCEBGI@emittingsize@
  002b5	8d 4d d8	 lea	 ecx, DWORD PTR $T59[ebp]
  002b8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002bd	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  002c0	8b cf		 mov	 ecx, edi
  002c2	83 c0 30	 add	 eax, 48			; 00000030H
  002c5	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  002c9	50		 push	 eax
  002ca	8d 45 d8	 lea	 eax, DWORD PTR $T59[ebp]
  002cd	50		 push	 eax
  002ce	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  002d3	8d 4d d8	 lea	 ecx, DWORD PTR $T59[ebp]
  002d6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002da	8b f0		 mov	 esi, eax
  002dc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002e1	85 f6		 test	 esi, esi
  002e3	75 19		 jne	 SHORT $LN26@OnLoadScri

; 67   : 			m_EmitterProperty.m_v3EmittingSize = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  002e5	8b 4d bc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  002e8	0f 57 c9	 xorps	 xmm1, xmm1
  002eb	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 306  :     z = fz;

  002ee	89 75 84	 mov	 DWORD PTR $T22[ebp+8], esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 67   : 			m_EmitterProperty.m_v3EmittingSize = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  002f1	0f 14 c1	 unpcklps xmm0, xmm1
  002f4	8b c6		 mov	 eax, esi
  002f6	66 0f d6 41 30	 movq	 QWORD PTR [ecx+48], xmm0
  002fb	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN26@OnLoadScri:

; 68   : 		}
; 69   : 		if (!rTextFileLoader.GetTokenFloat("emittingradius", &m_EmitterProperty.m_fEmittingRadius))

  002fe	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CFPFJLBH@emittingradius@
  00303	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  00306	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0030b	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0030e	8b cf		 mov	 ecx, edi
  00310	83 c0 3c	 add	 eax, 60			; 0000003cH
  00313	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00317	50		 push	 eax
  00318	8d 45 d8	 lea	 eax, DWORD PTR $T58[ebp]
  0031b	50		 push	 eax
  0031c	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00321	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  00324	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00328	8b f0		 mov	 esi, eax
  0032a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0032f	85 f6		 test	 esi, esi
  00331	75 06		 jne	 SHORT $LN27@OnLoadScri

; 70   : 		{
; 71   : 			m_EmitterProperty.m_fEmittingRadius = 0.0f;

  00333	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00336	89 70 3c	 mov	 DWORD PTR [eax+60], esi
$LN27@OnLoadScri:

; 72   : 		}
; 73   : 
; 74   : 		if (!rTextFileLoader.GetTokenBoolean("emitteremitfromedgeflag", &m_EmitterProperty.m_bEmitFromEdgeFlag))

  00339	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JPHOPPGG@emitteremitfromedgeflag@
  0033e	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  00341	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00346	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00349	8b cf		 mov	 ecx, edi
  0034b	83 c0 2c	 add	 eax, 44			; 0000002cH
  0034e	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  00352	50		 push	 eax
  00353	8d 45 d8	 lea	 eax, DWORD PTR $T57[ebp]
  00356	50		 push	 eax
  00357	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  0035c	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  0035f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00363	8b f0		 mov	 esi, eax
  00365	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0036a	85 f6		 test	 esi, esi
  0036c	75 06		 jne	 SHORT $LN28@OnLoadScri

; 75   : 		{
; 76   : 			m_EmitterProperty.m_bEmitFromEdgeFlag = FALSE;

  0036e	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00371	89 70 2c	 mov	 DWORD PTR [eax+44], esi
$LN28@OnLoadScri:

; 77   : 		}
; 78   : 
; 79   : 		if (!rTextFileLoader.GetTokenPosition("emittingdirection", &m_EmitterProperty.m_v3EmittingDirection))

  00374	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DDGDKONG@emittingdirection@
  00379	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  0037c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00381	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00384	8b cf		 mov	 ecx, edi
  00386	83 c0 40	 add	 eax, 64			; 00000040H
  00389	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  0038d	50		 push	 eax
  0038e	8d 45 d8	 lea	 eax, DWORD PTR $T56[ebp]
  00391	50		 push	 eax
  00392	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  00397	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  0039a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0039e	8b f0		 mov	 esi, eax
  003a0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003a5	8b 4d bc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  003a8	85 f6		 test	 esi, esi
  003aa	75 16		 jne	 SHORT $LN29@OnLoadScri
  003ac	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 306  :     z = fz;

  003af	89 75 84	 mov	 DWORD PTR $T21[ebp+8], esi
  003b2	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 81   : 			m_EmitterProperty.m_v3EmittingDirection = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  003b5	8b c6		 mov	 eax, esi
  003b7	0f 14 c1	 unpcklps xmm0, xmm1
  003ba	66 0f d6 41 40	 movq	 QWORD PTR [ecx+64], xmm0
  003bf	89 41 48	 mov	 DWORD PTR [ecx+72], eax
$LN29@OnLoadScri:

; 82   : 		}
; 83   : 
; 84   : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingsize", &m_EmitterProperty.m_TimeEventEmittingSize))

  003c2	8d 71 4c	 lea	 esi, DWORD PTR [ecx+76]
  003c5	56		 push	 esi
  003c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EOBNDMCN@timeeventemittingsize@
  003cb	57		 push	 edi
  003cc	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  003d1	83 c4 0c	 add	 esp, 12			; 0000000cH
  003d4	85 c0		 test	 eax, eax
  003d6	75 3e		 jne	 SHORT $LN275@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  003d8	8b 06		 mov	 eax, DWORD PTR [esi]
  003da	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  003dd	3b c2		 cmp	 eax, edx
  003df	74 05		 je	 SHORT $LN270@OnLoadScri

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  003e1	89 46 04	 mov	 DWORD PTR [esi+4], eax
  003e4	8b d0		 mov	 edx, eax
$LN270@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 88   : 			TimeEventFloat.m_fTime = 0.0f;

  003e6	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$31[ebp], 0

; 89   : 			TimeEventFloat.m_Value = 0.0f;

  003ed	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$31[ebp+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  003f4	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  003f7	74 11		 je	 SHORT $LN276@OnLoadScri

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  003f9	8b 45 a8	 mov	 eax, DWORD PTR _TimeEventFloat$31[ebp]
  003fc	8b 4d ac	 mov	 ecx, DWORD PTR _TimeEventFloat$31[ebp+4]
  003ff	89 02		 mov	 DWORD PTR [edx], eax
  00401	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 869  :         ++_Mylast;

  00404	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00408	eb 0c		 jmp	 SHORT $LN275@OnLoadScri
$LN276@OnLoadScri:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0040a	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$31[ebp]
  0040d	8b ce		 mov	 ecx, esi
  0040f	50		 push	 eax
  00410	52		 push	 edx
  00411	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN275@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 93   : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingangularvelocity", &m_EmitterProperty.m_TimeEventEmittingAngularVelocity))

  00416	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00419	83 c6 58	 add	 esi, 88			; 00000058H
  0041c	56		 push	 esi
  0041d	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@BEJHCOPI@timeeventemittingangularvelocit@
  00422	57		 push	 edi
  00423	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00428	83 c4 0c	 add	 esp, 12			; 0000000cH
  0042b	85 c0		 test	 eax, eax
  0042d	75 3e		 jne	 SHORT $LN285@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  0042f	8b 06		 mov	 eax, DWORD PTR [esi]
  00431	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00434	3b c2		 cmp	 eax, edx
  00436	74 05		 je	 SHORT $LN280@OnLoadScri

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00438	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0043b	8b d0		 mov	 edx, eax
$LN280@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 97   : 			TimeEventFloat.m_fTime = 0.0f;

  0043d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$30[ebp], 0

; 98   : 			TimeEventFloat.m_Value = 0.0f;

  00444	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$30[ebp+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  0044b	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  0044e	74 11		 je	 SHORT $LN286@OnLoadScri

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00450	8b 45 a8	 mov	 eax, DWORD PTR _TimeEventFloat$30[ebp]
  00453	8b 4d ac	 mov	 ecx, DWORD PTR _TimeEventFloat$30[ebp+4]
  00456	89 02		 mov	 DWORD PTR [edx], eax
  00458	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 869  :         ++_Mylast;

  0045b	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0045f	eb 0c		 jmp	 SHORT $LN285@OnLoadScri
$LN286@OnLoadScri:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00461	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$30[ebp]
  00464	8b ce		 mov	 ecx, esi
  00466	50		 push	 eax
  00467	52		 push	 edx
  00468	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN285@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 102  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingdirectionx", &m_EmitterProperty.m_TimeEventEmittingDirectionX))

  0046d	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00470	83 c6 64	 add	 esi, 100		; 00000064H
  00473	56		 push	 esi
  00474	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@EDKEOBKF@timeeventemittingdirectionx@
  00479	57		 push	 edi
  0047a	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  0047f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00482	85 c0		 test	 eax, eax
  00484	75 3e		 jne	 SHORT $LN295@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00486	8b 06		 mov	 eax, DWORD PTR [esi]
  00488	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0048b	3b c2		 cmp	 eax, edx
  0048d	74 05		 je	 SHORT $LN290@OnLoadScri

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0048f	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00492	8b d0		 mov	 edx, eax
$LN290@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 106  : 			TimeEventFloat.m_fTime = 0.0f;

  00494	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$29[ebp], 0

; 107  : 			TimeEventFloat.m_Value = 0.0f;

  0049b	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$29[ebp+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  004a2	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  004a5	74 11		 je	 SHORT $LN296@OnLoadScri

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  004a7	8b 45 a8	 mov	 eax, DWORD PTR _TimeEventFloat$29[ebp]
  004aa	8b 4d ac	 mov	 ecx, DWORD PTR _TimeEventFloat$29[ebp+4]
  004ad	89 02		 mov	 DWORD PTR [edx], eax
  004af	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 869  :         ++_Mylast;

  004b2	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  004b6	eb 0c		 jmp	 SHORT $LN295@OnLoadScri
$LN296@OnLoadScri:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  004b8	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$29[ebp]
  004bb	8b ce		 mov	 ecx, esi
  004bd	50		 push	 eax
  004be	52		 push	 edx
  004bf	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN295@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 110  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingdirectiony", &m_EmitterProperty.m_TimeEventEmittingDirectionY))

  004c4	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  004c7	83 c6 70	 add	 esi, 112		; 00000070H
  004ca	56		 push	 esi
  004cb	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@FKLPNAOE@timeeventemittingdirectiony@
  004d0	57		 push	 edi
  004d1	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  004d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  004d9	85 c0		 test	 eax, eax
  004db	75 3e		 jne	 SHORT $LN305@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  004dd	8b 06		 mov	 eax, DWORD PTR [esi]
  004df	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  004e2	3b c2		 cmp	 eax, edx
  004e4	74 05		 je	 SHORT $LN300@OnLoadScri

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  004e6	89 46 04	 mov	 DWORD PTR [esi+4], eax
  004e9	8b d0		 mov	 edx, eax
$LN300@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 114  : 			TimeEventFloat.m_fTime = 0.0f;

  004eb	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$28[ebp], 0

; 115  : 			TimeEventFloat.m_Value = 0.0f;

  004f2	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$28[ebp+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  004f9	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  004fc	74 11		 je	 SHORT $LN306@OnLoadScri

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  004fe	8b 45 a8	 mov	 eax, DWORD PTR _TimeEventFloat$28[ebp]
  00501	8b 4d ac	 mov	 ecx, DWORD PTR _TimeEventFloat$28[ebp+4]
  00504	89 02		 mov	 DWORD PTR [edx], eax
  00506	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 869  :         ++_Mylast;

  00509	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0050d	eb 0c		 jmp	 SHORT $LN305@OnLoadScri
$LN306@OnLoadScri:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0050f	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$28[ebp]
  00512	8b ce		 mov	 ecx, esi
  00514	50		 push	 eax
  00515	52		 push	 edx
  00516	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN305@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 118  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingdirectionz", &m_EmitterProperty.m_TimeEventEmittingDirectionZ))

  0051b	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  0051e	83 c6 7c	 add	 esi, 124		; 0000007cH
  00521	56		 push	 esi
  00522	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HBJCIDCH@timeeventemittingdirectionz@
  00527	57		 push	 edi
  00528	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  0052d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00530	85 c0		 test	 eax, eax
  00532	75 3e		 jne	 SHORT $LN315@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00534	8b 06		 mov	 eax, DWORD PTR [esi]
  00536	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00539	3b c2		 cmp	 eax, edx
  0053b	74 05		 je	 SHORT $LN310@OnLoadScri

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  0053d	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00540	8b d0		 mov	 edx, eax
$LN310@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 122  : 			TimeEventFloat.m_fTime = 0.0f;

  00542	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$27[ebp], 0

; 123  : 			TimeEventFloat.m_Value = 0.0f;

  00549	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$27[ebp+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  00550	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  00553	74 11		 je	 SHORT $LN316@OnLoadScri

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00555	8b 45 a8	 mov	 eax, DWORD PTR _TimeEventFloat$27[ebp]
  00558	8b 4d ac	 mov	 ecx, DWORD PTR _TimeEventFloat$27[ebp+4]
  0055b	89 02		 mov	 DWORD PTR [edx], eax
  0055d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 869  :         ++_Mylast;

  00560	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00564	eb 0c		 jmp	 SHORT $LN315@OnLoadScri
$LN316@OnLoadScri:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00566	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$27[ebp]
  00569	8b ce		 mov	 ecx, esi
  0056b	50		 push	 eax
  0056c	52		 push	 edx
  0056d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN315@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 126  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingvelocity", &m_EmitterProperty.m_TimeEventEmittingVelocity))

  00572	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00575	81 c6 88 00 00
	00		 add	 esi, 136		; 00000088H
  0057b	56		 push	 esi
  0057c	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@JMDFAGCJ@timeeventemittingvelocity@
  00581	57		 push	 edi
  00582	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00587	83 c4 0c	 add	 esp, 12			; 0000000cH
  0058a	85 c0		 test	 eax, eax
  0058c	75 3e		 jne	 SHORT $LN325@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  0058e	8b 06		 mov	 eax, DWORD PTR [esi]
  00590	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00593	3b c2		 cmp	 eax, edx
  00595	74 05		 je	 SHORT $LN320@OnLoadScri

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00597	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0059a	8b d0		 mov	 edx, eax
$LN320@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 130  : 			TimeEventFloat.m_fTime = 0.0f;

  0059c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$26[ebp], 0

; 131  : 			TimeEventFloat.m_Value = 0.0f;

  005a3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _TimeEventFloat$26[ebp+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  005aa	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  005ad	74 11		 je	 SHORT $LN326@OnLoadScri

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  005af	8b 45 a8	 mov	 eax, DWORD PTR _TimeEventFloat$26[ebp]
  005b2	8b 4d ac	 mov	 ecx, DWORD PTR _TimeEventFloat$26[ebp+4]
  005b5	89 02		 mov	 DWORD PTR [edx], eax
  005b7	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 869  :         ++_Mylast;

  005ba	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  005be	eb 0c		 jmp	 SHORT $LN325@OnLoadScri
$LN326@OnLoadScri:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  005c0	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$26[ebp]
  005c3	8b ce		 mov	 ecx, esi
  005c5	50		 push	 eax
  005c6	52		 push	 edx
  005c7	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN325@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 134  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemissioncountpersecond", &m_EmitterProperty.m_TimeEventEmissionCountPerSecond))

  005cc	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  005cf	8d 86 94 00 00
	00		 lea	 eax, DWORD PTR [esi+148]
  005d5	50		 push	 eax
  005d6	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KBEMNMAO@timeeventemissioncountpersecond@
  005db	57		 push	 edi
  005dc	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  005e1	83 c4 0c	 add	 esp, 12			; 0000000cH
  005e4	85 c0		 test	 eax, eax
  005e6	0f 84 30 0f 00
	00		 je	 $LN108@OnLoadScri

; 135  : 		{
; 136  : 			return FALSE;
; 137  : 		}
; 138  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventlifetime", &m_EmitterProperty.m_TimeEventLifeTime))

  005ec	8d 86 a0 00 00
	00		 lea	 eax, DWORD PTR [esi+160]
  005f2	50		 push	 eax
  005f3	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IBAOECEB@timeeventlifetime@
  005f8	57		 push	 edi
  005f9	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  005fe	83 c4 0c	 add	 esp, 12			; 0000000cH
  00601	85 c0		 test	 eax, eax
  00603	0f 84 13 0f 00
	00		 je	 $LN108@OnLoadScri

; 139  : 		{
; 140  : 			return FALSE;
; 141  : 		}
; 142  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventsizex", &m_EmitterProperty.m_TimeEventSizeX))

  00609	8d 86 ac 00 00
	00		 lea	 eax, DWORD PTR [esi+172]
  0060f	50		 push	 eax
  00610	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NKCDAPOH@timeeventsizex@
  00615	57		 push	 edi
  00616	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  0061b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0061e	85 c0		 test	 eax, eax
  00620	0f 84 f6 0e 00
	00		 je	 $LN108@OnLoadScri

; 143  : 		{
; 144  : 			return FALSE;
; 145  : 		}
; 146  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventsizey", &m_EmitterProperty.m_TimeEventSizeY))

  00626	8d 86 b8 00 00
	00		 lea	 eax, DWORD PTR [esi+184]
  0062c	50		 push	 eax
  0062d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MDDIDOKG@timeeventsizey@
  00632	57		 push	 edi
  00633	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00638	83 c4 0c	 add	 esp, 12			; 0000000cH
  0063b	85 c0		 test	 eax, eax
  0063d	0f 84 d9 0e 00
	00		 je	 $LN108@OnLoadScri
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h

; 55   : 			m_pOwner->SetParentNode();

  00643	8b cf		 mov	 ecx, edi
  00645	c7 45 fc 11 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 17 ; 00000011H
  0064c	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode

; 47   : 			m_pOwner->SetChildNode(c_szKey);

  00651	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HGNFNICN@particleproperty@
  00656	8b cf		 mov	 ecx, edi

; 56   : 		}

  00658	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 45   : 		CGotoChild(CTextFileLoader * pOwner, const char * c_szKey) : m_pOwner(pOwner)

  0065f	89 7d ac	 mov	 DWORD PTR _GotoChild$32[ebp], edi

; 47   : 			m_pOwner->SetChildNode(c_szKey);

  00662	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 155  : 		if (!rTextFileLoader.GetTokenByte("srcblendtype", &m_ParticleProperty.m_bySrcBlendType))

  00667	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BPEOGKBI@srcblendtype@
  0066c	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  0066f	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00676	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0067b	8d 86 d4 00 00
	00		 lea	 eax, DWORD PTR [esi+212]
  00681	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  00685	50		 push	 eax
  00686	8d 45 d8	 lea	 eax, DWORD PTR $T55[ebp]
  00689	8b cf		 mov	 ecx, edi
  0068b	50		 push	 eax
  0068c	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00691	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  00694	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00698	8b f0		 mov	 esi, eax
  0069a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0069f	85 f6		 test	 esi, esi
  006a1	75 0a		 jne	 SHORT $LN40@OnLoadScri

; 156  : 		{
; 157  : 			m_ParticleProperty.m_bySrcBlendType = D3DBLEND_SRCALPHA;

  006a3	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  006a6	c6 80 d4 00 00
	00 05		 mov	 BYTE PTR [eax+212], 5
$LN40@OnLoadScri:

; 158  : 		}
; 159  : 		if (!rTextFileLoader.GetTokenByte("destblendtype", &m_ParticleProperty.m_byDestBlendType))

  006ad	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FMHKLBEP@destblendtype@
  006b2	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  006b5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006ba	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  006bd	8b cf		 mov	 ecx, edi
  006bf	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  006c4	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  006c8	50		 push	 eax
  006c9	8d 45 d8	 lea	 eax, DWORD PTR $T54[ebp]
  006cc	50		 push	 eax
  006cd	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  006d2	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  006d5	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  006d9	8b f0		 mov	 esi, eax
  006db	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  006e0	85 f6		 test	 esi, esi
  006e2	75 0a		 jne	 SHORT $LN41@OnLoadScri

; 160  : 		{
; 161  : 			m_ParticleProperty.m_byDestBlendType = D3DBLEND_ONE;

  006e4	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  006e7	c6 80 d5 00 00
	00 02		 mov	 BYTE PTR [eax+213], 2
$LN41@OnLoadScri:

; 162  : 		}
; 163  : 		if (!rTextFileLoader.GetTokenByte("coloroperationtype", &m_ParticleProperty.m_byColorOperationType))

  006ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DAMHAFBJ@coloroperationtype@
  006f3	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  006f6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006fb	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  006fe	8b cf		 mov	 ecx, edi
  00700	05 d6 00 00 00	 add	 eax, 214		; 000000d6H
  00705	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  00709	50		 push	 eax
  0070a	8d 45 d8	 lea	 eax, DWORD PTR $T53[ebp]
  0070d	50		 push	 eax
  0070e	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00713	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  00716	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0071a	8b f0		 mov	 esi, eax
  0071c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00721	85 f6		 test	 esi, esi
  00723	75 0a		 jne	 SHORT $LN42@OnLoadScri

; 164  : 		{
; 165  : 			m_ParticleProperty.m_byColorOperationType = D3DTOP_MODULATE;

  00725	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00728	c6 80 d6 00 00
	00 04		 mov	 BYTE PTR [eax+214], 4
$LN42@OnLoadScri:

; 166  : 		}
; 167  : 
; 168  : 		if (!rTextFileLoader.GetTokenByte("billboardtype", &m_ParticleProperty.m_byBillboardType))

  0072f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EJACNAIE@billboardtype@
  00734	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  00737	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0073c	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0073f	8b cf		 mov	 ecx, edi
  00741	05 d7 00 00 00	 add	 eax, 215		; 000000d7H
  00746	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
  0074a	50		 push	 eax
  0074b	8d 45 d8	 lea	 eax, DWORD PTR $T52[ebp]
  0074e	50		 push	 eax
  0074f	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00754	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  00757	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0075b	8b f0		 mov	 esi, eax
  0075d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00762	85 f6		 test	 esi, esi
  00764	0f 84 a9 0d 00
	00		 je	 $LN119@OnLoadScri

; 169  : 		{
; 170  : 			return FALSE;
; 171  : 		}
; 172  : 
; 173  : 		if (!rTextFileLoader.GetTokenByte("rotationtype", &m_ParticleProperty.m_byRotationType))

  0076a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HLMOOIDA@rotationtype@
  0076f	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00772	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00777	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0077a	8b cf		 mov	 ecx, edi
  0077c	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  00781	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
  00785	50		 push	 eax
  00786	8d 45 d8	 lea	 eax, DWORD PTR $T51[ebp]
  00789	50		 push	 eax
  0078a	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  0078f	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00792	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00796	8b f0		 mov	 esi, eax
  00798	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0079d	85 f6		 test	 esi, esi
  0079f	0f 84 6e 0d 00
	00		 je	 $LN119@OnLoadScri

; 174  : 		{
; 175  : 			return FALSE;
; 176  : 		}
; 177  : 		if (!rTextFileLoader.GetTokenFloat("rotationspeed", &m_ParticleProperty.m_fRotationSpeed))

  007a5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FAOBKFID@rotationspeed@
  007aa	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  007ad	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007b2	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  007b5	8b cf		 mov	 ecx, edi
  007b7	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  007bc	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  007c0	50		 push	 eax
  007c1	8d 45 d8	 lea	 eax, DWORD PTR $T50[ebp]
  007c4	50		 push	 eax
  007c5	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  007ca	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  007cd	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  007d1	8b f0		 mov	 esi, eax
  007d3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  007d8	85 f6		 test	 esi, esi
  007da	0f 84 33 0d 00
	00		 je	 $LN119@OnLoadScri

; 178  : 		{
; 179  : 			return FALSE;
; 180  : 		}
; 181  : 		if (!rTextFileLoader.GetTokenWord("rotationrandomstartingbegin", &m_ParticleProperty.m_wRotationRandomStartingBegin))

  007e0	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BGHFBHHG@rotationrandomstartingbegin@
  007e5	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  007e8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007ed	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  007f0	8b cf		 mov	 ecx, edi
  007f2	05 e0 00 00 00	 add	 eax, 224		; 000000e0H
  007f7	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
  007fb	50		 push	 eax
  007fc	8d 45 d8	 lea	 eax, DWORD PTR $T49[ebp]
  007ff	50		 push	 eax
  00800	e8 00 00 00 00	 call	 ?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z ; CTextFileLoader::GetTokenWord
  00805	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00808	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0080c	8b f0		 mov	 esi, eax
  0080e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00813	85 f6		 test	 esi, esi
  00815	0f 84 f8 0c 00
	00		 je	 $LN119@OnLoadScri

; 182  : 		{
; 183  : 			return FALSE;
; 184  : 		}
; 185  : 		if (!rTextFileLoader.GetTokenWord("rotationrandomstartingend", &m_ParticleProperty.m_wRotationRandomStartingEnd))

  0081b	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DKMEPDJP@rotationrandomstartingend@
  00820	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  00823	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00828	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0082b	8b cf		 mov	 ecx, edi
  0082d	05 e2 00 00 00	 add	 eax, 226		; 000000e2H
  00832	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  00836	50		 push	 eax
  00837	8d 45 d8	 lea	 eax, DWORD PTR $T48[ebp]
  0083a	50		 push	 eax
  0083b	e8 00 00 00 00	 call	 ?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z ; CTextFileLoader::GetTokenWord
  00840	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  00843	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00847	8b f0		 mov	 esi, eax
  00849	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0084e	85 f6		 test	 esi, esi
  00850	0f 84 bd 0c 00
	00		 je	 $LN119@OnLoadScri

; 186  : 		{
; 187  : 			return FALSE;
; 188  : 		}
; 189  : 
; 190  : 		if (!rTextFileLoader.GetTokenBoolean("attachenable", &m_ParticleProperty.m_bAttachFlag))

  00856	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JFNGIJMG@attachenable@
  0085b	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  0085e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00863	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00866	8b cf		 mov	 ecx, edi
  00868	05 e4 00 00 00	 add	 eax, 228		; 000000e4H
  0086d	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
  00871	50		 push	 eax
  00872	8d 45 d8	 lea	 eax, DWORD PTR $T47[ebp]
  00875	50		 push	 eax
  00876	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  0087b	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  0087e	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00882	8b f0		 mov	 esi, eax
  00884	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00889	85 f6		 test	 esi, esi
  0088b	75 09		 jne	 SHORT $LN48@OnLoadScri

; 191  : 		{
; 192  : 			m_ParticleProperty.m_bAttachFlag = FALSE;

  0088d	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00890	89 b0 e4 00 00
	00		 mov	 DWORD PTR [eax+228], esi
$LN48@OnLoadScri:

; 193  : 		}
; 194  : 		if (!rTextFileLoader.GetTokenBoolean("stretchenable", &m_ParticleProperty.m_bStretchFlag))

  00896	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DFPNMBJD@stretchenable@
  0089b	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  0089e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  008a3	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  008a6	8b cf		 mov	 ecx, edi
  008a8	05 e8 00 00 00	 add	 eax, 232		; 000000e8H
  008ad	c6 45 fc 21	 mov	 BYTE PTR __$EHRec$[ebp+8], 33 ; 00000021H
  008b1	50		 push	 eax
  008b2	8d 45 d8	 lea	 eax, DWORD PTR $T46[ebp]
  008b5	50		 push	 eax
  008b6	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  008bb	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  008be	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  008c2	8b f0		 mov	 esi, eax
  008c4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  008c9	85 f6		 test	 esi, esi
  008cb	0f 84 42 0c 00
	00		 je	 $LN119@OnLoadScri

; 195  : 		{
; 196  : 			return FALSE;
; 197  : 		}
; 198  : 
; 199  : 		if (!rTextFileLoader.GetTokenByte("texanitype", &m_ParticleProperty.m_byTexAniType))

  008d1	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BIBLFGDP@texanitype@
  008d6	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  008d9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  008de	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  008e1	8b cf		 mov	 ecx, edi
  008e3	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  008e8	c6 45 fc 23	 mov	 BYTE PTR __$EHRec$[ebp+8], 35 ; 00000023H
  008ec	50		 push	 eax
  008ed	8d 45 d8	 lea	 eax, DWORD PTR $T45[ebp]
  008f0	50		 push	 eax
  008f1	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  008f6	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  008f9	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  008fd	8b f0		 mov	 esi, eax
  008ff	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00904	85 f6		 test	 esi, esi
  00906	0f 84 07 0c 00
	00		 je	 $LN119@OnLoadScri

; 200  : 		{
; 201  : 			return FALSE;
; 202  : 		}
; 203  : 		if (!rTextFileLoader.GetTokenFloat("texanidelay", &m_ParticleProperty.m_fTexAniDelay))

  0090c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PDIDMMDH@texanidelay@
  00911	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  00914	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00919	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0091c	8b cf		 mov	 ecx, edi
  0091e	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  00923	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
  00927	50		 push	 eax
  00928	8d 45 d8	 lea	 eax, DWORD PTR $T44[ebp]
  0092b	50		 push	 eax
  0092c	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00931	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  00934	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00938	8b f0		 mov	 esi, eax
  0093a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0093f	85 f6		 test	 esi, esi
  00941	0f 84 cc 0b 00
	00		 je	 $LN119@OnLoadScri

; 204  : 		{
; 205  : 			return FALSE;
; 206  : 		}
; 207  : 		if (!rTextFileLoader.GetTokenBoolean("texanirandomstartframeenable", &m_ParticleProperty.m_bTexAniRandomStartFrameFlag))

  00947	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@DIHGKMNJ@texanirandomstartframeenable@
  0094c	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  0094f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00954	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00957	8b cf		 mov	 ecx, edi
  00959	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  0095e	c6 45 fc 27	 mov	 BYTE PTR __$EHRec$[ebp+8], 39 ; 00000027H
  00962	50		 push	 eax
  00963	8d 45 d8	 lea	 eax, DWORD PTR $T43[ebp]
  00966	50		 push	 eax
  00967	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  0096c	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  0096f	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00973	8b f0		 mov	 esi, eax
  00975	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0097a	85 f6		 test	 esi, esi
  0097c	0f 84 91 0b 00
	00		 je	 $LN119@OnLoadScri

; 208  : 		{
; 209  : 			return FALSE;
; 210  : 		}
; 211  : 
; 212  : 		float fGravity;
; 213  : 
; 214  : 		if (rTextFileLoader.GetTokenFloat("gravity", &fGravity))

  00982	68 00 00 00 00	 push	 OFFSET ??_C@_07GFBFDLBM@gravity@
  00987	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  0098a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0098f	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _fGravity$7[ebp]
  00995	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
  00999	50		 push	 eax
  0099a	8d 45 d8	 lea	 eax, DWORD PTR $T42[ebp]
  0099d	8b cf		 mov	 ecx, edi
  0099f	50		 push	 eax
  009a0	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  009a5	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  009a8	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  009ac	8b f0		 mov	 esi, eax
  009ae	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  009b3	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  009b6	05 ec 00 00 00	 add	 eax, 236		; 000000ecH
  009bb	85 f6		 test	 esi, esi
  009bd	74 2a		 je	 SHORT $LN53@OnLoadScri

; 215  : 		{
; 216  : 			TTimeEventTypeFloat f;
; 217  : 			f.m_fTime = 0.0f;
; 218  : 			f.m_Value = fGravity;

  009bf	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _fGravity$7[ebp]

; 219  : 			m_ParticleProperty.m_TimeEventGravity.push_back(f);

  009c7	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _f$19[ebp]
  009cd	51		 push	 ecx
  009ce	8b c8		 mov	 ecx, eax
  009d0	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _f$19[ebp], 0
  009da	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _f$19[ebp+4], xmm0
  009e2	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back

; 220  : 		}

  009e7	eb 2a		 jmp	 SHORT $LN801@OnLoadScri
$LN53@OnLoadScri:

; 221  : 		else if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventgravity", &m_ParticleProperty.m_TimeEventGravity))

  009e9	50		 push	 eax
  009ea	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BHFJHILP@timeeventgravity@
  009ef	57		 push	 edi
  009f0	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  009f5	83 c4 0c	 add	 esp, 12			; 0000000cH
  009f8	85 c0		 test	 eax, eax
  009fa	75 17		 jne	 SHORT $LN801@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  009fc	8b 4d bc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  009ff	8b 81 ec 00 00
	00		 mov	 eax, DWORD PTR [ecx+236]
  00a05	3b 81 f0 00 00
	00		 cmp	 eax, DWORD PTR [ecx+240]
  00a0b	74 06		 je	 SHORT $LN801@OnLoadScri

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00a0d	89 81 f0 00 00
	00		 mov	 DWORD PTR [ecx+240], eax
$LN801@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 227  : 		if (rTextFileLoader.GetTokenFloat("airresistance", &fAirResistance))

  00a13	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IJAIPGAL@airresistance@
  00a18	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  00a1b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a20	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _fAirResistance$6[ebp]
  00a26	c6 45 fc 2a	 mov	 BYTE PTR __$EHRec$[ebp+8], 42 ; 0000002aH
  00a2a	50		 push	 eax
  00a2b	8d 45 d8	 lea	 eax, DWORD PTR $T41[ebp]
  00a2e	8b cf		 mov	 ecx, edi
  00a30	50		 push	 eax
  00a31	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00a36	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  00a39	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00a3d	8b f0		 mov	 esi, eax
  00a3f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a44	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00a47	05 f8 00 00 00	 add	 eax, 248		; 000000f8H
  00a4c	85 f6		 test	 esi, esi
  00a4e	0f 84 d9 02 00
	00		 je	 $LN56@OnLoadScri

; 228  : 		{
; 229  : 			TTimeEventTypeFloat f;
; 230  : 			f.m_fTime = 0.0f;
; 231  : 			f.m_Value = fAirResistance;

  00a54	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _fAirResistance$6[ebp]

; 232  : 			m_ParticleProperty.m_TimeEventAirResistance.push_back(f);

  00a5c	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _f$18[ebp]
  00a62	51		 push	 ecx
  00a63	8b c8		 mov	 ecx, eax
  00a65	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _f$18[ebp], 0
  00a6f	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _f$18[ebp+4], xmm0
  00a77	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back
$LN1080@OnLoadScri:

; 235  : 		{
; 236  : 			m_ParticleProperty.m_TimeEventAirResistance.clear();
; 237  : 		}
; 238  : 
; 239  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventscalex", &m_ParticleProperty.m_TimeEventScaleX))

  00a7c	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
$LN804@OnLoadScri:
  00a7f	8d 86 04 01 00
	00		 lea	 eax, DWORD PTR [esi+260]
  00a85	50		 push	 eax
  00a86	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GAPFNHG@timeeventscalex@
  00a8b	57		 push	 edi
  00a8c	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00a91	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a94	85 c0		 test	 eax, eax
  00a96	0f 84 77 0a 00
	00		 je	 $LN119@OnLoadScri

; 240  : 		{
; 241  : 			return FALSE;
; 242  : 		}
; 243  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventscaley", &m_ParticleProperty.m_TimeEventScaleY))

  00a9c	8d 86 10 01 00
	00		 lea	 eax, DWORD PTR [esi+272]
  00aa2	50		 push	 eax
  00aa3	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BPBEGMDH@timeeventscaley@
  00aa8	57		 push	 edi
  00aa9	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00aae	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ab1	85 c0		 test	 eax, eax
  00ab3	0f 84 5a 0a 00
	00		 je	 $LN119@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00ab9	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _TimeEventR$23[ebp], 0
  00ac0	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _TimeEventR$23[ebp+4], 0
  00ac7	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _TimeEventR$23[ebp+8], 0
  00ace	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventB$20[ebp], 0
  00ad8	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _TimeEventB$20[ebp+4], 0
  00adf	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _TimeEventB$20[ebp+8], 0
  00ae6	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventG$16[ebp], 0
  00af0	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventG$16[ebp+4], 0
  00afa	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventG$16[ebp+8], 0
  00b04	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventA$14[ebp], 0
  00b0e	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventA$14[ebp+4], 0
  00b18	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventA$14[ebp+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 271  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventcolorred", &TimeEventR))

  00b22	8d 45 88	 lea	 eax, DWORD PTR _TimeEventR$23[ebp]
  00b25	c6 45 fc 30	 mov	 BYTE PTR __$EHRec$[ebp+8], 48 ; 00000030H
  00b29	50		 push	 eax
  00b2a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@ICGDLNPI@timeeventcolorred@
  00b2f	57		 push	 edi
  00b30	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00b35	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b38	85 c0		 test	 eax, eax
  00b3a	0f 84 aa 09 00
	00		 je	 $LN124@OnLoadScri

; 272  : 		{
; 273  : 			return FALSE;
; 274  : 		}
; 275  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventcolorgreen", &TimeEventG))

  00b40	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _TimeEventG$16[ebp]
  00b46	50		 push	 eax
  00b47	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@OFLANGNK@timeeventcolorgreen@
  00b4c	57		 push	 edi
  00b4d	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00b52	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b55	85 c0		 test	 eax, eax
  00b57	0f 84 8d 09 00
	00		 je	 $LN124@OnLoadScri

; 276  : 		{
; 277  : 			return FALSE;
; 278  : 		}
; 279  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventcolorblue", &TimeEventB))

  00b5d	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _TimeEventB$20[ebp]
  00b63	50		 push	 eax
  00b64	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KLGCJHDO@timeeventcolorblue@
  00b69	57		 push	 edi
  00b6a	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00b6f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b72	85 c0		 test	 eax, eax
  00b74	0f 84 70 09 00
	00		 je	 $LN124@OnLoadScri

; 280  : 		{
; 281  : 			return FALSE;
; 282  : 		}
; 283  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventalpha", &TimeEventA))

  00b7a	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _TimeEventA$14[ebp]
  00b80	50		 push	 eax
  00b81	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KALIPJCI@timeeventalpha@
  00b86	57		 push	 edi
  00b87	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00b8c	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b8f	85 c0		 test	 eax, eax
  00b91	0f 84 53 09 00
	00		 je	 $LN124@OnLoadScri

; 284  : 		{
; 285  : 			return FALSE;
; 286  : 		}
; 287  : 
; 288  : 		m_ParticleProperty.m_TimeEventColor.clear();

  00b97	8d 86 1c 01 00
	00		 lea	 eax, DWORD PTR [esi+284]
  00b9d	89 85 60 ff ff
	ff		 mov	 DWORD PTR $T15[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00ba3	8b 86 1c 01 00
	00		 mov	 eax, DWORD PTR [esi+284]
  00ba9	3b 86 20 01 00
	00		 cmp	 eax, DWORD PTR [esi+288]
  00baf	74 06		 je	 SHORT $LN835@OnLoadScri

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00bb1	89 86 20 01 00
	00		 mov	 DWORD PTR [esi+288], eax
$LN835@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  00bb7	6a 14		 push	 20			; 00000014H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00bb9	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _times$24[ebp], 0
  00bc0	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _times$24[ebp+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 77   :         return ::operator new(_Bytes);

  00bc7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00bcc	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00bcf	89 00		 mov	 DWORD PTR [eax], eax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00bd1	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00bd4	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 350  :         _Pnode->_Color = _Black;

  00bd7	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H

; 1941 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00bdd	89 45 94	 mov	 DWORD PTR _times$24[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00be0	8b 55 8c	 mov	 edx, DWORD PTR _TimeEventR$23[ebp+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 292  : 			for (i = 0; i < TimeEventR.size(); i++)

  00be3	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00be5	8b 4d 88	 mov	 ecx, DWORD PTR _TimeEventR$23[ebp]
  00be8	8b c2		 mov	 eax, edx
  00bea	2b c1		 sub	 eax, ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 290  : 			std::set<float> times;

  00bec	c6 45 fc 35	 mov	 BYTE PTR __$EHRec$[ebp+8], 53 ; 00000035H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00bf0	c1 f8 03	 sar	 eax, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 292  : 			for (i = 0; i < TimeEventR.size(); i++)

  00bf3	85 c0		 test	 eax, eax
  00bf5	74 2e		 je	 SHORT $LN3@OnLoadScri
  00bf7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00c00	8d 04 f1	 lea	 eax, DWORD PTR [ecx+esi*8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 294  : 				times.insert(TimeEventR[i].m_fTime);

  00c03	50		 push	 eax
  00c04	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T13[ebp]
  00c0a	50		 push	 eax
  00c0b	8d 4d 94	 lea	 ecx, DWORD PTR _times$24[ebp]
  00c0e	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c13	8b 55 8c	 mov	 edx, DWORD PTR _TimeEventR$23[ebp+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 292  : 			for (i = 0; i < TimeEventR.size(); i++)

  00c16	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c17	8b 4d 88	 mov	 ecx, DWORD PTR _TimeEventR$23[ebp]
  00c1a	8b c2		 mov	 eax, edx
  00c1c	2b c1		 sub	 eax, ecx
  00c1e	c1 f8 03	 sar	 eax, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 292  : 			for (i = 0; i < TimeEventR.size(); i++)

  00c21	3b f0		 cmp	 esi, eax
  00c23	72 db		 jb	 SHORT $LL4@OnLoadScri
$LN3@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c25	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _TimeEventG$16[ebp+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 296  : 			for (i = 0; i < TimeEventG.size(); i++)

  00c2b	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c2d	8b bd 68 ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$16[ebp]
  00c33	2b c7		 sub	 eax, edi
  00c35	c1 f8 03	 sar	 eax, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 296  : 			for (i = 0; i < TimeEventG.size(); i++)

  00c38	85 c0		 test	 eax, eax
  00c3a	74 33		 je	 SHORT $LN6@OnLoadScri
  00c3c	0f 1f 40 00	 npad	 4
$LL7@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00c40	8d 04 f7	 lea	 eax, DWORD PTR [edi+esi*8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 298  : 				times.insert(TimeEventG[i].m_fTime);

  00c43	50		 push	 eax
  00c44	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]
  00c4a	50		 push	 eax
  00c4b	8d 4d 94	 lea	 ecx, DWORD PTR _times$24[ebp]
  00c4e	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c53	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _TimeEventG$16[ebp+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 296  : 			for (i = 0; i < TimeEventG.size(); i++)

  00c59	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c5a	8b bd 68 ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$16[ebp]
  00c60	2b c7		 sub	 eax, edi
  00c62	c1 f8 03	 sar	 eax, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 296  : 			for (i = 0; i < TimeEventG.size(); i++)

  00c65	3b f0		 cmp	 esi, eax
  00c67	72 d7		 jb	 SHORT $LL7@OnLoadScri
  00c69	8b 55 8c	 mov	 edx, DWORD PTR _TimeEventR$23[ebp+4]
  00c6c	8b 4d 88	 mov	 ecx, DWORD PTR _TimeEventR$23[ebp]
$LN6@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c6f	8b 45 80	 mov	 eax, DWORD PTR _TimeEventB$20[ebp+4]
  00c72	8b b5 7c ff ff
	ff		 mov	 esi, DWORD PTR _TimeEventB$20[ebp]
  00c78	2b c6		 sub	 eax, esi
  00c7a	c1 f8 03	 sar	 eax, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 300  : 			for (i = 0; i < TimeEventB.size(); i++)

  00c7d	85 c0		 test	 eax, eax
  00c7f	74 34		 je	 SHORT $LN9@OnLoadScri
  00c81	33 ff		 xor	 edi, edi
$LL10@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00c83	8d 04 fe	 lea	 eax, DWORD PTR [esi+edi*8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 302  : 				times.insert(TimeEventB[i].m_fTime);

  00c86	50		 push	 eax
  00c87	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  00c8d	50		 push	 eax
  00c8e	8d 4d 94	 lea	 ecx, DWORD PTR _times$24[ebp]
  00c91	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c96	8b 45 80	 mov	 eax, DWORD PTR _TimeEventB$20[ebp+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 300  : 			for (i = 0; i < TimeEventB.size(); i++)

  00c99	47		 inc	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c9a	8b b5 7c ff ff
	ff		 mov	 esi, DWORD PTR _TimeEventB$20[ebp]
  00ca0	2b c6		 sub	 eax, esi
  00ca2	c1 f8 03	 sar	 eax, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 300  : 			for (i = 0; i < TimeEventB.size(); i++)

  00ca5	3b f8		 cmp	 edi, eax
  00ca7	72 da		 jb	 SHORT $LL10@OnLoadScri
  00ca9	8b 55 8c	 mov	 edx, DWORD PTR _TimeEventR$23[ebp+4]
  00cac	8b 4d 88	 mov	 ecx, DWORD PTR _TimeEventR$23[ebp]
  00caf	8b bd 68 ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$16[ebp]
$LN9@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00cb5	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _TimeEventA$14[ebp+4]
  00cbb	8b b5 54 ff ff
	ff		 mov	 esi, DWORD PTR _TimeEventA$14[ebp]
  00cc1	2b c6		 sub	 eax, esi
  00cc3	c1 f8 03	 sar	 eax, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 304  : 			for (i = 0; i < TimeEventA.size(); i++)

  00cc6	85 c0		 test	 eax, eax
  00cc8	74 3b		 je	 SHORT $LN12@OnLoadScri
  00cca	33 ff		 xor	 edi, edi
  00ccc	0f 1f 40 00	 npad	 4
$LL13@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1952 :         return _My_data._Myfirst[_Pos];

  00cd0	8d 04 fe	 lea	 eax, DWORD PTR [esi+edi*8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 306  : 				times.insert(TimeEventA[i].m_fTime);

  00cd3	50		 push	 eax
  00cd4	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  00cda	50		 push	 eax
  00cdb	8d 4d 94	 lea	 ecx, DWORD PTR _times$24[ebp]
  00cde	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00ce3	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _TimeEventA$14[ebp+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 304  : 			for (i = 0; i < TimeEventA.size(); i++)

  00ce9	47		 inc	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00cea	8b b5 54 ff ff
	ff		 mov	 esi, DWORD PTR _TimeEventA$14[ebp]
  00cf0	2b c6		 sub	 eax, esi
  00cf2	c1 f8 03	 sar	 eax, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 304  : 			for (i = 0; i < TimeEventA.size(); i++)

  00cf5	3b f8		 cmp	 edi, eax
  00cf7	72 d7		 jb	 SHORT $LL13@OnLoadScri
  00cf9	8b 55 8c	 mov	 edx, DWORD PTR _TimeEventR$23[ebp+4]
  00cfc	8b 4d 88	 mov	 ecx, DWORD PTR _TimeEventR$23[ebp]
  00cff	8b bd 68 ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$16[ebp]
$LN12@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00d05	8b 45 94	 mov	 eax, DWORD PTR _times$24[ebp]
  00d08	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 309  : 			for (it = times.begin(); it != times.end(); ++it)

  00d0a	3b f0		 cmp	 esi, eax
  00d0c	0f 84 e0 04 00
	00		 je	 $LN1078@OnLoadScri
$LL662@OnLoadScri:

; 310  : 			{
; 311  : 				float fTime = *it;

  00d12	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]

; 312  : 				float fR, fG, fB, fA;
; 313  : 				GetTimeEventBlendValue<float>(fTime, TimeEventR, &fR);

  00d17	f3 0f 11 4d b0	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 231  : 	if (rVector.empty())

  00d1c	3b ca		 cmp	 ecx, edx
  00d1e	75 44		 jne	 SHORT $LN601@OnLoadScri
  00d20	0f 57 c0	 xorps	 xmm0, xmm0

; 232  : 	{
; 233  : 		*pReturnValue = T();

  00d23	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0

; 234  : 		return;

  00d28	e9 df 00 00 00	 jmp	 $LN606@OnLoadScri
$LN56@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 234  : 		else if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventairresistance", &m_ParticleProperty.m_TimeEventAirResistance))

  00d2d	50		 push	 eax
  00d2e	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@IPGEOMGJ@timeeventairresistance@
  00d33	57		 push	 edi
  00d34	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00d39	83 c4 0c	 add	 esp, 12			; 0000000cH
  00d3c	85 c0		 test	 eax, eax
  00d3e	0f 85 38 fd ff
	ff		 jne	 $LN1080@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1829 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00d44	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00d47	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  00d4d	3b 86 fc 00 00
	00		 cmp	 eax, DWORD PTR [esi+252]
  00d53	0f 84 26 fd ff
	ff		 je	 $LN804@OnLoadScri

; 1830 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1831 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1832 :             // N4901 [tab:container.seq.req] "a.clear() [...] may invalidate the past-the-end iterator".
; 1833 :             return;
; 1834 :         }
; 1835 : 
; 1836 :         _My_data._Orphan_all();
; 1837 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1838 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1839 :         _Mylast = _Myfirst;

  00d59	89 86 fc 00 00
	00		 mov	 DWORD PTR [esi+252], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 234  : 		else if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventairresistance", &m_ParticleProperty.m_TimeEventAirResistance))

  00d5f	e9 1b fd ff ff	 jmp	 $LN804@OnLoadScri
$LN601@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00d64	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 237  : 	if (rVector.begin() + 1 == rVector.end())

  00d67	3b c2		 cmp	 eax, edx
  00d69	75 0f		 jne	 SHORT $LN602@OnLoadScri

; 238  : 	{
; 239  : 		*pReturnValue = rVector.front().m_Value;

  00d6b	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00d70	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0

; 240  : 		return;

  00d75	e9 92 00 00 00	 jmp	 $LN606@OnLoadScri
$LN602@OnLoadScri:

; 241  : 	}
; 242  : 
; 243  : 	if (fElapsedTime < rVector.front().m_fTime)

  00d7a	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00d7e	0f 2f c1	 comiss	 xmm0, xmm1
  00d81	76 0c		 jbe	 SHORT $LN603@OnLoadScri

; 244  : 	{
; 245  : 		*pReturnValue = rVector.front().m_Value;

  00d83	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00d88	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0

; 246  : 		return;

  00d8d	eb 7d		 jmp	 SHORT $LN606@OnLoadScri
$LN603@OnLoadScri:

; 247  : 	}
; 248  : 
; 249  : 	if (fElapsedTime > rVector.back().m_fTime)

  00d8f	0f 2f 4a f8	 comiss	 xmm1, DWORD PTR [edx-8]
  00d93	76 0c		 jbe	 SHORT $LN604@OnLoadScri

; 250  : 	{
; 251  : 		*pReturnValue = rVector.back().m_Value;

  00d95	f3 0f 10 42 fc	 movss	 xmm0, DWORD PTR [edx-4]
  00d9a	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0

; 252  : 		return;

  00d9f	eb 6b		 jmp	 SHORT $LN606@OnLoadScri
$LN604@OnLoadScri:

; 253  : 	}
; 254  : 
; 255  : 	typedef typename std::vector<CTimeEvent<T> >::iterator iterator;
; 256  : 
; 257  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  00da1	8d 45 b0	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00da4	50		 push	 eax
  00da5	52		 push	 edx
  00da6	51		 push	 ecx
  00da7	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR _result$5[ebp]
  00dad	50		 push	 eax
  00dae	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>

; 258  : 
; 259  : 	if (result.first != result.second)

  00db3	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _result$5[ebp]
  00db9	83 c4 10	 add	 esp, 16			; 00000010H
  00dbc	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _result$5[ebp+4]
  00dc2	3b c1		 cmp	 eax, ecx
  00dc4	74 0c		 je	 SHORT $LN605@OnLoadScri

; 260  : 	{
; 261  : 		*pReturnValue = result.first->m_Value;

  00dc6	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00dcb	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0

; 262  : 	}

  00dd0	eb 35		 jmp	 SHORT $LN1083@OnLoadScri
$LN605@OnLoadScri:

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00dd2	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 91   :         --_Ptr;

  00dd6	83 e8 08	 sub	 eax, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00dd9	0f 28 c8	 movaps	 xmm1, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 91   :         --_Ptr;

  00ddc	89 85 38 ff ff
	ff		 mov	 DWORD PTR _result$5[ebp], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00de2	f3 0f 5c 4d b0	 subss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  00de7	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 267  : 		*pReturnValue = T((result.first->m_Value - result.second->m_Value) * Head + (result.second->m_Value));

  00deb	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00df0	f3 0f 5c 51 04	 subss	 xmm2, DWORD PTR [ecx+4]
  00df5	f3 0f 5e c8	 divss	 xmm1, xmm0
  00df9	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00dfd	f3 0f 58 51 04	 addss	 xmm2, DWORD PTR [ecx+4]
  00e02	f3 0f 11 55 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm2
$LN1083@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 314  : 				GetTimeEventBlendValue<float>(fTime, TimeEventG, &fG);

  00e07	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LN606@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 231  : 	if (rVector.empty())

  00e0c	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventG$16[ebp+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 314  : 				GetTimeEventBlendValue<float>(fTime, TimeEventG, &fG);

  00e12	f3 0f 11 4d b4	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 231  : 	if (rVector.empty())

  00e17	3b f9		 cmp	 edi, ecx
  00e19	75 0d		 jne	 SHORT $LN493@OnLoadScri
  00e1b	0f 57 c0	 xorps	 xmm0, xmm0

; 232  : 	{
; 233  : 		*pReturnValue = T();

  00e1e	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0

; 234  : 		return;

  00e23	e9 a8 00 00 00	 jmp	 $LN498@OnLoadScri
$LN493@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00e28	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 237  : 	if (rVector.begin() + 1 == rVector.end())

  00e2b	3b c1		 cmp	 eax, ecx
  00e2d	75 0f		 jne	 SHORT $LN494@OnLoadScri

; 238  : 	{
; 239  : 		*pReturnValue = rVector.front().m_Value;

  00e2f	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  00e34	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0

; 240  : 		return;

  00e39	e9 92 00 00 00	 jmp	 $LN498@OnLoadScri
$LN494@OnLoadScri:

; 241  : 	}
; 242  : 
; 243  : 	if (fElapsedTime < rVector.front().m_fTime)

  00e3e	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  00e42	0f 2f c1	 comiss	 xmm0, xmm1
  00e45	76 0c		 jbe	 SHORT $LN495@OnLoadScri

; 244  : 	{
; 245  : 		*pReturnValue = rVector.front().m_Value;

  00e47	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  00e4c	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0

; 246  : 		return;

  00e51	eb 7d		 jmp	 SHORT $LN498@OnLoadScri
$LN495@OnLoadScri:

; 247  : 	}
; 248  : 
; 249  : 	if (fElapsedTime > rVector.back().m_fTime)

  00e53	0f 2f 49 f8	 comiss	 xmm1, DWORD PTR [ecx-8]
  00e57	76 0c		 jbe	 SHORT $LN496@OnLoadScri

; 250  : 	{
; 251  : 		*pReturnValue = rVector.back().m_Value;

  00e59	f3 0f 10 41 fc	 movss	 xmm0, DWORD PTR [ecx-4]
  00e5e	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0

; 252  : 		return;

  00e63	eb 6b		 jmp	 SHORT $LN498@OnLoadScri
$LN496@OnLoadScri:

; 253  : 	}
; 254  : 
; 255  : 	typedef typename std::vector<CTimeEvent<T> >::iterator iterator;
; 256  : 
; 257  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  00e65	8d 45 b4	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00e68	50		 push	 eax
  00e69	51		 push	 ecx
  00e6a	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _result$4[ebp]
  00e70	57		 push	 edi
  00e71	50		 push	 eax
  00e72	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>

; 258  : 
; 259  : 	if (result.first != result.second)

  00e77	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _result$4[ebp]
  00e7d	83 c4 10	 add	 esp, 16			; 00000010H
  00e80	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _result$4[ebp+4]
  00e86	3b c1		 cmp	 eax, ecx
  00e88	74 0c		 je	 SHORT $LN497@OnLoadScri

; 260  : 	{
; 261  : 		*pReturnValue = result.first->m_Value;

  00e8a	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00e8f	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0

; 262  : 	}

  00e94	eb 35		 jmp	 SHORT $LN1084@OnLoadScri
$LN497@OnLoadScri:

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00e96	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 91   :         --_Ptr;

  00e9a	83 e8 08	 sub	 eax, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00e9d	0f 28 c8	 movaps	 xmm1, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 91   :         --_Ptr;

  00ea0	89 85 30 ff ff
	ff		 mov	 DWORD PTR _result$4[ebp], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00ea6	f3 0f 5c 4d b0	 subss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  00eab	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 267  : 		*pReturnValue = T((result.first->m_Value - result.second->m_Value) * Head + (result.second->m_Value));

  00eaf	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00eb4	f3 0f 5c 51 04	 subss	 xmm2, DWORD PTR [ecx+4]
  00eb9	f3 0f 5e c8	 divss	 xmm1, xmm0
  00ebd	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00ec1	f3 0f 58 51 04	 addss	 xmm2, DWORD PTR [ecx+4]
  00ec6	f3 0f 11 55 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm2
$LN1084@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 315  : 				GetTimeEventBlendValue<float>(fTime, TimeEventB, &fB);

  00ecb	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LN498@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 231  : 	if (rVector.empty())

  00ed0	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventB$20[ebp]
  00ed6	8b 55 80	 mov	 edx, DWORD PTR _TimeEventB$20[ebp+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 315  : 				GetTimeEventBlendValue<float>(fTime, TimeEventB, &fB);

  00ed9	f3 0f 11 4d b4	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 231  : 	if (rVector.empty())

  00ede	3b ca		 cmp	 ecx, edx
  00ee0	75 0d		 jne	 SHORT $LN547@OnLoadScri
  00ee2	0f 57 c0	 xorps	 xmm0, xmm0

; 232  : 	{
; 233  : 		*pReturnValue = T();

  00ee5	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0

; 234  : 		return;

  00eea	e9 a8 00 00 00	 jmp	 $LN552@OnLoadScri
$LN547@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00eef	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 237  : 	if (rVector.begin() + 1 == rVector.end())

  00ef2	3b c2		 cmp	 eax, edx
  00ef4	75 0f		 jne	 SHORT $LN548@OnLoadScri

; 238  : 	{
; 239  : 		*pReturnValue = rVector.front().m_Value;

  00ef6	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00efb	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0

; 240  : 		return;

  00f00	e9 92 00 00 00	 jmp	 $LN552@OnLoadScri
$LN548@OnLoadScri:

; 241  : 	}
; 242  : 
; 243  : 	if (fElapsedTime < rVector.front().m_fTime)

  00f05	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00f09	0f 2f c1	 comiss	 xmm0, xmm1
  00f0c	76 0c		 jbe	 SHORT $LN549@OnLoadScri

; 244  : 	{
; 245  : 		*pReturnValue = rVector.front().m_Value;

  00f0e	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00f13	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0

; 246  : 		return;

  00f18	eb 7d		 jmp	 SHORT $LN552@OnLoadScri
$LN549@OnLoadScri:

; 247  : 	}
; 248  : 
; 249  : 	if (fElapsedTime > rVector.back().m_fTime)

  00f1a	0f 2f 4a f8	 comiss	 xmm1, DWORD PTR [edx-8]
  00f1e	76 0c		 jbe	 SHORT $LN550@OnLoadScri

; 250  : 	{
; 251  : 		*pReturnValue = rVector.back().m_Value;

  00f20	f3 0f 10 42 fc	 movss	 xmm0, DWORD PTR [edx-4]
  00f25	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0

; 252  : 		return;

  00f2a	eb 6b		 jmp	 SHORT $LN552@OnLoadScri
$LN550@OnLoadScri:

; 253  : 	}
; 254  : 
; 255  : 	typedef typename std::vector<CTimeEvent<T> >::iterator iterator;
; 256  : 
; 257  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  00f2c	8d 45 b4	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00f2f	50		 push	 eax
  00f30	52		 push	 edx
  00f31	51		 push	 ecx
  00f32	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _result$3[ebp]
  00f38	50		 push	 eax
  00f39	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>

; 258  : 
; 259  : 	if (result.first != result.second)

  00f3e	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _result$3[ebp]
  00f44	83 c4 10	 add	 esp, 16			; 00000010H
  00f47	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _result$3[ebp+4]
  00f4d	3b c1		 cmp	 eax, ecx
  00f4f	74 0c		 je	 SHORT $LN551@OnLoadScri

; 260  : 	{
; 261  : 		*pReturnValue = result.first->m_Value;

  00f51	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00f56	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0

; 262  : 	}

  00f5b	eb 35		 jmp	 SHORT $LN1085@OnLoadScri
$LN551@OnLoadScri:

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00f5d	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 91   :         --_Ptr;

  00f61	83 e8 08	 sub	 eax, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00f64	0f 28 c8	 movaps	 xmm1, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 91   :         --_Ptr;

  00f67	89 85 28 ff ff
	ff		 mov	 DWORD PTR _result$3[ebp], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00f6d	f3 0f 5c 4d b0	 subss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  00f72	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 267  : 		*pReturnValue = T((result.first->m_Value - result.second->m_Value) * Head + (result.second->m_Value));

  00f76	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00f7b	f3 0f 5c 51 04	 subss	 xmm2, DWORD PTR [ecx+4]
  00f80	f3 0f 5e c8	 divss	 xmm1, xmm0
  00f84	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00f88	f3 0f 58 51 04	 addss	 xmm2, DWORD PTR [ecx+4]
  00f8d	f3 0f 11 55 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm2
$LN1085@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 316  : 				GetTimeEventBlendValue<float>(fTime, TimeEventA, &fA);

  00f92	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LN552@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 231  : 	if (rVector.empty())

  00f97	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventA$14[ebp]
  00f9d	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _TimeEventA$14[ebp+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 316  : 				GetTimeEventBlendValue<float>(fTime, TimeEventA, &fA);

  00fa3	f3 0f 11 4d b4	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 231  : 	if (rVector.empty())

  00fa8	3b ca		 cmp	 ecx, edx
  00faa	75 0d		 jne	 SHORT $LN439@OnLoadScri
  00fac	0f 57 c0	 xorps	 xmm0, xmm0

; 232  : 	{
; 233  : 		*pReturnValue = T();

  00faf	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0

; 234  : 		return;

  00fb4	e9 a8 00 00 00	 jmp	 $LN444@OnLoadScri
$LN439@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00fb9	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 237  : 	if (rVector.begin() + 1 == rVector.end())

  00fbc	3b c2		 cmp	 eax, edx
  00fbe	75 0f		 jne	 SHORT $LN440@OnLoadScri

; 238  : 	{
; 239  : 		*pReturnValue = rVector.front().m_Value;

  00fc0	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00fc5	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0

; 240  : 		return;

  00fca	e9 92 00 00 00	 jmp	 $LN444@OnLoadScri
$LN440@OnLoadScri:

; 241  : 	}
; 242  : 
; 243  : 	if (fElapsedTime < rVector.front().m_fTime)

  00fcf	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00fd3	0f 2f c1	 comiss	 xmm0, xmm1
  00fd6	76 0c		 jbe	 SHORT $LN441@OnLoadScri

; 244  : 	{
; 245  : 		*pReturnValue = rVector.front().m_Value;

  00fd8	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00fdd	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0

; 246  : 		return;

  00fe2	eb 7d		 jmp	 SHORT $LN444@OnLoadScri
$LN441@OnLoadScri:

; 247  : 	}
; 248  : 
; 249  : 	if (fElapsedTime > rVector.back().m_fTime)

  00fe4	0f 2f 4a f8	 comiss	 xmm1, DWORD PTR [edx-8]
  00fe8	76 0c		 jbe	 SHORT $LN442@OnLoadScri

; 250  : 	{
; 251  : 		*pReturnValue = rVector.back().m_Value;

  00fea	f3 0f 10 42 fc	 movss	 xmm0, DWORD PTR [edx-4]
  00fef	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0

; 252  : 		return;

  00ff4	eb 6b		 jmp	 SHORT $LN444@OnLoadScri
$LN442@OnLoadScri:

; 253  : 	}
; 254  : 
; 255  : 	typedef typename std::vector<CTimeEvent<T> >::iterator iterator;
; 256  : 
; 257  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  00ff6	8d 45 b4	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00ff9	50		 push	 eax
  00ffa	52		 push	 edx
  00ffb	51		 push	 ecx
  00ffc	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _result$17[ebp]
  01002	50		 push	 eax
  01003	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>

; 258  : 
; 259  : 	if (result.first != result.second)

  01008	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _result$17[ebp]
  0100e	83 c4 10	 add	 esp, 16			; 00000010H
  01011	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _result$17[ebp+4]
  01017	3b c1		 cmp	 eax, ecx
  01019	74 0c		 je	 SHORT $LN443@OnLoadScri

; 260  : 	{
; 261  : 		*pReturnValue = result.first->m_Value;

  0101b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  01020	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0

; 262  : 	}

  01025	eb 35		 jmp	 SHORT $LN1086@OnLoadScri
$LN443@OnLoadScri:

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  01027	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 91   :         --_Ptr;

  0102b	83 e8 08	 sub	 eax, 8
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  0102e	0f 28 c8	 movaps	 xmm1, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 91   :         --_Ptr;

  01031	89 85 74 ff ff
	ff		 mov	 DWORD PTR _result$17[ebp], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 266  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  01037	f3 0f 5c 4d b0	 subss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  0103c	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 267  : 		*pReturnValue = T((result.first->m_Value - result.second->m_Value) * Head + (result.second->m_Value));

  01040	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  01045	f3 0f 5c 51 04	 subss	 xmm2, DWORD PTR [ecx+4]
  0104a	f3 0f 5e c8	 divss	 xmm1, xmm0
  0104e	f3 0f 59 d1	 mulss	 xmm2, xmm1
  01052	f3 0f 58 51 04	 addss	 xmm2, DWORD PTR [ecx+4]
  01057	f3 0f 11 55 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm2
$LN1086@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 318  : 				t.m_fTime = fTime;

  0105c	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LN444@OnLoadScri:

; 319  : 				D3DXCOLOR c;
; 320  : 				c.r = fR;
; 321  : 				c.g = fG;
; 322  : 				c.b = fB;
; 323  : 				c.a = fA;

  01061	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _fR$1$[ebp]
  01066	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0106d	f3 0f 11 8d 4c
	ff ff ff	 movss	 DWORD PTR _t$9[ebp], xmm1
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1409 :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  01075	0f 57 c9	 xorps	 xmm1, xmm1
  01078	72 09		 jb	 SHORT $LN424@OnLoadScri
  0107a	c7 45 a4 ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  01081	eb 29		 jmp	 SHORT $LN423@OnLoadScri
$LN424@OnLoadScri:
  01083	0f 2f c8	 comiss	 xmm1, xmm0
  01086	72 09		 jb	 SHORT $LN422@OnLoadScri
  01088	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  0108f	eb 1b		 jmp	 SHORT $LN423@OnLoadScri
$LN422@OnLoadScri:
  01091	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  01099	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  010a1	e8 00 00 00 00	 call	 __ftol3
  010a6	89 45 a4	 mov	 DWORD PTR _dwR$1$[ebp], eax
  010a9	0f 57 c9	 xorps	 xmm1, xmm1
$LN423@OnLoadScri:

; 1410 :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  010ac	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _fG$1$[ebp]
  010b1	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  010b8	72 09		 jb	 SHORT $LN428@OnLoadScri
  010ba	c7 45 a0 ff 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  010c1	eb 26		 jmp	 SHORT $LN427@OnLoadScri
$LN428@OnLoadScri:
  010c3	0f 2f c8	 comiss	 xmm1, xmm0
  010c6	72 09		 jb	 SHORT $LN426@OnLoadScri
  010c8	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 0
  010cf	eb 18		 jmp	 SHORT $LN427@OnLoadScri
$LN426@OnLoadScri:
  010d1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  010d9	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  010e1	e8 00 00 00 00	 call	 __ftol3
  010e6	89 45 a0	 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN427@OnLoadScri:

; 1411 :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  010e9	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _fB$1$[ebp]
  010ee	0f 57 c9	 xorps	 xmm1, xmm1
  010f1	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  010f8	72 07		 jb	 SHORT $LN432@OnLoadScri
  010fa	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  010ff	eb 23		 jmp	 SHORT $LN431@OnLoadScri
$LN432@OnLoadScri:
  01101	0f 2f c8	 comiss	 xmm1, xmm0
  01104	72 04		 jb	 SHORT $LN430@OnLoadScri
  01106	33 ff		 xor	 edi, edi
  01108	eb 1a		 jmp	 SHORT $LN431@OnLoadScri
$LN430@OnLoadScri:
  0110a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  01112	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0111a	e8 00 00 00 00	 call	 __ftol3
  0111f	8b f8		 mov	 edi, eax
  01121	0f 57 c9	 xorps	 xmm1, xmm1
$LN431@OnLoadScri:

; 1412 :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  01124	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _fA$1$[ebp]
  01129	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  01130	72 07		 jb	 SHORT $LN436@OnLoadScri
  01132	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  01137	eb 1e		 jmp	 SHORT $LN435@OnLoadScri
$LN436@OnLoadScri:
  01139	0f 2f c8	 comiss	 xmm1, xmm0
  0113c	72 04		 jb	 SHORT $LN434@OnLoadScri
  0113e	33 c0		 xor	 eax, eax
  01140	eb 15		 jmp	 SHORT $LN435@OnLoadScri
$LN434@OnLoadScri:
  01142	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0114a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  01152	e8 00 00 00 00	 call	 __ftol3
$LN435@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  01157	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR $T15[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  0115d	c1 e0 08	 shl	 eax, 8
  01160	0b 45 a4	 or	 eax, DWORD PTR _dwR$1$[ebp]
  01163	c1 e0 08	 shl	 eax, 8
  01166	0b 45 a0	 or	 eax, DWORD PTR _dwG$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  01169	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
; File C:\Users\flourine\Desktop\Xantios\client-src\extern\include\directX\d3dx9math.inl

; 1414 :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  0116c	c1 e0 08	 shl	 eax, 8
  0116f	0b c7		 or	 eax, edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 324  : 				t.m_Value.m_dwColor = /*(DWORD)*/ (DWORD)c;

  01171	89 85 50 ff ff
	ff		 mov	 DWORD PTR _t$9[ebp+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 844  :         if (_Mylast != _My_data._Myend) {

  01177	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0117a	74 12		 je	 SHORT $LN407@OnLoadScri
  0117c	f3 0f 10 55 b0	 movss	 xmm2, DWORD PTR _fElapsedTime$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 141  : 		: m_dwColor(r.m_dwColor)

  01181	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 869  :         ++_Mylast;

  01184	83 42 04 08	 add	 DWORD PTR [edx+4], 8
  01188	f3 0f 11 11	 movss	 DWORD PTR [ecx], xmm2

; 845  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0118c	eb 0f		 jmp	 SHORT $LN14@OnLoadScri
$LN407@OnLoadScri:

; 846  :         }
; 847  : 
; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0118e	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _t$9[ebp]
  01194	50		 push	 eax
  01195	51		 push	 ecx
  01196	8b ca		 mov	 ecx, edx
  01198	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@AAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Emplace_reallocate<CTimeEvent<DWORDCOLOR> const &>
$LN14@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0119d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  011a0	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  011a4	74 1e		 je	 SHORT $LN661@OnLoadScri

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  011a6	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  011a9	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  011ad	75 11		 jne	 SHORT $LN1077@OnLoadScri
  011af	90		 npad	 1
$LL659@OnLoadScri:
  011b0	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  011b3	75 0b		 jne	 SHORT $LN1077@OnLoadScri

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

  011b5	8b f0		 mov	 esi, eax
  011b7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  011ba	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  011be	74 f0		 je	 SHORT $LL659@OnLoadScri
$LN1077@OnLoadScri:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())

  011c0	8b f0		 mov	 esi, eax

; 58   :         } else {

  011c2	eb 18		 jmp	 SHORT $LN666@OnLoadScri
$LN661@OnLoadScri:

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  011c4	8b f0		 mov	 esi, eax

; 453  :         while (!_Pnode->_Left->_Isnil) {

  011c6	8b 0e		 mov	 ecx, DWORD PTR [esi]
  011c8	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  011cc	75 0e		 jne	 SHORT $LN666@OnLoadScri
  011ce	66 90		 npad	 2
$LL665@OnLoadScri:
  011d0	8b 01		 mov	 eax, DWORD PTR [ecx]

; 454  :             _Pnode = _Pnode->_Left;

  011d2	8b f1		 mov	 esi, ecx
  011d4	8b c8		 mov	 ecx, eax
  011d6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  011da	74 f4		 je	 SHORT $LL665@OnLoadScri
$LN666@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 309  : 			for (it = times.begin(); it != times.end(); ++it)

  011dc	3b 75 94	 cmp	 esi, DWORD PTR _times$24[ebp]
  011df	74 11		 je	 SHORT $LN1078@OnLoadScri
  011e1	8b 55 8c	 mov	 edx, DWORD PTR _TimeEventR$23[ebp+4]
  011e4	8b 4d 88	 mov	 ecx, DWORD PTR _TimeEventR$23[ebp]
  011e7	8b bd 68 ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$16[ebp]
  011ed	e9 20 fb ff ff	 jmp	 $LL662@OnLoadScri
$LN1078@OnLoadScri:
  011f2	8d 4d 94	 lea	 ecx, DWORD PTR _times$24[ebp]

; 325  : 				m_ParticleProperty.m_TimeEventColor.push_back(t);
; 326  : 			}
; 327  : 		}

  011f5	c6 45 fc 30	 mov	 BYTE PTR __$EHRec$[ebp+8], 48 ; 00000030H
  011f9	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >

; 328  : #endif
; 329  : 
; 330  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventrotation", &m_ParticleProperty.m_TimeEventRotation))

  011fe	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  01201	8b bd 64 ff ff
	ff		 mov	 edi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  01207	05 28 01 00 00	 add	 eax, 296		; 00000128H
  0120c	50		 push	 eax
  0120d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KIMDBAHB@timeeventrotation@
  01212	57		 push	 edi
  01213	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  01218	83 c4 0c	 add	 esp, 12			; 0000000cH
  0121b	85 c0		 test	 eax, eax
  0121d	0f 84 c7 02 00
	00		 je	 $LN124@OnLoadScri

; 331  : 		{
; 332  : 			return FALSE;
; 333  : 		}
; 334  : 
; 335  : 		CTokenVector * pTextureVector;
; 336  : 
; 337  : 		if (!rTextFileLoader.GetTokenVector("texturefiles", &pTextureVector))

  01223	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HNMKMDCI@texturefiles@
  01228	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  0122b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01230	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _pTextureVector$8[ebp]
  01236	c6 45 fc 37	 mov	 BYTE PTR __$EHRec$[ebp+8], 55 ; 00000037H
  0123a	50		 push	 eax
  0123b	8d 45 d8	 lea	 eax, DWORD PTR $T40[ebp]
  0123e	8b cf		 mov	 ecx, edi
  01240	50		 push	 eax
  01241	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  01246	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  01249	c6 45 fc 30	 mov	 BYTE PTR __$EHRec$[ebp+8], 48 ; 00000030H
  0124d	8b f0		 mov	 esi, eax
  0124f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  01254	85 f6		 test	 esi, esi
  01256	0f 84 8e 02 00
	00		 je	 $LN124@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0125c	8b bd 48 ff ff
	ff		 mov	 edi, DWORD PTR _pTextureVector$8[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 342  : 		for (DWORD i = 0; i < pTextureVector->size(); ++i)

  01262	33 c9		 xor	 ecx, ecx
  01264	89 4d 9c	 mov	 DWORD PTR _i$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  01267	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0126c	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0126f	8b 37		 mov	 esi, DWORD PTR [edi]
  01271	2b ce		 sub	 ecx, esi
  01273	f7 e9		 imul	 ecx
  01275	c1 fa 02	 sar	 edx, 2
  01278	8b c2		 mov	 eax, edx
  0127a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0127d	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 342  : 		for (DWORD i = 0; i < pTextureVector->size(); ++i)

  0127f	0f 84 23 02 00
	00		 je	 $LN18@OnLoadScri
  01285	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv6199[ebp], 0
  0128c	0f 1f 40 00	 npad	 4
$LL19@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1967 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  01290	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  01293	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01298	8b 7d 9c	 mov	 edi, DWORD PTR _i$1$[ebp]
  0129b	2b ce		 sub	 ecx, esi
  0129d	f7 e9		 imul	 ecx
  0129f	c1 fa 02	 sar	 edx, 2
  012a2	8b c2		 mov	 eax, edx
  012a4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  012a7	03 c2		 add	 eax, edx
  012a9	3b c7		 cmp	 eax, edi
  012ab	0f 86 b6 02 00
	00		 jbe	 $LN1040@OnLoadScri

; 1969 :         }
; 1970 : 
; 1971 :         return _My_data._Myfirst[_Pos];

  012b1	8b 45 a4	 mov	 eax, DWORD PTR tv6199[ebp]
  012b4	03 c6		 add	 eax, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  012b6	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  012ba	72 02		 jb	 SHORT $LN373@OnLoadScri

; 2294 :             _Result = _Unfancy(_Bx._Ptr);

  012bc	8b 00		 mov	 eax, DWORD PTR [eax]
$LN373@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 344  : 			std::string strTextureFileName = pTextureVector->at(i).c_str();

  012be	50		 push	 eax
  012bf	8d 4d c0	 lea	 ecx, DWORD PTR _strTextureFileName$38[ebp]
  012c2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  012c7	83 7d d4 10	 cmp	 DWORD PTR _strTextureFileName$38[ebp+20], 16 ; 00000010H
  012cb	8d 45 c0	 lea	 eax, DWORD PTR _strTextureFileName$38[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 344  : 			std::string strTextureFileName = pTextureVector->at(i).c_str();

  012ce	c6 45 fc 39	 mov	 BYTE PTR __$EHRec$[ebp+8], 57 ; 00000039H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  012d2	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strTextureFileName$38[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 346  : 			if (!IsGlobalFileName(strTextureFileName.c_str()))

  012d6	50		 push	 eax
  012d7	e8 00 00 00 00	 call	 ?IsGlobalFileName@@YA_NPBD@Z ; IsGlobalFileName
  012dc	83 c4 04	 add	 esp, 4
  012df	84 c0		 test	 al, al
  012e1	0f 85 40 01 00
	00		 jne	 $LN764@OnLoadScri

; 348  : 				strTextureFileName = GetOnlyPathName(rTextFileLoader.GetFileName()) + strTextureFileName;

  012e7	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  012ed	e8 00 00 00 00	 call	 ?GetFileName@CTextFileLoader@@QAEPBDXZ ; CTextFileLoader::GetFileName
  012f2	50		 push	 eax
  012f3	e8 00 00 00 00	 call	 ?GetOnlyPathName@@YAPBDPBD@Z ; GetOnlyPathName
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  012f8	8b f0		 mov	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 348  : 				strTextureFileName = GetOnlyPathName(rTextFileLoader.GetFileName()) + strTextureFileName;

  012fa	89 85 60 ff ff
	ff		 mov	 DWORD PTR __Left$1$[ebp], eax
  01300	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 415  :             return __builtin_strlen(_First);

  01303	8d 56 01	 lea	 edx, DWORD PTR [esi+1]
$LL1069@OnLoadScri:
  01306	8a 0e		 mov	 cl, BYTE PTR [esi]
  01308	46		 inc	 esi
  01309	84 c9		 test	 cl, cl
  0130b	75 f9		 jne	 SHORT $LL1069@OnLoadScri

; 5093 :     const auto _Right_size = _Right.size();

  0130d	8b 4d d0	 mov	 ecx, DWORD PTR _strTextureFileName$38[ebp+16]
  01310	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 415  :             return __builtin_strlen(_First);

  01315	2b f2		 sub	 esi, edx

; 5093 :     const auto _Right_size = _Right.size();

  01317	89 4d b0	 mov	 DWORD PTR __Right_size$1$[ebp], ecx
  0131a	2b c1		 sub	 eax, ecx

; 5094 :     if (_Right.max_size() - _Right_size < _Left_size) {

  0131c	3b c6		 cmp	 eax, esi
  0131e	0f 82 3e 02 00
	00		 jb	 $LN1041@OnLoadScri

; 2293 :         if (_Large_string_engaged()) {

  01324	83 7d d4 10	 cmp	 DWORD PTR _strTextureFileName$38[ebp+20], 16 ; 00000010H
  01328	8d 45 c0	 lea	 eax, DWORD PTR _strTextureFileName$38[ebp]

; 2920 :         size_type _New_capacity = _BUF_SIZE - 1;

  0132b	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  01330	0f 57 c0	 xorps	 xmm0, xmm0

; 2293 :         if (_Large_string_engaged()) {

  01333	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strTextureFileName$38[ebp]

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  01337	03 ce		 add	 ecx, esi

; 2293 :         if (_Large_string_engaged()) {

  01339	89 45 98	 mov	 DWORD PTR __Result$2$[ebp], eax

; 2922 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  0133c	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0133f	89 4d a0	 mov	 DWORD PTR __New_size$1$[ebp], ecx

; 2922 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  01342	89 45 b4	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  01345	0f 11 45 d8	 movups	 XMMWORD PTR $T39[ebp], xmm0

; 2926 :         if (_New_capacity < _New_size) {

  01349	3b cf		 cmp	 ecx, edi
  0134b	76 62		 jbe	 SHORT $LN683@OnLoadScri

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0134d	8b f9		 mov	 edi, ecx
  0134f	83 cf 0f	 or	 edi, 15			; 0000000fH
  01352	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  01358	76 18		 jbe	 SHORT $LN698@OnLoadScri

; 4885 :             return _Max;

  0135a	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0135f	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  01364	50		 push	 eax
  01365	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0136a	8b 4d a0	 mov	 ecx, DWORD PTR __New_size$1$[ebp]
  0136d	83 c4 04	 add	 esp, 4
  01370	eb 37		 jmp	 SHORT $LN1087@OnLoadScri
$LN698@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 4892 :         return (_STD max)(_Masked, _Old + _Old / 2);

  01372	83 ff 16	 cmp	 edi, 22			; 00000016H
  01375	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  0137a	0f 42 f8	 cmovb	 edi, eax

; 2928 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  0137d	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01380	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  01385	72 0e		 jb	 SHORT $LN706@OnLoadScri

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  01387	50		 push	 eax
  01388	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0138d	8b 4d a0	 mov	 ecx, DWORD PTR __New_size$1$[ebp]
  01390	83 c4 04	 add	 esp, 4
  01393	eb 14		 jmp	 SHORT $LN1087@OnLoadScri
$LN706@OnLoadScri:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  01395	85 c0		 test	 eax, eax
  01397	74 0e		 je	 SHORT $LN707@OnLoadScri

; 77   :         return ::operator new(_Bytes);

  01399	50		 push	 eax
  0139a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 235  :         return _Traits::_Allocate(_Bytes);

  0139f	8b 4d a0	 mov	 ecx, DWORD PTR __New_size$1$[ebp]

; 77   :         return ::operator new(_Bytes);

  013a2	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  013a5	eb 02		 jmp	 SHORT $LN1087@OnLoadScri
$LN707@OnLoadScri:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  013a7	33 c0		 xor	 eax, eax
$LN1087@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2930 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  013a9	89 45 b4	 mov	 DWORD PTR __Ptr$1$[ebp], eax
  013ac	89 45 d8	 mov	 DWORD PTR $T39[ebp], eax
$LN683@OnLoadScri:

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  013af	56		 push	 esi
  013b0	ff b5 60 ff ff
	ff		 push	 DWORD PTR __Left$1$[ebp]

; 2939 :         _My_data._Mysize = _New_size;

  013b6	89 4d e8	 mov	 DWORD PTR $T39[ebp+16], ecx

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  013b9	50		 push	 eax

; 2940 :         _My_data._Myres  = _New_capacity;

  013ba	89 7d ec	 mov	 DWORD PTR $T39[ebp+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  013bd	e8 00 00 00 00	 call	 _memcpy

; 2942 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  013c2	8b 7d b4	 mov	 edi, DWORD PTR __Ptr$1$[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  013c5	ff 75 b0	 push	 DWORD PTR __Right_size$1$[ebp]
  013c8	ff 75 98	 push	 DWORD PTR __Result$2$[ebp]

; 2942 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  013cb	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  013ce	50		 push	 eax
  013cf	e8 00 00 00 00	 call	 _memcpy

; 2943 :         _Traits::assign(_Ptr[_New_size], _Elem());

  013d4	8b 45 a0	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  013d7	83 c4 18	 add	 esp, 24			; 00000018H

; 2943 :         _Traits::assign(_Ptr[_New_size], _Elem());

  013da	c6 04 07 00	 mov	 BYTE PTR [edi+eax], 0

; 5011 :         if (_My_data._Large_string_engaged()) {

  013de	8b 4d d4	 mov	 ecx, DWORD PTR _strTextureFileName$38[ebp+20]
  013e1	83 f9 10	 cmp	 ecx, 16			; 00000010H
  013e4	72 2c		 jb	 SHORT $LN723@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  013e6	8b 55 c0	 mov	 edx, DWORD PTR _strTextureFileName$38[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  013e9	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  013ea	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  013ec	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  013f2	72 14		 jb	 SHORT $LN733@OnLoadScri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  013f4	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  013f7	83 c1 23	 add	 ecx, 35			; 00000023H
  013fa	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  013fc	83 c0 fc	 add	 eax, -4			; fffffffcH
  013ff	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01402	0f 87 41 01 00
	00		 ja	 $LN362@OnLoadScri
$LN733@OnLoadScri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  01408	51		 push	 ecx
  01409	52		 push	 edx
  0140a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0140f	83 c4 08	 add	 esp, 8
$LN723@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 3140 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  01412	0f 10 45 d8	 movups	 xmm0, XMMWORD PTR $T39[ebp]
  01416	8b 7d 9c	 mov	 edi, DWORD PTR _i$1$[ebp]
  01419	0f 11 45 c0	 movups	 XMMWORD PTR _strTextureFileName$38[ebp], xmm0
  0141d	f3 0f 7e 45 e8	 movq	 xmm0, QWORD PTR $T39[ebp+16]
  01422	66 0f d6 45 d0	 movq	 QWORD PTR _strTextureFileName$38[ebp+16], xmm0
$LN764@OnLoadScri:

; 2293 :         if (_Large_string_engaged()) {

  01427	83 7d d4 10	 cmp	 DWORD PTR _strTextureFileName$38[ebp+20], 16 ; 00000010H
  0142b	8d 45 c0	 lea	 eax, DWORD PTR _strTextureFileName$38[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 351  : 			m_ParticleProperty.InsertTexture(strTextureFileName.c_str());

  0142e	8b 4d bc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2293 :         if (_Large_string_engaged()) {

  01431	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strTextureFileName$38[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 351  : 			m_ParticleProperty.InsertTexture(strTextureFileName.c_str());

  01435	50		 push	 eax
  01436	8d 89 c4 00 00
	00		 lea	 ecx, DWORD PTR [ecx+196]
  0143c	e8 00 00 00 00	 call	 ?InsertTexture@CParticleProperty@@QAEXPBD@Z ; CParticleProperty::InsertTexture
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  01441	8b 4d d4	 mov	 ecx, DWORD PTR _strTextureFileName$38[ebp+20]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 352  : 		}

  01444	c6 45 fc 30	 mov	 BYTE PTR __$EHRec$[ebp+8], 48 ; 00000030H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5011 :         if (_My_data._Large_string_engaged()) {

  01448	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0144b	72 2c		 jb	 SHORT $LN355@OnLoadScri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0144d	8b 55 c0	 mov	 edx, DWORD PTR _strTextureFileName$38[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  01450	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01451	8b c2		 mov	 eax, edx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01453	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  01459	72 14		 jb	 SHORT $LN365@OnLoadScri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0145b	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0145e	83 c1 23	 add	 ecx, 35			; 00000023H
  01461	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01463	83 c0 fc	 add	 eax, -4			; fffffffcH
  01466	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01469	0f 87 da 00 00
	00		 ja	 $LN362@OnLoadScri
$LN365@OnLoadScri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0146f	51		 push	 ecx
  01470	52		 push	 edx
  01471	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01476	83 c4 08	 add	 esp, 8
$LN355@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 342  : 		for (DWORD i = 0; i < pTextureVector->size(); ++i)

  01479	83 45 a4 18	 add	 DWORD PTR tv6199[ebp], 24 ; 00000018H
  0147d	47		 inc	 edi
  0147e	89 7d 9c	 mov	 DWORD PTR _i$1$[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  01481	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01486	8b bd 48 ff ff
	ff		 mov	 edi, DWORD PTR _pTextureVector$8[ebp]
  0148c	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0148f	8b 37		 mov	 esi, DWORD PTR [edi]
  01491	2b ce		 sub	 ecx, esi
  01493	f7 e9		 imul	 ecx
  01495	c1 fa 02	 sar	 edx, 2
  01498	8b c2		 mov	 eax, edx
  0149a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0149d	03 c2		 add	 eax, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 342  : 		for (DWORD i = 0; i < pTextureVector->size(); ++i)

  0149f	39 45 9c	 cmp	 DWORD PTR _i$1$[ebp], eax
  014a2	0f 82 e8 fd ff
	ff		 jb	 $LL19@OnLoadScri
$LN18@OnLoadScri:

; 353  : 	}

  014a8	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventA$14[ebp]
  014ae	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  014b3	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventG$16[ebp]
  014b9	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  014be	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventB$20[ebp]
  014c4	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  014c9	8d 4d 88	 lea	 ecx, DWORD PTR _TimeEventR$23[ebp]
  014cc	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h

; 55   : 			m_pOwner->SetParentNode();

  014d1	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  014d7	c7 45 fc 3a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 58 ; 0000003aH
  014de	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 355  : 	return TRUE;

  014e3	b8 01 00 00 00	 mov	 eax, 1
  014e8	eb 42		 jmp	 SHORT $LN1@OnLoadScri
$LN124@OnLoadScri:

; 339  : 			return FALSE;

  014ea	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventA$14[ebp]
  014f0	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  014f5	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventG$16[ebp]
  014fb	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  01500	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventB$20[ebp]
  01506	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  0150b	8d 4d 88	 lea	 ecx, DWORD PTR _TimeEventR$23[ebp]
  0150e	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
$LN119@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h

; 54   : 		{

  01513	c7 45 fc 38 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 56 ; 00000038H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 339  : 			return FALSE;

  0151a	eb 07		 jmp	 SHORT $LN1088@OnLoadScri
$LN108@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h

; 54   : 		{

  0151c	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 16 ; 00000010H
$LN1088@OnLoadScri:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 356  : }

  01523	8b cf		 mov	 ecx, edi
  01525	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  0152a	33 c0		 xor	 eax, eax
$LN1@OnLoadScri:
  0152c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0152f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  01536	59		 pop	 ecx
  01537	5f		 pop	 edi
  01538	5e		 pop	 esi
  01539	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0153c	33 cd		 xor	 ecx, ebp
  0153e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01543	8b e5		 mov	 esp, ebp
  01545	5d		 pop	 ebp
  01546	c2 04 00	 ret	 4
$LN362@OnLoadScri:
  01549	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1090@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0154e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1091@OnLoadScri:
  01553	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1092@OnLoadScri:
  01558	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1093@OnLoadScri:
  0155d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1041@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5095 :         _Xlen_string();

  01562	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN1040@OnLoadScri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1968 :             _Xrange();

  01567	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN1082@OnLoadScri:
  0156c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$0:
  00000	8d 4d 98	 lea	 ecx, DWORD PTR _GotoChild$25[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGotoChild@CTextFileLoader@@QAE@XZ ; CTextFileLoader::CGotoChild::~CGotoChild
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T65[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T64[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T63[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$4:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T62[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$5:
  00028	8d 4d d8	 lea	 ecx, DWORD PTR $T61[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$6:
  00030	8d 4d d8	 lea	 ecx, DWORD PTR $T60[ebp]
  00033	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$7:
  00038	8d 4d d8	 lea	 ecx, DWORD PTR $T59[ebp]
  0003b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$8:
  00040	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  00043	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$9:
  00048	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  0004b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$10:
  00050	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$11:
  00058	8d 4d ac	 lea	 ecx, DWORD PTR _GotoChild$32[ebp]
  0005b	e9 00 00 00 00	 jmp	 ??1CGotoChild@CTextFileLoader@@QAE@XZ ; CTextFileLoader::CGotoChild::~CGotoChild
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$12:
  00060	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  00063	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$13:
  00068	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  0006b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$14:
  00070	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  00073	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$15:
  00078	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  0007b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$16:
  00080	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00083	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$17:
  00088	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  0008b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$18:
  00090	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00093	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$19:
  00098	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  0009b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$20:
  000a0	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  000a3	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$21:
  000a8	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  000ab	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$22:
  000b0	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  000b3	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$23:
  000b8	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  000bb	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$24:
  000c0	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  000c3	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$25:
  000c8	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  000cb	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$26:
  000d0	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  000d3	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$27:
  000d8	8d 4d 88	 lea	 ecx, DWORD PTR _TimeEventR$23[ebp]
  000db	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$28:
  000e0	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventB$20[ebp]
  000e6	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$29:
  000eb	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventG$16[ebp]
  000f1	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$30:
  000f6	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventA$14[ebp]
  000fc	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$31:
  00101	8d 4d 94	 lea	 ecx, DWORD PTR _times$24[ebp]
  00104	e9 00 00 00 00	 jmp	 ??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$32:
  00109	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  0010c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$33:
  00111	8d 4d c0	 lea	 ecx, DWORD PTR _strTextureFileName$38[ebp]
  00114	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00119	cc		 int	 3
  0011a	cc		 int	 3
  0011b	cc		 int	 3
  0011c	cc		 int	 3
  0011d	cc		 int	 3
__ehhandler$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z:
  0011e	90		 npad	 1
  0011f	90		 npad	 1
  00120	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00124	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00127	8b 8a 28 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-216]
  0012d	33 c8		 xor	 ecx, eax
  0012f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00134	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00137	33 c8		 xor	 ecx, eax
  00139	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
  00143	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z ENDP ; CParticleSystemData::OnLoadScript
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z
_TEXT	SEGMENT
_pValue$1$ = -16					; size = 4
__My_data$1$ = -16					; size = 4
__My_data$1$ = -16					; size = 4
$T1 = -16						; size = 4
$T2 = -16						; size = 4
$T3 = -16						; size = 4
$T4 = -16						; size = 4
$T5 = -16						; size = 4
$T6 = -16						; size = 4
$T7 = -12						; size = 4
tv2372 = -12						; size = 4
$T8 = -12						; size = 4
$T9 = -12						; size = 4
$T10 = -12						; size = 4
$T11 = -12						; size = 4
$T12 = -8						; size = 4
$T13 = -8						; size = 4
$T14 = -8						; size = 4
$T15 = -8						; size = 4
_this$1$ = -4						; size = 4
tv2325 = 8						; size = 4
$T16 = 8						; size = 4
$T17 = 8						; size = 4
$T18 = 8						; size = 4
$T19 = 8						; size = 4
$T20 = 8						; size = 4
$T21 = 8						; size = 4
$T22 = 8						; size = 4
_pInstance$ = 8						; size = 4
?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z PROC ; CParticleSystemData::BuildDecorator, COMDAT
; _this$ = ecx

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi

; 378  : 	pInstance->m_pDecorator = new CNullDecorator;

  00008	6a 10		 push	 16			; 00000010H
  0000a	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000d	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 f0	 mov	 DWORD PTR $T6[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	74 24		 je	 SHORT $LN23@BuildDecor
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  0001e	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00025	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  0002c	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 93   : 	CNullDecorator() {}

  00033	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00039	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 378  : 	pInstance->m_pDecorator = new CNullDecorator;

  00040	eb 02		 jmp	 SHORT $LN24@BuildDecor
$LN23@BuildDecor:
  00042	33 f6		 xor	 esi, esi
$LN24@BuildDecor:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1931 :         auto& _My_data = _Mypair._Myval2;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 378  : 	pInstance->m_pDecorator = new CNullDecorator;

  00047	8b 7d 08	 mov	 edi, DWORD PTR _pInstance$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1931 :         auto& _My_data = _Mypair._Myval2;

  0004a	8d 88 f8 00 00
	00		 lea	 ecx, DWORD PTR [eax+248]
  00050	89 4d f0	 mov	 DWORD PTR __My_data$1$[ebp], ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 378  : 	pInstance->m_pDecorator = new CNullDecorator;

  00053	89 77 70	 mov	 DWORD PTR [edi+112], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00056	8b 11		 mov	 edx, DWORD PTR [ecx]
  00058	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0005b	2b ca		 sub	 ecx, edx
  0005d	c1 f9 03	 sar	 ecx, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 382  : 	if (m_ParticleProperty.m_TimeEventAirResistance.size() > 1)

  00060	83 f9 01	 cmp	 ecx, 1
  00063	76 70		 jbe	 SHORT $LN6@BuildDecor

; 384  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CAirResistanceDecorator);

  00065	6a 10		 push	 16			; 00000010H
  00067	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new
  0006c	83 c4 04	 add	 esp, 4
  0006f	89 45 f4	 mov	 DWORD PTR $T11[ebp], eax
  00072	85 c0		 test	 eax, eax
  00074	74 24		 je	 SHORT $LN25@BuildDecor
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00076	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0007d	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00084	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 268  : 	CAirResistanceDecorator() {}

  0008b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00091	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 384  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CAirResistanceDecorator);

  00098	eb 05		 jmp	 SHORT $LN26@BuildDecor
$LN25@BuildDecor:
  0009a	33 c0		 xor	 eax, eax
  0009c	89 45 f4	 mov	 DWORD PTR $T11[ebp], eax
$LN26@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  0009f	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 40   : 		m_PrevDecorator = pd;

  000a2	89 46 08	 mov	 DWORD PTR [esi+8], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 385  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  000a5	6a 24		 push	 36			; 00000024H
  000a7	89 47 70	 mov	 DWORD PTR [edi+112], eax
  000aa	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  000af	83 c4 04	 add	 esp, 4
  000b2	89 45 f8	 mov	 DWORD PTR $T15[ebp], eax
  000b5	85 c0		 test	 eax, eax
  000b7	74 15		 je	 SHORT $LN27@BuildDecor
  000b9	8d 4f 64	 lea	 ecx, DWORD PTR [edi+100]
  000bc	51		 push	 ecx
  000bd	ff 75 f0	 push	 DWORD PTR __My_data$1$[ebp]
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  000c7	8b f0		 mov	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  000c9	8b 45 f4	 mov	 eax, DWORD PTR $T11[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 388  : 	}

  000cc	eb 4e		 jmp	 SHORT $LN242@BuildDecor
$LN27@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  000ce	8b 45 f4	 mov	 eax, DWORD PTR $T11[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 385  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  000d1	33 f6		 xor	 esi, esi

; 388  : 	}

  000d3	eb 47		 jmp	 SHORT $LN242@BuildDecor
$LN6@BuildDecor:

; 389  : 	else if (m_ParticleProperty.m_TimeEventAirResistance.size() == 1)

  000d5	75 51		 jne	 SHORT $LN8@BuildDecor

; 390  : 	{
; 391  : 		pInstance->m_fAirResistance = m_ParticleProperty.m_TimeEventAirResistance[0].m_Value;

  000d7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 392  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CAirResistanceDecorator);

  000da	6a 10		 push	 16			; 00000010H
  000dc	89 47 64	 mov	 DWORD PTR [edi+100], eax
  000df	89 75 f0	 mov	 DWORD PTR $T1[ebp], esi
  000e2	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new
  000e7	8b f0		 mov	 esi, eax
  000e9	83 c4 04	 add	 esp, 4
  000ec	89 75 f4	 mov	 DWORD PTR $T10[ebp], esi
  000ef	85 f6		 test	 esi, esi
  000f1	74 24		 je	 SHORT $LN29@BuildDecor
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  000f3	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  000fa	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00101	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 268  : 	CAirResistanceDecorator() {}

  00108	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  0010e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 392  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CAirResistanceDecorator);

  00115	eb 02		 jmp	 SHORT $LN30@BuildDecor
$LN29@BuildDecor:
  00117	33 f6		 xor	 esi, esi
$LN30@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  00119	8b 45 f0	 mov	 eax, DWORD PTR $T1[ebp]
$LN242@BuildDecor:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1931 :         auto& _My_data = _Mypair._Myval2;

  0011c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0011f	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00122	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00125	89 77 70	 mov	 DWORD PTR [edi+112], esi
$LN8@BuildDecor:

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00128	8b 88 ec 00 00
	00		 mov	 ecx, DWORD PTR [eax+236]
  0012e	05 ec 00 00 00	 add	 eax, 236		; 000000ecH
  00133	89 45 f0	 mov	 DWORD PTR __My_data$1$[ebp], eax
  00136	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00139	2b c1		 sub	 eax, ecx
  0013b	c1 f8 03	 sar	 eax, 3
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 395  : 	if (m_ParticleProperty.m_TimeEventGravity.size() > 1)

  0013e	83 f8 01	 cmp	 eax, 1
  00141	0f 86 82 00 00
	00		 jbe	 $LN9@BuildDecor

; 397  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  00147	6a 10		 push	 16			; 00000010H
  00149	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new
  0014e	83 c4 04	 add	 esp, 4
  00151	89 45 f4	 mov	 DWORD PTR $T9[ebp], eax
  00154	85 c0		 test	 eax, eax
  00156	74 24		 je	 SHORT $LN31@BuildDecor
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00158	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0015f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00166	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 279  : 	CGravityDecorator() {}

  0016d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00173	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 397  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  0017a	eb 05		 jmp	 SHORT $LN32@BuildDecor
$LN31@BuildDecor:
  0017c	33 c0		 xor	 eax, eax
  0017e	89 45 f4	 mov	 DWORD PTR $T9[ebp], eax
$LN32@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  00181	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 40   : 		m_PrevDecorator = pd;

  00184	89 46 08	 mov	 DWORD PTR [esi+8], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 398  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00187	6a 24		 push	 36			; 00000024H
  00189	89 47 70	 mov	 DWORD PTR [edi+112], eax
  0018c	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  00191	83 c4 04	 add	 esp, 4
  00194	89 45 f8	 mov	 DWORD PTR $T14[ebp], eax
  00197	85 c0		 test	 eax, eax
  00199	74 1e		 je	 SHORT $LN33@BuildDecor
  0019b	8d 4f 6c	 lea	 ecx, DWORD PTR [edi+108]
  0019e	51		 push	 ecx
  0019f	ff 75 f0	 push	 DWORD PTR __My_data$1$[ebp]
  001a2	8b c8		 mov	 ecx, eax
  001a4	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  001a9	8b f0		 mov	 esi, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  001ab	8b 45 f4	 mov	 eax, DWORD PTR $T9[ebp]
  001ae	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 40   : 		m_PrevDecorator = pd;

  001b1	89 70 08	 mov	 DWORD PTR [eax+8], esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 398  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  001b4	89 77 70	 mov	 DWORD PTR [edi+112], esi

; 399  : 									  new CGravityValueDecorator(m_ParticleProperty.m_TimeEventGravity, &pInstance->m_fGravity)
; 400  : 								  );
; 401  : 	}

  001b7	eb 5a		 jmp	 SHORT $LN11@BuildDecor
$LN33@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  001b9	8b 45 f4	 mov	 eax, DWORD PTR $T9[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 398  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  001bc	33 f6		 xor	 esi, esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  001be	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 40   : 		m_PrevDecorator = pd;

  001c1	89 70 08	 mov	 DWORD PTR [eax+8], esi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 398  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  001c4	89 77 70	 mov	 DWORD PTR [edi+112], esi

; 399  : 									  new CGravityValueDecorator(m_ParticleProperty.m_TimeEventGravity, &pInstance->m_fGravity)
; 400  : 								  );
; 401  : 	}

  001c7	eb 4a		 jmp	 SHORT $LN11@BuildDecor
$LN9@BuildDecor:

; 402  : 	else if (m_ParticleProperty.m_TimeEventGravity.size() == 1)

  001c9	75 48		 jne	 SHORT $LN11@BuildDecor

; 403  : 	{
; 404  : 		pInstance->m_fGravity = m_ParticleProperty.m_TimeEventGravity[0].m_Value;

  001cb	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 405  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  001ce	6a 10		 push	 16			; 00000010H
  001d0	89 47 6c	 mov	 DWORD PTR [edi+108], eax
  001d3	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new
  001d8	83 c4 04	 add	 esp, 4
  001db	89 45 f0	 mov	 DWORD PTR $T5[ebp], eax
  001de	85 c0		 test	 eax, eax
  001e0	74 24		 je	 SHORT $LN35@BuildDecor
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  001e2	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  001e9	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  001f0	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 279  : 	CGravityDecorator() {}

  001f7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  001fd	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 405  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  00204	eb 02		 jmp	 SHORT $LN36@BuildDecor
$LN35@BuildDecor:
  00206	33 c0		 xor	 eax, eax
$LN36@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  00208	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 40   : 		m_PrevDecorator = pd;

  0020b	89 46 08	 mov	 DWORD PTR [esi+8], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 405  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  0020e	8b f0		 mov	 esi, eax
  00210	89 47 70	 mov	 DWORD PTR [edi+112], eax
$LN11@BuildDecor:

; 417  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00213	6a 24		 push	 36			; 00000024H
  00215	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new
  0021a	83 c4 04	 add	 esp, 4
  0021d	89 45 f8	 mov	 DWORD PTR $T13[ebp], eax
  00220	85 c0		 test	 eax, eax
  00222	74 7f		 je	 SHORT $LN37@BuildDecor
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00224	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 417  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0022b	8d 4f 44	 lea	 ecx, DWORD PTR [edi+68]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0022e	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00231	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00238	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 112  : 	{

  0023f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00245	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0024c	8b 97 1c 01 00
	00		 mov	 edx, DWORD PTR [edi+284]
  00252	89 50 10	 mov	 DWORD PTR [eax+16], edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 417  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00255	89 4d f0	 mov	 DWORD PTR _pValue$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00258	8b 8f 20 01 00
	00		 mov	 ecx, DWORD PTR [edi+288]

; 156  :         return _Ptr == _Right._Ptr;

  0025e	3b d1		 cmp	 edx, ecx

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00260	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00263	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  00269	8b 7d f8	 mov	 edi, DWORD PTR $T13[ebp]
  0026c	89 47 18	 mov	 DWORD PTR [edi+24], eax
  0026f	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00272	8b b8 1c 01 00
	00		 mov	 edi, DWORD PTR [eax+284]
  00278	8b 45 f8	 mov	 eax, DWORD PTR $T13[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 113  : 		if (it_start == it_end)

  0027b	8b c8		 mov	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0027d	89 7d f4	 mov	 DWORD PTR tv2372[ebp], edi
  00280	89 78 1c	 mov	 DWORD PTR [eax+28], edi
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 111  : 		  pData(pValue)

  00283	8b 7d f0	 mov	 edi, DWORD PTR _pValue$1$[ebp]
  00286	89 78 20	 mov	 DWORD PTR [eax+32], edi

; 113  : 		if (it_start == it_end)

  00289	75 0a		 jne	 SHORT $LN106@BuildDecor
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\Type.h

; 146  : 		m_dwColor = r.m_dwColor;

  0028b	8b 45 08	 mov	 eax, DWORD PTR $T16[ebp]
  0028e	89 07		 mov	 DWORD PTR [edi], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 417  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00290	8b 7d 08	 mov	 edi, DWORD PTR _pInstance$[ebp]
  00293	eb 13		 jmp	 SHORT $LN38@BuildDecor
$LN106@BuildDecor:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  00295	8b 45 f4	 mov	 eax, DWORD PTR tv2372[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 417  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00298	8b 7d 08	 mov	 edi, DWORD PTR _pInstance$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 74   :         ++_Ptr;

  0029b	83 c0 08	 add	 eax, 8
  0029e	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 417  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  002a1	eb 05		 jmp	 SHORT $LN38@BuildDecor
$LN37@BuildDecor:
  002a3	33 c9		 xor	 ecx, ecx
  002a5	89 4d f8	 mov	 DWORD PTR $T13[ebp], ecx
$LN38@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  002a8	89 71 04	 mov	 DWORD PTR [ecx+4], esi

; 40   : 		m_PrevDecorator = pd;

  002ab	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 421  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  002ae	6a 24		 push	 36			; 00000024H
  002b0	89 4f 70	 mov	 DWORD PTR [edi+112], ecx
  002b3	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  002b8	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  002bb	83 c4 04	 add	 esp, 4
  002be	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
  002c1	85 c0		 test	 eax, eax
  002c3	74 16		 je	 SHORT $LN39@BuildDecor
  002c5	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  002c8	51		 push	 ecx
  002c9	8d 8e 04 01 00
	00		 lea	 ecx, DWORD PTR [esi+260]
  002cf	51		 push	 ecx
  002d0	8b c8		 mov	 ecx, eax
  002d2	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  002d7	8b c8		 mov	 ecx, eax
  002d9	eb 02		 jmp	 SHORT $LN243@BuildDecor
$LN39@BuildDecor:
  002db	33 c9		 xor	 ecx, ecx
$LN243@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  002dd	8b 45 f8	 mov	 eax, DWORD PTR $T13[ebp]
  002e0	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 423  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  002e3	6a 24		 push	 36			; 00000024H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  002e5	89 4d f0	 mov	 DWORD PTR $T2[ebp], ecx

; 40   : 		m_PrevDecorator = pd;

  002e8	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 421  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  002eb	89 4f 70	 mov	 DWORD PTR [edi+112], ecx

; 423  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  002ee	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  002f3	83 c4 04	 add	 esp, 4
  002f6	89 45 f4	 mov	 DWORD PTR $T8[ebp], eax
  002f9	85 c0		 test	 eax, eax
  002fb	74 19		 je	 SHORT $LN41@BuildDecor
  002fd	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  00300	51		 push	 ecx
  00301	8d 8e 10 01 00
	00		 lea	 ecx, DWORD PTR [esi+272]
  00307	51		 push	 ecx
  00308	8b c8		 mov	 ecx, eax
  0030a	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  0030f	8b d0		 mov	 edx, eax
  00311	89 45 f4	 mov	 DWORD PTR $T7[ebp], eax
  00314	eb 05		 jmp	 SHORT $LN42@BuildDecor
$LN41@BuildDecor:
  00316	33 d2		 xor	 edx, edx
  00318	89 55 f4	 mov	 DWORD PTR $T7[ebp], edx
$LN42@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  0031b	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0031e	8b ca		 mov	 ecx, edx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  00320	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00323	8b f2		 mov	 esi, edx
  00325	89 4d f8	 mov	 DWORD PTR $T12[ebp], ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 40   : 		m_PrevDecorator = pd;

  00328	89 50 08	 mov	 DWORD PTR [eax+8], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0032b	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 423  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0032e	89 57 70	 mov	 DWORD PTR [edi+112], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00331	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  00334	8b 80 38 01 00
	00		 mov	 eax, DWORD PTR [eax+312]
  0033a	2b 87 34 01 00
	00		 sub	 eax, DWORD PTR [edi+308]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 426  : 	if (m_ParticleProperty.GetTextureAnimationFrameCount() > 1 && m_ParticleProperty.GetTextureAnimationFrameDelay() > 1e-6)

  00340	8b 7d 08	 mov	 edi, DWORD PTR _pInstance$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00343	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 426  : 	if (m_ParticleProperty.GetTextureAnimationFrameCount() > 1 && m_ParticleProperty.GetTextureAnimationFrameDelay() > 1e-6)

  00346	83 f8 01	 cmp	 eax, 1
  00349	0f 86 84 01 00
	00		 jbe	 $LN2@BuildDecor
  0034f	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00352	89 4d f8	 mov	 DWORD PTR $T12[ebp], ecx
  00355	f3 0f 10 80 cc
	00 00 00	 movss	 xmm0, DWORD PTR [eax+204]
  0035d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00360	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3eb0c6f7a0b5ed8d
  00368	0f 86 65 01 00
	00		 jbe	 $LN2@BuildDecor

; 427  : 	{
; 428  : 		switch (pInstance->m_byTextureAnimationType)

  0036e	0f b6 47 48	 movzx	 eax, BYTE PTR [edi+72]
  00372	89 4d f8	 mov	 DWORD PTR $T12[ebp], ecx
  00375	83 e8 01	 sub	 eax, 1
  00378	0f 84 de 00 00
	00		 je	 $LN13@BuildDecor
  0037e	83 e8 01	 sub	 eax, 1
  00381	0f 84 81 00 00
	00		 je	 $LN14@BuildDecor
  00387	83 e8 01	 sub	 eax, 1
  0038a	0f 85 43 01 00
	00		 jne	 $LN2@BuildDecor

; 439  : 			pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00390	6a 20		 push	 32			; 00000020H
  00392	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new
  00397	8b f0		 mov	 esi, eax
  00399	83 c4 04	 add	 esp, 4
  0039c	89 75 08	 mov	 DWORD PTR $T20[ebp], esi
  0039f	85 f6		 test	 esi, esi
  003a1	74 59		 je	 SHORT $LN47@BuildDecor
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003a3	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  003a6	8b 88 38 01 00
	00		 mov	 ecx, DWORD PTR [eax+312]
  003ac	2b 88 34 01 00
	00		 sub	 ecx, DWORD PTR [eax+308]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 439  : 			pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  003b2	f3 0f 10 80 cc
	00 00 00	 movss	 xmm0, DWORD PTR [eax+204]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003ba	c1 f9 02	 sar	 ecx, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  003bd	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  003c4	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  003cb	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 242  : 	CTextureAnimationRandomDecorator(float fFrameTime, BYTE n, BYTE * pIdx) : n(n), pIdx(pIdx), fFrameTime(fFrameTime), fLastFrameTime(fFrameTime) {}

  003d2	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  003d8	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@
  003df	88 4e 10	 mov	 BYTE PTR [esi+16], cl
$LN246@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 445  : 	BYTE byRotationType = m_ParticleProperty.m_byRotationType;

  003e2	f3 0f 11 46 14	 movss	 DWORD PTR [esi+20], xmm0
  003e7	8d 47 50	 lea	 eax, DWORD PTR [edi+80]
  003ea	8b ce		 mov	 ecx, esi
  003ec	f3 0f 11 46 18	 movss	 DWORD PTR [esi+24], xmm0
  003f1	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  003f4	89 4d f8	 mov	 DWORD PTR $T12[ebp], ecx
  003f7	e9 cb 00 00 00	 jmp	 $LN244@BuildDecor
$LN47@BuildDecor:
  003fc	33 f6		 xor	 esi, esi
  003fe	8b ce		 mov	 ecx, esi
  00400	89 4d f8	 mov	 DWORD PTR $T12[ebp], ecx
  00403	e9 bf 00 00 00	 jmp	 $LN244@BuildDecor
$LN14@BuildDecor:

; 435  : 			pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00408	6a 20		 push	 32			; 00000020H
  0040a	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new
  0040f	8b f0		 mov	 esi, eax
  00411	83 c4 04	 add	 esp, 4
  00414	89 75 08	 mov	 DWORD PTR $T21[ebp], esi
  00417	85 f6		 test	 esi, esi
  00419	74 e1		 je	 SHORT $LN47@BuildDecor
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0041b	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0041e	8b 81 38 01 00
	00		 mov	 eax, DWORD PTR [ecx+312]
  00424	2b 81 34 01 00
	00		 sub	 eax, DWORD PTR [ecx+308]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 435  : 			pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0042a	f3 0f 10 81 cc
	00 00 00	 movss	 xmm0, DWORD PTR [ecx+204]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00432	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00435	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0043c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00443	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 216  : 	CTextureAnimationCCWDecorator(float fFrameTime, BYTE n, BYTE * pIdx) : n(n), pIdx(pIdx), fFrameTime(fFrameTime), fLastFrameTime(fFrameTime) {}

  0044a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00450	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@
  00457	88 46 10	 mov	 BYTE PTR [esi+16], al
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 435  : 			pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0045a	eb 86		 jmp	 SHORT $LN246@BuildDecor
$LN13@BuildDecor:

; 431  : 			pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0045c	6a 20		 push	 32			; 00000020H
  0045e	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new
  00463	8b f0		 mov	 esi, eax
  00465	83 c4 04	 add	 esp, 4
  00468	89 75 08	 mov	 DWORD PTR $T22[ebp], esi
  0046b	85 f6		 test	 esi, esi
  0046d	74 51		 je	 SHORT $LN43@BuildDecor
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0046f	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00472	8b 81 38 01 00
	00		 mov	 eax, DWORD PTR [ecx+312]
  00478	2b 81 34 01 00
	00		 sub	 eax, DWORD PTR [ecx+308]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 431  : 			pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0047e	f3 0f 10 81 cc
	00 00 00	 movss	 xmm0, DWORD PTR [ecx+204]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 1932 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00486	c1 f8 02	 sar	 eax, 2
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00489	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00490	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00497	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 191  : 	CTextureAnimationCWDecorator(float fFrameTime, DWORD n, BYTE * pIdx) : n(n), pIdx(pIdx), fFrameTime(fFrameTime), fLastFrameTime(fFrameTime) {}

  0049e	89 46 10	 mov	 DWORD PTR [esi+16], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 431  : 			pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  004a1	8d 47 50	 lea	 eax, DWORD PTR [edi+80]
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 191  : 	CTextureAnimationCWDecorator(float fFrameTime, DWORD n, BYTE * pIdx) : n(n), pIdx(pIdx), fFrameTime(fFrameTime), fLastFrameTime(fFrameTime) {}

  004a4	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  004aa	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@
  004b1	f3 0f 11 46 14	 movss	 DWORD PTR [esi+20], xmm0
  004b6	f3 0f 11 46 18	 movss	 DWORD PTR [esi+24], xmm0
  004bb	89 46 1c	 mov	 DWORD PTR [esi+28], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 431  : 			pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  004be	eb 02		 jmp	 SHORT $LN44@BuildDecor
$LN43@BuildDecor:
  004c0	33 f6		 xor	 esi, esi
$LN44@BuildDecor:
  004c2	8b ce		 mov	 ecx, esi
  004c4	89 75 f8	 mov	 DWORD PTR $T12[ebp], esi
$LN244@BuildDecor:

; 445  : 	BYTE byRotationType = m_ParticleProperty.m_byRotationType;

  004c7	8b 45 f4	 mov	 eax, DWORD PTR $T7[ebp]
  004ca	89 46 04	 mov	 DWORD PTR [esi+4], eax
  004cd	89 70 08	 mov	 DWORD PTR [eax+8], esi
  004d0	89 77 70	 mov	 DWORD PTR [edi+112], esi
$LN2@BuildDecor:
  004d3	8b 55 fc	 mov	 edx, DWORD PTR _this$1$[ebp]

; 446  : 
; 447  : 	if (m_ParticleProperty.m_fRotationSpeed == 0.0f && byRotationType != CParticleProperty::ROTATION_TYPE_TIME_EVENT)

  004d6	f3 0f 10 82 dc
	00 00 00	 movss	 xmm0, DWORD PTR [edx+220]
  004de	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  004e5	8a 82 d8 00 00
	00		 mov	 al, BYTE PTR [edx+216]
  004eb	89 45 08	 mov	 DWORD PTR tv2325[ebp], eax
  004ee	9f		 lahf
  004ef	f6 c4 44	 test	 ah, 68			; 00000044H
  004f2	8b 45 08	 mov	 eax, DWORD PTR tv2325[ebp]
  004f5	7a 08		 jp	 SHORT $LN16@BuildDecor
  004f7	3c 01		 cmp	 al, 1
  004f9	74 04		 je	 SHORT $LN16@BuildDecor

; 448  : 	{
; 449  : 		byRotationType = CParticleProperty::ROTATION_TYPE_NONE;

  004fb	32 c0		 xor	 al, al

; 450  : 	}

  004fd	eb 1b		 jmp	 SHORT $LN18@BuildDecor
$LN16@BuildDecor:

; 451  : 	else if (byRotationType == CParticleProperty::ROTATION_TYPE_RANDOM_DIRECTION)

  004ff	89 4d f8	 mov	 DWORD PTR $T12[ebp], ecx
  00502	3c 04		 cmp	 al, 4
  00504	75 14		 jne	 SHORT $LN18@BuildDecor

; 452  : 	{
; 453  : 		byRotationType = (random() & 1) ? CParticleProperty::ROTATION_TYPE_CW : CParticleProperty::ROTATION_TYPE_CCW;

  00506	e8 00 00 00 00	 call	 ?random@@YAKXZ		; random
  0050b	8b 77 70	 mov	 esi, DWORD PTR [edi+112]
  0050e	f6 d0		 not	 al
  00510	8b 55 fc	 mov	 edx, DWORD PTR _this$1$[ebp]
  00513	24 01		 and	 al, 1
  00515	0c 02		 or	 al, 2
  00517	89 75 f8	 mov	 DWORD PTR $T12[ebp], esi
$LN18@BuildDecor:

; 454  : 	}
; 455  : 
; 456  : 	switch (byRotationType)

  0051a	0f b6 c0	 movzx	 eax, al
  0051d	83 e8 01	 sub	 eax, 1
  00520	74 74		 je	 SHORT $LN19@BuildDecor
  00522	83 e8 01	 sub	 eax, 1
  00525	74 64		 je	 SHORT $LN20@BuildDecor
  00527	83 e8 01	 sub	 eax, 1
  0052a	0f 85 e6 00 00
	00		 jne	 $LN4@BuildDecor

; 468  : 									  new CRotationDecorator());
; 469  : 		break;
; 470  : 
; 471  : 	case CParticleProperty::ROTATION_TYPE_CCW:
; 472  : 		pInstance->m_fRotationSpeed = - m_ParticleProperty.m_fRotationSpeed;

  00530	f3 0f 10 82 dc
	00 00 00	 movss	 xmm0, DWORD PTR [edx+220]
  00538	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0053f	f3 0f 11 47 68	 movss	 DWORD PTR [edi+104], xmm0
$LN247@BuildDecor:

; 480  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  00544	6a 10		 push	 16			; 00000010H
  00546	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new
  0054b	8b f0		 mov	 esi, eax
  0054d	83 c4 04	 add	 esp, 4
  00550	89 75 08	 mov	 DWORD PTR $T18[ebp], esi
  00553	85 f6		 test	 esi, esi
  00555	74 2a		 je	 SHORT $LN55@BuildDecor
  00557	8b 45 f8	 mov	 eax, DWORD PTR $T12[ebp]
  0055a	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00561	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00568	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
  0056f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00575	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@
  0057c	e9 8c 00 00 00	 jmp	 $LN245@BuildDecor
$LN55@BuildDecor:
  00581	8b 45 f8	 mov	 eax, DWORD PTR $T12[ebp]
  00584	33 f6		 xor	 esi, esi
  00586	e9 82 00 00 00	 jmp	 $LN245@BuildDecor
$LN20@BuildDecor:

; 462  : 									  new CRotationSpeedValueDecorator(m_ParticleProperty.m_TimeEventRotation, &pInstance->m_fRotationSpeed));
; 463  : 		break;
; 464  : 
; 465  : 	case CParticleProperty::ROTATION_TYPE_CW:
; 466  : 		pInstance->m_fRotationSpeed = m_ParticleProperty.m_fRotationSpeed;

  0058b	8b 82 dc 00 00
	00		 mov	 eax, DWORD PTR [edx+220]
  00591	89 47 68	 mov	 DWORD PTR [edi+104], eax

; 467  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00594	eb ae		 jmp	 SHORT $LN247@BuildDecor
$LN19@BuildDecor:

; 459  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00596	6a 10		 push	 16			; 00000010H
  00598	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new
  0059d	83 c4 04	 add	 esp, 4
  005a0	89 45 08	 mov	 DWORD PTR $T19[ebp], eax
  005a3	85 c0		 test	 eax, eax
  005a5	74 24		 je	 SHORT $LN49@BuildDecor
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  005a7	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  005ae	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  005b5	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 289  : 	CRotationDecorator() {}

  005bc	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  005c2	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 459  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  005c9	eb 05		 jmp	 SHORT $LN50@BuildDecor
$LN49@BuildDecor:
  005cb	33 c0		 xor	 eax, eax
  005cd	89 45 08	 mov	 DWORD PTR $T19[ebp], eax
$LN50@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  005d0	8b 4d f8	 mov	 ecx, DWORD PTR $T12[ebp]
  005d3	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 461  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  005d6	6a 24		 push	 36			; 00000024H
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 40   : 		m_PrevDecorator = pd;

  005d8	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 459  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  005db	89 47 70	 mov	 DWORD PTR [edi+112], eax

; 461  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  005de	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  005e3	8b d0		 mov	 edx, eax
  005e5	83 c4 04	 add	 esp, 4
  005e8	89 55 f0	 mov	 DWORD PTR $T3[ebp], edx
  005eb	85 d2		 test	 edx, edx
  005ed	74 19		 je	 SHORT $LN51@BuildDecor
  005ef	8d 4f 68	 lea	 ecx, DWORD PTR [edi+104]
  005f2	51		 push	 ecx
  005f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  005f6	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  005fc	51		 push	 ecx
  005fd	8b ca		 mov	 ecx, edx
  005ff	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  00604	8b f0		 mov	 esi, eax
  00606	eb 02		 jmp	 SHORT $LN52@BuildDecor
$LN51@BuildDecor:
  00608	33 f6		 xor	 esi, esi
$LN52@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  0060a	8b 45 08	 mov	 eax, DWORD PTR $T19[ebp]
$LN245@BuildDecor:
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 480  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  0060d	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00610	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00613	89 77 70	 mov	 DWORD PTR [edi+112], esi
$LN4@BuildDecor:
  00616	6a 10		 push	 16			; 00000010H
  00618	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new
  0061d	83 c4 04	 add	 esp, 4
  00620	89 45 08	 mov	 DWORD PTR $T17[ebp], eax
  00623	85 c0		 test	 eax, eax
  00625	74 33		 je	 SHORT $LN57@BuildDecor
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 24   : 	CBaseDecorator() : m_NextDecorator(0), m_PrevDecorator(0) {}

  00627	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0062e	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\Pool.h

; 249  : 	{

  00635	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 83   : 	CHeaderDecorator() {}

  0063c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00642	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@

; 39   : 		pd->m_NextDecorator = this;

  00649	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 40   : 		m_PrevDecorator = pd;

  0064c	89 46 08	 mov	 DWORD PTR [esi+8], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 480  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  0064f	89 47 70	 mov	 DWORD PTR [edi+112], eax
  00652	5f		 pop	 edi
  00653	5e		 pop	 esi

; 481  : }

  00654	8b e5		 mov	 esp, ebp
  00656	5d		 pop	 ebp
  00657	c2 04 00	 ret	 4
$LN57@BuildDecor:

; 480  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  0065a	33 c0		 xor	 eax, eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\EffectUpdateDecorator.h

; 39   : 		pd->m_NextDecorator = this;

  0065c	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 40   : 		m_PrevDecorator = pd;

  0065f	89 46 08	 mov	 DWORD PTR [esi+8], eax
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp

; 480  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  00662	89 47 70	 mov	 DWORD PTR [edi+112], eax
  00665	5f		 pop	 edi
  00666	5e		 pop	 esi

; 481  : }

  00667	8b e5		 mov	 esp, ebp
  00669	5d		 pop	 ebp
  0066a	c2 04 00	 ret	 4
?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z ENDP ; CParticleSystemData::BuildDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?ChangeTexture@CParticleSystemData@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?ChangeTexture@CParticleSystemData@@QAEXPBD@Z PROC	; CParticleSystemData::ChangeTexture, COMDAT
; _this$ = ecx

; 359  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 360  : 	m_ParticleProperty.SetTexture(c_szFileName);

  00003	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H

; 361  : }

  00009	5d		 pop	 ebp

; 360  : 	m_ParticleProperty.SetTexture(c_szFileName);

  0000a	e9 00 00 00 00	 jmp	 ?SetTexture@CParticleProperty@@QAE_NPBD@Z ; CParticleProperty::SetTexture
?ChangeTexture@CParticleSystemData@@QAEXPBD@Z ENDP	; CParticleSystemData::ChangeTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ
_TEXT	SEGMENT
?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ PROC ; CParticleSystemData::GetParticlePropertyPointer, COMDAT
; _this$ = ecx

; 30   : 	return &m_ParticleProperty;

  00000	8d 81 c4 00 00
	00		 lea	 eax, DWORD PTR [ecx+196]

; 31   : }

  00006	c3		 ret	 0
?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ ENDP ; CParticleSystemData::GetParticlePropertyPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ
_TEXT	SEGMENT
?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ PROC ; CParticleSystemData::GetEmitterPropertyPointer, COMDAT
; _this$ = ecx

; 26   : 	return &m_EmitterProperty;

  00000	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]

; 27   : }

  00003	c3		 ret	 0
?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ ENDP ; CParticleSystemData::GetEmitterPropertyPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ??0CParticleSystemData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CParticleSystemData@@QAE@XZ PROC			; CParticleSystemData::CParticleSystemData, COMDAT
; _this$ = ecx

; 484  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CParticleSystemData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CEffectElementBase@@QAE@XZ ; CEffectElementBase::CEffectElementBase
  0002e	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00038	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CParticleSystemData@@6B@
  0003e	e8 00 00 00 00	 call	 ??0CEmitterProperty@@QAE@XZ ; CEmitterProperty::CEmitterProperty
  00043	8d 8e c4 00 00
	00		 lea	 ecx, DWORD PTR [esi+196]
  00049	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0004d	e8 00 00 00 00	 call	 ??0CParticleProperty@@QAE@XZ ; CParticleProperty::CParticleProperty

; 485  : }

  00052	8b c6		 mov	 eax, esi
  00054	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00057	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005e	59		 pop	 ecx
  0005f	5e		 pop	 esi
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CParticleSystemData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CEffectElementBase@@UAE@XZ ; CEffectElementBase::~CEffectElementBase
__unwindfunclet$??0CParticleSystemData@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 14	 add	 ecx, 20			; 00000014H
  0000e	e9 00 00 00 00	 jmp	 ??1CEmitterProperty@@UAE@XZ ; CEmitterProperty::~CEmitterProperty
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0CParticleSystemData@@QAE@XZ:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CParticleSystemData@@QAE@XZ
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CParticleSystemData@@QAE@XZ ENDP			; CParticleSystemData::CParticleSystemData
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ??1CParticleSystemData@@UAE@XZ
_TEXT	SEGMENT
??1CParticleSystemData@@UAE@XZ PROC			; CParticleSystemData::~CParticleSystemData, COMDAT
; _this$ = ecx

; 487  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 488  : }

  00003	8d 8e c4 00 00
	00		 lea	 ecx, DWORD PTR [esi+196]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CParticleSystemData@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CParticleProperty@@UAE@XZ ; CParticleProperty::~CParticleProperty
  00014	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00017	e8 00 00 00 00	 call	 ??1CEmitterProperty@@UAE@XZ ; CEmitterProperty::~CEmitterProperty
  0001c	8b ce		 mov	 ecx, esi
  0001e	5e		 pop	 esi
  0001f	e9 00 00 00 00	 jmp	 ??1CEffectElementBase@@UAE@XZ ; CEffectElementBase::~CEffectElementBase
??1CParticleSystemData@@UAE@XZ ENDP			; CParticleSystemData::~CParticleSystemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ PROC ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ ENDP ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Xlength, COMDAT

; 2201 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back, COMDAT
; _this$ = ecx

; 935  :     _CONSTEXPR20 void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b d1		 mov	 edx, ecx
  00005	56		 push	 esi

; 844  :         if (_Mylast != _My_data._Myend) {

  00006	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00009	3b 72 08	 cmp	 esi, DWORD PTR [edx+8]
  0000c	74 16		 je	 SHORT $LN4@push_back

; 860  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
  00013	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00016	89 0e		 mov	 DWORD PTR [esi], ecx
  00018	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 861  :         } else {
; 862  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 863  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 864  :             _ASAN_VECTOR_RELEASE_GUARD;
; 865  :         }
; 866  : 
; 867  :         _Orphan_range(_Mylast, _Mylast);
; 868  :         _Ty& _Result = *_Mylast;
; 869  :         ++_Mylast;

  0001b	83 42 04 08	 add	 DWORD PTR [edx+4], 8
  0001f	5e		 pop	 esi

; 936  :         _Emplace_one_at_back(_Val);
; 937  :     }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN4@push_back:

; 848  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00024	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
  0002d	5e		 pop	 esi

; 936  :         _Emplace_one_at_back(_Val);
; 937  :     }

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2107 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN4@vector

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 f8	 and	 ecx, -8			; fffffff8H

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN20@vector

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN17@vector

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN20@vector:

; 255  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2112 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 255  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector

; 2113 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2114 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00049	5e		 pop	 esi

; 835  :     }

  0004a	c3		 ret	 0
$LN17@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00050	cc		 int	 3
??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 130  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 131  :         _Throw_bad_array_new_length(); // add overflow
; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\eterLib\TextFileLoader.h
;	COMDAT ??1CGotoChild@CTextFileLoader@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGotoChild@CTextFileLoader@@QAE@XZ PROC		; CTextFileLoader::CGotoChild::~CGotoChild, COMDAT
; _this$ = ecx

; 54   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 55   : 			m_pOwner->SetParentNode();

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00024	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode

; 56   : 		}

  00029	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0002c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00033	59		 pop	 ecx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
  0003b	cc		 int	 3
  0003c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGotoChild@CTextFileLoader@@QAE@XZ ENDP		; CTextFileLoader::CGotoChild::~CGotoChild
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 2205 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 418  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3270 :     _CONSTEXPR20 ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2301 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 5011 :         if (_My_data._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5016 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 255  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 5019 :         _My_data._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 5020 :         _My_data._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 5021 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 5022 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3278 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2674 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b d9		 mov	 ebx, ecx
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	57		 push	 edi

; 415  :             return __builtin_strlen(_First);

  0000c	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  0000f	8b f7		 mov	 esi, edi

; 2341 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00011	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0

; 2349 :     size_type _Mysize = 0; // current length of string

  00014	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0

; 2350 :     size_type _Myres  = 0; // current storage reserved for string

  0001b	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0

; 415  :             return __builtin_strlen(_First);

  00022	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL39@basic_stri:
  00025	8a 06		 mov	 al, BYTE PTR [esi]
  00027	46		 inc	 esi
  00028	84 c0		 test	 al, al
  0002a	75 f9		 jne	 SHORT $LL39@basic_stri
  0002c	2b f1		 sub	 esi, ecx

; 2740 :         if (_Count > max_size()) {

  0002e	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00034	0f 87 a5 00 00
	00		 ja	 $LN44@basic_stri

; 2742 :         }
; 2743 : 
; 2744 :         auto& _Al       = _Getal();
; 2745 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2746 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2747 : 
; 2748 :         if (_Count < _BUF_SIZE) {

  0003a	c7 43 14 0f 00
	00 00		 mov	 DWORD PTR [ebx+20], 15	; 0000000fH
  00041	83 fe 10	 cmp	 esi, 16			; 00000010H
  00044	73 1d		 jae	 SHORT $LN15@basic_stri

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00046	56		 push	 esi
  00047	57		 push	 edi
  00048	53		 push	 ebx

; 2749 :             _My_data._Mysize = _Count;

  00049	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0004c	e8 00 00 00 00	 call	 _memmove

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2756 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  00054	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  00058	8b c3		 mov	 eax, ebx
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
$LN15@basic_stri:

; 4883 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00063	8b fe		 mov	 edi, esi
  00065	83 cf 0f	 or	 edi, 15			; 0000000fH
  00068	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4884 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006e	76 15		 jbe	 SHORT $LN22@basic_stri

; 4885 :             return _Max;

  00070	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00075	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00080	83 c4 04	 add	 esp, 4
  00083	eb 30		 jmp	 SHORT $LN42@basic_stri
$LN22@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility

; 43   :     return _Left < _Right ? _Right : _Left;

  00085	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  0008a	3b f8		 cmp	 edi, eax
  0008c	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 2772 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0008f	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory

; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00092	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00097	72 0b		 jb	 SHORT $LN30@basic_stri

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0009f	83 c4 04	 add	 esp, 4
  000a2	eb 11		 jmp	 SHORT $LN42@basic_stri
$LN30@basic_stri:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

  000a4	85 c0		 test	 eax, eax
  000a6	74 0b		 je	 SHORT $LN31@basic_stri

; 77   :         return ::operator new(_Bytes);

  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ae	83 c4 04	 add	 esp, 4

; 235  :         return _Traits::_Allocate(_Bytes);

  000b1	eb 02		 jmp	 SHORT $LN42@basic_stri
$LN31@basic_stri:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

  000b3	33 c0		 xor	 eax, eax
$LN42@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000b5	56		 push	 esi
  000b6	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2773 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000b9	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000bc	50		 push	 eax

; 2773 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000bd	89 03		 mov	 DWORD PTR [ebx], eax

; 2774 : 
; 2775 : #if _HAS_CXX20
; 2776 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2777 :             _Traits::assign(_Unfancy(_New_ptr), _New_capacity + 1, _Elem());
; 2778 :         }
; 2779 : #endif // _HAS_CXX20
; 2780 : 
; 2781 :         _My_data._Mysize = _Count;

  000bf	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 2782 :         _My_data._Myres  = _New_capacity;

  000c2	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c5	e8 00 00 00 00	 call	 _memcpy

; 2788 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000ca	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	5f		 pop	 edi

; 2788 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000d1	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0

; 2675 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2676 :     }

  000d5	8b c3		 mov	 eax, ebx
  000d7	5e		 pop	 esi
  000d8	5b		 pop	 ebx
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c2 04 00	 ret	 4
$LN44@basic_stri:

; 2741 :             _Xlen_string(); // result too long

  000df	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN40@basic_stri:
  000e4	cc		 int	 3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2368 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 324  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\flourine\Desktop\Xantios\client-src\Code\EffectLib\ParticleSystemData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
